; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\rs274ngc_pre.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\obj\rs274ngc_pre.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\library\inc -I..\..\library\src -I..\uvsion -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\obj\rs274ngc_pre.crf rs274ngc_pre.c]
                          THUMB

                          AREA ||i.arc_data_comp_ijk||, CODE, READONLY, ALIGN=2

                  arc_data_comp_ijk PROC
;;;1069   
;;;1070       static int arc_data_comp_ijk(                 /* ARGUMENTS                               */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1071       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)             */
;;;1072       int side,                                     /* either RIGHT or LEFT                             */
;;;1073       double tool_radius,                           /* radius of the tool                               */
;;;1074       double current_x,                             /* first coordinate of current point                */
;;;1075       double current_y,                             /* second coordinate of current point               */
;;;1076       double end_x,                                 /* first coordinate of arc end point                */
;;;1077       double end_y,                                 /* second coordinate of arc end point               */
;;;1078       double i_number,                              /* first coordinate offset of center from current   */
;;;1079       double j_number,                              /* second coordinate offset of center from current  */
;;;1080       double * center_x,                            /* pointer to first coordinate of center of arc     */
;;;1081       double * center_y,                            /* pointer to second coordinate of center of arc    */
;;;1082       int * turn,                                   /* pointer to number of full or partial circles CCW */
;;;1083       double tolerance)                             /* tolerance of differing radii                     */
;;;1084       {
000004  b089              SUB      sp,sp,#0x24
000006  4680              MOV      r8,r0
000008  4689              MOV      r9,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  e9ddab1f          LDRD     r10,r11,[sp,#0x7c]
;;;1085           static char name[] SET_TO "arc_data_comp_ijk";
;;;1086           double arc_radius;
;;;1087           double radius2;
;;;1088   
;;;1089           *center_x SET_TO (current_x + i_number);
000012  e9dd231a          LDRD     r2,r3,[sp,#0x68]
000016  e9dd0112          LDRD     r0,r1,[sp,#0x48]
00001a  f7fffffe          BL       __aeabi_dadd
00001e  9a1e              LDR      r2,[sp,#0x78]
000020  c203              STM      r2!,{r0,r1}
;;;1090           *center_y SET_TO (current_y + j_number);
000022  e9dd231c          LDRD     r2,r3,[sp,#0x70]
000026  e9dd0114          LDRD     r0,r1,[sp,#0x50]
00002a  f7fffffe          BL       __aeabi_dadd
00002e  e9ca0100          STRD     r0,r1,[r10,#0]
;;;1091           arc_radius SET_TO hypot(i_number, j_number);
000032  a81a              ADD      r0,sp,#0x68
000034  c80f              LDM      r0,{r0-r3}
000036  f7fffffe          BL       hypot
00003a  e9cd0106          STRD     r0,r1,[sp,#0x18]
;;;1092           radius2 SET_TO hypot((*center_x - end_x), (*center_y - end_y));
00003e  e9da0100          LDRD     r0,r1,[r10,#0]
000042  e9cd0100          STRD     r0,r1,[sp,#0]
000046  e9dd2318          LDRD     r2,r3,[sp,#0x60]
00004a  f7fffffe          BL       __aeabi_dsub
00004e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000052  991e              LDR      r1,[sp,#0x78]
000054  c903              LDM      r1,{r0,r1}
000056  e9cd0100          STRD     r0,r1,[sp,#0]
00005a  e9dd2316          LDRD     r2,r3,[sp,#0x58]
00005e  f7fffffe          BL       __aeabi_dsub
000062  e9cd0102          STRD     r0,r1,[sp,#8]
000066  e9dd2304          LDRD     r2,r3,[sp,#0x10]
00006a  f7fffffe          BL       hypot
00006e  4604              MOV      r4,r0
000070  460d              MOV      r5,r1
;;;1093           radius2 SET_TO
000072  f1b90f02          CMP      r9,#2
000076  d102              BNE      |L1.126|
;;;1094               (((side IS LEFT ) AND (move IS 30)) OR
000078  f1b80f1e          CMP      r8,#0x1e
00007c  d005              BEQ      |L1.138|
                  |L1.126|
;;;1095               ((side IS RIGHT) AND (move IS 20))) ?
00007e  f1b90f01          CMP      r9,#1
000082  d109              BNE      |L1.152|
000084  f1b80f14          CMP      r8,#0x14
000088  d106              BNE      |L1.152|
                  |L1.138|
;;;1096               (radius2 - tool_radius): (radius2 + tool_radius);
00008a  4632              MOV      r2,r6
00008c  463b              MOV      r3,r7
00008e  4620              MOV      r0,r4
000090  4629              MOV      r1,r5
000092  f7fffffe          BL       __aeabi_dsub
000096  e005              B        |L1.164|
                  |L1.152|
000098  4632              MOV      r2,r6
00009a  463b              MOV      r3,r7
00009c  4620              MOV      r0,r4
00009e  4629              MOV      r1,r5
0000a0  f7fffffe          BL       __aeabi_dadd
                  |L1.164|
0000a4  4604              MOV      r4,r0
0000a6  460d              MOV      r5,r1
;;;1097           CHK((fabs(arc_radius - radius2) > tolerance),
0000a8  4622              MOV      r2,r4
0000aa  462b              MOV      r3,r5
0000ac  e9dd0106          LDRD     r0,r1,[sp,#0x18]
0000b0  f7fffffe          BL       __aeabi_dsub
0000b4  f0214100          BIC      r1,r1,#0x80000000
0000b8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000bc  e9dd2322          LDRD     r2,r3,[sp,#0x88]
0000c0  f7fffffe          BL       __aeabi_cdrcmple
0000c4  d228              BCS      |L1.280|
0000c6  f04f0100          MOV      r1,#0
0000ca  482f              LDR      r0,|L1.392|
0000cc  f8c0114c          STR      r1,[r0,#0x14c]
0000d0  4601              MOV      r1,r0
0000d2  f8d1314c          LDR      r3,[r1,#0x14c]
0000d6  f8d1114c          LDR      r1,[r1,#0x14c]
0000da  f1010101          ADD      r1,r1,#1
0000de  4602              MOV      r2,r0
0000e0  f8c2114c          STR      r1,[r2,#0x14c]
0000e4  eb030183          ADD      r1,r3,r3,LSL #2
0000e8  f6a06254          SUB      r2,r0,#0xe54
0000ec  eb021101          ADD      r1,r2,r1,LSL #4
0000f0  4608              MOV      r0,r1
0000f2  4926              LDR      r1,|L1.396|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0
0000fc  4822              LDR      r0,|L1.392|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]
000102  eb000080          ADD      r0,r0,r0,LSL #2
000106  4a22              LDR      r2,|L1.400|
000108  eb021000          ADD      r0,r2,r0,LSL #4
00010c  7001              STRB     r1,[r0,#0]
00010e  f04f0098          MOV      r0,#0x98
                  |L1.274|
;;;1098               NCE_RADIUS_TO_END_OF_ARC_DIFFERS_FROM_RADIUS_TO_START);
;;;1099      /* This catches an arc too small for the tool, also */
;;;1100           if (move IS G_2)
;;;1101               *turn SET_TO -1;
;;;1102           else if (move IS G_3)
;;;1103               *turn SET_TO 1;
;;;1104           else
;;;1105               ERM(NCE_BUG_CODE_NOT_G2_OR_G3);
;;;1106           return RS274NGC_OK;
;;;1107       }
000112  b009              ADD      sp,sp,#0x24
000114  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.280|
000118  f1b80f14          CMP      r8,#0x14              ;1100
00011c  d104              BNE      |L1.296|
00011e  f04f30ff          MOV      r0,#0xffffffff        ;1101
000122  f8cb0000          STR      r0,[r11,#0]           ;1101
000126  e02d              B        |L1.388|
                  |L1.296|
000128  f1b80f1e          CMP      r8,#0x1e              ;1102
00012c  d104              BNE      |L1.312|
00012e  f04f0001          MOV      r0,#1                 ;1103
000132  f8cb0000          STR      r0,[r11,#0]           ;1103
000136  e025              B        |L1.388|
                  |L1.312|
000138  f04f0100          MOV      r1,#0                 ;1105
00013c  4812              LDR      r0,|L1.392|
00013e  f8c0114c          STR      r1,[r0,#0x14c]        ;1105
000142  4601              MOV      r1,r0                 ;1105
000144  f8d1314c          LDR      r3,[r1,#0x14c]        ;1105
000148  f8d1114c          LDR      r1,[r1,#0x14c]        ;1105
00014c  f1010101          ADD      r1,r1,#1              ;1105
000150  4602              MOV      r2,r0                 ;1105
000152  f8c2114c          STR      r1,[r2,#0x14c]        ;1105
000156  eb030183          ADD      r1,r3,r3,LSL #2       ;1105
00015a  4a0d              LDR      r2,|L1.400|
00015c  eb021101          ADD      r1,r2,r1,LSL #4       ;1105
000160  4608              MOV      r0,r1                 ;1105
000162  490a              LDR      r1,|L1.396|
000164  f7fffffe          BL       strcpy
000168  f04f0100          MOV      r1,#0                 ;1105
00016c  4806              LDR      r0,|L1.392|
00016e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1105
000172  eb000080          ADD      r0,r0,r0,LSL #2       ;1105
000176  4a06              LDR      r2,|L1.400|
000178  eb021000          ADD      r0,r2,r0,LSL #4       ;1105
00017c  7001              STRB     r1,[r0,#0]            ;1105
00017e  f04f0014          MOV      r0,#0x14              ;1105
000182  e7c6              B        |L1.274|
                  |L1.388|
000184  2000              MOVS     r0,#0                 ;1106
000186  e7c4              B        |L1.274|
;;;1108   
                          ENDP

                  |L1.392|
                          DCD      _setup+0xc000
                  |L1.396|
                          DCD      name
                  |L1.400|
                          DCD      _setup+0xb1ac

                          AREA ||i.arc_data_comp_r||, CODE, READONLY, ALIGN=2

                  arc_data_comp_r PROC
;;;1165   
;;;1166       static int arc_data_comp_r(                   /* ARGUMENTS                                 */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1167       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)             */
;;;1168       int side,                                     /* either RIGHT or LEFT                             */
;;;1169       double tool_radius,                           /* radius of the tool                               */
;;;1170       double current_x,                             /* first coordinate of current point                */
;;;1171       double current_y,                             /* second coordinate of current point               */
;;;1172       double end_x,                                 /* first coordinate of arc end point                */
;;;1173       double end_y,                                 /* second coordinate of arc end point               */
;;;1174       double big_radius,                            /* radius of arc                                    */
;;;1175       double * center_x,                            /* pointer to first coordinate of center of arc     */
;;;1176       double * center_y,                            /* pointer to second coordinate of center of arc    */
;;;1177       int * turn)                                   /* pointer to number of full or partial circles CCW */
;;;1178       {
000004  b09a              SUB      sp,sp,#0x68
000006  4682              MOV      r10,r0
000008  468b              MOV      r11,r1
00000a  e9dd6730          LDRD     r6,r7,[sp,#0xc0]
;;;1179           static char name[] SET_TO "arc_data_comp_r";
;;;1180           double abs_radius;                        /* absolute value of big_radius          */
;;;1181           double alpha;                             /* direction of line from current to end */
;;;1182           double distance;                          /* length of line L from current to end  */
;;;1183           double mid_length;                        /* length from current point to point P  */
;;;1184           double offset;                            /* length of line from P to center       */
;;;1185           double radius2;                           /* distance from center to current point */
;;;1186           double mid_x;                             /* x-value of point P                    */
;;;1187           double mid_y;                             /* y-value of point P                    */
;;;1188           double theta;                             /* direction of line from P to center    */
;;;1189   
;;;1190           abs_radius SET_TO fabs(big_radius);
00000e  f0274000          BIC      r0,r7,#0x80000000
000012  e9cd6018          STRD     r6,r0,[sp,#0x60]
;;;1191           CHK(((abs_radius <= tool_radius) AND (((side IS LEFT ) AND (move IS G_3)) OR
000016  e9dd231c          LDRD     r2,r3,[sp,#0x70]
00001a  e9dd0118          LDRD     r0,r1,[sp,#0x60]
00001e  f7fffffe          BL       __aeabi_cdcmple
000022  d834              BHI      |L2.142|
000024  f1bb0f02          CMP      r11,#2
000028  d102              BNE      |L2.48|
00002a  f1ba0f1e          CMP      r10,#0x1e
00002e  d005              BEQ      |L2.60|
                  |L2.48|
000030  f1bb0f01          CMP      r11,#1
000034  d12b              BNE      |L2.142|
000036  f1ba0f14          CMP      r10,#0x14
00003a  d128              BNE      |L2.142|
                  |L2.60|
00003c  f04f0100          MOV      r1,#0
000040  48cf              LDR      r0,|L2.896|
000042  f8c0114c          STR      r1,[r0,#0x14c]
000046  4601              MOV      r1,r0
000048  f8d1314c          LDR      r3,[r1,#0x14c]
00004c  f8d1114c          LDR      r1,[r1,#0x14c]
000050  f1010101          ADD      r1,r1,#1
000054  4602              MOV      r2,r0
000056  f8c2114c          STR      r1,[r2,#0x14c]
00005a  eb030183          ADD      r1,r3,r3,LSL #2
00005e  f6a06254          SUB      r2,r0,#0xe54
000062  eb021101          ADD      r1,r2,r1,LSL #4
000066  4608              MOV      r0,r1
000068  49c6              LDR      r1,|L2.900|
00006a  f7fffffe          BL       strcpy
00006e  f04f0100          MOV      r1,#0
000072  48c3              LDR      r0,|L2.896|
000074  f8d0014c          LDR      r0,[r0,#0x14c]
000078  eb000080          ADD      r0,r0,r0,LSL #2
00007c  4ac2              LDR      r2,|L2.904|
00007e  eb021000          ADD      r0,r2,r0,LSL #4
000082  7001              STRB     r1,[r0,#0]
000084  f04f00a7          MOV      r0,#0xa7
                  |L2.136|
;;;1192               ((side IS RIGHT) AND (move IS G_2)))),
;;;1193               NCE_TOOL_RADIUS_NOT_LESS_THAN_ARC_RADIUS_WITH_COMP);
;;;1194   
;;;1195           distance SET_TO hypot((end_x - current_x), (end_y - current_y));
;;;1196           alpha SET_TO atan2 ((end_y - current_y), (end_x - current_x));
;;;1197           theta SET_TO (((move IS G_3) AND (big_radius > 0)) OR
;;;1198               ((move IS G_2) AND (big_radius < 0))) ?
;;;1199               (alpha + PI2) : (alpha - PI2);
;;;1200           radius2 SET_TO (((side IS LEFT ) AND (move IS G_3)) OR
;;;1201               ((side IS RIGHT) AND (move IS G_2))) ?
;;;1202               (abs_radius - tool_radius) : (abs_radius + tool_radius);
;;;1203           CHK((distance > (radius2 + abs_radius)),
;;;1204               NCE_RADIUS_TOO_SMALL_TO_REACH_END_POINT);
;;;1205           mid_length SET_TO (((radius2 * radius2) + (distance * distance) -
;;;1206               (abs_radius * abs_radius)) / (2.0 * distance));
;;;1207           mid_x SET_TO (current_x + (mid_length * cos(alpha)));
;;;1208           mid_y SET_TO (current_y + (mid_length * sin(alpha)));
;;;1209           CHK(((radius2 * radius2) <= (mid_length * mid_length)),
;;;1210               NCE_BUG_IN_TOOL_RADIUS_COMP);
;;;1211           offset SET_TO sqrt((radius2 * radius2) - (mid_length * mid_length));
;;;1212           *center_x SET_TO mid_x + (offset * cos(theta));
;;;1213           *center_y SET_TO mid_y + (offset * sin(theta));
;;;1214           *turn SET_TO (move IS G_2) ? -1 : 1;
;;;1215   
;;;1216           return RS274NGC_OK;
;;;1217       }
000088  b01e              ADD      sp,sp,#0x78
00008a  e8bd9ff0          POP      {r4-r12,pc}
                  |L2.142|
00008e  e9dd232a          LDRD     r2,r3,[sp,#0xa8]      ;1195
000092  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;1195
000096  f7fffffe          BL       __aeabi_dsub
00009a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1195
00009e  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;1195
0000a2  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;1195
0000a6  f7fffffe          BL       __aeabi_dsub
0000aa  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1195
0000ae  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1195
0000b2  f7fffffe          BL       hypot
0000b6  e9cd0114          STRD     r0,r1,[sp,#0x50]      ;1195
0000ba  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;1196
0000be  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;1196
0000c2  f7fffffe          BL       __aeabi_dsub
0000c6  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1196
0000ca  e9dd232a          LDRD     r2,r3,[sp,#0xa8]      ;1196
0000ce  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;1196
0000d2  f7fffffe          BL       __aeabi_dsub
0000d6  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1196
0000da  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1196
0000de  f7fffffe          BL       atan2
0000e2  e9cd0116          STRD     r0,r1,[sp,#0x58]      ;1196
0000e6  f1ba0f1e          CMP      r10,#0x1e             ;1197
0000ea  d106              BNE      |L2.250|
0000ec  2200              MOVS     r2,#0                 ;1197
0000ee  4613              MOV      r3,r2                 ;1197
0000f0  4630              MOV      r0,r6                 ;1197
0000f2  4639              MOV      r1,r7                 ;1197
0000f4  f7fffffe          BL       __aeabi_cdrcmple
0000f8  d309              BCC      |L2.270|
                  |L2.250|
0000fa  f1ba0f14          CMP      r10,#0x14             ;1198
0000fe  d10d              BNE      |L2.284|
000100  2200              MOVS     r2,#0                 ;1198
000102  4613              MOV      r3,r2                 ;1198
000104  4630              MOV      r0,r6                 ;1198
000106  4639              MOV      r1,r7                 ;1198
000108  f7fffffe          BL       __aeabi_cdcmple
00010c  d206              BCS      |L2.284|
                  |L2.270|
00010e  4a9f              LDR      r2,|L2.908|
000110  4b9f              LDR      r3,|L2.912|
000112  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1199
000116  f7fffffe          BL       __aeabi_dadd
00011a  e005              B        |L2.296|
                  |L2.284|
00011c  4a9b              LDR      r2,|L2.908|
00011e  4b9c              LDR      r3,|L2.912|
000120  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1199
000124  f7fffffe          BL       __aeabi_dsub
                  |L2.296|
000128  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;1199
00012c  f1bb0f02          CMP      r11,#2                ;1200
000130  d102              BNE      |L2.312|
000132  f1ba0f1e          CMP      r10,#0x1e             ;1200
000136  d005              BEQ      |L2.324|
                  |L2.312|
000138  f1bb0f01          CMP      r11,#1                ;1201
00013c  d109              BNE      |L2.338|
00013e  f1ba0f14          CMP      r10,#0x14             ;1201
000142  d106              BNE      |L2.338|
                  |L2.324|
000144  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;1202
000148  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;1202
00014c  f7fffffe          BL       __aeabi_dsub
000150  e005              B        |L2.350|
                  |L2.338|
000152  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;1202
000156  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;1202
00015a  f7fffffe          BL       __aeabi_dadd
                  |L2.350|
00015e  4604              MOV      r4,r0                 ;1202
000160  460d              MOV      r5,r1                 ;1202
000162  4620              MOV      r0,r4                 ;1203
000164  4629              MOV      r1,r5                 ;1203
000166  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;1203
00016a  f7fffffe          BL       __aeabi_dadd
00016e  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1203
000172  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;1203
000176  f7fffffe          BL       __aeabi_cdcmple
00017a  d225              BCS      |L2.456|
00017c  f04f0100          MOV      r1,#0                 ;1203
000180  487f              LDR      r0,|L2.896|
000182  f8c0114c          STR      r1,[r0,#0x14c]        ;1203
000186  4601              MOV      r1,r0                 ;1203
000188  f8d1314c          LDR      r3,[r1,#0x14c]        ;1203
00018c  f8d1114c          LDR      r1,[r1,#0x14c]        ;1203
000190  f1010101          ADD      r1,r1,#1              ;1203
000194  4602              MOV      r2,r0                 ;1203
000196  f8c2114c          STR      r1,[r2,#0x14c]        ;1203
00019a  eb030183          ADD      r1,r3,r3,LSL #2       ;1203
00019e  4a7a              LDR      r2,|L2.904|
0001a0  eb021101          ADD      r1,r2,r1,LSL #4       ;1203
0001a4  4608              MOV      r0,r1                 ;1203
0001a6  4977              LDR      r1,|L2.900|
0001a8  f7fffffe          BL       strcpy
0001ac  f04f0100          MOV      r1,#0                 ;1203
0001b0  4873              LDR      r0,|L2.896|
0001b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1203
0001b6  eb000080          ADD      r0,r0,r0,LSL #2       ;1203
0001ba  4a73              LDR      r2,|L2.904|
0001bc  eb021000          ADD      r0,r2,r0,LSL #4       ;1203
0001c0  7001              STRB     r1,[r0,#0]            ;1203
0001c2  f04f0099          MOV      r0,#0x99              ;1203
0001c6  e75f              B        |L2.136|
                  |L2.456|
0001c8  2000              MOVS     r0,#0                 ;1205
0001ca  f04f4180          MOV      r1,#0x40000000        ;1205
0001ce  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;1205
0001d2  f7fffffe          BL       __aeabi_dmul
0001d6  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1205
0001da  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;1205
0001de  4610              MOV      r0,r2                 ;1205
0001e0  4619              MOV      r1,r3                 ;1205
0001e2  f7fffffe          BL       __aeabi_dmul
0001e6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1205
0001ea  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;1205
0001ee  4610              MOV      r0,r2                 ;1205
0001f0  4619              MOV      r1,r3                 ;1205
0001f2  f7fffffe          BL       __aeabi_dmul
0001f6  4622              MOV      r2,r4                 ;1205
0001f8  462b              MOV      r3,r5                 ;1205
0001fa  e9cd0102          STRD     r0,r1,[sp,#8]         ;1205
0001fe  4620              MOV      r0,r4                 ;1205
000200  4629              MOV      r1,r5                 ;1205
000202  f7fffffe          BL       __aeabi_dmul
000206  e9cd0100          STRD     r0,r1,[sp,#0]         ;1205
00020a  e9dd2302          LDRD     r2,r3,[sp,#8]         ;1205
00020e  f7fffffe          BL       __aeabi_dadd
000212  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1205
000216  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;1205
00021a  f7fffffe          BL       __aeabi_dsub
00021e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1205
000222  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1205
000226  f7fffffe          BL       __aeabi_ddiv
00022a  4680              MOV      r8,r0                 ;1205
00022c  4689              MOV      r9,r1                 ;1205
00022e  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1207
000232  f7fffffe          BL       ||cos||
000236  4642              MOV      r2,r8                 ;1207
000238  464b              MOV      r3,r9                 ;1207
00023a  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1207
00023e  f7fffffe          BL       __aeabi_dmul
000242  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1207
000246  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;1207
00024a  f7fffffe          BL       __aeabi_dadd
00024e  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;1207
000252  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1208
000256  f7fffffe          BL       ||sin||
00025a  4642              MOV      r2,r8                 ;1208
00025c  464b              MOV      r3,r9                 ;1208
00025e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1208
000262  f7fffffe          BL       __aeabi_dmul
000266  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1208
00026a  e9dd232a          LDRD     r2,r3,[sp,#0xa8]      ;1208
00026e  f7fffffe          BL       __aeabi_dadd
000272  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;1208
000276  4642              MOV      r2,r8                 ;1209
000278  464b              MOV      r3,r9                 ;1209
00027a  4640              MOV      r0,r8                 ;1209
00027c  4649              MOV      r1,r9                 ;1209
00027e  f7fffffe          BL       __aeabi_dmul
000282  4622              MOV      r2,r4                 ;1209
000284  462b              MOV      r3,r5                 ;1209
000286  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1209
00028a  4620              MOV      r0,r4                 ;1209
00028c  4629              MOV      r1,r5                 ;1209
00028e  f7fffffe          BL       __aeabi_dmul
000292  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1209
000296  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1209
00029a  f7fffffe          BL       __aeabi_cdcmple
00029e  d825              BHI      |L2.748|
0002a0  f04f0100          MOV      r1,#0                 ;1209
0002a4  4836              LDR      r0,|L2.896|
0002a6  f8c0114c          STR      r1,[r0,#0x14c]        ;1209
0002aa  4601              MOV      r1,r0                 ;1209
0002ac  f8d1314c          LDR      r3,[r1,#0x14c]        ;1209
0002b0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1209
0002b4  f1010101          ADD      r1,r1,#1              ;1209
0002b8  4602              MOV      r2,r0                 ;1209
0002ba  f8c2114c          STR      r1,[r2,#0x14c]        ;1209
0002be  eb030183          ADD      r1,r3,r3,LSL #2       ;1209
0002c2  4a31              LDR      r2,|L2.904|
0002c4  eb021101          ADD      r1,r2,r1,LSL #4       ;1209
0002c8  4608              MOV      r0,r1                 ;1209
0002ca  492e              LDR      r1,|L2.900|
0002cc  f7fffffe          BL       strcpy
0002d0  f04f0100          MOV      r1,#0                 ;1209
0002d4  482a              LDR      r0,|L2.896|
0002d6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1209
0002da  eb000080          ADD      r0,r0,r0,LSL #2       ;1209
0002de  4a2a              LDR      r2,|L2.904|
0002e0  eb021000          ADD      r0,r2,r0,LSL #4       ;1209
0002e4  7001              STRB     r1,[r0,#0]            ;1209
0002e6  f04f0021          MOV      r0,#0x21              ;1209
0002ea  e6cd              B        |L2.136|
                  |L2.748|
0002ec  4642              MOV      r2,r8                 ;1211
0002ee  464b              MOV      r3,r9                 ;1211
0002f0  4640              MOV      r0,r8                 ;1211
0002f2  4649              MOV      r1,r9                 ;1211
0002f4  f7fffffe          BL       __aeabi_dmul
0002f8  4622              MOV      r2,r4                 ;1211
0002fa  462b              MOV      r3,r5                 ;1211
0002fc  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1211
000300  4620              MOV      r0,r4                 ;1211
000302  4629              MOV      r1,r5                 ;1211
000304  f7fffffe          BL       __aeabi_dmul
000308  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1211
00030c  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;1211
000310  f7fffffe          BL       __aeabi_dsub
000314  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1211
000318  f7fffffe          BL       sqrt
00031c  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;1211
000320  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1212
000324  f7fffffe          BL       ||cos||
000328  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1212
00032c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;1212
000330  f7fffffe          BL       __aeabi_dmul
000334  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1212
000338  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;1212
00033c  f7fffffe          BL       __aeabi_dadd
000340  9a32              LDR      r2,[sp,#0xc8]         ;1212
000342  c203              STM      r2!,{r0,r1}           ;1212
000344  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1213
000348  f7fffffe          BL       ||sin||
00034c  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1213
000350  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;1213
000354  f7fffffe          BL       __aeabi_dmul
000358  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1213
00035c  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;1213
000360  f7fffffe          BL       __aeabi_dadd
000364  9a33              LDR      r2,[sp,#0xcc]         ;1213
000366  c203              STM      r2!,{r0,r1}           ;1213
000368  f1ba0f14          CMP      r10,#0x14             ;1214
00036c  d102              BNE      |L2.884|
00036e  f04f31ff          MOV      r1,#0xffffffff        ;1214
000372  e001              B        |L2.888|
                  |L2.884|
000374  f04f0101          MOV      r1,#1                 ;1214
                  |L2.888|
000378  9834              LDR      r0,[sp,#0xd0]         ;1214
00037a  6001              STR      r1,[r0,#0]            ;1214
00037c  2000              MOVS     r0,#0                 ;1216
00037e  e683              B        |L2.136|
;;;1218   
                          ENDP

                  |L2.896|
                          DCD      _setup+0xc000
                  |L2.900|
                          DCD      |symbol_number.441|
                  |L2.904|
                          DCD      _setup+0xb1ac
                  |L2.908|
                          DCD      0x54442d18
                  |L2.912|
                          DCD      0x3ff921fb

                          AREA ||i.arc_data_ijk||, CODE, READONLY, ALIGN=2

                  arc_data_ijk PROC
;;;1247   
;;;1248       static int arc_data_ijk(                      /* ARGUMENTS                                       */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1249       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)            */
;;;1250       double current_x,                             /* first coordinate of current point               */
;;;1251       double current_y,                             /* second coordinate of current point              */
;;;1252       double end_x,                                 /* first coordinate of arc end point               */
;;;1253       double end_y,                                 /* second coordinate of arc end point              */
;;;1254       double i_number,                              /* first coordinate offset of center from current  */
;;;1255       double j_number,                              /* second coordinate offset of center from current */
;;;1256       double * center_x,                            /* pointer to first coordinate of center of arc    */
;;;1257       double * center_y,                            /* pointer to second coordinate of center of arc   */
;;;1258       int * turn,                                   /* pointer to no. of full or partial circles CCW   */
;;;1259       double tolerance)                             /* tolerance of differing radii                    */
;;;1260       {
000004  b089              SUB      sp,sp,#0x24
000006  4680              MOV      r8,r0
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  e9ddab1d          LDRD     r10,r11,[sp,#0x74]
000010  f8dd9070          LDR      r9,[sp,#0x70]
;;;1261           static char name[] SET_TO "arc_data_ijk";
;;;1262           double radius;                            /* radius to current point */
;;;1263           double radius2;                           /* radius to end point     */
;;;1264           *center_x SET_TO (current_x + i_number);
000014  4620              MOV      r0,r4
000016  4629              MOV      r1,r5
000018  e9dd2318          LDRD     r2,r3,[sp,#0x60]
00001c  f7fffffe          BL       __aeabi_dadd
000020  e9c90100          STRD     r0,r1,[r9,#0]
;;;1265           *center_y SET_TO (current_y + j_number);
000024  e9dd231a          LDRD     r2,r3,[sp,#0x68]
000028  e9dd0112          LDRD     r0,r1,[sp,#0x48]
00002c  f7fffffe          BL       __aeabi_dadd
000030  e9ca0100          STRD     r0,r1,[r10,#0]
;;;1266           radius SET_TO hypot((*center_x - current_x), (*center_y - current_y));
000034  e9da0100          LDRD     r0,r1,[r10,#0]
000038  e9cd0100          STRD     r0,r1,[sp,#0]
00003c  e9dd2312          LDRD     r2,r3,[sp,#0x48]
000040  f7fffffe          BL       __aeabi_dsub
000044  e9cd0104          STRD     r0,r1,[sp,#0x10]
000048  e9d90100          LDRD     r0,r1,[r9,#0]
00004c  4622              MOV      r2,r4
00004e  462b              MOV      r3,r5
000050  e9cd0100          STRD     r0,r1,[sp,#0]
000054  f7fffffe          BL       __aeabi_dsub
000058  e9cd0102          STRD     r0,r1,[sp,#8]
00005c  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000060  f7fffffe          BL       hypot
000064  4606              MOV      r6,r0
000066  460f              MOV      r7,r1
;;;1267           radius2 SET_TO hypot((*center_x - end_x), (*center_y - end_y));
000068  e9da0100          LDRD     r0,r1,[r10,#0]
00006c  e9cd0100          STRD     r0,r1,[sp,#0]
000070  e9dd2316          LDRD     r2,r3,[sp,#0x58]
000074  f7fffffe          BL       __aeabi_dsub
000078  e9cd0104          STRD     r0,r1,[sp,#0x10]
00007c  e9d90100          LDRD     r0,r1,[r9,#0]
000080  e9cd0100          STRD     r0,r1,[sp,#0]
000084  e9dd2314          LDRD     r2,r3,[sp,#0x50]
000088  f7fffffe          BL       __aeabi_dsub
00008c  e9cd0102          STRD     r0,r1,[sp,#8]
000090  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000094  f7fffffe          BL       hypot
000098  e9cd0106          STRD     r0,r1,[sp,#0x18]
;;;1268           CHK(((radius IS 0.0) OR (radius2 IS 0.0)), NCE_ZERO_RADIUS_ARC);
00009c  2200              MOVS     r2,#0
00009e  4613              MOV      r3,r2
0000a0  4630              MOV      r0,r6
0000a2  4639              MOV      r1,r7
0000a4  f7fffffe          BL       __aeabi_cdcmpeq
0000a8  d006              BEQ      |L3.184|
0000aa  2200              MOVS     r2,#0
0000ac  4613              MOV      r3,r2
0000ae  e9dd0106          LDRD     r0,r1,[sp,#0x18]
0000b2  f7fffffe          BL       __aeabi_cdcmpeq
0000b6  d128              BNE      |L3.266|
                  |L3.184|
0000b8  f04f0100          MOV      r1,#0
0000bc  4849              LDR      r0,|L3.484|
0000be  f8c0114c          STR      r1,[r0,#0x14c]
0000c2  4601              MOV      r1,r0
0000c4  f8d1314c          LDR      r3,[r1,#0x14c]
0000c8  f8d1114c          LDR      r1,[r1,#0x14c]
0000cc  f1010101          ADD      r1,r1,#1
0000d0  4602              MOV      r2,r0
0000d2  f8c2114c          STR      r1,[r2,#0x14c]
0000d6  eb030183          ADD      r1,r3,r3,LSL #2
0000da  f6a06254          SUB      r2,r0,#0xe54
0000de  eb021101          ADD      r1,r2,r1,LSL #4
0000e2  4608              MOV      r0,r1
0000e4  4940              LDR      r1,|L3.488|
0000e6  f7fffffe          BL       strcpy
0000ea  f04f0100          MOV      r1,#0
0000ee  483d              LDR      r0,|L3.484|
0000f0  f8d0014c          LDR      r0,[r0,#0x14c]
0000f4  eb000080          ADD      r0,r0,r0,LSL #2
0000f8  4a3c              LDR      r2,|L3.492|
0000fa  eb021000          ADD      r0,r2,r0,LSL #4
0000fe  7001              STRB     r1,[r0,#0]
000100  f04f00c5          MOV      r0,#0xc5
                  |L3.260|
;;;1269           CHK((fabs(radius - radius2) > tolerance),
;;;1270               NCE_RADIUS_TO_END_OF_ARC_DIFFERS_FROM_RADIUS_TO_START);
;;;1271           if (move IS G_2)
;;;1272               *turn SET_TO -1;
;;;1273           else if (move IS G_3)
;;;1274               *turn SET_TO 1;
;;;1275           else
;;;1276               ERM(NCE_BUG_CODE_NOT_G2_OR_G3);
;;;1277           return RS274NGC_OK;
;;;1278       }
000104  b009              ADD      sp,sp,#0x24
000106  e8bd8ff0          POP      {r4-r11,pc}
                  |L3.266|
00010a  4630              MOV      r0,r6                 ;1269
00010c  4639              MOV      r1,r7                 ;1269
00010e  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;1269
000112  f7fffffe          BL       __aeabi_dsub
000116  f0214100          BIC      r1,r1,#0x80000000     ;1269
00011a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1269
00011e  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;1269
000122  f7fffffe          BL       __aeabi_cdrcmple
000126  d224              BCS      |L3.370|
000128  f04f0100          MOV      r1,#0                 ;1269
00012c  482d              LDR      r0,|L3.484|
00012e  f8c0114c          STR      r1,[r0,#0x14c]        ;1269
000132  4601              MOV      r1,r0                 ;1269
000134  f8d1314c          LDR      r3,[r1,#0x14c]        ;1269
000138  f8d1214c          LDR      r2,[r1,#0x14c]        ;1269
00013c  f1020201          ADD      r2,r2,#1              ;1269
000140  f8c1214c          STR      r2,[r1,#0x14c]        ;1269
000144  eb030183          ADD      r1,r3,r3,LSL #2       ;1269
000148  4a28              LDR      r2,|L3.492|
00014a  eb021101          ADD      r1,r2,r1,LSL #4       ;1269
00014e  4608              MOV      r0,r1                 ;1269
000150  4925              LDR      r1,|L3.488|
000152  f7fffffe          BL       strcpy
000156  f04f0100          MOV      r1,#0                 ;1269
00015a  4822              LDR      r0,|L3.484|
00015c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1269
000160  eb000080          ADD      r0,r0,r0,LSL #2       ;1269
000164  4a21              LDR      r2,|L3.492|
000166  eb021000          ADD      r0,r2,r0,LSL #4       ;1269
00016a  7001              STRB     r1,[r0,#0]            ;1269
00016c  f04f0098          MOV      r0,#0x98              ;1269
000170  e7c8              B        |L3.260|
                  |L3.370|
000172  f1b80f14          CMP      r8,#0x14              ;1271
000176  d104              BNE      |L3.386|
000178  f04f30ff          MOV      r0,#0xffffffff        ;1272
00017c  f8cb0000          STR      r0,[r11,#0]           ;1272
000180  e02d              B        |L3.478|
                  |L3.386|
000182  f1b80f1e          CMP      r8,#0x1e              ;1273
000186  d104              BNE      |L3.402|
000188  f04f0001          MOV      r0,#1                 ;1274
00018c  f8cb0000          STR      r0,[r11,#0]           ;1274
000190  e025              B        |L3.478|
                  |L3.402|
000192  f04f0100          MOV      r1,#0                 ;1276
000196  4813              LDR      r0,|L3.484|
000198  f8c0114c          STR      r1,[r0,#0x14c]        ;1276
00019c  4601              MOV      r1,r0                 ;1276
00019e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1276
0001a2  f8d1114c          LDR      r1,[r1,#0x14c]        ;1276
0001a6  f1010101          ADD      r1,r1,#1              ;1276
0001aa  4602              MOV      r2,r0                 ;1276
0001ac  f8c2114c          STR      r1,[r2,#0x14c]        ;1276
0001b0  eb030183          ADD      r1,r3,r3,LSL #2       ;1276
0001b4  4a0d              LDR      r2,|L3.492|
0001b6  eb021101          ADD      r1,r2,r1,LSL #4       ;1276
0001ba  4608              MOV      r0,r1                 ;1276
0001bc  490a              LDR      r1,|L3.488|
0001be  f7fffffe          BL       strcpy
0001c2  f04f0100          MOV      r1,#0                 ;1276
0001c6  4807              LDR      r0,|L3.484|
0001c8  f8d0014c          LDR      r0,[r0,#0x14c]        ;1276
0001cc  eb000080          ADD      r0,r0,r0,LSL #2       ;1276
0001d0  4a06              LDR      r2,|L3.492|
0001d2  eb021000          ADD      r0,r2,r0,LSL #4       ;1276
0001d6  7001              STRB     r1,[r0,#0]            ;1276
0001d8  f04f0014          MOV      r0,#0x14              ;1276
0001dc  e792              B        |L3.260|
                  |L3.478|
0001de  2000              MOVS     r0,#0                 ;1277
0001e0  e790              B        |L3.260|
;;;1279   
                          ENDP

0001e2  0000              DCW      0x0000
                  |L3.484|
                          DCD      _setup+0xc000
                  |L3.488|
                          DCD      |symbol_number.442|
                  |L3.492|
                          DCD      _setup+0xb1ac

                          AREA ||i.arc_data_r||, CODE, READONLY, ALIGN=2

                  arc_data_r PROC
;;;1315   
;;;1316       static int arc_data_r(                        /* ARGUMENTS                                     */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1317       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)          */
;;;1318       double current_x,                             /* first coordinate of current point             */
;;;1319       double current_y,                             /* second coordinate of current point            */
;;;1320       double end_x,                                 /* first coordinate of arc end point             */
;;;1321       double end_y,                                 /* second coordinate of arc end point            */
;;;1322       double radius,                                /* radius of arc                                 */
;;;1323       double * center_x,                            /* pointer to first coordinate of center of arc  */
;;;1324       double * center_y,                            /* pointer to second coordinate of center of arc */
;;;1325       int * turn)                                   /* pointer to no. of full or partial circles CCW */
;;;1326       {
000004  b090              SUB      sp,sp,#0x40
000006  4692              MOV      r10,r2
000008  469b              MOV      r11,r3
00000a  e9dd6724          LDRD     r6,r7,[sp,#0x90]
;;;1327           static char name[] SET_TO "arc_data_r";
;;;1328           double abs_radius;                        /* absolute value of given radius */
;;;1329           double half_length;                       /* distance from M to end point   */
;;;1330           double mid_x;                             /* first coordinate of M          */
;;;1331           double mid_y;                             /* second coordinate of M         */
;;;1332           double offset;                            /* distance from M to center      */
;;;1333           double theta;                             /* angle of line from M to center */
;;;1334           double turn2;                             /* absolute value of half of turn */
;;;1335   
;;;1336           CHK(((end_x IS current_x) AND (end_y IS current_y)),
00000e  4652              MOV      r2,r10
000010  465b              MOV      r3,r11
000012  e9dd0120          LDRD     r0,r1,[sp,#0x80]
000016  f7fffffe          BL       __aeabi_cdcmpeq
00001a  d12f              BNE      |L4.124|
00001c  e9dd231e          LDRD     r2,r3,[sp,#0x78]
000020  e9dd0122          LDRD     r0,r1,[sp,#0x88]
000024  f7fffffe          BL       __aeabi_cdcmpeq
000028  d128              BNE      |L4.124|
00002a  f04f0100          MOV      r1,#0
00002e  489c              LDR      r0,|L4.672|
000030  f8c0114c          STR      r1,[r0,#0x14c]
000034  4601              MOV      r1,r0
000036  f8d1314c          LDR      r3,[r1,#0x14c]
00003a  f8d1114c          LDR      r1,[r1,#0x14c]
00003e  f1010101          ADD      r1,r1,#1
000042  4602              MOV      r2,r0
000044  f8c2114c          STR      r1,[r2,#0x14c]
000048  eb030183          ADD      r1,r3,r3,LSL #2
00004c  f6a06254          SUB      r2,r0,#0xe54
000050  eb021101          ADD      r1,r2,r1,LSL #4
000054  4608              MOV      r0,r1
000056  4993              LDR      r1,|L4.676|
000058  f7fffffe          BL       strcpy
00005c  f04f0100          MOV      r1,#0
000060  488f              LDR      r0,|L4.672|
000062  f8d0014c          LDR      r0,[r0,#0x14c]
000066  eb000080          ADD      r0,r0,r0,LSL #2
00006a  4a8f              LDR      r2,|L4.680|
00006c  eb021000          ADD      r0,r2,r0,LSL #4
000070  7001              STRB     r1,[r0,#0]
000072  f04f0045          MOV      r0,#0x45
                  |L4.118|
;;;1337               NCE_CURRENT_POINT_SAME_AS_END_POINT_OF_ARC);
;;;1338           abs_radius SET_TO fabs(radius);
;;;1339           mid_x SET_TO (end_x + current_x)/2.0;
;;;1340           mid_y SET_TO (end_y + current_y)/2.0;
;;;1341           half_length SET_TO hypot((mid_x - end_x), (mid_y - end_y));
;;;1342           CHK(((half_length/abs_radius) > (1+TINY)),
;;;1343               NCE_ARC_RADIUS_TOO_SMALL_TO_REACH_END_POINT);
;;;1344           if ((half_length/abs_radius) > (1-TINY))
;;;1345               half_length SET_TO abs_radius;        /* allow a small error for semicircle */
;;;1346      /* check needed before calling asin   */
;;;1347           if (((move IS G_2) AND (radius > 0)) OR
;;;1348               ((move IS G_3) AND (radius < 0)))
;;;1349               theta SET_TO atan2((end_y - current_y), (end_x - current_x)) - PI2;
;;;1350           else
;;;1351               theta SET_TO atan2((end_y - current_y), (end_x - current_x)) + PI2;
;;;1352   
;;;1353           turn2 SET_TO asin (half_length/abs_radius);
;;;1354           offset SET_TO abs_radius * cos(turn2);
;;;1355           *center_x SET_TO mid_x + (offset * cos(theta));
;;;1356           *center_y SET_TO mid_y + (offset * sin(theta));
;;;1357           *turn SET_TO (move IS G_2) ? -1 : 1;
;;;1358   
;;;1359           return RS274NGC_OK;
;;;1360       }
000076  b014              ADD      sp,sp,#0x50
000078  e8bd9ff0          POP      {r4-r12,pc}
                  |L4.124|
00007c  f0274300          BIC      r3,r7,#0x80000000     ;1338
000080  4634              MOV      r4,r6                 ;1338
000082  461d              MOV      r5,r3                 ;1338
000084  4652              MOV      r2,r10                ;1339
000086  465b              MOV      r3,r11                ;1339
000088  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;1339
00008c  f7fffffe          BL       __aeabi_dadd
000090  2200              MOVS     r2,#0                 ;1339
000092  f04f4380          MOV      r3,#0x40000000        ;1339
000096  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1339
00009a  f7fffffe          BL       __aeabi_ddiv
00009e  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;1339
0000a2  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;1340
0000a6  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;1340
0000aa  f7fffffe          BL       __aeabi_dadd
0000ae  2200              MOVS     r2,#0                 ;1340
0000b0  f04f4380          MOV      r3,#0x40000000        ;1340
0000b4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1340
0000b8  f7fffffe          BL       __aeabi_ddiv
0000bc  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;1340
0000c0  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;1341
0000c4  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1341
0000c8  f7fffffe          BL       __aeabi_dsub
0000cc  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1341
0000d0  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;1341
0000d4  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1341
0000d8  f7fffffe          BL       __aeabi_dsub
0000dc  e9cd0102          STRD     r0,r1,[sp,#8]         ;1341
0000e0  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;1341
0000e4  f7fffffe          BL       hypot
0000e8  4680              MOV      r8,r0                 ;1341
0000ea  4689              MOV      r9,r1                 ;1341
0000ec  4622              MOV      r2,r4                 ;1342
0000ee  462b              MOV      r3,r5                 ;1342
0000f0  4640              MOV      r0,r8                 ;1342
0000f2  4649              MOV      r1,r9                 ;1342
0000f4  f7fffffe          BL       __aeabi_ddiv
0000f8  f2411298          MOV      r2,#0x1198            ;1342
0000fc  4b6b              LDR      r3,|L4.684|
0000fe  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1342
000102  f7fffffe          BL       __aeabi_cdrcmple
000106  d225              BCS      |L4.340|
000108  f04f0100          MOV      r1,#0                 ;1342
00010c  4864              LDR      r0,|L4.672|
00010e  f8c0114c          STR      r1,[r0,#0x14c]        ;1342
000112  4601              MOV      r1,r0                 ;1342
000114  f8d1314c          LDR      r3,[r1,#0x14c]        ;1342
000118  f8d1114c          LDR      r1,[r1,#0x14c]        ;1342
00011c  f1010101          ADD      r1,r1,#1              ;1342
000120  4602              MOV      r2,r0                 ;1342
000122  f8c2114c          STR      r1,[r2,#0x14c]        ;1342
000126  eb030183          ADD      r1,r3,r3,LSL #2       ;1342
00012a  4a5f              LDR      r2,|L4.680|
00012c  eb021101          ADD      r1,r2,r1,LSL #4       ;1342
000130  4608              MOV      r0,r1                 ;1342
000132  495c              LDR      r1,|L4.676|
000134  f7fffffe          BL       strcpy
000138  f04f0100          MOV      r1,#0                 ;1342
00013c  4858              LDR      r0,|L4.672|
00013e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1342
000142  eb000080          ADD      r0,r0,r0,LSL #2       ;1342
000146  4a58              LDR      r2,|L4.680|
000148  eb021000          ADD      r0,r2,r0,LSL #4       ;1342
00014c  7001              STRB     r1,[r0,#0]            ;1342
00014e  f04f0007          MOV      r0,#7                 ;1342
000152  e790              B        |L4.118|
                  |L4.340|
000154  4622              MOV      r2,r4                 ;1344
000156  462b              MOV      r3,r5                 ;1344
000158  4640              MOV      r0,r8                 ;1344
00015a  4649              MOV      r1,r9                 ;1344
00015c  f7fffffe          BL       __aeabi_ddiv
000160  4a53              LDR      r2,|L4.688|
000162  4b52              LDR      r3,|L4.684|
000164  1e5b              SUBS     r3,r3,#1              ;1344
000166  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1344
00016a  f7fffffe          BL       __aeabi_cdrcmple
00016e  d201              BCS      |L4.372|
000170  46a0              MOV      r8,r4                 ;1345
000172  46a9              MOV      r9,r5                 ;1345
                  |L4.372|
000174  9810              LDR      r0,[sp,#0x40]         ;1347
000176  2814              CMP      r0,#0x14              ;1347
000178  d106              BNE      |L4.392|
00017a  2200              MOVS     r2,#0                 ;1347
00017c  4613              MOV      r3,r2                 ;1347
00017e  4630              MOV      r0,r6                 ;1347
000180  4639              MOV      r1,r7                 ;1347
000182  f7fffffe          BL       __aeabi_cdrcmple
000186  d309              BCC      |L4.412|
                  |L4.392|
000188  9810              LDR      r0,[sp,#0x40]         ;1348
00018a  281e              CMP      r0,#0x1e              ;1348
00018c  d123              BNE      |L4.470|
00018e  2200              MOVS     r2,#0                 ;1348
000190  4613              MOV      r3,r2                 ;1348
000192  4630              MOV      r0,r6                 ;1348
000194  4639              MOV      r1,r7                 ;1348
000196  f7fffffe          BL       __aeabi_cdcmple
00019a  d21c              BCS      |L4.470|
                  |L4.412|
00019c  4652              MOV      r2,r10                ;1349
00019e  465b              MOV      r3,r11                ;1349
0001a0  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;1349
0001a4  f7fffffe          BL       __aeabi_dsub
0001a8  e9cd0102          STRD     r0,r1,[sp,#8]         ;1349
0001ac  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;1349
0001b0  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;1349
0001b4  f7fffffe          BL       __aeabi_dsub
0001b8  e9cd0100          STRD     r0,r1,[sp,#0]         ;1349
0001bc  e9dd2302          LDRD     r2,r3,[sp,#8]         ;1349
0001c0  f7fffffe          BL       atan2
0001c4  4a3b              LDR      r2,|L4.692|
0001c6  4b3c              LDR      r3,|L4.696|
0001c8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1349
0001cc  f7fffffe          BL       __aeabi_dsub
0001d0  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1349
0001d4  e01b              B        |L4.526|
                  |L4.470|
0001d6  4652              MOV      r2,r10                ;1351
0001d8  465b              MOV      r3,r11                ;1351
0001da  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;1351
0001de  f7fffffe          BL       __aeabi_dsub
0001e2  e9cd0102          STRD     r0,r1,[sp,#8]         ;1351
0001e6  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;1351
0001ea  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;1351
0001ee  f7fffffe          BL       __aeabi_dsub
0001f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;1351
0001f6  e9dd2302          LDRD     r2,r3,[sp,#8]         ;1351
0001fa  f7fffffe          BL       atan2
0001fe  4a2d              LDR      r2,|L4.692|
000200  4b2d              LDR      r3,|L4.696|
000202  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1351
000206  f7fffffe          BL       __aeabi_dadd
00020a  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1351
                  |L4.526|
00020e  4622              MOV      r2,r4                 ;1353
000210  462b              MOV      r3,r5                 ;1353
000212  4640              MOV      r0,r8                 ;1353
000214  4649              MOV      r1,r9                 ;1353
000216  f7fffffe          BL       __aeabi_ddiv
00021a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1353
00021e  f7fffffe          BL       asin
000222  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1353
000226  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;1354
00022a  f7fffffe          BL       ||cos||
00022e  4622              MOV      r2,r4                 ;1354
000230  462b              MOV      r3,r5                 ;1354
000232  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1354
000236  f7fffffe          BL       __aeabi_dmul
00023a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1354
00023e  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;1355
000242  f7fffffe          BL       ||cos||
000246  e9cd0102          STRD     r0,r1,[sp,#8]         ;1355
00024a  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1355
00024e  f7fffffe          BL       __aeabi_dmul
000252  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1355
000256  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;1355
00025a  f7fffffe          BL       __aeabi_dadd
00025e  9a26              LDR      r2,[sp,#0x98]         ;1355
000260  c203              STM      r2!,{r0,r1}           ;1355
000262  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;1356
000266  f7fffffe          BL       ||sin||
00026a  e9cd0102          STRD     r0,r1,[sp,#8]         ;1356
00026e  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1356
000272  f7fffffe          BL       __aeabi_dmul
000276  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1356
00027a  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;1356
00027e  f7fffffe          BL       __aeabi_dadd
000282  9a27              LDR      r2,[sp,#0x9c]         ;1356
000284  c203              STM      r2!,{r0,r1}           ;1356
000286  9810              LDR      r0,[sp,#0x40]         ;1357
000288  2814              CMP      r0,#0x14              ;1357
00028a  d102              BNE      |L4.658|
00028c  f04f31ff          MOV      r1,#0xffffffff        ;1357
000290  e001              B        |L4.662|
                  |L4.658|
000292  f04f0101          MOV      r1,#1                 ;1357
                  |L4.662|
000296  9828              LDR      r0,[sp,#0xa0]         ;1357
000298  6001              STR      r1,[r0,#0]            ;1357
00029a  2000              MOVS     r0,#0                 ;1359
00029c  e6eb              B        |L4.118|
;;;1361   
                          ENDP

00029e  0000              DCW      0x0000
                  |L4.672|
                          DCD      _setup+0xc000
                  |L4.676|
                          DCD      |symbol_number.443|
                  |L4.680|
                          DCD      _setup+0xb1ac
                  |L4.684|
                          DCD      0x3ff00000
                  |L4.688|
                          DCD      0xffffdcd1
                  |L4.692|
                          DCD      0x54442d18
                  |L4.696|
                          DCD      0x3ff921fb

                          AREA ||i.check_g_codes||, CODE, READONLY, ALIGN=2

                  check_g_codes PROC
;;;1412   
;;;1413       static int check_g_codes(                     /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1414       block_pointer block,                          /* pointer to a block to be checked */
;;;1415       setup_pointer settings)                       /* pointer to machine settings      */
;;;1416       {
000004  4604              MOV      r4,r0
000006  4689              MOV      r9,r1
;;;1417           static char name[] SET_TO "check_g_codes";
;;;1418           int mode0;
;;;1419           int p_int;
;;;1420   
;;;1421           mode0 SET_TO block->g_modes[0];
000008  f8d40110          LDR      r0,[r4,#0x110]
00000c  4605              MOV      r5,r0
;;;1422   
;;;1423           if (mode0 IS -1)
00000e  1c68              ADDS     r0,r5,#1
000010  d073              BEQ      |L5.250|
;;;1424               {}
;;;1425               else if (mode0 IS G_4)
000012  2d28              CMP      r5,#0x28
000014  d135              BNE      |L5.130|
;;;1426           {
;;;1427               CHK((block->p_number IS -1.0), NCE_DWELL_TIME_MISSING_WITH_G4);
000016  f8d411b0          LDR      r1,[r4,#0x1b0]
00001a  460e              MOV      r6,r1
00001c  f8d401b4          LDR      r0,[r4,#0x1b4]
000020  4607              MOV      r7,r0
000022  2200              MOVS     r2,#0
000024  4bbf              LDR      r3,|L5.804|
000026  4630              MOV      r0,r6
000028  4639              MOV      r1,r7
00002a  f7fffffe          BL       __aeabi_cdcmpeq
00002e  d164              BNE      |L5.250|
000030  f04f0100          MOV      r1,#0
000034  48bc              LDR      r0,|L5.808|
000036  f8c0114c          STR      r1,[r0,#0x14c]
00003a  4601              MOV      r1,r0
00003c  f8d1314c          LDR      r3,[r1,#0x14c]
000040  f8d1114c          LDR      r1,[r1,#0x14c]
000044  f1010101          ADD      r1,r1,#1
000048  4602              MOV      r2,r0
00004a  f8c2114c          STR      r1,[r2,#0x14c]
00004e  eb030183          ADD      r1,r3,r3,LSL #2
000052  f6a06254          SUB      r2,r0,#0xe54
000056  eb021101          ADD      r1,r2,r1,LSL #4
00005a  4608              MOV      r0,r1
00005c  49b3              LDR      r1,|L5.812|
00005e  f7fffffe          BL       strcpy
000062  f04f0100          MOV      r1,#0
000066  48b0              LDR      r0,|L5.808|
000068  f8d0014c          LDR      r0,[r0,#0x14c]
00006c  eb000080          ADD      r0,r0,r0,LSL #2
000070  4aaf              LDR      r2,|L5.816|
000072  eb021000          ADD      r0,r2,r0,LSL #4
000076  7001              STRB     r1,[r0,#0]
000078  f04f0048          MOV      r0,#0x48
                  |L5.124|
;;;1428           }
;;;1429           else if (mode0 IS G_10)
;;;1430           {
;;;1431               p_int SET_TO (int)(block->p_number + 0.0001);
;;;1432               CHK((block->l_number ISNT 2), NCE_LINE_WITH_G10_DOES_NOT_HAVE_L2);
;;;1433               CHK((((block->p_number + 0.0001) - p_int) > 0.0002),
;;;1434                   NCE_P_VALUE_NOT_AN_INTEGER_WITH_G10_L2);
;;;1435               CHK(((p_int < 1) OR (p_int > 9)), NCE_P_VALUE_OUT_OF_RANGE_WITH_G10_L2);
;;;1436           }
;;;1437           else if (mode0 IS G_28)
;;;1438               {}
;;;1439               else if (mode0 IS G_30)
;;;1440                   {}
;;;1441                   else if (mode0 IS G_53)
;;;1442                   {
;;;1443                       CHK(((block->motion_to_be ISNT G_0) AND (block->motion_to_be ISNT G_1)),
;;;1444                   NCE_MUST_USE_G0_OR_G1_WITH_G53);
;;;1445               CHK(((block->g_modes[3] IS G_91) OR
;;;1446                   ((block->g_modes[3] ISNT G_90) AND
;;;1447                   (settings->distance_mode IS MODE_INCREMENTAL))),
;;;1448                   NCE_CANNOT_USE_G53_INCREMENTAL);
;;;1449           }
;;;1450           else if (mode0 IS G_92)
;;;1451               {}
;;;1452               else if ((mode0 IS G_92_1) OR (mode0 IS G_92_2) OR (mode0 IS G_92_3))
;;;1453                   {}
;;;1454                   else
;;;1455                       ERM(NCE_BUG_BAD_G_CODE_MODAL_GROUP_0);
;;;1456           return RS274NGC_OK;
;;;1457       }
00007c  b004              ADD      sp,sp,#0x10
00007e  e8bd9ff0          POP      {r4-r12,pc}
                  |L5.130|
000082  2d64              CMP      r5,#0x64              ;1429
000084  d17e              BNE      |L5.388|
000086  f8d411b0          LDR      r1,[r4,#0x1b0]        ;1431
00008a  460e              MOV      r6,r1                 ;1431
00008c  f8d401b4          LDR      r0,[r4,#0x1b4]        ;1431
000090  4607              MOV      r7,r0                 ;1431
000092  4aa8              LDR      r2,|L5.820|
000094  4ba8              LDR      r3,|L5.824|
000096  4630              MOV      r0,r6                 ;1431
000098  4639              MOV      r1,r7                 ;1431
00009a  f7fffffe          BL       __aeabi_dadd
00009e  4682              MOV      r10,r0                ;1431
0000a0  f7fffffe          BL       __aeabi_d2iz
0000a4  4680              MOV      r8,r0                 ;1431
0000a6  f8d40178          LDR      r0,[r4,#0x178]        ;1432
0000aa  2802              CMP      r0,#2                 ;1432
0000ac  d026              BEQ      |L5.252|
0000ae  f04f0100          MOV      r1,#0                 ;1432
0000b2  489d              LDR      r0,|L5.808|
0000b4  f8c0114c          STR      r1,[r0,#0x14c]        ;1432
0000b8  4601              MOV      r1,r0                 ;1432
0000ba  f8d1314c          LDR      r3,[r1,#0x14c]        ;1432
0000be  f8d1114c          LDR      r1,[r1,#0x14c]        ;1432
0000c2  f1010101          ADD      r1,r1,#1              ;1432
0000c6  4602              MOV      r2,r0                 ;1432
0000c8  f8c2114c          STR      r1,[r2,#0x14c]        ;1432
0000cc  eb030183          ADD      r1,r3,r3,LSL #2       ;1432
0000d0  4a97              LDR      r2,|L5.816|
0000d2  eb021101          ADD      r1,r2,r1,LSL #4       ;1432
0000d6  4608              MOV      r0,r1                 ;1432
0000d8  4994              LDR      r1,|L5.812|
0000da  f7fffffe          BL       strcpy
0000de  f04f0100          MOV      r1,#0                 ;1432
0000e2  4891              LDR      r0,|L5.808|
0000e4  f8d0014c          LDR      r0,[r0,#0x14c]        ;1432
0000e8  eb000080          ADD      r0,r0,r0,LSL #2       ;1432
0000ec  4a90              LDR      r2,|L5.816|
0000ee  eb021000          ADD      r0,r2,r0,LSL #4       ;1432
0000f2  7001              STRB     r1,[r0,#0]            ;1432
0000f4  f04f0063          MOV      r0,#0x63              ;1432
0000f8  e7c0              B        |L5.124|
                  |L5.250|
0000fa  e0c8              B        |L5.654|
                  |L5.252|
0000fc  4640              MOV      r0,r8                 ;1433
0000fe  f7fffffe          BL       __aeabi_i2d
000102  4682              MOV      r10,r0                ;1433
000104  468b              MOV      r11,r1                ;1433
000106  f8d411b0          LDR      r1,[r4,#0x1b0]        ;1433
00010a  460e              MOV      r6,r1                 ;1433
00010c  f8d401b4          LDR      r0,[r4,#0x1b4]        ;1433
000110  4607              MOV      r7,r0                 ;1433
000112  4a88              LDR      r2,|L5.820|
000114  4b88              LDR      r3,|L5.824|
000116  4630              MOV      r0,r6                 ;1433
000118  4639              MOV      r1,r7                 ;1433
00011a  f7fffffe          BL       __aeabi_dadd
00011e  4652              MOV      r2,r10                ;1433
000120  465b              MOV      r3,r11                ;1433
000122  e9cd0100          STRD     r0,r1,[sp,#0]         ;1433
000126  f7fffffe          BL       __aeabi_dsub
00012a  4a82              LDR      r2,|L5.820|
00012c  4b83              LDR      r3,|L5.828|
00012e  e9cd0102          STRD     r0,r1,[sp,#8]         ;1433
000132  f7fffffe          BL       __aeabi_cdrcmple
000136  d226              BCS      |L5.390|
000138  f04f0100          MOV      r1,#0                 ;1433
00013c  487a              LDR      r0,|L5.808|
00013e  f8c0114c          STR      r1,[r0,#0x14c]        ;1433
000142  4601              MOV      r1,r0                 ;1433
000144  f8d1314c          LDR      r3,[r1,#0x14c]        ;1433
000148  f8d1114c          LDR      r1,[r1,#0x14c]        ;1433
00014c  f1010101          ADD      r1,r1,#1              ;1433
000150  4602              MOV      r2,r0                 ;1433
000152  f8c2114c          STR      r1,[r2,#0x14c]        ;1433
000156  eb030183          ADD      r1,r3,r3,LSL #2       ;1433
00015a  4a75              LDR      r2,|L5.816|
00015c  eb021101          ADD      r1,r2,r1,LSL #4       ;1433
000160  4608              MOV      r0,r1                 ;1433
000162  4972              LDR      r1,|L5.812|
000164  f7fffffe          BL       strcpy
000168  f04f0100          MOV      r1,#0                 ;1433
00016c  486e              LDR      r0,|L5.808|
00016e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1433
000172  eb000080          ADD      r0,r0,r0,LSL #2       ;1433
000176  4a6e              LDR      r2,|L5.816|
000178  eb021000          ADD      r0,r2,r0,LSL #4       ;1433
00017c  7001              STRB     r1,[r0,#0]            ;1433
00017e  f04f008a          MOV      r0,#0x8a              ;1433
000182  e77b              B        |L5.124|
                  |L5.388|
000184  e02b              B        |L5.478|
                  |L5.390|
000186  f1b80f01          CMP      r8,#1                 ;1435
00018a  db02              BLT      |L5.402|
00018c  f1b80f09          CMP      r8,#9                 ;1435
000190  dd7d              BLE      |L5.654|
                  |L5.402|
000192  f04f0100          MOV      r1,#0                 ;1435
000196  4864              LDR      r0,|L5.808|
000198  f8c0114c          STR      r1,[r0,#0x14c]        ;1435
00019c  4601              MOV      r1,r0                 ;1435
00019e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1435
0001a2  f8d1114c          LDR      r1,[r1,#0x14c]        ;1435
0001a6  f1010101          ADD      r1,r1,#1              ;1435
0001aa  4602              MOV      r2,r0                 ;1435
0001ac  f8c2114c          STR      r1,[r2,#0x14c]        ;1435
0001b0  eb030183          ADD      r1,r3,r3,LSL #2       ;1435
0001b4  4a5e              LDR      r2,|L5.816|
0001b6  eb021101          ADD      r1,r2,r1,LSL #4       ;1435
0001ba  4608              MOV      r0,r1                 ;1435
0001bc  495b              LDR      r1,|L5.812|
0001be  f7fffffe          BL       strcpy
0001c2  f04f0100          MOV      r1,#0                 ;1435
0001c6  4858              LDR      r0,|L5.808|
0001c8  f8d0014c          LDR      r0,[r0,#0x14c]        ;1435
0001cc  eb000080          ADD      r0,r0,r0,LSL #2       ;1435
0001d0  4a57              LDR      r2,|L5.816|
0001d2  eb021000          ADD      r0,r2,r0,LSL #4       ;1435
0001d6  7001              STRB     r1,[r0,#0]            ;1435
0001d8  f04f008b          MOV      r0,#0x8b              ;1435
0001dc  e74e              B        |L5.124|
                  |L5.478|
0001de  f5b57f8c          CMP      r5,#0x118             ;1437
                  |L5.482|
0001e2  d054              BEQ      |L5.654|
0001e4  f5b57f96          CMP      r5,#0x12c             ;1439
0001e8  d0fb              BEQ      |L5.482|
0001ea  f5a57000          SUB      r0,r5,#0x200          ;1441
0001ee  3812              SUBS     r0,r0,#0x12           ;1441
0001f0  d165              BNE      |L5.702|
0001f2  f8d40180          LDR      r0,[r4,#0x180]        ;1443
0001f6  b348              CBZ      r0,|L5.588|
0001f8  f8d40180          LDR      r0,[r4,#0x180]        ;1443
0001fc  280a              CMP      r0,#0xa               ;1443
0001fe  d025              BEQ      |L5.588|
000200  f04f0100          MOV      r1,#0                 ;1443
000204  4848              LDR      r0,|L5.808|
000206  f8c0114c          STR      r1,[r0,#0x14c]        ;1443
00020a  4601              MOV      r1,r0                 ;1443
00020c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1443
000210  f8d1114c          LDR      r1,[r1,#0x14c]        ;1443
000214  f1010101          ADD      r1,r1,#1              ;1443
000218  4602              MOV      r2,r0                 ;1443
00021a  f8c2114c          STR      r1,[r2,#0x14c]        ;1443
00021e  eb030183          ADD      r1,r3,r3,LSL #2       ;1443
000222  4a43              LDR      r2,|L5.816|
000224  eb021101          ADD      r1,r2,r1,LSL #4       ;1443
000228  4608              MOV      r0,r1                 ;1443
00022a  4940              LDR      r1,|L5.812|
00022c  f7fffffe          BL       strcpy
000230  f04f0100          MOV      r1,#0                 ;1443
000234  483c              LDR      r0,|L5.808|
000236  f8d0014c          LDR      r0,[r0,#0x14c]        ;1443
00023a  eb000080          ADD      r0,r0,r0,LSL #2       ;1443
00023e  4a3c              LDR      r2,|L5.816|
000240  eb021000          ADD      r0,r2,r0,LSL #4       ;1443
000244  7001              STRB     r1,[r0,#0]            ;1443
000246  f04f0078          MOV      r0,#0x78              ;1443
00024a  e717              B        |L5.124|
                  |L5.588|
00024c  f44f708e          MOV      r0,#0x11c             ;1445
000250  5900              LDR      r0,[r0,r4]            ;1445
000252  f5a07140          SUB      r1,r0,#0x300          ;1445
000256  398e              SUBS     r1,r1,#0x8e           ;1445
000258  d009              BEQ      |L5.622|
00025a  f44f708e          MOV      r0,#0x11c             ;1445
00025e  5900              LDR      r0,[r0,r4]            ;1445
000260  f5b07f61          CMP      r0,#0x384             ;1445
000264  d05c              BEQ      |L5.800|
000266  f89903f8          LDRB     r0,[r9,#0x3f8]        ;1445
00026a  2801              CMP      r0,#1                 ;1445
00026c  d158              BNE      |L5.800|
                  |L5.622|
00026e  f04f0100          MOV      r1,#0                 ;1445
000272  482d              LDR      r0,|L5.808|
000274  f8c0114c          STR      r1,[r0,#0x14c]        ;1445
000278  4601              MOV      r1,r0                 ;1445
00027a  f8d1314c          LDR      r3,[r1,#0x14c]        ;1445
00027e  f8d1114c          LDR      r1,[r1,#0x14c]        ;1445
000282  f1010101          ADD      r1,r1,#1              ;1445
000286  4602              MOV      r2,r0                 ;1445
000288  f8c2114c          STR      r1,[r2,#0x14c]        ;1445
00028c  e000              B        |L5.656|
                  |L5.654|
00028e  e047              B        |L5.800|
                  |L5.656|
000290  eb030183          ADD      r1,r3,r3,LSL #2       ;1445
000294  4a26              LDR      r2,|L5.816|
000296  eb021101          ADD      r1,r2,r1,LSL #4       ;1445
00029a  4608              MOV      r0,r1                 ;1445
00029c  4923              LDR      r1,|L5.812|
00029e  f7fffffe          BL       strcpy
0002a2  f04f0100          MOV      r1,#0                 ;1445
0002a6  4820              LDR      r0,|L5.808|
0002a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;1445
0002ac  eb000080          ADD      r0,r0,r0,LSL #2       ;1445
0002b0  4a1f              LDR      r2,|L5.816|
0002b2  eb021000          ADD      r0,r2,r0,LSL #4       ;1445
0002b6  7001              STRB     r1,[r0,#0]            ;1445
0002b8  f04f003d          MOV      r0,#0x3d              ;1445
0002bc  e6de              B        |L5.124|
                  |L5.702|
0002be  f5b57f66          CMP      r5,#0x398             ;1450
0002c2  d02d              BEQ      |L5.800|
0002c4  f5a57040          SUB      r0,r5,#0x300          ;1452
0002c8  3899              SUBS     r0,r0,#0x99           ;1452
0002ca  d029              BEQ      |L5.800|
0002cc  1e40              SUBS     r0,r0,#1              ;1452
0002ce  d027              BEQ      |L5.800|
0002d0  1e40              SUBS     r0,r0,#1              ;1452
0002d2  d025              BEQ      |L5.800|
0002d4  f04f0100          MOV      r1,#0                 ;1455
0002d8  4813              LDR      r0,|L5.808|
0002da  f8c0114c          STR      r1,[r0,#0x14c]        ;1455
0002de  4601              MOV      r1,r0                 ;1455
0002e0  f8d1314c          LDR      r3,[r1,#0x14c]        ;1455
0002e4  f8d1114c          LDR      r1,[r1,#0x14c]        ;1455
0002e8  f1010101          ADD      r1,r1,#1              ;1455
0002ec  4602              MOV      r2,r0                 ;1455
0002ee  f8c2114c          STR      r1,[r2,#0x14c]        ;1455
0002f2  eb030183          ADD      r1,r3,r3,LSL #2       ;1455
0002f6  4a0e              LDR      r2,|L5.816|
0002f8  eb021101          ADD      r1,r2,r1,LSL #4       ;1455
0002fc  4608              MOV      r0,r1                 ;1455
0002fe  490b              LDR      r1,|L5.812|
000300  f7fffffe          BL       strcpy
000304  f04f0100          MOV      r1,#0                 ;1455
000308  4807              LDR      r0,|L5.808|
00030a  f8d0014c          LDR      r0,[r0,#0x14c]        ;1455
00030e  eb000080          ADD      r0,r0,r0,LSL #2       ;1455
000312  4a07              LDR      r2,|L5.816|
000314  eb021000          ADD      r0,r2,r0,LSL #4       ;1455
000318  7001              STRB     r1,[r0,#0]            ;1455
00031a  f04f000f          MOV      r0,#0xf               ;1455
00031e  e6ad              B        |L5.124|
                  |L5.800|
000320  2000              MOVS     r0,#0                 ;1456
000322  e6ab              B        |L5.124|
;;;1458   
                          ENDP

                  |L5.804|
                          DCD      0xbff00000
                  |L5.808|
                          DCD      _setup+0xc000
                  |L5.812|
                          DCD      |symbol_number.444|
                  |L5.816|
                          DCD      _setup+0xb1ac
                  |L5.820|
                          DCD      0xeb1c432d
                  |L5.824|
                          DCD      0x3f1a36e2
                  |L5.828|
                          DCD      0x3f2a36e2

                          AREA ||i.check_items||, CODE, READONLY, ALIGN=2

                  check_items PROC
;;;1487   
;;;1488       static int check_items(                       /* ARGUMENTS                        */
000000  b570              PUSH     {r4-r6,lr}
;;;1489       block_pointer block,                          /* pointer to a block to be checked */
;;;1490       setup_pointer settings)                       /* pointer to machine settings      */
;;;1491       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1492           static char name[] SET_TO "check_items";
;;;1493           int status;
;;;1494   
;;;1495           CHP(check_g_codes(block, settings));
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       check_g_codes
00000e  0006              MOVS     r6,r0
000010  d026              BEQ      |L6.96|
000012  483f              LDR      r0,|L6.272|
000014  f8d0014c          LDR      r0,[r0,#0x14c]
000018  2831              CMP      r0,#0x31
00001a  da1f              BGE      |L6.92|
00001c  493c              LDR      r1,|L6.272|
00001e  f8d1314c          LDR      r3,[r1,#0x14c]
000022  f8d1114c          LDR      r1,[r1,#0x14c]
000026  1c49              ADDS     r1,r1,#1
000028  4a39              LDR      r2,|L6.272|
00002a  f8c2114c          STR      r1,[r2,#0x14c]
00002e  eb030183          ADD      r1,r3,r3,LSL #2
000032  f6a26254          SUB      r2,r2,#0xe54
000036  eb021101          ADD      r1,r2,r1,LSL #4
00003a  4608              MOV      r0,r1
00003c  4935              LDR      r1,|L6.276|
00003e  f7fffffe          BL       strcpy
000042  f04f0100          MOV      r1,#0
000046  4832              LDR      r0,|L6.272|
000048  f8d0014c          LDR      r0,[r0,#0x14c]
00004c  eb000080          ADD      r0,r0,r0,LSL #2
000050  4a31              LDR      r2,|L6.280|
000052  eb021000          ADD      r0,r2,r0,LSL #4
000056  7001              STRB     r1,[r0,#0]
000058  4630              MOV      r0,r6
                  |L6.90|
;;;1496           CHP(check_m_codes(block));
;;;1497           CHP(check_other_codes(block));
;;;1498           return RS274NGC_OK;
;;;1499       }
00005a  bd70              POP      {r4-r6,pc}
                  |L6.92|
00005c  4630              MOV      r0,r6                 ;1495
00005e  e7fc              B        |L6.90|
                  |L6.96|
000060  4620              MOV      r0,r4                 ;1496
000062  f7fffffe          BL       check_m_codes
000066  0006              MOVS     r6,r0                 ;1496
000068  d025              BEQ      |L6.182|
00006a  4829              LDR      r0,|L6.272|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1496
000070  2831              CMP      r0,#0x31              ;1496
000072  da1e              BGE      |L6.178|
000074  4926              LDR      r1,|L6.272|
000076  f8d1314c          LDR      r3,[r1,#0x14c]        ;1496
00007a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1496
00007e  1c49              ADDS     r1,r1,#1              ;1496
000080  4a23              LDR      r2,|L6.272|
000082  f8c2114c          STR      r1,[r2,#0x14c]        ;1496
000086  eb030183          ADD      r1,r3,r3,LSL #2       ;1496
00008a  4a23              LDR      r2,|L6.280|
00008c  eb021101          ADD      r1,r2,r1,LSL #4       ;1496
000090  4608              MOV      r0,r1                 ;1496
000092  4920              LDR      r1,|L6.276|
000094  f7fffffe          BL       strcpy
000098  f04f0100          MOV      r1,#0                 ;1496
00009c  481c              LDR      r0,|L6.272|
00009e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1496
0000a2  eb000080          ADD      r0,r0,r0,LSL #2       ;1496
0000a6  4a1c              LDR      r2,|L6.280|
0000a8  eb021000          ADD      r0,r2,r0,LSL #4       ;1496
0000ac  7001              STRB     r1,[r0,#0]            ;1496
0000ae  4630              MOV      r0,r6                 ;1496
0000b0  e7d3              B        |L6.90|
                  |L6.178|
0000b2  4630              MOV      r0,r6                 ;1496
0000b4  e7d1              B        |L6.90|
                  |L6.182|
0000b6  4620              MOV      r0,r4                 ;1497
0000b8  f7fffffe          BL       check_other_codes
0000bc  0006              MOVS     r6,r0                 ;1497
0000be  d025              BEQ      |L6.268|
0000c0  4813              LDR      r0,|L6.272|
0000c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1497
0000c6  2831              CMP      r0,#0x31              ;1497
0000c8  da1e              BGE      |L6.264|
0000ca  4911              LDR      r1,|L6.272|
0000cc  f8d1314c          LDR      r3,[r1,#0x14c]        ;1497
0000d0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1497
0000d4  1c49              ADDS     r1,r1,#1              ;1497
0000d6  4a0e              LDR      r2,|L6.272|
0000d8  f8c2114c          STR      r1,[r2,#0x14c]        ;1497
0000dc  eb030183          ADD      r1,r3,r3,LSL #2       ;1497
0000e0  4a0d              LDR      r2,|L6.280|
0000e2  eb021101          ADD      r1,r2,r1,LSL #4       ;1497
0000e6  4608              MOV      r0,r1                 ;1497
0000e8  490a              LDR      r1,|L6.276|
0000ea  f7fffffe          BL       strcpy
0000ee  f04f0100          MOV      r1,#0                 ;1497
0000f2  4807              LDR      r0,|L6.272|
0000f4  f8d0014c          LDR      r0,[r0,#0x14c]        ;1497
0000f8  eb000080          ADD      r0,r0,r0,LSL #2       ;1497
0000fc  4a06              LDR      r2,|L6.280|
0000fe  eb021000          ADD      r0,r2,r0,LSL #4       ;1497
000102  7001              STRB     r1,[r0,#0]            ;1497
000104  4630              MOV      r0,r6                 ;1497
000106  e7a8              B        |L6.90|
                  |L6.264|
000108  4630              MOV      r0,r6                 ;1497
00010a  e7a6              B        |L6.90|
                  |L6.268|
00010c  2000              MOVS     r0,#0                 ;1498
00010e  e7a4              B        |L6.90|
;;;1500   
                          ENDP

                  |L6.272|
                          DCD      _setup+0xc000
                  |L6.276|
                          DCD      |symbol_number.445|
                  |L6.280|
                          DCD      _setup+0xb1ac

                          AREA ||i.check_m_codes||, CODE, READONLY, ALIGN=2

                  check_m_codes PROC
;;;1520   
;;;1521       static int check_m_codes(                     /* ARGUMENTS                        */
000000  b510              PUSH     {r4,lr}
;;;1522       block_pointer block)                          /* pointer to a block to be checked */
;;;1523       {
000002  4604              MOV      r4,r0
;;;1524           static char name[] SET_TO "check_m_codes";
;;;1525   
;;;1526           CHK((block->m_count > MAX_EMS), NCE_TOO_MANY_M_CODES_ON_LINE);
000004  f8d40184          LDR      r0,[r4,#0x184]
000008  2804              CMP      r0,#4
00000a  dd26              BLE      |L7.90|
00000c  f04f0100          MOV      r1,#0
000010  4813              LDR      r0,|L7.96|
000012  f8c0114c          STR      r1,[r0,#0x14c]
000016  4601              MOV      r1,r0
000018  f8d1314c          LDR      r3,[r1,#0x14c]
00001c  f8d1114c          LDR      r1,[r1,#0x14c]
000020  f1010101          ADD      r1,r1,#1
000024  4602              MOV      r2,r0
000026  f8c2114c          STR      r1,[r2,#0x14c]
00002a  eb030183          ADD      r1,r3,r3,LSL #2
00002e  f6a06254          SUB      r2,r0,#0xe54
000032  eb021101          ADD      r1,r2,r1,LSL #4
000036  4608              MOV      r0,r1
000038  490a              LDR      r1,|L7.100|
00003a  f7fffffe          BL       strcpy
00003e  f04f0100          MOV      r1,#0
000042  4807              LDR      r0,|L7.96|
000044  f8d0014c          LDR      r0,[r0,#0x14c]
000048  eb000080          ADD      r0,r0,r0,LSL #2
00004c  4a06              LDR      r2,|L7.104|
00004e  eb021000          ADD      r0,r2,r0,LSL #4
000052  7001              STRB     r1,[r0,#0]
000054  f04f00a3          MOV      r0,#0xa3
                  |L7.88|
;;;1527           return RS274NGC_OK;
;;;1528       }
000058  bd10              POP      {r4,pc}
                  |L7.90|
00005a  2000              MOVS     r0,#0                 ;1527
00005c  e7fc              B        |L7.88|
;;;1529   
                          ENDP

00005e  0000              DCW      0x0000
                  |L7.96|
                          DCD      _setup+0xc000
                  |L7.100|
                          DCD      |symbol_number.446|
                  |L7.104|
                          DCD      _setup+0xb1ac

                          AREA ||i.check_other_codes||, CODE, READONLY, ALIGN=2

                  check_other_codes PROC
;;;1573   
;;;1574       static int check_other_codes(                 /* ARGUMENTS                               */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1575       block_pointer block)                          /* pointer to a block of RS274/NGC instructions */
;;;1576       {
000004  4607              MOV      r7,r0
;;;1577           static char name[] SET_TO "check_other_codes";
;;;1578           int motion;
;;;1579   
;;;1580           motion SET_TO block->motion_to_be;
000006  f8d70180          LDR      r0,[r7,#0x180]
00000a  4604              MOV      r4,r0
;;;1581   #ifdef AA
;;;1582           if (block->a_flag ISNT OFF)
;;;1583           {
;;;1584               CHK(((block->g_modes[1] > G_80) AND (block->g_modes[1] < G_90)),
;;;1585                   NCE_CANNOT_PUT_AN_A_IN_CANNED_CYCLE);
;;;1586           }
;;;1587   #endif
;;;1588   #ifdef BB
;;;1589           if (block->b_flag ISNT OFF)
;;;1590           {
;;;1591               CHK(((block->g_modes[1] > G_80) AND (block->g_modes[1] < G_90)),
;;;1592                   NCE_CANNOT_PUT_A_B_IN_CANNED_CYCLE);
;;;1593           }
;;;1594   #endif
;;;1595   #ifdef CC
;;;1596           if (block->c_flag ISNT OFF)
;;;1597           {
;;;1598               CHK(((block->g_modes[1] > G_80) AND (block->g_modes[1] < G_90)),
;;;1599                   NCE_CANNOT_PUT_A_C_IN_CANNED_CYCLE);
;;;1600           }
;;;1601   #endif
;;;1602           if (block->d_number ISNT -1)
00000c  f8d70100          LDR      r0,[r7,#0x100]
000010  1c40              ADDS     r0,r0,#1
000012  d033              BEQ      |L8.124|
;;;1603           {
;;;1604               CHK(((block->g_modes[7] ISNT G_41) AND (block->g_modes[7] ISNT G_42)),
000014  f44f7096          MOV      r0,#0x12c
000018  59c0              LDR      r0,[r0,r7]
00001a  f5b07fcd          CMP      r0,#0x19a
00001e  d02d              BEQ      |L8.124|
000020  f44f7096          MOV      r0,#0x12c
000024  59c0              LDR      r0,[r0,r7]
000026  f5b07fd2          CMP      r0,#0x1a4
00002a  d027              BEQ      |L8.124|
00002c  f04f0100          MOV      r1,#0
000030  48ea              LDR      r0,|L8.988|
000032  f8c0114c          STR      r1,[r0,#0x14c]
000036  4601              MOV      r1,r0
000038  f8d1314c          LDR      r3,[r1,#0x14c]
00003c  f8d1114c          LDR      r1,[r1,#0x14c]
000040  f1010101          ADD      r1,r1,#1
000044  4602              MOV      r2,r0
000046  f8c2114c          STR      r1,[r2,#0x14c]
00004a  eb030183          ADD      r1,r3,r3,LSL #2
00004e  f6a06254          SUB      r2,r0,#0xe54
000052  eb021101          ADD      r1,r2,r1,LSL #4
000056  4608              MOV      r0,r1
000058  49e1              LDR      r1,|L8.992|
00005a  f7fffffe          BL       strcpy
00005e  f04f0100          MOV      r1,#0
000062  48de              LDR      r0,|L8.988|
000064  f8d0014c          LDR      r0,[r0,#0x14c]
000068  eb000080          ADD      r0,r0,r0,LSL #2
00006c  4add              LDR      r2,|L8.996|
00006e  eb021000          ADD      r0,r2,r0,LSL #4
000072  7001              STRB     r1,[r0,#0]
000074  f04f0047          MOV      r0,#0x47
                  |L8.120|
;;;1605                   NCE_D_WORD_WITH_NO_G41_OR_G42);
;;;1606           }
;;;1607           if (block->h_number ISNT -1)
;;;1608           {
;;;1609               CHK((block->g_modes[8] ISNT G_43), NCE_H_WORD_WITH_NO_G43);
;;;1610           }
;;;1611   
;;;1612           if (block->i_flag IS ON)                  /* could still be useless if yz_plane arc */
;;;1613           {
;;;1614               CHK(((motion ISNT G_2) AND (motion ISNT G_3) AND (motion ISNT G_87)),
;;;1615                   NCE_I_WORD_WITH_NO_G2_OR_G3_OR_G87_TO_USE_IT);
;;;1616           }
;;;1617   
;;;1618           if (block->j_flag IS ON)                  /* could still be useless if xz_plane arc */
;;;1619           {
;;;1620               CHK(((motion ISNT G_2) AND (motion ISNT G_3) AND (motion ISNT G_87)),
;;;1621                   NCE_J_WORD_WITH_NO_G2_OR_G3_OR_G87_TO_USE_IT);
;;;1622           }
;;;1623   
;;;1624           if (block->k_flag IS ON)                  /* could still be useless if xy_plane arc */
;;;1625           {
;;;1626               CHK(((motion ISNT G_2) AND (motion ISNT G_3) AND (motion ISNT G_87)),
;;;1627                   NCE_K_WORD_WITH_NO_G2_OR_G3_OR_G87_TO_USE_IT);
;;;1628           }
;;;1629   
;;;1630           if (block->l_number ISNT -1)
;;;1631           {
;;;1632               CHK((((motion < G_81) OR (motion > G_89)) AND
;;;1633                   (block->g_modes[0] ISNT G_10)),
;;;1634                   NCE_L_WORD_WITH_NO_CANNED_CYCLE_OR_G10);
;;;1635           }
;;;1636   
;;;1637           if (block->p_number ISNT -1.0)
;;;1638           {
;;;1639               CHK(((block->g_modes[0] ISNT G_10) AND
;;;1640                   (block->g_modes[0] ISNT G_4) AND
;;;1641                   (motion ISNT G_82) AND (motion ISNT G_86) AND
;;;1642                   (motion ISNT G_88) AND (motion ISNT G_89)),
;;;1643                   NCE_P_WORD_WITH_NO_G4_G10_G82_G86_G88_G89);
;;;1644           }
;;;1645   
;;;1646           if (block->q_number ISNT -1.0)
;;;1647           {
;;;1648               CHK((motion ISNT G_83), NCE_Q_WORD_WITH_NO_G83);
;;;1649           }
;;;1650   
;;;1651           if (block->r_flag IS ON)
;;;1652           {
;;;1653               CHK((((motion ISNT G_2) AND (motion ISNT G_3)) AND
;;;1654                   ((motion < G_81) OR (motion > G_89))),
;;;1655                   NCE_R_WORD_WITH_NO_G_CODE_THAT_USES_IT);
;;;1656           }
;;;1657   
;;;1658           return RS274NGC_OK;
;;;1659       }
000078  e8bd81f0          POP      {r4-r8,pc}
                  |L8.124|
00007c  f8d70148          LDR      r0,[r7,#0x148]        ;1607
000080  1c40              ADDS     r0,r0,#1              ;1607
000082  d02b              BEQ      |L8.220|
000084  f44f7098          MOV      r0,#0x130             ;1609
000088  59c0              LDR      r0,[r0,r7]            ;1609
00008a  f5b07fd7          CMP      r0,#0x1ae             ;1609
00008e  d025              BEQ      |L8.220|
000090  f04f0100          MOV      r1,#0                 ;1609
000094  48d1              LDR      r0,|L8.988|
000096  f8c0114c          STR      r1,[r0,#0x14c]        ;1609
00009a  4601              MOV      r1,r0                 ;1609
00009c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1609
0000a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1609
0000a4  f1010101          ADD      r1,r1,#1              ;1609
0000a8  4602              MOV      r2,r0                 ;1609
0000aa  f8c2114c          STR      r1,[r2,#0x14c]        ;1609
0000ae  eb030183          ADD      r1,r3,r3,LSL #2       ;1609
0000b2  4acc              LDR      r2,|L8.996|
0000b4  eb021101          ADD      r1,r2,r1,LSL #4       ;1609
0000b8  4608              MOV      r0,r1                 ;1609
0000ba  49c9              LDR      r1,|L8.992|
0000bc  f7fffffe          BL       strcpy
0000c0  f04f0100          MOV      r1,#0                 ;1609
0000c4  48c5              LDR      r0,|L8.988|
0000c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1609
0000ca  eb000080          ADD      r0,r0,r0,LSL #2       ;1609
0000ce  4ac5              LDR      r2,|L8.996|
0000d0  eb021000          ADD      r0,r2,r0,LSL #4       ;1609
0000d4  7001              STRB     r1,[r0,#0]            ;1609
0000d6  f04f0055          MOV      r0,#0x55              ;1609
0000da  e7cd              B        |L8.120|
                  |L8.220|
0000dc  f8d7014c          LDR      r0,[r7,#0x14c]        ;1612
0000e0  2801              CMP      r0,#1                 ;1612
0000e2  d12d              BNE      |L8.320|
0000e4  2c14              CMP      r4,#0x14              ;1614
0000e6  d02b              BEQ      |L8.320|
0000e8  2c1e              CMP      r4,#0x1e              ;1614
0000ea  d029              BEQ      |L8.320|
0000ec  f5a47040          SUB      r0,r4,#0x300          ;1614
0000f0  3866              SUBS     r0,r0,#0x66           ;1614
0000f2  d025              BEQ      |L8.320|
0000f4  f04f0100          MOV      r1,#0                 ;1614
0000f8  48b8              LDR      r0,|L8.988|
0000fa  f8c0114c          STR      r1,[r0,#0x14c]        ;1614
0000fe  4601              MOV      r1,r0                 ;1614
000100  f8d1314c          LDR      r3,[r1,#0x14c]        ;1614
000104  f8d1114c          LDR      r1,[r1,#0x14c]        ;1614
000108  f1010101          ADD      r1,r1,#1              ;1614
00010c  4602              MOV      r2,r0                 ;1614
00010e  f8c2114c          STR      r1,[r2,#0x14c]        ;1614
000112  eb030183          ADD      r1,r3,r3,LSL #2       ;1614
000116  4ab3              LDR      r2,|L8.996|
000118  eb021101          ADD      r1,r2,r1,LSL #4       ;1614
00011c  4608              MOV      r0,r1                 ;1614
00011e  49b0              LDR      r1,|L8.992|
000120  f7fffffe          BL       strcpy
000124  f04f0100          MOV      r1,#0                 ;1614
000128  48ac              LDR      r0,|L8.988|
00012a  f8d0014c          LDR      r0,[r0,#0x14c]        ;1614
00012e  eb000080          ADD      r0,r0,r0,LSL #2       ;1614
000132  4aac              LDR      r2,|L8.996|
000134  eb021000          ADD      r0,r2,r0,LSL #4       ;1614
000138  7001              STRB     r1,[r0,#0]            ;1614
00013a  f04f0058          MOV      r0,#0x58              ;1614
00013e  e79b              B        |L8.120|
                  |L8.320|
000140  f8d70158          LDR      r0,[r7,#0x158]        ;1618
000144  2801              CMP      r0,#1                 ;1618
000146  d12d              BNE      |L8.420|
000148  2c14              CMP      r4,#0x14              ;1620
00014a  d02b              BEQ      |L8.420|
00014c  2c1e              CMP      r4,#0x1e              ;1620
00014e  d029              BEQ      |L8.420|
000150  f5a47040          SUB      r0,r4,#0x300          ;1620
000154  3866              SUBS     r0,r0,#0x66           ;1620
000156  d025              BEQ      |L8.420|
000158  f04f0100          MOV      r1,#0                 ;1620
00015c  489f              LDR      r0,|L8.988|
00015e  f8c0114c          STR      r1,[r0,#0x14c]        ;1620
000162  4601              MOV      r1,r0                 ;1620
000164  f8d1314c          LDR      r3,[r1,#0x14c]        ;1620
000168  f8d1114c          LDR      r1,[r1,#0x14c]        ;1620
00016c  f1010101          ADD      r1,r1,#1              ;1620
000170  4602              MOV      r2,r0                 ;1620
000172  f8c2114c          STR      r1,[r2,#0x14c]        ;1620
000176  eb030183          ADD      r1,r3,r3,LSL #2       ;1620
00017a  4a9a              LDR      r2,|L8.996|
00017c  eb021101          ADD      r1,r2,r1,LSL #4       ;1620
000180  4608              MOV      r0,r1                 ;1620
000182  4997              LDR      r1,|L8.992|
000184  f7fffffe          BL       strcpy
000188  f04f0100          MOV      r1,#0                 ;1620
00018c  4893              LDR      r0,|L8.988|
00018e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1620
000192  eb000080          ADD      r0,r0,r0,LSL #2       ;1620
000196  4a93              LDR      r2,|L8.996|
000198  eb021000          ADD      r0,r2,r0,LSL #4       ;1620
00019c  7001              STRB     r1,[r0,#0]            ;1620
00019e  f04f005b          MOV      r0,#0x5b              ;1620
0001a2  e769              B        |L8.120|
                  |L8.420|
0001a4  f8d70168          LDR      r0,[r7,#0x168]        ;1624
0001a8  2801              CMP      r0,#1                 ;1624
0001aa  d12d              BNE      |L8.520|
0001ac  2c14              CMP      r4,#0x14              ;1626
0001ae  d02b              BEQ      |L8.520|
0001b0  2c1e              CMP      r4,#0x1e              ;1626
0001b2  d029              BEQ      |L8.520|
0001b4  f5a47040          SUB      r0,r4,#0x300          ;1626
0001b8  3866              SUBS     r0,r0,#0x66           ;1626
0001ba  d025              BEQ      |L8.520|
0001bc  f04f0100          MOV      r1,#0                 ;1626
0001c0  4886              LDR      r0,|L8.988|
0001c2  f8c0114c          STR      r1,[r0,#0x14c]        ;1626
0001c6  4601              MOV      r1,r0                 ;1626
0001c8  f8d1314c          LDR      r3,[r1,#0x14c]        ;1626
0001cc  f8d1114c          LDR      r1,[r1,#0x14c]        ;1626
0001d0  f1010101          ADD      r1,r1,#1              ;1626
0001d4  4602              MOV      r2,r0                 ;1626
0001d6  f8c2114c          STR      r1,[r2,#0x14c]        ;1626
0001da  eb030183          ADD      r1,r3,r3,LSL #2       ;1626
0001de  4a81              LDR      r2,|L8.996|
0001e0  eb021101          ADD      r1,r2,r1,LSL #4       ;1626
0001e4  4608              MOV      r0,r1                 ;1626
0001e6  497e              LDR      r1,|L8.992|
0001e8  f7fffffe          BL       strcpy
0001ec  f04f0100          MOV      r1,#0                 ;1626
0001f0  487a              LDR      r0,|L8.988|
0001f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1626
0001f6  eb000080          ADD      r0,r0,r0,LSL #2       ;1626
0001fa  4a7a              LDR      r2,|L8.996|
0001fc  eb021000          ADD      r0,r2,r0,LSL #4       ;1626
000200  7001              STRB     r1,[r0,#0]            ;1626
000202  f04f005e          MOV      r0,#0x5e              ;1626
000206  e737              B        |L8.120|
                  |L8.520|
000208  f8d70178          LDR      r0,[r7,#0x178]        ;1630
00020c  1c40              ADDS     r0,r0,#1              ;1630
00020e  d031              BEQ      |L8.628|
000210  f240302a          MOV      r0,#0x32a             ;1632
000214  4284              CMP      r4,r0                 ;1632
000216  db03              BLT      |L8.544|
000218  f240307a          MOV      r0,#0x37a             ;1632
00021c  4284              CMP      r4,r0                 ;1632
00021e  dd29              BLE      |L8.628|
                  |L8.544|
000220  f8d70110          LDR      r0,[r7,#0x110]        ;1632
000224  2864              CMP      r0,#0x64              ;1632
000226  d025              BEQ      |L8.628|
000228  f04f0100          MOV      r1,#0                 ;1632
00022c  486b              LDR      r0,|L8.988|
00022e  f8c0114c          STR      r1,[r0,#0x14c]        ;1632
000232  4601              MOV      r1,r0                 ;1632
000234  f8d1314c          LDR      r3,[r1,#0x14c]        ;1632
000238  f8d1114c          LDR      r1,[r1,#0x14c]        ;1632
00023c  f1010101          ADD      r1,r1,#1              ;1632
000240  4602              MOV      r2,r0                 ;1632
000242  f8c2114c          STR      r1,[r2,#0x14c]        ;1632
000246  eb030183          ADD      r1,r3,r3,LSL #2       ;1632
00024a  4a66              LDR      r2,|L8.996|
00024c  eb021101          ADD      r1,r2,r1,LSL #4       ;1632
000250  4608              MOV      r0,r1                 ;1632
000252  4963              LDR      r1,|L8.992|
000254  f7fffffe          BL       strcpy
000258  f04f0100          MOV      r1,#0                 ;1632
00025c  485f              LDR      r0,|L8.988|
00025e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1632
000262  eb000080          ADD      r0,r0,r0,LSL #2       ;1632
000266  4a5f              LDR      r2,|L8.996|
000268  eb021000          ADD      r0,r2,r0,LSL #4       ;1632
00026c  7001              STRB     r1,[r0,#0]            ;1632
00026e  f04f005f          MOV      r0,#0x5f              ;1632
000272  e701              B        |L8.120|
                  |L8.628|
000274  f8d711b0          LDR      r1,[r7,#0x1b0]        ;1637
000278  460d              MOV      r5,r1                 ;1637
00027a  f8d701b4          LDR      r0,[r7,#0x1b4]        ;1637
00027e  4606              MOV      r6,r0                 ;1637
000280  2200              MOVS     r2,#0                 ;1637
000282  4b59              LDR      r3,|L8.1000|
000284  4628              MOV      r0,r5                 ;1637
000286  4631              MOV      r1,r6                 ;1637
000288  f7fffffe          BL       __aeabi_cdcmpeq
00028c  d03a              BEQ      |L8.772|
00028e  f8d70110          LDR      r0,[r7,#0x110]        ;1639
000292  2864              CMP      r0,#0x64              ;1639
000294  d036              BEQ      |L8.772|
000296  f8d70110          LDR      r0,[r7,#0x110]        ;1639
00029a  2828              CMP      r0,#0x28              ;1639
00029c  d032              BEQ      |L8.772|
00029e  f5b47f4d          CMP      r4,#0x334             ;1639
0002a2  d02f              BEQ      |L8.772|
0002a4  f5b47f57          CMP      r4,#0x35c             ;1639
0002a8  d02c              BEQ      |L8.772|
0002aa  f5b47f5c          CMP      r4,#0x370             ;1639
0002ae  d029              BEQ      |L8.772|
0002b0  f5a47040          SUB      r0,r4,#0x300          ;1639
0002b4  387a              SUBS     r0,r0,#0x7a           ;1639
0002b6  d025              BEQ      |L8.772|
0002b8  f04f0100          MOV      r1,#0                 ;1639
0002bc  4847              LDR      r0,|L8.988|
0002be  f8c0114c          STR      r1,[r0,#0x14c]        ;1639
0002c2  4601              MOV      r1,r0                 ;1639
0002c4  f8d1314c          LDR      r3,[r1,#0x14c]        ;1639
0002c8  f8d1114c          LDR      r1,[r1,#0x14c]        ;1639
0002cc  f1010101          ADD      r1,r1,#1              ;1639
0002d0  4602              MOV      r2,r0                 ;1639
0002d2  f8c2114c          STR      r1,[r2,#0x14c]        ;1639
0002d6  eb030183          ADD      r1,r3,r3,LSL #2       ;1639
0002da  4a42              LDR      r2,|L8.996|
0002dc  eb021101          ADD      r1,r2,r1,LSL #4       ;1639
0002e0  4608              MOV      r0,r1                 ;1639
0002e2  493f              LDR      r1,|L8.992|
0002e4  f7fffffe          BL       strcpy
0002e8  f04f0100          MOV      r1,#0                 ;1639
0002ec  483b              LDR      r0,|L8.988|
0002ee  f8d0014c          LDR      r0,[r0,#0x14c]        ;1639
0002f2  eb000080          ADD      r0,r0,r0,LSL #2       ;1639
0002f6  4a3b              LDR      r2,|L8.996|
0002f8  eb021000          ADD      r0,r2,r0,LSL #4       ;1639
0002fc  7001              STRB     r1,[r0,#0]            ;1639
0002fe  f04f008c          MOV      r0,#0x8c              ;1639
000302  e6b9              B        |L8.120|
                  |L8.772|
000304  f50770dc          ADD      r0,r7,#0x1b8          ;1646
000308  c803              LDM      r0,{r0,r1}            ;1646
00030a  4605              MOV      r5,r0                 ;1646
00030c  2200              MOVS     r2,#0                 ;1646
00030e  4b36              LDR      r3,|L8.1000|
000310  f7fffffe          BL       __aeabi_cdcmpeq
000314  d029              BEQ      |L8.874|
000316  f5a47040          SUB      r0,r4,#0x300          ;1648
00031a  383e              SUBS     r0,r0,#0x3e           ;1648
00031c  d025              BEQ      |L8.874|
00031e  f04f0100          MOV      r1,#0                 ;1648
000322  482e              LDR      r0,|L8.988|
000324  f8c0114c          STR      r1,[r0,#0x14c]        ;1648
000328  4601              MOV      r1,r0                 ;1648
00032a  f8d1314c          LDR      r3,[r1,#0x14c]        ;1648
00032e  f8d1114c          LDR      r1,[r1,#0x14c]        ;1648
000332  f1010101          ADD      r1,r1,#1              ;1648
000336  4602              MOV      r2,r0                 ;1648
000338  f8c2114c          STR      r1,[r2,#0x14c]        ;1648
00033c  eb030183          ADD      r1,r3,r3,LSL #2       ;1648
000340  4a28              LDR      r2,|L8.996|
000342  eb021101          ADD      r1,r2,r1,LSL #4       ;1648
000346  4608              MOV      r0,r1                 ;1648
000348  4925              LDR      r1,|L8.992|
00034a  f7fffffe          BL       strcpy
00034e  f04f0100          MOV      r1,#0                 ;1648
000352  4822              LDR      r0,|L8.988|
000354  f8d0014c          LDR      r0,[r0,#0x14c]        ;1648
000358  eb000080          ADD      r0,r0,r0,LSL #2       ;1648
00035c  4a21              LDR      r2,|L8.996|
00035e  eb021000          ADD      r0,r2,r0,LSL #4       ;1648
000362  7001              STRB     r1,[r0,#0]            ;1648
000364  f04f0090          MOV      r0,#0x90              ;1648
000368  e686              B        |L8.120|
                  |L8.874|
00036a  f8d701c0          LDR      r0,[r7,#0x1c0]        ;1651
00036e  2801              CMP      r0,#1                 ;1651
000370  d131              BNE      |L8.982|
000372  2c14              CMP      r4,#0x14              ;1653
000374  d02f              BEQ      |L8.982|
000376  2c1e              CMP      r4,#0x1e              ;1653
000378  d02d              BEQ      |L8.982|
00037a  f240302a          MOV      r0,#0x32a             ;1653
00037e  4284              CMP      r4,r0                 ;1653
000380  db03              BLT      |L8.906|
000382  f240307a          MOV      r0,#0x37a             ;1653
000386  4284              CMP      r4,r0                 ;1653
000388  dd25              BLE      |L8.982|
                  |L8.906|
00038a  f04f0100          MOV      r1,#0                 ;1653
00038e  4813              LDR      r0,|L8.988|
000390  f8c0114c          STR      r1,[r0,#0x14c]        ;1653
000394  4601              MOV      r1,r0                 ;1653
000396  f8d1314c          LDR      r3,[r1,#0x14c]        ;1653
00039a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1653
00039e  f1010101          ADD      r1,r1,#1              ;1653
0003a2  4602              MOV      r2,r0                 ;1653
0003a4  f8c2114c          STR      r1,[r2,#0x14c]        ;1653
0003a8  eb030183          ADD      r1,r3,r3,LSL #2       ;1653
0003ac  4a0d              LDR      r2,|L8.996|
0003ae  eb021101          ADD      r1,r2,r1,LSL #4       ;1653
0003b2  4608              MOV      r0,r1                 ;1653
0003b4  490a              LDR      r1,|L8.992|
0003b6  f7fffffe          BL       strcpy
0003ba  f04f0100          MOV      r1,#0                 ;1653
0003be  4807              LDR      r0,|L8.988|
0003c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1653
0003c4  eb000080          ADD      r0,r0,r0,LSL #2       ;1653
0003c8  4a06              LDR      r2,|L8.996|
0003ca  eb021000          ADD      r0,r2,r0,LSL #4       ;1653
0003ce  7001              STRB     r1,[r0,#0]            ;1653
0003d0  f04f0097          MOV      r0,#0x97              ;1653
0003d4  e650              B        |L8.120|
                  |L8.982|
0003d6  2000              MOVS     r0,#0                 ;1658
0003d8  e64e              B        |L8.120|
;;;1660   
                          ENDP

0003da  0000              DCW      0x0000
                  |L8.988|
                          DCD      _setup+0xc000
                  |L8.992|
                          DCD      |symbol_number.447|
                  |L8.996|
                          DCD      _setup+0xb1ac
                  |L8.1000|
                          DCD      0xbff00000

                          AREA ||i.close_and_downcase||, CODE, READONLY, ALIGN=2

                  close_and_downcase PROC
;;;1702   
;;;1703       static int close_and_downcase(                /* ARGUMENTS                   */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1704       char * line)                                  /* string: one line of NC code */
;;;1705       {
000004  4605              MOV      r5,r0
;;;1706           static char name[] SET_TO "close_and_downcase";
;;;1707           int m;
;;;1708           int n;
;;;1709           int comment;
;;;1710           char item;
;;;1711           comment SET_TO 0;
000006  f04f0000          MOV      r0,#0
00000a  4680              MOV      r8,r0
;;;1712           for (n SET_TO 0, m SET_TO 0; (item SET_TO line[m]) ISNT (char) NULL; m++)
00000c  4606              MOV      r6,r0
00000e  4607              MOV      r7,r0
000010  e088              B        |L9.292|
                  |L9.18|
;;;1713           {
;;;1714               if (comment)
000012  f1b80f00          CMP      r8,#0
000016  d034              BEQ      |L9.130|
;;;1715               {
;;;1716                   line[n++] SET_TO item;
000018  4630              MOV      r0,r6
00001a  f1060101          ADD      r1,r6,#1
00001e  460e              MOV      r6,r1
000020  542c              STRB     r4,[r5,r0]
;;;1717                   if (item IS ')')
000022  2c29              CMP      r4,#0x29
000024  d103              BNE      |L9.46|
;;;1718                   {
;;;1719                       comment SET_TO 0;
000026  f04f0000          MOV      r0,#0
00002a  4680              MOV      r8,r0
00002c  e077              B        |L9.286|
                  |L9.46|
;;;1720                   }
;;;1721                   else if (item IS '(')
00002e  2c28              CMP      r4,#0x28
000030  d175              BNE      |L9.286|
;;;1722                       ERM(NCE_NESTED_COMMENT_FOUND);
000032  f04f0100          MOV      r1,#0
000036  4853              LDR      r0,|L9.388|
000038  f8c0114c          STR      r1,[r0,#0x14c]
00003c  4601              MOV      r1,r0
00003e  f8d1314c          LDR      r3,[r1,#0x14c]
000042  f8d1114c          LDR      r1,[r1,#0x14c]
000046  f1010101          ADD      r1,r1,#1
00004a  4602              MOV      r2,r0
00004c  f8c2114c          STR      r1,[r2,#0x14c]
000050  eb030183          ADD      r1,r3,r3,LSL #2
000054  f6a06254          SUB      r2,r0,#0xe54
000058  eb021101          ADD      r1,r2,r1,LSL #4
00005c  4608              MOV      r0,r1
00005e  494a              LDR      r1,|L9.392|
000060  f7fffffe          BL       strcpy
000064  f04f0100          MOV      r1,#0
000068  4846              LDR      r0,|L9.388|
00006a  f8d0014c          LDR      r0,[r0,#0x14c]
00006e  eb000080          ADD      r0,r0,r0,LSL #2
000072  4a46              LDR      r2,|L9.396|
000074  eb021000          ADD      r0,r2,r0,LSL #4
000078  7001              STRB     r1,[r0,#0]
00007a  f04f0084          MOV      r0,#0x84
                  |L9.126|
;;;1723               }
;;;1724               else if ((item IS ' ') OR (item IS '\t') OR (item IS '\r'));
;;;1725      /* don't copy blank or tab or CR */
;;;1726               else if (item IS '\n')                /* don't copy newline            */
;;;1727               {                                     /* but check null follows        */
;;;1728                   CHK((line[m+1] ISNT 0), NCE_NULL_MISSING_AFTER_NEWLINE);
;;;1729               }
;;;1730               else if ((64 < item) AND (item < 91)) /* downcase upper case letters */
;;;1731               {
;;;1732                   line[n++] SET_TO (32 + item);
;;;1733               }
;;;1734               else if (item IS '(')                 /* comment is starting */
;;;1735               {
;;;1736                   comment SET_TO 1;
;;;1737                   line[n++] SET_TO item;
;;;1738               }
;;;1739               else
;;;1740               {
;;;1741                   line[n++] SET_TO item;            /* copy anything else */
;;;1742               }
;;;1743           }
;;;1744           CHK((comment), NCE_UNCLOSED_COMMENT_FOUND);
;;;1745           line[n] SET_TO 0;
;;;1746           return RS274NGC_OK;
;;;1747       }
00007e  e8bd81f0          POP      {r4-r8,pc}
                  |L9.130|
000082  2c20              CMP      r4,#0x20              ;1724
000084  d04b              BEQ      |L9.286|
000086  2c09              CMP      r4,#9                 ;1724
000088  d049              BEQ      |L9.286|
00008a  2c0d              CMP      r4,#0xd               ;1724
00008c  d047              BEQ      |L9.286|
00008e  2c0a              CMP      r4,#0xa               ;1726
000090  d128              BNE      |L9.228|
000092  1c78              ADDS     r0,r7,#1              ;1728
000094  5c28              LDRB     r0,[r5,r0]            ;1728
000096  b388              CBZ      r0,|L9.252|
000098  f04f0100          MOV      r1,#0                 ;1728
00009c  4839              LDR      r0,|L9.388|
00009e  f8c0114c          STR      r1,[r0,#0x14c]        ;1728
0000a2  4601              MOV      r1,r0                 ;1728
0000a4  f8d1314c          LDR      r3,[r1,#0x14c]        ;1728
0000a8  f8d1114c          LDR      r1,[r1,#0x14c]        ;1728
0000ac  f1010101          ADD      r1,r1,#1              ;1728
0000b0  4602              MOV      r2,r0                 ;1728
0000b2  f8c2114c          STR      r1,[r2,#0x14c]        ;1728
0000b6  eb030183          ADD      r1,r3,r3,LSL #2       ;1728
0000ba  4a34              LDR      r2,|L9.396|
0000bc  eb021101          ADD      r1,r2,r1,LSL #4       ;1728
0000c0  4608              MOV      r0,r1                 ;1728
0000c2  4931              LDR      r1,|L9.392|
0000c4  f7fffffe          BL       strcpy
0000c8  f04f0100          MOV      r1,#0                 ;1728
0000cc  482d              LDR      r0,|L9.388|
0000ce  f8d0014c          LDR      r0,[r0,#0x14c]        ;1728
0000d2  eb000080          ADD      r0,r0,r0,LSL #2       ;1728
0000d6  4a2d              LDR      r2,|L9.396|
0000d8  eb021000          ADD      r0,r2,r0,LSL #4       ;1728
0000dc  7001              STRB     r1,[r0,#0]            ;1728
0000de  f04f0088          MOV      r0,#0x88              ;1728
0000e2  e7cc              B        |L9.126|
                  |L9.228|
0000e4  2c40              CMP      r4,#0x40              ;1730
0000e6  dd0a              BLE      |L9.254|
0000e8  2c5b              CMP      r4,#0x5b              ;1730
0000ea  da08              BGE      |L9.254|
0000ec  f1040020          ADD      r0,r4,#0x20           ;1732
0000f0  b2c2              UXTB     r2,r0                 ;1732
0000f2  4630              MOV      r0,r6                 ;1732
0000f4  f1060101          ADD      r1,r6,#1              ;1732
0000f8  460e              MOV      r6,r1                 ;1732
0000fa  542a              STRB     r2,[r5,r0]            ;1732
                  |L9.252|
0000fc  e00f              B        |L9.286|
                  |L9.254|
0000fe  2c28              CMP      r4,#0x28              ;1734
000100  d108              BNE      |L9.276|
000102  f04f0001          MOV      r0,#1                 ;1736
000106  4680              MOV      r8,r0                 ;1736
000108  4630              MOV      r0,r6                 ;1737
00010a  f1060101          ADD      r1,r6,#1              ;1737
00010e  460e              MOV      r6,r1                 ;1737
000110  542c              STRB     r4,[r5,r0]            ;1737
000112  e004              B        |L9.286|
                  |L9.276|
000114  4630              MOV      r0,r6                 ;1741
000116  f1060101          ADD      r1,r6,#1              ;1741
00011a  460e              MOV      r6,r1                 ;1741
00011c  542c              STRB     r4,[r5,r0]            ;1741
                  |L9.286|
00011e  f1070001          ADD      r0,r7,#1              ;1712
000122  4607              MOV      r7,r0                 ;1712
                  |L9.292|
000124  5dec              LDRB     r4,[r5,r7]            ;1712
000126  2c00              CMP      r4,#0                 ;1712
000128  f47faf73          BNE      |L9.18|
00012c  f1b80f00          CMP      r8,#0                 ;1744
000130  d023              BEQ      |L9.378|
000132  4621              MOV      r1,r4                 ;1744
000134  4813              LDR      r0,|L9.388|
000136  f8c0114c          STR      r1,[r0,#0x14c]        ;1744
00013a  4601              MOV      r1,r0                 ;1744
00013c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1744
000140  f8d1114c          LDR      r1,[r1,#0x14c]        ;1744
000144  f1010101          ADD      r1,r1,#1              ;1744
000148  4602              MOV      r2,r0                 ;1744
00014a  f8c2114c          STR      r1,[r2,#0x14c]        ;1744
00014e  eb030183          ADD      r1,r3,r3,LSL #2       ;1744
000152  4a0e              LDR      r2,|L9.396|
000154  eb021101          ADD      r1,r2,r1,LSL #4       ;1744
000158  4608              MOV      r0,r1                 ;1744
00015a  490b              LDR      r1,|L9.392|
00015c  f7fffffe          BL       strcpy
000160  4621              MOV      r1,r4                 ;1744
000162  4808              LDR      r0,|L9.388|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;1744
000168  eb000080          ADD      r0,r0,r0,LSL #2       ;1744
00016c  4a07              LDR      r2,|L9.396|
00016e  eb021000          ADD      r0,r2,r0,LSL #4       ;1744
000172  7001              STRB     r1,[r0,#0]            ;1744
000174  f04f00ab          MOV      r0,#0xab              ;1744
000178  e781              B        |L9.126|
                  |L9.378|
00017a  f04f0000          MOV      r0,#0                 ;1745
00017e  55a8              STRB     r0,[r5,r6]            ;1745
000180  bf00              NOP                            ;1746
000182  e77c              B        |L9.126|
;;;1748   
                          ENDP

                  |L9.388|
                          DCD      _setup+0xc000
                  |L9.392|
                          DCD      |symbol_number.448|
                  |L9.396|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc||, CODE, READONLY, ALIGN=2

                  convert_arc PROC
;;;1802   
;;;1803       static int convert_arc(                       /* ARGUMENTS                                */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1804       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)     */
;;;1805       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;1806       setup_pointer settings)                       /* pointer to machine settings              */
;;;1807       {
000004  b093              SUB      sp,sp,#0x4c
000006  4682              MOV      r10,r0
000008  460c              MOV      r4,r1
00000a  4615              MOV      r5,r2
;;;1808           static char name[] SET_TO "convert_arc";
;;;1809           int status;
;;;1810           int first;                                /* flag set ON if this is first move after comp ON */
;;;1811           int ijk_flag;                             /* flag set ON if any of i,j,k present in NC code  */
;;;1812           double end_x;
;;;1813           double end_y;
;;;1814           double end_z;
;;;1815   #ifdef AA
;;;1816           double AA_end;                            /*AA*/
;;;1817   #endif
;;;1818   #ifdef BB
;;;1819           double BB_end;                            /*BB*/
;;;1820   #endif
;;;1821   #ifdef CC
;;;1822           double CC_end;                            /*CC*/
;;;1823   #endif
;;;1824   
;;;1825           ijk_flag SET_TO
00000c  f8d4014c          LDR      r0,[r4,#0x14c]
000010  b928              CBNZ     r0,|L10.30|
;;;1826               ((block->i_flag OR block->j_flag) OR block->k_flag) ? ON : OFF;
000012  f8d40158          LDR      r0,[r4,#0x158]
000016  b910              CBNZ     r0,|L10.30|
000018  f8d40168          LDR      r0,[r4,#0x168]
00001c  b110              CBZ      r0,|L10.36|
                  |L10.30|
00001e  f04f0001          MOV      r0,#1
000022  e001              B        |L10.40|
                  |L10.36|
000024  f04f0000          MOV      r0,#0
                  |L10.40|
000028  4681              MOV      r9,r0
;;;1827           first SET_TO (settings->program_x IS UNKNOWN);
00002a  f5054130          ADD      r1,r5,#0xb000
00002e  f50171bc          ADD      r1,r1,#0x178
000032  c903              LDM      r1,{r0,r1}
000034  4606              MOV      r6,r0
000036  4afb              LDR      r2,|L10.1060|
000038  4bfb              LDR      r3,|L10.1064|
00003a  f7fffffe          BL       __aeabi_cdcmpeq
00003e  d102              BNE      |L10.70|
000040  f04f0001          MOV      r0,#1
000044  e001              B        |L10.74|
                  |L10.70|
000046  f04f0000          MOV      r0,#0
                  |L10.74|
00004a  4683              MOV      r11,r0
;;;1828   
;;;1829           CHK(((block->r_flag ISNT ON) AND (ijk_flag ISNT ON)),
00004c  f8d401c0          LDR      r0,[r4,#0x1c0]
000050  2801              CMP      r0,#1
000052  d02b              BEQ      |L10.172|
000054  f1b90f01          CMP      r9,#1
000058  d028              BEQ      |L10.172|
00005a  f04f0100          MOV      r1,#0
00005e  48f3              LDR      r0,|L10.1068|
000060  f8c0114c          STR      r1,[r0,#0x14c]
000064  4601              MOV      r1,r0
000066  f8d1314c          LDR      r3,[r1,#0x14c]
00006a  f8d1114c          LDR      r1,[r1,#0x14c]
00006e  f1010101          ADD      r1,r1,#1
000072  4602              MOV      r2,r0
000074  f8c2114c          STR      r1,[r2,#0x14c]
000078  eb030183          ADD      r1,r3,r3,LSL #2
00007c  f6a06254          SUB      r2,r0,#0xe54
000080  eb021101          ADD      r1,r2,r1,LSL #4
000084  4608              MOV      r0,r1
000086  49ea              LDR      r1,|L10.1072|
000088  f7fffffe          BL       strcpy
00008c  f04f0100          MOV      r1,#0
000090  48e6              LDR      r0,|L10.1068|
000092  f8d0014c          LDR      r0,[r0,#0x14c]
000096  eb000080          ADD      r0,r0,r0,LSL #2
00009a  4ae6              LDR      r2,|L10.1076|
00009c  eb021000          ADD      r0,r2,r0,LSL #4
0000a0  7001              STRB     r1,[r0,#0]
0000a2  f04f0093          MOV      r0,#0x93
                  |L10.166|
;;;1830               NCE_R_I_J_K_WORDS_ALL_MISSING_FOR_ARC);
;;;1831           CHK(((block->r_flag IS ON) AND (ijk_flag IS ON)),
;;;1832               NCE_MIXED_RADIUS_IJK_FORMAT_FOR_ARC);
;;;1833           if (settings->feed_mode IS UNITS_PER_MINUTE)
;;;1834           {
;;;1835               CHK((settings->feed_rate IS 0.0),
;;;1836                   NCE_CANNOT_MAKE_ARC_WITH_ZERO_FEED_RATE);
;;;1837           }
;;;1838           else if (settings->feed_mode IS INVERSE_TIME)
;;;1839           {
;;;1840               CHK((block->f_number IS -1.0),
;;;1841                   NCE_F_WORD_MISSING_WITH_INVERSE_TIME_ARC_MOVE);
;;;1842           }
;;;1843           if (ijk_flag)
;;;1844           {
;;;1845               if (settings->plane IS CANON_PLANE_XY)
;;;1846               {
;;;1847                   CHK((block->k_flag), NCE_K_WORD_GIVEN_FOR_ARC_IN_XY_PLANE);
;;;1848                   if (block->i_flag IS OFF)         /* i or j flag on to get here */
;;;1849                       block->i_number SET_TO 0.0;
;;;1850                   else if (block->j_flag IS OFF)
;;;1851                       block->j_number SET_TO 0.0;
;;;1852               }
;;;1853               else if (settings->plane IS CANON_PLANE_YZ)
;;;1854               {
;;;1855                   CHK((block->i_flag), NCE_I_WORD_GIVEN_FOR_ARC_IN_YZ_PLANE);
;;;1856                   if (block->j_flag IS OFF)         /* j or k flag on to get here */
;;;1857                       block->j_number SET_TO 0.0;
;;;1858                   else if (block->k_flag IS OFF)
;;;1859                       block->k_number SET_TO 0.0;
;;;1860               }
;;;1861               else if (settings->plane IS CANON_PLANE_XZ)
;;;1862               {
;;;1863                   CHK((block->j_flag), NCE_J_WORD_GIVEN_FOR_ARC_IN_XZ_PLANE);
;;;1864                   if (block->i_flag IS OFF)         /* i or k flag on to get here */
;;;1865                       block->i_number SET_TO 0.0;
;;;1866                   else if (block->k_flag IS OFF)
;;;1867                       block->k_number SET_TO 0.0;
;;;1868               }
;;;1869               else
;;;1870                   ERM(NCE_BUG_PLANE_NOT_XY_YZ_OR_XZ);
;;;1871           }
;;;1872           else;                                     /* r format arc; no other checks needed specific to this format */
;;;1873   
;;;1874           if (settings->plane IS CANON_PLANE_XY)    /* checks for both formats */
;;;1875           {
;;;1876               CHK(((block->x_flag IS OFF) AND (block->y_flag IS OFF)),
;;;1877                   NCE_X_AND_Y_WORDS_MISSING_FOR_ARC_IN_XY_PLANE);
;;;1878           }
;;;1879           else if (settings->plane IS CANON_PLANE_YZ)
;;;1880           {
;;;1881               CHK(((block->y_flag IS OFF) AND (block->z_flag IS OFF)),
;;;1882                   NCE_Y_AND_Z_WORDS_MISSING_FOR_ARC_IN_YZ_PLANE);
;;;1883           }
;;;1884           else if (settings->plane IS CANON_PLANE_XZ)
;;;1885           {
;;;1886               CHK(((block->x_flag IS OFF) AND (block->z_flag IS OFF)),
;;;1887                   NCE_X_AND_Z_WORDS_MISSING_FOR_ARC_IN_XZ_PLANE);
;;;1888           }
;;;1889   
;;;1890           find_ends(block, settings, &end_x, &end_y,
;;;1891               &end_z
;;;1892       #ifdef AA
;;;1893               , &AA_end
;;;1894       #endif
;;;1895   
;;;1896       #ifdef BB
;;;1897               , &BB_end
;;;1898       #endif
;;;1899   
;;;1900       #ifdef CC
;;;1901               , &CC_end
;;;1902       #endif
;;;1903               );
;;;1904           settings->motion_mode SET_TO move;
;;;1905   
;;;1906           if (settings->plane IS CANON_PLANE_XY)
;;;1907           {
;;;1908               if ((settings->cutter_comp_side IS OFF) OR
;;;1909                   (settings->cutter_comp_radius IS 0.0))
;;;1910               {
;;;1911                   status SET_TO
;;;1912                       convert_arc2(move, block, settings,
;;;1913                       &(settings->current_x), &(settings->current_y),
;;;1914                       &(settings->current_z), end_x, end_y,
;;;1915                       end_z
;;;1916       #ifdef AA
;;;1917                       , AA_end
;;;1918       #endif
;;;1919   
;;;1920       #ifdef BB
;;;1921                       , BB_end
;;;1922       #endif
;;;1923   
;;;1924       #ifdef CC
;;;1925                       , CC_end
;;;1926       #endif
;;;1927                       , block->i_number,
;;;1928                       block->j_number);
;;;1929                   CHP(status);
;;;1930               }
;;;1931               else if (first)
;;;1932               {
;;;1933                   status SET_TO
;;;1934                       convert_arc_comp1(move, block, settings, end_x, end_y,
;;;1935                       end_z
;;;1936       #ifdef AA
;;;1937                       , AA_end
;;;1938       #endif
;;;1939   
;;;1940       #ifdef BB
;;;1941                       , BB_end
;;;1942       #endif
;;;1943   
;;;1944       #ifdef CC
;;;1945                       , CC_end
;;;1946       #endif
;;;1947                       );
;;;1948                   CHP(status);
;;;1949               }
;;;1950               else
;;;1951               {
;;;1952                   status SET_TO
;;;1953                       convert_arc_comp2(move, block, settings, end_x, end_y,
;;;1954                       end_z
;;;1955       #ifdef AA
;;;1956                       , AA_end
;;;1957       #endif
;;;1958   
;;;1959       #ifdef BB
;;;1960                       , BB_end
;;;1961       #endif
;;;1962   
;;;1963       #ifdef CC
;;;1964                       , CC_end
;;;1965       #endif
;;;1966                       );
;;;1967   
;;;1968                   CHP(status);
;;;1969               }
;;;1970           }
;;;1971           else if (settings->plane IS CANON_PLANE_XZ)
;;;1972           {
;;;1973               status SET_TO
;;;1974                   convert_arc2 (move, block, settings,
;;;1975                   &(settings->current_z), &(settings->current_x),
;;;1976                   &(settings->current_y), end_z, end_x,
;;;1977                   end_y
;;;1978       #ifdef AA
;;;1979                   , AA_end
;;;1980       #endif
;;;1981   
;;;1982       #ifdef BB
;;;1983                   , BB_end
;;;1984       #endif
;;;1985   
;;;1986       #ifdef CC
;;;1987                   , CC_end
;;;1988       #endif
;;;1989                   , block->k_number,
;;;1990                   block->i_number);
;;;1991               CHP(status);
;;;1992           }
;;;1993           else if (settings->plane IS CANON_PLANE_YZ)
;;;1994           {
;;;1995               status SET_TO
;;;1996                   convert_arc2 (move, block, settings,
;;;1997                   &(settings->current_y), &(settings->current_z),
;;;1998                   &(settings->current_x), end_y, end_z,
;;;1999                   end_x
;;;2000       #ifdef AA
;;;2001                   , AA_end
;;;2002       #endif
;;;2003   
;;;2004       #ifdef BB
;;;2005                   , BB_end
;;;2006       #endif
;;;2007   
;;;2008       #ifdef CC
;;;2009                   , CC_end
;;;2010       #endif
;;;2011                   , block->j_number,
;;;2012                   block->k_number);
;;;2013               CHP(status);
;;;2014           }
;;;2015           else
;;;2016               ERM(NCE_BUG_PLANE_NOT_XY_YZ_OR_XZ);
;;;2017           return RS274NGC_OK;
;;;2018       }
0000a6  b013              ADD      sp,sp,#0x4c
0000a8  e8bd8ff0          POP      {r4-r11,pc}
                  |L10.172|
0000ac  f8d401c0          LDR      r0,[r4,#0x1c0]        ;1831
0000b0  2801              CMP      r0,#1                 ;1831
0000b2  d128              BNE      |L10.262|
0000b4  f1b90f01          CMP      r9,#1                 ;1831
0000b8  d125              BNE      |L10.262|
0000ba  f04f0100          MOV      r1,#0                 ;1831
0000be  48db              LDR      r0,|L10.1068|
0000c0  f8c0114c          STR      r1,[r0,#0x14c]        ;1831
0000c4  4601              MOV      r1,r0                 ;1831
0000c6  f8d1314c          LDR      r3,[r1,#0x14c]        ;1831
0000ca  f8d1114c          LDR      r1,[r1,#0x14c]        ;1831
0000ce  f1010101          ADD      r1,r1,#1              ;1831
0000d2  4602              MOV      r2,r0                 ;1831
0000d4  f8c2114c          STR      r1,[r2,#0x14c]        ;1831
0000d8  eb030183          ADD      r1,r3,r3,LSL #2       ;1831
0000dc  4ad5              LDR      r2,|L10.1076|
0000de  eb021101          ADD      r1,r2,r1,LSL #4       ;1831
0000e2  4608              MOV      r0,r1                 ;1831
0000e4  49d2              LDR      r1,|L10.1072|
0000e6  f7fffffe          BL       strcpy
0000ea  f04f0100          MOV      r1,#0                 ;1831
0000ee  48cf              LDR      r0,|L10.1068|
0000f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1831
0000f4  eb000080          ADD      r0,r0,r0,LSL #2       ;1831
0000f8  4ace              LDR      r2,|L10.1076|
0000fa  eb021000          ADD      r0,r2,r0,LSL #4       ;1831
0000fe  7001              STRB     r1,[r0,#0]            ;1831
000100  f04f0065          MOV      r0,#0x65              ;1831
000104  e7cf              B        |L10.166|
                  |L10.262|
000106  f8d503fc          LDR      r0,[r5,#0x3fc]        ;1833
00010a  bb90              CBNZ     r0,|L10.370|
00010c  f8d51408          LDR      r1,[r5,#0x408]        ;1835
000110  460e              MOV      r6,r1                 ;1835
000112  f8d5040c          LDR      r0,[r5,#0x40c]        ;1835
000116  4607              MOV      r7,r0                 ;1835
000118  2200              MOVS     r2,#0                 ;1835
00011a  4613              MOV      r3,r2                 ;1835
00011c  4630              MOV      r0,r6                 ;1835
00011e  4639              MOV      r1,r7                 ;1835
000120  f7fffffe          BL       __aeabi_cdcmpeq
000124  d15d              BNE      |L10.482|
000126  f04f0100          MOV      r1,#0                 ;1835
00012a  48c0              LDR      r0,|L10.1068|
00012c  f8c0114c          STR      r1,[r0,#0x14c]        ;1835
000130  4601              MOV      r1,r0                 ;1835
000132  f8d1314c          LDR      r3,[r1,#0x14c]        ;1835
000136  f8d1114c          LDR      r1,[r1,#0x14c]        ;1835
00013a  f1010101          ADD      r1,r1,#1              ;1835
00013e  4602              MOV      r2,r0                 ;1835
000140  f8c2114c          STR      r1,[r2,#0x14c]        ;1835
000144  eb030183          ADD      r1,r3,r3,LSL #2       ;1835
000148  4aba              LDR      r2,|L10.1076|
00014a  eb021101          ADD      r1,r2,r1,LSL #4       ;1835
00014e  4608              MOV      r0,r1                 ;1835
000150  49b7              LDR      r1,|L10.1072|
000152  f7fffffe          BL       strcpy
000156  f04f0100          MOV      r1,#0                 ;1835
00015a  48b4              LDR      r0,|L10.1068|
00015c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1835
000160  eb000080          ADD      r0,r0,r0,LSL #2       ;1835
000164  4ab3              LDR      r2,|L10.1076|
000166  eb021000          ADD      r0,r2,r0,LSL #4       ;1835
00016a  7001              STRB     r1,[r0,#0]            ;1835
00016c  f04f002b          MOV      r0,#0x2b              ;1835
000170  e799              B        |L10.166|
                  |L10.370|
000172  e7ff              B        |L10.372|
                  |L10.372|
000174  f8d503fc          LDR      r0,[r5,#0x3fc]        ;1838
000178  2801              CMP      r0,#1                 ;1838
00017a  d132              BNE      |L10.482|
00017c  f8d41108          LDR      r1,[r4,#0x108]        ;1840
000180  460e              MOV      r6,r1                 ;1840
000182  f8d4010c          LDR      r0,[r4,#0x10c]        ;1840
000186  4607              MOV      r7,r0                 ;1840
000188  2200              MOVS     r2,#0                 ;1840
00018a  4bab              LDR      r3,|L10.1080|
00018c  4630              MOV      r0,r6                 ;1840
00018e  4639              MOV      r1,r7                 ;1840
000190  f7fffffe          BL       __aeabi_cdcmpeq
000194  d125              BNE      |L10.482|
000196  f04f0100          MOV      r1,#0                 ;1840
00019a  48a4              LDR      r0,|L10.1068|
00019c  f8c0114c          STR      r1,[r0,#0x14c]        ;1840
0001a0  4601              MOV      r1,r0                 ;1840
0001a2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1840
0001a6  f8d1114c          LDR      r1,[r1,#0x14c]        ;1840
0001aa  f1010101          ADD      r1,r1,#1              ;1840
0001ae  4602              MOV      r2,r0                 ;1840
0001b0  f8c2114c          STR      r1,[r2,#0x14c]        ;1840
0001b4  eb030183          ADD      r1,r3,r3,LSL #2       ;1840
0001b8  4a9e              LDR      r2,|L10.1076|
0001ba  eb021101          ADD      r1,r2,r1,LSL #4       ;1840
0001be  4608              MOV      r0,r1                 ;1840
0001c0  499b              LDR      r1,|L10.1072|
0001c2  f7fffffe          BL       strcpy
0001c6  f04f0100          MOV      r1,#0                 ;1840
0001ca  4898              LDR      r0,|L10.1068|
0001cc  f8d0014c          LDR      r0,[r0,#0x14c]        ;1840
0001d0  eb000080          ADD      r0,r0,r0,LSL #2       ;1840
0001d4  4a97              LDR      r2,|L10.1076|
0001d6  eb021000          ADD      r0,r2,r0,LSL #4       ;1840
0001da  7001              STRB     r1,[r0,#0]            ;1840
0001dc  f04f004e          MOV      r0,#0x4e              ;1840
0001e0  e761              B        |L10.166|
                  |L10.482|
0001e2  f1b90f00          CMP      r9,#0                 ;1843
0001e6  d036              BEQ      |L10.598|
0001e8  f24b106c          MOV      r0,#0xb16c            ;1845
0001ec  5940              LDR      r0,[r0,r5]            ;1845
0001ee  2801              CMP      r0,#1                 ;1845
0001f0  d13b              BNE      |L10.618|
0001f2  f8d40168          LDR      r0,[r4,#0x168]        ;1847
0001f6  b328              CBZ      r0,|L10.580|
0001f8  f04f0100          MOV      r1,#0                 ;1847
0001fc  488b              LDR      r0,|L10.1068|
0001fe  f8c0114c          STR      r1,[r0,#0x14c]        ;1847
000202  4601              MOV      r1,r0                 ;1847
000204  f8d1314c          LDR      r3,[r1,#0x14c]        ;1847
000208  f8d1114c          LDR      r1,[r1,#0x14c]        ;1847
00020c  f1010101          ADD      r1,r1,#1              ;1847
000210  4602              MOV      r2,r0                 ;1847
000212  f8c2114c          STR      r1,[r2,#0x14c]        ;1847
000216  eb030183          ADD      r1,r3,r3,LSL #2       ;1847
00021a  4a86              LDR      r2,|L10.1076|
00021c  eb021101          ADD      r1,r2,r1,LSL #4       ;1847
000220  4608              MOV      r0,r1                 ;1847
000222  4983              LDR      r1,|L10.1072|
000224  f7fffffe          BL       strcpy
000228  f04f0100          MOV      r1,#0                 ;1847
00022c  487f              LDR      r0,|L10.1068|
00022e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1847
000232  eb000080          ADD      r0,r0,r0,LSL #2       ;1847
000236  4a7f              LDR      r2,|L10.1076|
000238  eb021000          ADD      r0,r2,r0,LSL #4       ;1847
00023c  7001              STRB     r1,[r0,#0]            ;1847
00023e  f04f005c          MOV      r0,#0x5c              ;1847
000242  e730              B        |L10.166|
                  |L10.580|
000244  f8d4014c          LDR      r0,[r4,#0x14c]        ;1848
000248  b930              CBNZ     r0,|L10.600|
00024a  f04f0100          MOV      r1,#0                 ;1849
00024e  f8c41150          STR      r1,[r4,#0x150]        ;1849
000252  f8c41154          STR      r1,[r4,#0x154]        ;1849
                  |L10.598|
000256  e0b2              B        |L10.958|
                  |L10.600|
000258  f8d40158          LDR      r0,[r4,#0x158]        ;1850
00025c  2800              CMP      r0,#0                 ;1850
00025e  d1fa              BNE      |L10.598|
000260  f8c40160          STR      r0,[r4,#0x160]        ;1851
000264  f8c40164          STR      r0,[r4,#0x164]        ;1851
000268  e0a9              B        |L10.958|
                  |L10.618|
00026a  f24b106c          MOV      r0,#0xb16c            ;1853
00026e  5940              LDR      r0,[r0,r5]            ;1853
000270  2802              CMP      r0,#2                 ;1853
000272  d13c              BNE      |L10.750|
000274  f8d4014c          LDR      r0,[r4,#0x14c]        ;1855
000278  b328              CBZ      r0,|L10.710|
00027a  f04f0100          MOV      r1,#0                 ;1855
00027e  486b              LDR      r0,|L10.1068|
000280  f8c0114c          STR      r1,[r0,#0x14c]        ;1855
000284  4601              MOV      r1,r0                 ;1855
000286  f8d1314c          LDR      r3,[r1,#0x14c]        ;1855
00028a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1855
00028e  f1010101          ADD      r1,r1,#1              ;1855
000292  4602              MOV      r2,r0                 ;1855
000294  f8c2114c          STR      r1,[r2,#0x14c]        ;1855
000298  eb030183          ADD      r1,r3,r3,LSL #2       ;1855
00029c  4a65              LDR      r2,|L10.1076|
00029e  eb021101          ADD      r1,r2,r1,LSL #4       ;1855
0002a2  4608              MOV      r0,r1                 ;1855
0002a4  4962              LDR      r1,|L10.1072|
0002a6  f7fffffe          BL       strcpy
0002aa  f04f0100          MOV      r1,#0                 ;1855
0002ae  485f              LDR      r0,|L10.1068|
0002b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1855
0002b4  eb000080          ADD      r0,r0,r0,LSL #2       ;1855
0002b8  4a5e              LDR      r2,|L10.1076|
0002ba  eb021000          ADD      r0,r2,r0,LSL #4       ;1855
0002be  7001              STRB     r1,[r0,#0]            ;1855
0002c0  f04f0056          MOV      r0,#0x56              ;1855
0002c4  e6ef              B        |L10.166|
                  |L10.710|
0002c6  f8d40158          LDR      r0,[r4,#0x158]        ;1856
0002ca  b930              CBNZ     r0,|L10.730|
0002cc  f04f0000          MOV      r0,#0                 ;1857
0002d0  f8c40160          STR      r0,[r4,#0x160]        ;1857
0002d4  f8c40164          STR      r0,[r4,#0x164]        ;1857
0002d8  e071              B        |L10.958|
                  |L10.730|
0002da  f8d40168          LDR      r0,[r4,#0x168]        ;1858
0002de  2800              CMP      r0,#0                 ;1858
0002e0  d16d              BNE      |L10.958|
0002e2  4601              MOV      r1,r0                 ;1859
0002e4  f8c41170          STR      r1,[r4,#0x170]        ;1859
0002e8  f8c41174          STR      r1,[r4,#0x174]        ;1859
0002ec  e067              B        |L10.958|
                  |L10.750|
0002ee  f24b106c          MOV      r0,#0xb16c            ;1861
0002f2  5940              LDR      r0,[r0,r5]            ;1861
0002f4  2803              CMP      r0,#3                 ;1861
0002f6  d13c              BNE      |L10.882|
0002f8  f8d40158          LDR      r0,[r4,#0x158]        ;1863
0002fc  b328              CBZ      r0,|L10.842|
0002fe  f04f0100          MOV      r1,#0                 ;1863
000302  484a              LDR      r0,|L10.1068|
000304  f8c0114c          STR      r1,[r0,#0x14c]        ;1863
000308  4601              MOV      r1,r0                 ;1863
00030a  f8d1314c          LDR      r3,[r1,#0x14c]        ;1863
00030e  f8d1114c          LDR      r1,[r1,#0x14c]        ;1863
000312  f1010101          ADD      r1,r1,#1              ;1863
000316  4602              MOV      r2,r0                 ;1863
000318  f8c2114c          STR      r1,[r2,#0x14c]        ;1863
00031c  eb030183          ADD      r1,r3,r3,LSL #2       ;1863
000320  4a44              LDR      r2,|L10.1076|
000322  eb021101          ADD      r1,r2,r1,LSL #4       ;1863
000326  4608              MOV      r0,r1                 ;1863
000328  4941              LDR      r1,|L10.1072|
00032a  f7fffffe          BL       strcpy
00032e  f04f0100          MOV      r1,#0                 ;1863
000332  483e              LDR      r0,|L10.1068|
000334  f8d0014c          LDR      r0,[r0,#0x14c]        ;1863
000338  eb000080          ADD      r0,r0,r0,LSL #2       ;1863
00033c  4a3d              LDR      r2,|L10.1076|
00033e  eb021000          ADD      r0,r2,r0,LSL #4       ;1863
000342  7001              STRB     r1,[r0,#0]            ;1863
000344  f04f0059          MOV      r0,#0x59              ;1863
000348  e6ad              B        |L10.166|
                  |L10.842|
00034a  f8d4014c          LDR      r0,[r4,#0x14c]        ;1864
00034e  b930              CBNZ     r0,|L10.862|
000350  f04f0100          MOV      r1,#0                 ;1865
000354  f8c41150          STR      r1,[r4,#0x150]        ;1865
000358  f8c41154          STR      r1,[r4,#0x154]        ;1865
00035c  e02f              B        |L10.958|
                  |L10.862|
00035e  f8d40168          LDR      r0,[r4,#0x168]        ;1866
000362  bb60              CBNZ     r0,|L10.958|
000364  f04f0100          MOV      r1,#0                 ;1867
000368  f8c41170          STR      r1,[r4,#0x170]        ;1867
00036c  f8c41174          STR      r1,[r4,#0x174]        ;1867
000370  e025              B        |L10.958|
                  |L10.882|
000372  f04f0100          MOV      r1,#0                 ;1870
000376  482d              LDR      r0,|L10.1068|
000378  f8c0114c          STR      r1,[r0,#0x14c]        ;1870
00037c  4601              MOV      r1,r0                 ;1870
00037e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1870
000382  f8d1114c          LDR      r1,[r1,#0x14c]        ;1870
000386  f1010101          ADD      r1,r1,#1              ;1870
00038a  4602              MOV      r2,r0                 ;1870
00038c  f8c2114c          STR      r1,[r2,#0x14c]        ;1870
000390  eb030183          ADD      r1,r3,r3,LSL #2       ;1870
000394  4a27              LDR      r2,|L10.1076|
000396  eb021101          ADD      r1,r2,r1,LSL #4       ;1870
00039a  4608              MOV      r0,r1                 ;1870
00039c  4924              LDR      r1,|L10.1072|
00039e  f7fffffe          BL       strcpy
0003a2  f04f0100          MOV      r1,#0                 ;1870
0003a6  4821              LDR      r0,|L10.1068|
0003a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;1870
0003ac  eb000080          ADD      r0,r0,r0,LSL #2       ;1870
0003b0  4a20              LDR      r2,|L10.1076|
0003b2  eb021000          ADD      r0,r2,r0,LSL #4       ;1870
0003b6  7001              STRB     r1,[r0,#0]            ;1870
0003b8  f04f0022          MOV      r0,#0x22              ;1870
0003bc  e673              B        |L10.166|
                  |L10.958|
0003be  f24b106c          MOV      r0,#0xb16c            ;1874
0003c2  5940              LDR      r0,[r0,r5]            ;1874
0003c4  2801              CMP      r0,#1                 ;1874
0003c6  d139              BNE      |L10.1084|
0003c8  f8d401dc          LDR      r0,[r4,#0x1dc]        ;1876
0003cc  2800              CMP      r0,#0                 ;1876
0003ce  d17b              BNE      |L10.1224|
0003d0  f8d401e8          LDR      r0,[r4,#0x1e8]        ;1876
0003d4  2800              CMP      r0,#0                 ;1876
0003d6  d177              BNE      |L10.1224|
0003d8  4601              MOV      r1,r0                 ;1876
0003da  4814              LDR      r0,|L10.1068|
0003dc  f8c0114c          STR      r1,[r0,#0x14c]        ;1876
0003e0  4601              MOV      r1,r0                 ;1876
0003e2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1876
0003e6  f8d1114c          LDR      r1,[r1,#0x14c]        ;1876
0003ea  f1010101          ADD      r1,r1,#1              ;1876
0003ee  4602              MOV      r2,r0                 ;1876
0003f0  f8c2114c          STR      r1,[r2,#0x14c]        ;1876
0003f4  eb030183          ADD      r1,r3,r3,LSL #2       ;1876
0003f8  4a0e              LDR      r2,|L10.1076|
0003fa  eb021101          ADD      r1,r2,r1,LSL #4       ;1876
0003fe  4608              MOV      r0,r1                 ;1876
000400  490b              LDR      r1,|L10.1072|
000402  f7fffffe          BL       strcpy
000406  f04f0100          MOV      r1,#0                 ;1876
00040a  4808              LDR      r0,|L10.1068|
00040c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1876
000410  eb000080          ADD      r0,r0,r0,LSL #2       ;1876
000414  4a07              LDR      r2,|L10.1076|
000416  eb021000          ADD      r0,r2,r0,LSL #4       ;1876
00041a  7001              STRB     r1,[r0,#0]            ;1876
00041c  f04f00bd          MOV      r0,#0xbd              ;1876
000420  e641              B        |L10.166|
000422  0000              DCW      0x0000
                  |L10.1060|
                          DCD      0x0c924223
                  |L10.1064|
                          DCD      0x3bc79ca1
                  |L10.1068|
                          DCD      _setup+0xc000
                  |L10.1072|
                          DCD      |symbol_number.449|
                  |L10.1076|
                          DCD      _setup+0xb1ac
                  |L10.1080|
                          DCD      0xbff00000
                  |L10.1084|
00043c  f24b106c          MOV      r0,#0xb16c            ;1879
000440  5940              LDR      r0,[r0,r5]            ;1879
000442  2802              CMP      r0,#2                 ;1879
000444  d12c              BNE      |L10.1184|
000446  f8d401e8          LDR      r0,[r4,#0x1e8]        ;1881
00044a  bbe8              CBNZ     r0,|L10.1224|
00044c  f8d401f8          LDR      r0,[r4,#0x1f8]        ;1881
000450  bbd0              CBNZ     r0,|L10.1224|
000452  f04f0100          MOV      r1,#0                 ;1881
000456  48ff              LDR      r0,|L10.2132|
000458  f8c0114c          STR      r1,[r0,#0x14c]        ;1881
00045c  4601              MOV      r1,r0                 ;1881
00045e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1881
000462  f8d1114c          LDR      r1,[r1,#0x14c]        ;1881
000466  f1010101          ADD      r1,r1,#1              ;1881
00046a  4602              MOV      r2,r0                 ;1881
00046c  f8c2114c          STR      r1,[r2,#0x14c]        ;1881
000470  eb030183          ADD      r1,r3,r3,LSL #2       ;1881
000474  f6a06254          SUB      r2,r0,#0xe54          ;1881
000478  eb021101          ADD      r1,r2,r1,LSL #4       ;1881
00047c  4608              MOV      r0,r1                 ;1881
00047e  49f6              LDR      r1,|L10.2136|
000480  f7fffffe          BL       strcpy
000484  f04f0100          MOV      r1,#0                 ;1881
000488  48f2              LDR      r0,|L10.2132|
00048a  f8d0014c          LDR      r0,[r0,#0x14c]        ;1881
00048e  eb000080          ADD      r0,r0,r0,LSL #2       ;1881
000492  4af2              LDR      r2,|L10.2140|
000494  eb021000          ADD      r0,r2,r0,LSL #4       ;1881
000498  7001              STRB     r1,[r0,#0]            ;1881
00049a  f04f00c1          MOV      r0,#0xc1              ;1881
00049e  e602              B        |L10.166|
                  |L10.1184|
0004a0  f24b106c          MOV      r0,#0xb16c            ;1884
0004a4  5940              LDR      r0,[r0,r5]            ;1884
0004a6  2803              CMP      r0,#3                 ;1884
0004a8  d12d              BNE      |L10.1286|
0004aa  f8d401dc          LDR      r0,[r4,#0x1dc]        ;1886
0004ae  b958              CBNZ     r0,|L10.1224|
0004b0  f8d401f8          LDR      r0,[r4,#0x1f8]        ;1886
0004b4  b940              CBNZ     r0,|L10.1224|
0004b6  f04f0100          MOV      r1,#0                 ;1886
0004ba  48e6              LDR      r0,|L10.2132|
0004bc  f8c0114c          STR      r1,[r0,#0x14c]        ;1886
0004c0  4601              MOV      r1,r0                 ;1886
0004c2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1886
0004c6  e000              B        |L10.1226|
                  |L10.1224|
0004c8  e01d              B        |L10.1286|
                  |L10.1226|
0004ca  f8d1114c          LDR      r1,[r1,#0x14c]        ;1886
0004ce  f1010101          ADD      r1,r1,#1              ;1886
0004d2  4602              MOV      r2,r0                 ;1886
0004d4  f8c2114c          STR      r1,[r2,#0x14c]        ;1886
0004d8  eb030183          ADD      r1,r3,r3,LSL #2       ;1886
0004dc  4adf              LDR      r2,|L10.2140|
0004de  eb021101          ADD      r1,r2,r1,LSL #4       ;1886
0004e2  4608              MOV      r0,r1                 ;1886
0004e4  49dc              LDR      r1,|L10.2136|
0004e6  f7fffffe          BL       strcpy
0004ea  f04f0100          MOV      r1,#0                 ;1886
0004ee  48d9              LDR      r0,|L10.2132|
0004f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1886
0004f4  eb000080          ADD      r0,r0,r0,LSL #2       ;1886
0004f8  4ad8              LDR      r2,|L10.2140|
0004fa  eb021000          ADD      r0,r2,r0,LSL #4       ;1886
0004fe  7001              STRB     r1,[r0,#0]            ;1886
000500  f04f00be          MOV      r0,#0xbe              ;1886
000504  e5cf              B        |L10.166|
                  |L10.1286|
000506  a80c              ADD      r0,sp,#0x30           ;1890
000508  ab0e              ADD      r3,sp,#0x38           ;1890
00050a  aa10              ADD      r2,sp,#0x40           ;1890
00050c  4629              MOV      r1,r5                 ;1890
00050e  9000              STR      r0,[sp,#0]            ;1890
000510  4620              MOV      r0,r4                 ;1890
000512  f7fffffe          BL       find_ends
000516  f8c5a628          STR      r10,[r5,#0x628]       ;1904
00051a  f24b106c          MOV      r0,#0xb16c            ;1906
00051e  5940              LDR      r0,[r0,r5]            ;1906
000520  2801              CMP      r0,#1                 ;1906
000522  d17d              BNE      |L10.1568|
000524  f8d503b0          LDR      r0,[r5,#0x3b0]        ;1908
000528  b160              CBZ      r0,|L10.1348|
00052a  f8d513a8          LDR      r1,[r5,#0x3a8]        ;1909
00052e  460e              MOV      r6,r1                 ;1909
000530  f8d503ac          LDR      r0,[r5,#0x3ac]        ;1909
000534  4607              MOV      r7,r0                 ;1909
000536  2200              MOVS     r2,#0                 ;1909
000538  4613              MOV      r3,r2                 ;1909
00053a  4630              MOV      r0,r6                 ;1909
00053c  4639              MOV      r1,r7                 ;1909
00053e  f7fffffe          BL       __aeabi_cdcmpeq
000542  d14c              BNE      |L10.1502|
                  |L10.1348|
000544  f50470b0          ADD      r0,r4,#0x160          ;1911
000548  c803              LDM      r0,{r0,r1}            ;1911
00054a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1911
00054e  f50470a8          ADD      r0,r4,#0x150          ;1911
000552  c803              LDM      r0,{r0,r1}            ;1911
000554  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1911
000558  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1911
00055c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1911
000560  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1911
000564  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1911
000568  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1911
00056c  e9cd0102          STRD     r0,r1,[sp,#8]         ;1911
000570  f5057068          ADD      r0,r5,#0x3a0          ;1911
000574  f5057166          ADD      r1,r5,#0x398          ;1911
000578  f5057364          ADD      r3,r5,#0x390          ;1911
00057c  462a              MOV      r2,r5                 ;1911
00057e  e9cd1000          STRD     r1,r0,[sp,#0]         ;1911
000582  4621              MOV      r1,r4                 ;1911
000584  4650              MOV      r0,r10                ;1911
000586  f7fffffe          BL       convert_arc2
00058a  4680              MOV      r8,r0                 ;1911
00058c  f1b80f00          CMP      r8,#0                 ;1929
                  |L10.1424|
000590  d07e              BEQ      |L10.1680|
000592  48b0              LDR      r0,|L10.2132|
000594  f8d0014c          LDR      r0,[r0,#0x14c]        ;1929
000598  2831              CMP      r0,#0x31              ;1929
00059a  da1e              BGE      |L10.1498|
00059c  49ad              LDR      r1,|L10.2132|
00059e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1929
0005a2  f8d1114c          LDR      r1,[r1,#0x14c]        ;1929
0005a6  1c49              ADDS     r1,r1,#1              ;1929
0005a8  4aaa              LDR      r2,|L10.2132|
0005aa  f8c2114c          STR      r1,[r2,#0x14c]        ;1929
0005ae  eb030183          ADD      r1,r3,r3,LSL #2       ;1929
0005b2  4aaa              LDR      r2,|L10.2140|
0005b4  eb021101          ADD      r1,r2,r1,LSL #4       ;1929
0005b8  4608              MOV      r0,r1                 ;1929
0005ba  49a7              LDR      r1,|L10.2136|
0005bc  f7fffffe          BL       strcpy
0005c0  f04f0100          MOV      r1,#0                 ;1929
0005c4  48a3              LDR      r0,|L10.2132|
0005c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1929
0005ca  eb000080          ADD      r0,r0,r0,LSL #2       ;1929
0005ce  4aa3              LDR      r2,|L10.2140|
0005d0  eb021000          ADD      r0,r2,r0,LSL #4       ;1929
0005d4  7001              STRB     r1,[r0,#0]            ;1929
0005d6  4640              MOV      r0,r8                 ;1929
0005d8  e565              B        |L10.166|
                  |L10.1498|
0005da  4640              MOV      r0,r8                 ;1929
0005dc  e563              B        |L10.166|
                  |L10.1502|
0005de  f1bb0f00          CMP      r11,#0                ;1931
0005e2  d03c              BEQ      |L10.1630|
0005e4  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1933
0005e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1933
0005ec  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1933
0005f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;1933
0005f4  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1933
0005f8  462a              MOV      r2,r5                 ;1933
0005fa  e9cd0100          STRD     r0,r1,[sp,#0]         ;1933
0005fe  4621              MOV      r1,r4                 ;1933
000600  4650              MOV      r0,r10                ;1933
000602  f7fffffe          BL       convert_arc_comp1
000606  4680              MOV      r8,r0                 ;1933
000608  f1b80f00          CMP      r8,#0                 ;1948
                  |L10.1548|
00060c  d0c0              BEQ      |L10.1424|
00060e  4891              LDR      r0,|L10.2132|
000610  f8d0014c          LDR      r0,[r0,#0x14c]        ;1948
000614  2831              CMP      r0,#0x31              ;1948
000616  da20              BGE      |L10.1626|
000618  498e              LDR      r1,|L10.2132|
00061a  f8d1314c          LDR      r3,[r1,#0x14c]        ;1948
00061e  e000              B        |L10.1570|
                  |L10.1568|
000620  e05a              B        |L10.1752|
                  |L10.1570|
000622  f8d1114c          LDR      r1,[r1,#0x14c]        ;1948
000626  1c49              ADDS     r1,r1,#1              ;1948
000628  4a8a              LDR      r2,|L10.2132|
00062a  f8c2114c          STR      r1,[r2,#0x14c]        ;1948
00062e  eb030183          ADD      r1,r3,r3,LSL #2       ;1948
000632  4a8a              LDR      r2,|L10.2140|
000634  eb021101          ADD      r1,r2,r1,LSL #4       ;1948
000638  4608              MOV      r0,r1                 ;1948
00063a  4987              LDR      r1,|L10.2136|
00063c  f7fffffe          BL       strcpy
000640  f04f0100          MOV      r1,#0                 ;1948
000644  4883              LDR      r0,|L10.2132|
000646  f8d0014c          LDR      r0,[r0,#0x14c]        ;1948
00064a  eb000080          ADD      r0,r0,r0,LSL #2       ;1948
00064e  4a83              LDR      r2,|L10.2140|
000650  eb021000          ADD      r0,r2,r0,LSL #4       ;1948
000654  7001              STRB     r1,[r0,#0]            ;1948
000656  4640              MOV      r0,r8                 ;1948
000658  e525              B        |L10.166|
                  |L10.1626|
00065a  4640              MOV      r0,r8                 ;1948
00065c  e523              B        |L10.166|
                  |L10.1630|
00065e  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1952
000662  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1952
000666  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1952
00066a  e9cd0102          STRD     r0,r1,[sp,#8]         ;1952
00066e  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1952
000672  462a              MOV      r2,r5                 ;1952
000674  e9cd0100          STRD     r0,r1,[sp,#0]         ;1952
000678  4621              MOV      r1,r4                 ;1952
00067a  4650              MOV      r0,r10                ;1952
00067c  f7fffffe          BL       convert_arc_comp2
000680  4680              MOV      r8,r0                 ;1952
000682  f1b80f00          CMP      r8,#0                 ;1968
000686  d0c1              BEQ      |L10.1548|
000688  4872              LDR      r0,|L10.2132|
00068a  f8d0014c          LDR      r0,[r0,#0x14c]        ;1968
00068e  e000              B        |L10.1682|
                  |L10.1680|
000690  e0c4              B        |L10.2076|
                  |L10.1682|
000692  2831              CMP      r0,#0x31              ;1968
000694  da1e              BGE      |L10.1748|
000696  496f              LDR      r1,|L10.2132|
000698  f8d1314c          LDR      r3,[r1,#0x14c]        ;1968
00069c  f8d1114c          LDR      r1,[r1,#0x14c]        ;1968
0006a0  1c49              ADDS     r1,r1,#1              ;1968
0006a2  4a6c              LDR      r2,|L10.2132|
0006a4  f8c2114c          STR      r1,[r2,#0x14c]        ;1968
0006a8  eb030183          ADD      r1,r3,r3,LSL #2       ;1968
0006ac  4a6b              LDR      r2,|L10.2140|
0006ae  eb021101          ADD      r1,r2,r1,LSL #4       ;1968
0006b2  4608              MOV      r0,r1                 ;1968
0006b4  4968              LDR      r1,|L10.2136|
0006b6  f7fffffe          BL       strcpy
0006ba  f04f0100          MOV      r1,#0                 ;1968
0006be  4865              LDR      r0,|L10.2132|
0006c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1968
0006c4  eb000080          ADD      r0,r0,r0,LSL #2       ;1968
0006c8  4a64              LDR      r2,|L10.2140|
0006ca  eb021000          ADD      r0,r2,r0,LSL #4       ;1968
0006ce  7001              STRB     r1,[r0,#0]            ;1968
0006d0  4640              MOV      r0,r8                 ;1968
0006d2  e4e8              B        |L10.166|
                  |L10.1748|
0006d4  4640              MOV      r0,r8                 ;1968
0006d6  e4e6              B        |L10.166|
                  |L10.1752|
0006d8  f24b106c          MOV      r0,#0xb16c            ;1971
0006dc  5940              LDR      r0,[r0,r5]            ;1971
0006de  2803              CMP      r0,#3                 ;1971
0006e0  d14c              BNE      |L10.1916|
0006e2  f50470a8          ADD      r0,r4,#0x150          ;1973
0006e6  c803              LDM      r0,{r0,r1}            ;1973
0006e8  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1973
0006ec  f50470b8          ADD      r0,r4,#0x170          ;1973
0006f0  c803              LDM      r0,{r0,r1}            ;1973
0006f2  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1973
0006f6  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1973
0006fa  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1973
0006fe  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1973
000702  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1973
000706  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1973
00070a  e9cd0102          STRD     r0,r1,[sp,#8]         ;1973
00070e  f5057066          ADD      r0,r5,#0x398          ;1973
000712  f5057164          ADD      r1,r5,#0x390          ;1973
000716  f5057368          ADD      r3,r5,#0x3a0          ;1973
00071a  462a              MOV      r2,r5                 ;1973
00071c  e9cd1000          STRD     r1,r0,[sp,#0]         ;1973
000720  4621              MOV      r1,r4                 ;1973
000722  4650              MOV      r0,r10                ;1973
000724  f7fffffe          BL       convert_arc2
000728  4680              MOV      r8,r0                 ;1973
00072a  f1b80f00          CMP      r8,#0                 ;1991
00072e  d075              BEQ      |L10.2076|
000730  4848              LDR      r0,|L10.2132|
000732  f8d0014c          LDR      r0,[r0,#0x14c]        ;1991
000736  2831              CMP      r0,#0x31              ;1991
000738  da1e              BGE      |L10.1912|
00073a  4946              LDR      r1,|L10.2132|
00073c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1991
000740  f8d1114c          LDR      r1,[r1,#0x14c]        ;1991
000744  1c49              ADDS     r1,r1,#1              ;1991
000746  4a43              LDR      r2,|L10.2132|
000748  f8c2114c          STR      r1,[r2,#0x14c]        ;1991
00074c  eb030183          ADD      r1,r3,r3,LSL #2       ;1991
000750  4a42              LDR      r2,|L10.2140|
000752  eb021101          ADD      r1,r2,r1,LSL #4       ;1991
000756  4608              MOV      r0,r1                 ;1991
000758  493f              LDR      r1,|L10.2136|
00075a  f7fffffe          BL       strcpy
00075e  f04f0100          MOV      r1,#0                 ;1991
000762  483c              LDR      r0,|L10.2132|
000764  f8d0014c          LDR      r0,[r0,#0x14c]        ;1991
000768  eb000080          ADD      r0,r0,r0,LSL #2       ;1991
00076c  4a3b              LDR      r2,|L10.2140|
00076e  eb021000          ADD      r0,r2,r0,LSL #4       ;1991
000772  7001              STRB     r1,[r0,#0]            ;1991
000774  4640              MOV      r0,r8                 ;1991
000776  e496              B        |L10.166|
                  |L10.1912|
000778  4640              MOV      r0,r8                 ;1991
00077a  e494              B        |L10.166|
                  |L10.1916|
00077c  f24b106c          MOV      r0,#0xb16c            ;1993
000780  5940              LDR      r0,[r0,r5]            ;1993
000782  2802              CMP      r0,#2                 ;1993
000784  d14d              BNE      |L10.2082|
000786  f50470b8          ADD      r0,r4,#0x170          ;1995
00078a  c803              LDM      r0,{r0,r1}            ;1995
00078c  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1995
000790  f50470b0          ADD      r0,r4,#0x160          ;1995
000794  c803              LDM      r0,{r0,r1}            ;1995
000796  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1995
00079a  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1995
00079e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1995
0007a2  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1995
0007a6  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1995
0007aa  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1995
0007ae  e9cd0102          STRD     r0,r1,[sp,#8]         ;1995
0007b2  f5057064          ADD      r0,r5,#0x390          ;1995
0007b6  f5057168          ADD      r1,r5,#0x3a0          ;1995
0007ba  f5057366          ADD      r3,r5,#0x398          ;1995
0007be  462a              MOV      r2,r5                 ;1995
0007c0  e9cd1000          STRD     r1,r0,[sp,#0]         ;1995
0007c4  4621              MOV      r1,r4                 ;1995
0007c6  4650              MOV      r0,r10                ;1995
0007c8  f7fffffe          BL       convert_arc2
0007cc  4680              MOV      r8,r0                 ;1995
0007ce  f1b80f00          CMP      r8,#0                 ;2013
0007d2  d053              BEQ      |L10.2172|
0007d4  481f              LDR      r0,|L10.2132|
0007d6  f8d0014c          LDR      r0,[r0,#0x14c]        ;2013
0007da  2831              CMP      r0,#0x31              ;2013
0007dc  da1f              BGE      |L10.2078|
0007de  491d              LDR      r1,|L10.2132|
0007e0  f8d1314c          LDR      r3,[r1,#0x14c]        ;2013
0007e4  f8d1114c          LDR      r1,[r1,#0x14c]        ;2013
0007e8  1c49              ADDS     r1,r1,#1              ;2013
0007ea  4a1a              LDR      r2,|L10.2132|
0007ec  f8c2114c          STR      r1,[r2,#0x14c]        ;2013
0007f0  eb030183          ADD      r1,r3,r3,LSL #2       ;2013
0007f4  4a19              LDR      r2,|L10.2140|
0007f6  eb021101          ADD      r1,r2,r1,LSL #4       ;2013
0007fa  4608              MOV      r0,r1                 ;2013
0007fc  4916              LDR      r1,|L10.2136|
0007fe  f7fffffe          BL       strcpy
000802  f04f0100          MOV      r1,#0                 ;2013
000806  4813              LDR      r0,|L10.2132|
000808  f8d0014c          LDR      r0,[r0,#0x14c]        ;2013
00080c  eb000080          ADD      r0,r0,r0,LSL #2       ;2013
000810  4a12              LDR      r2,|L10.2140|
000812  eb021000          ADD      r0,r2,r0,LSL #4       ;2013
000816  7001              STRB     r1,[r0,#0]            ;2013
000818  4640              MOV      r0,r8                 ;2013
00081a  e444              B        |L10.166|
                  |L10.2076|
00081c  e02e              B        |L10.2172|
                  |L10.2078|
00081e  4640              MOV      r0,r8                 ;2013
000820  e441              B        |L10.166|
                  |L10.2082|
000822  f04f0100          MOV      r1,#0                 ;2016
000826  480b              LDR      r0,|L10.2132|
000828  f8c0114c          STR      r1,[r0,#0x14c]        ;2016
00082c  4601              MOV      r1,r0                 ;2016
00082e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2016
000832  f8d1114c          LDR      r1,[r1,#0x14c]        ;2016
000836  f1010101          ADD      r1,r1,#1              ;2016
00083a  4602              MOV      r2,r0                 ;2016
00083c  f8c2114c          STR      r1,[r2,#0x14c]        ;2016
000840  eb030183          ADD      r1,r3,r3,LSL #2       ;2016
000844  4a05              LDR      r2,|L10.2140|
000846  eb021101          ADD      r1,r2,r1,LSL #4       ;2016
00084a  4608              MOV      r0,r1                 ;2016
00084c  4902              LDR      r1,|L10.2136|
00084e  f7fffffe          BL       strcpy
000852  e005              B        |L10.2144|
                  |L10.2132|
                          DCD      _setup+0xc000
                  |L10.2136|
                          DCD      |symbol_number.449|
                  |L10.2140|
                          DCD      _setup+0xb1ac
                  |L10.2144|
000860  f04f0100          MOV      r1,#0                 ;2016
000864  4806              LDR      r0,|L10.2176|
000866  f8d0014c          LDR      r0,[r0,#0x14c]        ;2016
00086a  eb000080          ADD      r0,r0,r0,LSL #2       ;2016
00086e  4a05              LDR      r2,|L10.2180|
000870  eb021000          ADD      r0,r2,r0,LSL #4       ;2016
000874  7001              STRB     r1,[r0,#0]            ;2016
000876  f04f0022          MOV      r0,#0x22              ;2016
00087a  e414              B        |L10.166|
                  |L10.2172|
00087c  2000              MOVS     r0,#0                 ;2017
00087e  e412              B        |L10.166|
;;;2019   
                          ENDP

                  |L10.2176|
                          DCD      _setup+0xc000
                  |L10.2180|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc2||, CODE, READONLY, ALIGN=2

                  convert_arc2 PROC
;;;2039   
;;;2040       static int convert_arc2(                      /* ARGUMENTS                                */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;2041       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)     */
;;;2042       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;2043       setup_pointer settings,                       /* pointer to machine settings              */
;;;2044       double * current1,                            /* pointer to current value of coordinate 1 */
;;;2045       double * current2,                            /* pointer to current value of coordinate 2 */
;;;2046       double * current3,                            /* pointer to current value of coordinate 3 */
;;;2047       double end1,                                  /* coordinate 1 value at end of arc         */
;;;2048       double end2,                                  /* coordinate 2 value at end of arc         */
;;;2049       double end3,                                  /* coordinate 3 value at end of arc         */
;;;2050   #ifdef AA
;;;2051       double AA_end,                                /* a-value at end of arc                    *//*AA*/
;;;2052   #endif
;;;2053   #ifdef BB
;;;2054       double BB_end,                                /* b-value at end of arc                    *//*BB*/
;;;2055   #endif
;;;2056   #ifdef CC
;;;2057       double CC_end,                                /* c-value at end of arc                    *//*CC*/
;;;2058   #endif
;;;2059       double offset1,                               /* offset of center from current1           */
;;;2060       double offset2)                               /* offset of center from current2           */
;;;2061       {
000004  b09f              SUB      sp,sp,#0x7c
000006  468b              MOV      r11,r1
000008  469a              MOV      r10,r3
00000a  ac2e              ADD      r4,sp,#0xb8
00000c  e89403f0          LDM      r4,{r4-r9}
;;;2062           static char name[] SET_TO "convert_arc2";
;;;2063           double center1;
;;;2064           double center2;
;;;2065           int status;                               /* status returned from CHP function call     */
;;;2066           double tolerance;                         /* tolerance for difference of radii          */
;;;2067           int turn;                                 /* number of full or partial turns CCW in arc */
;;;2068   
;;;2069           tolerance SET_TO (settings->length_units IS CANON_UNITS_INCHES) ?
000010  9821              LDR      r0,[sp,#0x84]
000012  f8d0051c          LDR      r0,[r0,#0x51c]
000016  2801              CMP      r0,#1
000018  d102              BNE      |L11.32|
;;;2070               TOLERANCE_INCH : TOLERANCE_MM;
00001a  486d              LDR      r0,|L11.464|
00001c  496d              LDR      r1,|L11.468|
00001e  e001              B        |L11.36|
                  |L11.32|
000020  486d              LDR      r0,|L11.472|
000022  496e              LDR      r1,|L11.476|
                  |L11.36|
000024  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;2071   
;;;2072           if (block->r_flag)
000028  f8db01c0          LDR      r0,[r11,#0x1c0]
00002c  2800              CMP      r0,#0
00002e  d045              BEQ      |L11.188|
;;;2073           {
;;;2074               CHP(arc_data_r(move, *current1, *current2, end1, end2,
000030  a815              ADD      r0,sp,#0x54
000032  a91a              ADD      r1,sp,#0x68
000034  aa1c              ADD      r2,sp,#0x70
000036  e9cd2108          STRD     r2,r1,[sp,#0x20]
00003a  900a              STR      r0,[sp,#0x28]
00003c  f50b70e4          ADD      r0,r11,#0x1c8
000040  c803              LDM      r0,{r0,r1}
000042  aa02              ADD      r2,sp,#8
000044  c2f0              STM      r2!,{r4-r7}
000046  e9cd0106          STRD     r0,r1,[sp,#0x18]
00004a  982c              LDR      r0,[sp,#0xb0]
00004c  c803              LDM      r0,{r0,r1}
00004e  e9cd0100          STRD     r0,r1,[sp,#0]
000052  e9da0100          LDRD     r0,r1,[r10,#0]
000056  4602              MOV      r2,r0
000058  460b              MOV      r3,r1
00005a  e9cd0112          STRD     r0,r1,[sp,#0x48]
00005e  981f              LDR      r0,[sp,#0x7c]
000060  f7fffffe          BL       arc_data_r
000064  9019              STR      r0,[sp,#0x64]
000066  2800              CMP      r0,#0
000068  d072              BEQ      |L11.336|
00006a  485d              LDR      r0,|L11.480|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]
000070  2831              CMP      r0,#0x31
000072  da21              BGE      |L11.184|
000074  495a              LDR      r1,|L11.480|
000076  f8d1314c          LDR      r3,[r1,#0x14c]
00007a  f8d1114c          LDR      r1,[r1,#0x14c]
00007e  1c49              ADDS     r1,r1,#1
000080  4a57              LDR      r2,|L11.480|
000082  f8c2114c          STR      r1,[r2,#0x14c]
000086  eb030183          ADD      r1,r3,r3,LSL #2
00008a  f6a26254          SUB      r2,r2,#0xe54
00008e  eb021101          ADD      r1,r2,r1,LSL #4
000092  4608              MOV      r0,r1
000094  4953              LDR      r1,|L11.484|
000096  f7fffffe          BL       strcpy
00009a  f04f0100          MOV      r1,#0
00009e  4850              LDR      r0,|L11.480|
0000a0  f8d0014c          LDR      r0,[r0,#0x14c]
0000a4  eb000080          ADD      r0,r0,r0,LSL #2
0000a8  4a4f              LDR      r2,|L11.488|
0000aa  eb021000          ADD      r0,r2,r0,LSL #4
0000ae  7001              STRB     r1,[r0,#0]
0000b0  9819              LDR      r0,[sp,#0x64]
                  |L11.178|
;;;2075                   block->r_number, &center1, &center2, &turn));
;;;2076           }
;;;2077           else
;;;2078           {
;;;2079               CHP(arc_data_ijk(move, *current1, *current2, end1, end2, offset1,
;;;2080                   offset2, &center1, &center2, &turn, tolerance));
;;;2081           }
;;;2082   
;;;2083           if (settings->feed_mode IS INVERSE_TIME)
;;;2084               inverse_time_rate_arc(*current1, *current2, *current3, center1, center2,
;;;2085                   turn, end1, end2, end3, block, settings);
;;;2086           ARC_FEED(end1, end2, center1, center2, turn,
;;;2087               end3
;;;2088       #ifdef AA
;;;2089               , AA_end
;;;2090       #else
;;;2091       #ifdef ALL_AXES
;;;2092               , 0
;;;2093       #endif
;;;2094       #endif
;;;2095       #ifdef BB
;;;2096               , BB_end
;;;2097       #else
;;;2098       #ifdef ALL_AXES
;;;2099               , 0
;;;2100       #endif
;;;2101       #endif
;;;2102       #ifdef CC
;;;2103               , CC_end
;;;2104       #else
;;;2105       #ifdef ALL_AXES
;;;2106               , 0
;;;2107       #endif
;;;2108       #endif
;;;2109               );
;;;2110           *current1 SET_TO end1;
;;;2111           *current2 SET_TO end2;
;;;2112           *current3 SET_TO end3;
;;;2113   #ifdef AA
;;;2114           settings->AA_current SET_TO AA_end;       /*AA*/
;;;2115   #endif
;;;2116   #ifdef BB
;;;2117           settings->BB_current SET_TO BB_end;       /*BB*/
;;;2118   #endif
;;;2119   #ifdef CC
;;;2120           settings->CC_current SET_TO CC_end;       /*CC*/
;;;2121   #endif
;;;2122           return RS274NGC_OK;
;;;2123       }
0000b2  b023              ADD      sp,sp,#0x8c
0000b4  e8bd8ff0          POP      {r4-r11,pc}
                  |L11.184|
0000b8  9819              LDR      r0,[sp,#0x64]         ;2074
0000ba  e7fa              B        |L11.178|
                  |L11.188|
0000bc  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;2079
0000c0  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;2079
0000c4  a815              ADD      r0,sp,#0x54           ;2079
0000c6  a91a              ADD      r1,sp,#0x68           ;2079
0000c8  aa1c              ADD      r2,sp,#0x70           ;2079
0000ca  e9cd210a          STRD     r2,r1,[sp,#0x28]      ;2079
0000ce  900c              STR      r0,[sp,#0x30]         ;2079
0000d0  e9dd0136          LDRD     r0,r1,[sp,#0xd8]      ;2079
0000d4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2079
0000d8  e9dd0134          LDRD     r0,r1,[sp,#0xd0]      ;2079
0000dc  aa02              ADD      r2,sp,#8              ;2079
0000de  c2f0              STM      r2!,{r4-r7}           ;2079
0000e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2079
0000e4  992c              LDR      r1,[sp,#0xb0]         ;2079
0000e6  c903              LDM      r1,{r0,r1}            ;2079
0000e8  e9cd0100          STRD     r0,r1,[sp,#0]         ;2079
0000ec  e9da0100          LDRD     r0,r1,[r10,#0]        ;2079
0000f0  4602              MOV      r2,r0                 ;2079
0000f2  460b              MOV      r3,r1                 ;2079
0000f4  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2079
0000f8  981f              LDR      r0,[sp,#0x7c]         ;2079
0000fa  f7fffffe          BL       arc_data_ijk
0000fe  9019              STR      r0,[sp,#0x64]         ;2079
000100  b318              CBZ      r0,|L11.330|
000102  4837              LDR      r0,|L11.480|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;2079
000108  2831              CMP      r0,#0x31              ;2079
00010a  da1f              BGE      |L11.332|
00010c  4934              LDR      r1,|L11.480|
00010e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2079
000112  f8d1114c          LDR      r1,[r1,#0x14c]        ;2079
000116  1c49              ADDS     r1,r1,#1              ;2079
000118  4a31              LDR      r2,|L11.480|
00011a  f8c2114c          STR      r1,[r2,#0x14c]        ;2079
00011e  eb030183          ADD      r1,r3,r3,LSL #2       ;2079
000122  4a31              LDR      r2,|L11.488|
000124  eb021101          ADD      r1,r2,r1,LSL #4       ;2079
000128  4608              MOV      r0,r1                 ;2079
00012a  492e              LDR      r1,|L11.484|
00012c  f7fffffe          BL       strcpy
000130  f04f0100          MOV      r1,#0                 ;2079
000134  482a              LDR      r0,|L11.480|
000136  f8d0014c          LDR      r0,[r0,#0x14c]        ;2079
00013a  eb000080          ADD      r0,r0,r0,LSL #2       ;2079
00013e  4a2a              LDR      r2,|L11.488|
000140  eb021000          ADD      r0,r2,r0,LSL #4       ;2079
000144  7001              STRB     r1,[r0,#0]            ;2079
000146  9819              LDR      r0,[sp,#0x64]         ;2079
000148  e7b3              B        |L11.178|
                  |L11.330|
00014a  e001              B        |L11.336|
                  |L11.332|
00014c  9819              LDR      r0,[sp,#0x64]         ;2079
00014e  e7b0              B        |L11.178|
                  |L11.336|
000150  9821              LDR      r0,[sp,#0x84]         ;2083
000152  f8d003fc          LDR      r0,[r0,#0x3fc]        ;2083
000156  2801              CMP      r0,#1                 ;2083
000158  d11e              BNE      |L11.408|
00015a  9821              LDR      r0,[sp,#0x84]         ;2084
00015c  a908              ADD      r1,sp,#0x20           ;2084
00015e  e8a10bf0          STM      r1!,{r4-r9,r11}       ;2084
000162  900f              STR      r0,[sp,#0x3c]         ;2084
000164  9815              LDR      r0,[sp,#0x54]         ;2084
000166  9006              STR      r0,[sp,#0x18]         ;2084
000168  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2084
00016c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2084
000170  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2084
000174  e9cd0102          STRD     r0,r1,[sp,#8]         ;2084
000178  992d              LDR      r1,[sp,#0xb4]         ;2084
00017a  c903              LDM      r1,{r0,r1}            ;2084
00017c  e9cd0100          STRD     r0,r1,[sp,#0]         ;2084
000180  992c              LDR      r1,[sp,#0xb0]         ;2084
000182  c903              LDM      r1,{r0,r1}            ;2084
000184  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2084
000188  e9da0100          LDRD     r0,r1,[r10,#0]        ;2084
00018c  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2084
000190  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2084
000194  f7fffffe          BL       inverse_time_rate_arc
                  |L11.408|
000198  e9cd8906          STRD     r8,r9,[sp,#0x18]      ;2086
00019c  9815              LDR      r0,[sp,#0x54]         ;2086
00019e  9004              STR      r0,[sp,#0x10]         ;2086
0001a0  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2086
0001a4  e9cd0102          STRD     r0,r1,[sp,#8]         ;2086
0001a8  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2086
0001ac  4632              MOV      r2,r6                 ;2086
0001ae  463b              MOV      r3,r7                 ;2086
0001b0  e9cd0100          STRD     r0,r1,[sp,#0]         ;2086
0001b4  4620              MOV      r0,r4                 ;2086
0001b6  4629              MOV      r1,r5                 ;2086
0001b8  f7fffffe          BL       ARC_FEED
0001bc  e9ca4500          STRD     r4,r5,[r10,#0]        ;2110
0001c0  982c              LDR      r0,[sp,#0xb0]         ;2111
0001c2  c0c0              STM      r0!,{r6,r7}           ;2111
0001c4  982d              LDR      r0,[sp,#0xb4]         ;2112
0001c6  e9c08900          STRD     r8,r9,[r0,#0]         ;2112
0001ca  2000              MOVS     r0,#0                 ;2122
0001cc  e771              B        |L11.178|
;;;2124   
                          ENDP

0001ce  0000              DCW      0x0000
                  |L11.464|
                          DCD      0xeb1c432d
                  |L11.468|
                          DCD      0x3f2a36e2
                  |L11.472|
                          DCD      0xd2f1a9fc
                  |L11.476|
                          DCD      0x3f60624d
                  |L11.480|
                          DCD      _setup+0xc000
                  |L11.484|
                          DCD      |symbol_number.450|
                  |L11.488|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc_comp1||, CODE, READONLY, ALIGN=2

                  convert_arc_comp1 PROC
;;;2152   
;;;2153       static int convert_arc_comp1(                 /* ARGUMENTS                                   */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;2154       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)             */
;;;2155       block_pointer block,                          /* pointer to a block of RS274/NGC instructions     */
;;;2156       setup_pointer settings,                       /* pointer to machine settings                      */
;;;2157       double end_x,                                 /* x-value at end of programmed (then actual) arc   */
;;;2158       double end_y,                                 /* y-value at end of programmed (then actual) arc   */
;;;2159       double end_z                                  /* z-value at end of arc                            */
;;;2160   #ifdef AA
;;;2161       , double AA_end                               /* a-value at end of arc                      *//*AA*/
;;;2162   #endif
;;;2163   #ifdef BB
;;;2164       , double BB_end                               /* b-value at end of arc                      *//*BB*/
;;;2165   #endif
;;;2166   #ifdef CC
;;;2167       , double CC_end                               /* c-value at end of arc                      *//*CC*/
;;;2168   #endif
;;;2169       )
;;;2170       {
000004  b0a3              SUB      sp,sp,#0x8c
000006  468b              MOV      r11,r1
000008  4692              MOV      r10,r2
00000a  ac30              ADD      r4,sp,#0xc0
00000c  e89403f0          LDM      r4,{r4-r9}
;;;2171           static char name[] SET_TO "convert_arc_comp1";
;;;2172           double center_x;
;;;2173           double center_y;
;;;2174           double gamma;                             /* direction of perpendicular to arc at end */
;;;2175           int side;                                 /* offset side - right or left              */
;;;2176           int status;                               /* status returned from CHP function call   */
;;;2177           double tolerance;                         /* tolerance for difference of radii        */
;;;2178           double tool_radius;
;;;2179           int turn;                                 /* 1 for counterclockwise, -1 for clockwise */
;;;2180   
;;;2181           side SET_TO settings->cutter_comp_side;
000010  f8da03b0          LDR      r0,[r10,#0x3b0]
000014  901b              STR      r0,[sp,#0x6c]
;;;2182      /* always is positive */
;;;2183           tool_radius SET_TO settings->cutter_comp_radius;
000016  f50a706a          ADD      r0,r10,#0x3a8
00001a  c803              LDM      r0,{r0,r1}
00001c  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;2184           tolerance SET_TO (settings->length_units IS CANON_UNITS_INCHES) ?
000020  f8da051c          LDR      r0,[r10,#0x51c]
000024  2801              CMP      r0,#1
000026  d102              BNE      |L12.46|
;;;2185               TOLERANCE_INCH : TOLERANCE_MM;
000028  48c8              LDR      r0,|L12.844|
00002a  49c9              LDR      r1,|L12.848|
00002c  e001              B        |L12.50|
                  |L12.46|
00002e  48c9              LDR      r0,|L12.852|
000030  49c9              LDR      r1,|L12.856|
                  |L12.50|
000032  e9cd0118          STRD     r0,r1,[sp,#0x60]
;;;2186   
;;;2187           CHK((hypot((end_x - settings->current_x),
000036  f50a7066          ADD      r0,r10,#0x398
00003a  c803              LDM      r0,{r0,r1}
00003c  4632              MOV      r2,r6
00003e  463b              MOV      r3,r7
000040  e9cd010c          STRD     r0,r1,[sp,#0x30]
000044  f7fffffe          BL       __aeabi_drsub
000048  e9cd0110          STRD     r0,r1,[sp,#0x40]
00004c  f50a7064          ADD      r0,r10,#0x390
000050  c803              LDM      r0,{r0,r1}
000052  4622              MOV      r2,r4
000054  462b              MOV      r3,r5
000056  e9cd010c          STRD     r0,r1,[sp,#0x30]
00005a  f7fffffe          BL       __aeabi_drsub
00005e  e9cd010e          STRD     r0,r1,[sp,#0x38]
000062  e9dd2310          LDRD     r2,r3,[sp,#0x40]
000066  f7fffffe          BL       hypot
00006a  e9cd0112          STRD     r0,r1,[sp,#0x48]
00006e  e9dd2316          LDRD     r2,r3,[sp,#0x58]
000072  f7fffffe          BL       __aeabi_cdcmple
000076  d828              BHI      |L12.202|
000078  f04f0100          MOV      r1,#0
00007c  48b7              LDR      r0,|L12.860|
00007e  f8c0114c          STR      r1,[r0,#0x14c]
000082  4601              MOV      r1,r0
000084  f8d1314c          LDR      r3,[r1,#0x14c]
000088  f8d1114c          LDR      r1,[r1,#0x14c]
00008c  f1010101          ADD      r1,r1,#1
000090  4602              MOV      r2,r0
000092  f8c2114c          STR      r1,[r2,#0x14c]
000096  eb030183          ADD      r1,r3,r3,LSL #2
00009a  f6a06254          SUB      r2,r0,#0xe54
00009e  eb021101          ADD      r1,r2,r1,LSL #4
0000a2  4608              MOV      r0,r1
0000a4  49ae              LDR      r1,|L12.864|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0
0000ae  48ab              LDR      r0,|L12.860|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]
0000b4  eb000080          ADD      r0,r0,r0,LSL #2
0000b8  4aaa              LDR      r2,|L12.868|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4
0000be  7001              STRB     r1,[r0,#0]
0000c0  f04f0046          MOV      r0,#0x46
                  |L12.196|
;;;2188               (end_y - settings->current_y)) <= tool_radius),
;;;2189               NCE_CUTTER_GOUGING_WITH_CUTTER_RADIUS_COMP);
;;;2190   
;;;2191           if (block->r_flag)
;;;2192           {
;;;2193               CHP(arc_data_comp_r(move, side, tool_radius, settings->current_x,
;;;2194                   settings->current_y, end_x, end_y, block->r_number,
;;;2195                   &center_x, &center_y, &turn));
;;;2196           }
;;;2197           else
;;;2198           {
;;;2199               CHP(arc_data_comp_ijk(move, side, tool_radius, settings->current_x,
;;;2200                   settings->current_y, end_x, end_y,
;;;2201                   block->i_number, block->j_number,
;;;2202                   &center_x, &center_y, &turn, tolerance));
;;;2203           }
;;;2204   
;;;2205           gamma SET_TO
;;;2206               (((side IS LEFT) AND (move IS G_3)) OR
;;;2207               ((side IS RIGHT) AND (move IS G_2))) ?
;;;2208               atan2 ((center_y - end_y), (center_x - end_x)) :
;;;2209           atan2 ((end_y - center_y), (end_x - center_x));
;;;2210   
;;;2211           settings->program_x SET_TO end_x;
;;;2212           settings->program_y SET_TO end_y;
;;;2213      /* end_x reset actual */
;;;2214           end_x SET_TO (end_x + (tool_radius * cos(gamma)));
;;;2215      /* end_y reset actual */
;;;2216           end_y SET_TO (end_y + (tool_radius * sin(gamma)));
;;;2217   
;;;2218           if (settings->feed_mode IS INVERSE_TIME)
;;;2219               inverse_time_rate_arc(settings->current_x, settings->current_y,
;;;2220                   settings->current_z, center_x, center_y, turn,
;;;2221                   end_x, end_y, end_z, block, settings);
;;;2222           ARC_FEED(end_x, end_y, center_x, center_y, turn,
;;;2223               end_z
;;;2224       #ifdef AA
;;;2225               , AA_end
;;;2226       #else
;;;2227       #ifdef ALL_AXES
;;;2228               , 0
;;;2229       #endif
;;;2230       #endif
;;;2231       #ifdef BB
;;;2232               , BB_end
;;;2233       #else
;;;2234       #ifdef ALL_AXES
;;;2235               , 0
;;;2236       #endif
;;;2237       #endif
;;;2238       #ifdef CC
;;;2239               , CC_end
;;;2240       #else
;;;2241       #ifdef ALL_AXES
;;;2242               , 0
;;;2243       #endif
;;;2244       #endif
;;;2245               );
;;;2246           settings->current_x SET_TO end_x;
;;;2247           settings->current_y SET_TO end_y;
;;;2248           settings->current_z SET_TO end_z;
;;;2249   #ifdef AA
;;;2250           settings->AA_current SET_TO AA_end;       /*AA*/
;;;2251   #endif
;;;2252   #ifdef BB
;;;2253           settings->BB_current SET_TO BB_end;       /*BB*/
;;;2254   #endif
;;;2255   #ifdef CC
;;;2256           settings->CC_current SET_TO CC_end;       /*CC*/
;;;2257   #endif
;;;2258   
;;;2259           return RS274NGC_OK;
;;;2260       }
0000c4  b027              ADD      sp,sp,#0x9c
0000c6  e8bd8ff0          POP      {r4-r11,pc}
                  |L12.202|
0000ca  f8db01c0          LDR      r0,[r11,#0x1c0]       ;2191
0000ce  2800              CMP      r0,#0                 ;2191
0000d0  d044              BEQ      |L12.348|
0000d2  a815              ADD      r0,sp,#0x54           ;2193
0000d4  a91e              ADD      r1,sp,#0x78           ;2193
0000d6  aa20              ADD      r2,sp,#0x80           ;2193
0000d8  e9cd210a          STRD     r2,r1,[sp,#0x28]      ;2193
0000dc  900c              STR      r0,[sp,#0x30]         ;2193
0000de  f50b70e4          ADD      r0,r11,#0x1c8         ;2193
0000e2  c803              LDM      r0,{r0,r1}            ;2193
0000e4  aa04              ADD      r2,sp,#0x10           ;2193
0000e6  c2f0              STM      r2!,{r4-r7}           ;2193
0000e8  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2193
0000ec  f50a7066          ADD      r0,r10,#0x398         ;2193
0000f0  c803              LDM      r0,{r0,r1}            ;2193
0000f2  e9cd0102          STRD     r0,r1,[sp,#8]         ;2193
0000f6  f50a7064          ADD      r0,r10,#0x390         ;2193
0000fa  c803              LDM      r0,{r0,r1}            ;2193
0000fc  e9cd0100          STRD     r0,r1,[sp,#0]         ;2193
000100  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2193
000104  991b              LDR      r1,[sp,#0x6c]         ;2193
000106  9823              LDR      r0,[sp,#0x8c]         ;2193
000108  f7fffffe          BL       arc_data_comp_r
00010c  901a              STR      r0,[sp,#0x68]         ;2193
00010e  2800              CMP      r0,#0                 ;2193
000110  d073              BEQ      |L12.506|
000112  4892              LDR      r0,|L12.860|
000114  f8d0014c          LDR      r0,[r0,#0x14c]        ;2193
000118  2831              CMP      r0,#0x31              ;2193
00011a  da1d              BGE      |L12.344|
00011c  498f              LDR      r1,|L12.860|
00011e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2193
000122  f8d1214c          LDR      r2,[r1,#0x14c]        ;2193
000126  1c52              ADDS     r2,r2,#1              ;2193
000128  f8c1214c          STR      r2,[r1,#0x14c]        ;2193
00012c  eb030183          ADD      r1,r3,r3,LSL #2       ;2193
000130  4a8c              LDR      r2,|L12.868|
000132  eb021101          ADD      r1,r2,r1,LSL #4       ;2193
000136  4608              MOV      r0,r1                 ;2193
000138  4989              LDR      r1,|L12.864|
00013a  f7fffffe          BL       strcpy
00013e  f04f0100          MOV      r1,#0                 ;2193
000142  4886              LDR      r0,|L12.860|
000144  f8d0014c          LDR      r0,[r0,#0x14c]        ;2193
000148  eb000080          ADD      r0,r0,r0,LSL #2       ;2193
00014c  4a85              LDR      r2,|L12.868|
00014e  eb021000          ADD      r0,r2,r0,LSL #4       ;2193
000152  7001              STRB     r1,[r0,#0]            ;2193
000154  981a              LDR      r0,[sp,#0x68]         ;2193
000156  e7b5              B        |L12.196|
                  |L12.344|
000158  981a              LDR      r0,[sp,#0x68]         ;2193
00015a  e7b3              B        |L12.196|
                  |L12.348|
00015c  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;2199
000160  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2199
000164  a815              ADD      r0,sp,#0x54           ;2199
000166  a91e              ADD      r1,sp,#0x78           ;2199
000168  aa20              ADD      r2,sp,#0x80           ;2199
00016a  e9cd210c          STRD     r2,r1,[sp,#0x30]      ;2199
00016e  900e              STR      r0,[sp,#0x38]         ;2199
000170  f50b70b0          ADD      r0,r11,#0x160         ;2199
000174  c803              LDM      r0,{r0,r1}            ;2199
000176  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;2199
00017a  f50b70a8          ADD      r0,r11,#0x150         ;2199
00017e  c803              LDM      r0,{r0,r1}            ;2199
000180  aa04              ADD      r2,sp,#0x10           ;2199
000182  c2f0              STM      r2!,{r4-r7}           ;2199
000184  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2199
000188  f50a7066          ADD      r0,r10,#0x398         ;2199
00018c  c803              LDM      r0,{r0,r1}            ;2199
00018e  e9cd0102          STRD     r0,r1,[sp,#8]         ;2199
000192  f50a7064          ADD      r0,r10,#0x390         ;2199
000196  c803              LDM      r0,{r0,r1}            ;2199
000198  e9cd0100          STRD     r0,r1,[sp,#0]         ;2199
00019c  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2199
0001a0  991b              LDR      r1,[sp,#0x6c]         ;2199
0001a2  9823              LDR      r0,[sp,#0x8c]         ;2199
0001a4  f7fffffe          BL       arc_data_comp_ijk
0001a8  901a              STR      r0,[sp,#0x68]         ;2199
0001aa  b318              CBZ      r0,|L12.500|
0001ac  486b              LDR      r0,|L12.860|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;2199
0001b2  2831              CMP      r0,#0x31              ;2199
0001b4  da1f              BGE      |L12.502|
0001b6  4969              LDR      r1,|L12.860|
0001b8  f8d1314c          LDR      r3,[r1,#0x14c]        ;2199
0001bc  f8d1114c          LDR      r1,[r1,#0x14c]        ;2199
0001c0  1c49              ADDS     r1,r1,#1              ;2199
0001c2  4a66              LDR      r2,|L12.860|
0001c4  f8c2114c          STR      r1,[r2,#0x14c]        ;2199
0001c8  eb030183          ADD      r1,r3,r3,LSL #2       ;2199
0001cc  4a65              LDR      r2,|L12.868|
0001ce  eb021101          ADD      r1,r2,r1,LSL #4       ;2199
0001d2  4608              MOV      r0,r1                 ;2199
0001d4  4962              LDR      r1,|L12.864|
0001d6  f7fffffe          BL       strcpy
0001da  f04f0100          MOV      r1,#0                 ;2199
0001de  485f              LDR      r0,|L12.860|
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;2199
0001e4  eb000080          ADD      r0,r0,r0,LSL #2       ;2199
0001e8  4a5e              LDR      r2,|L12.868|
0001ea  eb021000          ADD      r0,r2,r0,LSL #4       ;2199
0001ee  7001              STRB     r1,[r0,#0]            ;2199
0001f0  981a              LDR      r0,[sp,#0x68]         ;2199
0001f2  e767              B        |L12.196|
                  |L12.500|
0001f4  e001              B        |L12.506|
                  |L12.502|
0001f6  981a              LDR      r0,[sp,#0x68]         ;2199
0001f8  e764              B        |L12.196|
                  |L12.506|
0001fa  981b              LDR      r0,[sp,#0x6c]         ;2205
0001fc  2802              CMP      r0,#2                 ;2205
0001fe  d102              BNE      |L12.518|
000200  9823              LDR      r0,[sp,#0x8c]         ;2206
000202  281e              CMP      r0,#0x1e              ;2206
000204  d005              BEQ      |L12.530|
                  |L12.518|
000206  981b              LDR      r0,[sp,#0x6c]         ;2207
000208  2801              CMP      r0,#1                 ;2207
00020a  d117              BNE      |L12.572|
00020c  9823              LDR      r0,[sp,#0x8c]         ;2207
00020e  2814              CMP      r0,#0x14              ;2207
000210  d114              BNE      |L12.572|
                  |L12.530|
000212  4622              MOV      r2,r4                 ;2208
000214  462b              MOV      r3,r5                 ;2208
000216  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2208
00021a  f7fffffe          BL       __aeabi_dsub
00021e  4632              MOV      r2,r6                 ;2208
000220  463b              MOV      r3,r7                 ;2208
000222  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2208
000226  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2208
00022a  f7fffffe          BL       __aeabi_dsub
00022e  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2208
000232  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2208
000236  f7fffffe          BL       atan2
00023a  e013              B        |L12.612|
                  |L12.572|
00023c  4620              MOV      r0,r4                 ;2209
00023e  4629              MOV      r1,r5                 ;2209
000240  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2209
000244  f7fffffe          BL       __aeabi_dsub
000248  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2209
00024c  4630              MOV      r0,r6                 ;2209
00024e  4639              MOV      r1,r7                 ;2209
000250  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2209
000254  f7fffffe          BL       __aeabi_dsub
000258  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2209
00025c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2209
000260  f7fffffe          BL       atan2
                  |L12.612|
000264  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;2209
000268  f50a4030          ADD      r0,r10,#0xb000        ;2211
00026c  f50070bc          ADD      r0,r0,#0x178          ;2211
000270  c030              STM      r0!,{r4,r5}           ;2211
000272  f50a4030          ADD      r0,r10,#0xb000        ;2212
000276  f50070c0          ADD      r0,r0,#0x180          ;2212
00027a  c0c0              STM      r0!,{r6,r7}           ;2212
00027c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2214
000280  f7fffffe          BL       ||cos||
000284  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2214
000288  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2214
00028c  f7fffffe          BL       __aeabi_dmul
000290  4622              MOV      r2,r4                 ;2214
000292  462b              MOV      r3,r5                 ;2214
000294  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2214
000298  f7fffffe          BL       __aeabi_dadd
00029c  4604              MOV      r4,r0                 ;2214
00029e  460d              MOV      r5,r1                 ;2214
0002a0  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2216
0002a4  f7fffffe          BL       ||sin||
0002a8  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2216
0002ac  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2216
0002b0  f7fffffe          BL       __aeabi_dmul
0002b4  4632              MOV      r2,r6                 ;2216
0002b6  463b              MOV      r3,r7                 ;2216
0002b8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2216
0002bc  f7fffffe          BL       __aeabi_dadd
0002c0  4606              MOV      r6,r0                 ;2216
0002c2  460f              MOV      r7,r1                 ;2216
0002c4  f8da03fc          LDR      r0,[r10,#0x3fc]       ;2218
0002c8  2801              CMP      r0,#1                 ;2218
0002ca  d121              BNE      |L12.784|
0002cc  a808              ADD      r0,sp,#0x20           ;2219
0002ce  e8a00bf0          STM      r0!,{r4-r9,r11}       ;2219
0002d2  f8cda03c          STR      r10,[sp,#0x3c]        ;2219
0002d6  9815              LDR      r0,[sp,#0x54]         ;2219
0002d8  9006              STR      r0,[sp,#0x18]         ;2219
0002da  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2219
0002de  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2219
0002e2  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2219
0002e6  e9cd0102          STRD     r0,r1,[sp,#8]         ;2219
0002ea  f50a7068          ADD      r0,r10,#0x3a0         ;2219
0002ee  c803              LDM      r0,{r0,r1}            ;2219
0002f0  e9cd0100          STRD     r0,r1,[sp,#0]         ;2219
0002f4  f50a7066          ADD      r0,r10,#0x398         ;2219
0002f8  c803              LDM      r0,{r0,r1}            ;2219
0002fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2219
0002fe  f50a7064          ADD      r0,r10,#0x390         ;2219
000302  c803              LDM      r0,{r0,r1}            ;2219
000304  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2219
000308  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2219
00030c  f7fffffe          BL       inverse_time_rate_arc
                  |L12.784|
000310  e9cd8906          STRD     r8,r9,[sp,#0x18]      ;2222
000314  9815              LDR      r0,[sp,#0x54]         ;2222
000316  9004              STR      r0,[sp,#0x10]         ;2222
000318  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2222
00031c  e9cd0102          STRD     r0,r1,[sp,#8]         ;2222
000320  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2222
000324  4632              MOV      r2,r6                 ;2222
000326  463b              MOV      r3,r7                 ;2222
000328  e9cd0100          STRD     r0,r1,[sp,#0]         ;2222
00032c  4620              MOV      r0,r4                 ;2222
00032e  4629              MOV      r1,r5                 ;2222
000330  f7fffffe          BL       ARC_FEED
000334  f50a7064          ADD      r0,r10,#0x390         ;2246
000338  c030              STM      r0!,{r4,r5}           ;2246
00033a  f50a7066          ADD      r0,r10,#0x398         ;2247
00033e  c0c0              STM      r0!,{r6,r7}           ;2247
000340  f8ca93a4          STR      r9,[r10,#0x3a4]       ;2248
000344  f8ca83a0          STR      r8,[r10,#0x3a0]       ;2248
000348  2000              MOVS     r0,#0                 ;2259
00034a  e6bb              B        |L12.196|
;;;2261   
                          ENDP

                  |L12.844|
                          DCD      0xeb1c432d
                  |L12.848|
                          DCD      0x3f2a36e2
                  |L12.852|
                          DCD      0xd2f1a9fc
                  |L12.856|
                          DCD      0x3f60624d
                  |L12.860|
                          DCD      _setup+0xc000
                  |L12.864|
                          DCD      |symbol_number.451|
                  |L12.868|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc_comp2||, CODE, READONLY, ALIGN=2

                  convert_arc_comp2 PROC
;;;2300   
;;;2301       static int convert_arc_comp2(                 /* ARGUMENTS                                 */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;2302       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)           */
;;;2303       block_pointer block,                          /* pointer to a block of RS274/NGC instructions   */
;;;2304       setup_pointer settings,                       /* pointer to machine settings                    */
;;;2305       double end_x,                                 /* x-value at end of programmed (then actual) arc */
;;;2306       double end_y,                                 /* y-value at end of programmed (then actual) arc */
;;;2307       double end_z                                  /* z-value at end of arc                          */
;;;2308   #ifdef AA
;;;2309       , double AA_end                               /* a-value at end of arc                    *//*AA*/
;;;2310   #endif
;;;2311   #ifdef BB
;;;2312       , double BB_end                               /* b-value at end of arc                    *//*BB*/
;;;2313   #endif
;;;2314   #ifdef CC
;;;2315       , double CC_end                               /* c-value at end of arc                    *//*CC*/
;;;2316   #endif
;;;2317       )
;;;2318       {
000004  b0b7              SUB      sp,sp,#0xdc
000006  4616              MOV      r6,r2
000008  ac44              ADD      r4,sp,#0x110
00000a  e89407b0          LDM      r4,{r4,r5,r7-r10}
;;;2319           static char name[] SET_TO "convert_arc_comp2";
;;;2320           double alpha;                             /* direction of tangent to start of arc */
;;;2321           double arc_radius;
;;;2322           double beta;                              /* angle between two tangents above */
;;;2323           double center_x;                          /* center of arc */
;;;2324           double center_y;
;;;2325           double delta;                             /* direction of radius from start of arc to center of arc */
;;;2326           double gamma;                             /* direction of perpendicular to arc at end */
;;;2327           double mid_x;
;;;2328           double mid_y;
;;;2329           int side;
;;;2330      /* angle for testing corners */
;;;2331           double small SET_TO TOLERANCE_CONCAVE_CORNER;
00000e  49ff              LDR      r1,|L13.1036|
000010  48ff              LDR      r0,|L13.1040|
000012  e9cd1022          STRD     r1,r0,[sp,#0x88]
;;;2332           double start_x;
;;;2333           double start_y;
;;;2334           int status;                               /* status returned from CHP function call     */
;;;2335           double theta;                             /* direction of tangent to last cut */
;;;2336           double tolerance;
;;;2337           double tool_radius;
;;;2338           int turn;                                 /* number of full or partial circles CCW */
;;;2339   
;;;2340      /* find basic arc data: center_x, center_y, and turn */
;;;2341   
;;;2342           start_x SET_TO settings->program_x;
000016  f5064130          ADD      r1,r6,#0xb000
00001a  f50171bc          ADD      r1,r1,#0x178
00001e  c903              LDM      r1,{r0,r1}
000020  e9cd0120          STRD     r0,r1,[sp,#0x80]
;;;2343           start_y SET_TO settings->program_y;
000024  f5064030          ADD      r0,r6,#0xb000
000028  f50070c0          ADD      r0,r0,#0x180
00002c  c803              LDM      r0,{r0,r1}
00002e  e9cd011e          STRD     r0,r1,[sp,#0x78]
;;;2344           tolerance SET_TO (settings->length_units IS CANON_UNITS_INCHES) ?
000032  f8d6051c          LDR      r0,[r6,#0x51c]
000036  2801              CMP      r0,#1
000038  d102              BNE      |L13.64|
;;;2345               TOLERANCE_INCH : TOLERANCE_MM;
00003a  48f6              LDR      r0,|L13.1044|
00003c  49f6              LDR      r1,|L13.1048|
00003e  e001              B        |L13.68|
                  |L13.64|
000040  48f6              LDR      r0,|L13.1052|
000042  49f7              LDR      r1,|L13.1056|
                  |L13.68|
000044  e9cd0118          STRD     r0,r1,[sp,#0x60]
;;;2346   
;;;2347           if (block->r_flag)
000048  9838              LDR      r0,[sp,#0xe0]
00004a  f8d001c0          LDR      r0,[r0,#0x1c0]
00004e  2800              CMP      r0,#0
000050  d043              BEQ      |L13.218|
;;;2348           {
;;;2349               CHP(arc_data_r(move, start_x, start_y, end_x, end_y,
000052  a815              ADD      r0,sp,#0x54
000054  a92c              ADD      r1,sp,#0xb0
000056  aa2e              ADD      r2,sp,#0xb8
000058  e9cd2108          STRD     r2,r1,[sp,#0x20]
00005c  900a              STR      r0,[sp,#0x28]
00005e  9838              LDR      r0,[sp,#0xe0]
000060  f50070e4          ADD      r0,r0,#0x1c8
000064  c803              LDM      r0,{r0,r1}
000066  aa02              ADD      r2,sp,#8
000068  e8a201b0          STM      r2!,{r4,r5,r7,r8}
00006c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000070  e9dd011e          LDRD     r0,r1,[sp,#0x78]
000074  e9cd0100          STRD     r0,r1,[sp,#0]
000078  e9dd2320          LDRD     r2,r3,[sp,#0x80]
00007c  9837              LDR      r0,[sp,#0xdc]
00007e  f7fffffe          BL       arc_data_r
000082  901d              STR      r0,[sp,#0x74]
000084  2800              CMP      r0,#0
000086  d073              BEQ      |L13.368|
000088  48e6              LDR      r0,|L13.1060|
00008a  f8d0014c          LDR      r0,[r0,#0x14c]
00008e  2831              CMP      r0,#0x31
000090  da21              BGE      |L13.214|
000092  49e4              LDR      r1,|L13.1060|
000094  f8d1314c          LDR      r3,[r1,#0x14c]
000098  f8d1114c          LDR      r1,[r1,#0x14c]
00009c  1c49              ADDS     r1,r1,#1
00009e  4ae1              LDR      r2,|L13.1060|
0000a0  f8c2114c          STR      r1,[r2,#0x14c]
0000a4  eb030183          ADD      r1,r3,r3,LSL #2
0000a8  f6a26254          SUB      r2,r2,#0xe54
0000ac  eb021101          ADD      r1,r2,r1,LSL #4
0000b0  4608              MOV      r0,r1
0000b2  49dd              LDR      r1,|L13.1064|
0000b4  f7fffffe          BL       strcpy
0000b8  f04f0100          MOV      r1,#0
0000bc  48d9              LDR      r0,|L13.1060|
0000be  f8d0014c          LDR      r0,[r0,#0x14c]
0000c2  eb000080          ADD      r0,r0,r0,LSL #2
0000c6  4ad9              LDR      r2,|L13.1068|
0000c8  eb021000          ADD      r0,r2,r0,LSL #4
0000cc  7001              STRB     r1,[r0,#0]
0000ce  981d              LDR      r0,[sp,#0x74]
                  |L13.208|
;;;2350                   block->r_number, &center_x, &center_y, &turn));
;;;2351           }
;;;2352           else
;;;2353           {
;;;2354               CHP(arc_data_ijk(move, start_x, start_y, end_x, end_y,
;;;2355                   block->i_number, block->j_number,
;;;2356                   &center_x, &center_y, &turn, tolerance));
;;;2357           }
;;;2358   
;;;2359      /* compute other data */
;;;2360           side SET_TO settings->cutter_comp_side;
;;;2361      /* always is positive */
;;;2362           tool_radius SET_TO settings->cutter_comp_radius;
;;;2363           arc_radius SET_TO hypot((center_x - end_x), (center_y - end_y));
;;;2364           theta SET_TO
;;;2365               atan2(settings->current_y - start_y, settings->current_x - start_x);
;;;2366           theta SET_TO (side IS LEFT) ? (theta - PI2) : (theta + PI2);
;;;2367           delta SET_TO atan2(center_y - start_y, center_x - start_x);
;;;2368           alpha SET_TO (move IS G_3) ? (delta - PI2) : (delta + PI2);
;;;2369           beta SET_TO (side IS LEFT) ? (theta - alpha) : (alpha - theta);
;;;2370           beta SET_TO (beta > (1.5 * PI))  ? (beta - TWO_PI) :
;;;2371           (beta < -PI2) ? (beta + TWO_PI) : beta;
;;;2372   
;;;2373           if (((side IS LEFT)  AND (move IS G_3)) OR
;;;2374               ((side IS RIGHT) AND (move IS G_2)))
;;;2375           {
;;;2376               gamma SET_TO atan2 ((center_y - end_y), (center_x - end_x));
;;;2377               CHK((arc_radius <= tool_radius),
;;;2378                   NCE_TOOL_RADIUS_NOT_LESS_THAN_ARC_RADIUS_WITH_COMP);
;;;2379           }
;;;2380           else
;;;2381           {
;;;2382               gamma SET_TO atan2 ((end_y - center_y), (end_x - center_x));
;;;2383               delta SET_TO (delta + PI);
;;;2384           }
;;;2385   
;;;2386           settings->program_x SET_TO end_x;
;;;2387           settings->program_y SET_TO end_y;
;;;2388      /* end_x reset actual */
;;;2389           end_x SET_TO (end_x + (tool_radius * cos(gamma)));
;;;2390      /* end_y reset actual */
;;;2391           end_y SET_TO (end_y + (tool_radius * sin(gamma)));
;;;2392   
;;;2393      /* check if extra arc needed and insert if so */
;;;2394   
;;;2395           CHK(((beta < -small) OR (beta > (PI + small))),
;;;2396               NCE_CONCAVE_CORNER_WITH_CUTTER_RADIUS_COMP);
;;;2397           if (beta > small)                         /* two arcs needed */
;;;2398           {
;;;2399               mid_x SET_TO (start_x + (tool_radius * cos(delta)));
;;;2400               mid_y SET_TO (start_y + (tool_radius * sin(delta)));
;;;2401               if (settings->feed_mode IS INVERSE_TIME)
;;;2402                   inverse_time_rate_arc2(start_x, start_y, (side IS LEFT) ? -1 : 1,
;;;2403                   mid_x, mid_y, center_x, center_y, turn,
;;;2404                   end_x, end_y, end_z, block, settings);
;;;2405               ARC_FEED(mid_x, mid_y, start_x, start_y, ((side IS LEFT) ? -1 : 1),
;;;2406                   settings->current_z
;;;2407       #ifdef AA
;;;2408                   , AA_end
;;;2409       #else
;;;2410       #ifdef ALL_AXES
;;;2411                   , 0
;;;2412       #endif
;;;2413       #endif
;;;2414       #ifdef BB
;;;2415                   , BB_end
;;;2416       #else
;;;2417       #ifdef ALL_AXES
;;;2418                   , 0
;;;2419       #endif
;;;2420       #endif
;;;2421       #ifdef CC
;;;2422                   , CC_end
;;;2423       #else
;;;2424       #ifdef ALL_AXES
;;;2425                   , 0
;;;2426       #endif
;;;2427       #endif
;;;2428                   );
;;;2429               ARC_FEED(end_x, end_y, center_x, center_y, turn,
;;;2430                   end_z
;;;2431       #ifdef AA
;;;2432                   , AA_end
;;;2433       #else
;;;2434       #ifdef ALL_AXES
;;;2435                   , 0
;;;2436       #endif
;;;2437       #endif
;;;2438       #ifdef BB
;;;2439                   , BB_end
;;;2440       #else
;;;2441       #ifdef ALL_AXES
;;;2442                   , 0
;;;2443       #endif
;;;2444       #endif
;;;2445       #ifdef CC
;;;2446                   , CC_end
;;;2447       #else
;;;2448       #ifdef ALL_AXES
;;;2449                   , 0
;;;2450       #endif
;;;2451       #endif
;;;2452                   );
;;;2453           }
;;;2454           else                                      /* one arc needed */
;;;2455           {
;;;2456               if (settings->feed_mode IS INVERSE_TIME)
;;;2457                   inverse_time_rate_arc(settings->current_x, settings->current_y,
;;;2458                       settings->current_z, center_x, center_y, turn,
;;;2459                       end_x, end_y, end_z, block, settings);
;;;2460               ARC_FEED(end_x, end_y, center_x, center_y, turn,
;;;2461                   end_z
;;;2462       #ifdef AA
;;;2463                   , AA_end
;;;2464       #else
;;;2465       #ifdef ALL_AXES
;;;2466                   , 0
;;;2467       #endif
;;;2468       #endif
;;;2469       #ifdef BB
;;;2470                   , BB_end
;;;2471       #else
;;;2472       #ifdef ALL_AXES
;;;2473                   , 0
;;;2474       #endif
;;;2475       #endif
;;;2476       #ifdef CC
;;;2477                   , CC_end
;;;2478       #else
;;;2479       #ifdef ALL_AXES
;;;2480                   , 0
;;;2481       #endif
;;;2482       #endif
;;;2483                   );
;;;2484           }
;;;2485   
;;;2486           settings->current_x SET_TO end_x;
;;;2487           settings->current_y SET_TO end_y;
;;;2488           settings->current_z SET_TO end_z;
;;;2489   #ifdef AA
;;;2490           settings->AA_current SET_TO AA_end;       /*AA*/
;;;2491   #endif
;;;2492   #ifdef BB
;;;2493           settings->BB_current SET_TO BB_end;       /*BB*/
;;;2494   #endif
;;;2495   #ifdef CC
;;;2496           settings->CC_current SET_TO CC_end;       /*CC*/
;;;2497   #endif
;;;2498   
;;;2499           return RS274NGC_OK;
;;;2500       }
0000d0  b03b              ADD      sp,sp,#0xec
0000d2  e8bd8ff0          POP      {r4-r11,pc}
                  |L13.214|
0000d6  981d              LDR      r0,[sp,#0x74]         ;2349
0000d8  e7fa              B        |L13.208|
                  |L13.218|
0000da  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;2354
0000de  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;2354
0000e2  a815              ADD      r0,sp,#0x54           ;2354
0000e4  a92c              ADD      r1,sp,#0xb0           ;2354
0000e6  aa2e              ADD      r2,sp,#0xb8           ;2354
0000e8  e9cd210a          STRD     r2,r1,[sp,#0x28]      ;2354
0000ec  900c              STR      r0,[sp,#0x30]         ;2354
0000ee  9838              LDR      r0,[sp,#0xe0]         ;2354
0000f0  f50070b0          ADD      r0,r0,#0x160          ;2354
0000f4  c803              LDM      r0,{r0,r1}            ;2354
0000f6  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2354
0000fa  9838              LDR      r0,[sp,#0xe0]         ;2354
0000fc  f50070a8          ADD      r0,r0,#0x150          ;2354
000100  c803              LDM      r0,{r0,r1}            ;2354
000102  aa02              ADD      r2,sp,#8              ;2354
000104  e8a201b0          STM      r2!,{r4,r5,r7,r8}     ;2354
000108  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2354
00010c  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2354
000110  e9cd0100          STRD     r0,r1,[sp,#0]         ;2354
000114  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2354
000118  9837              LDR      r0,[sp,#0xdc]         ;2354
00011a  f7fffffe          BL       arc_data_ijk
00011e  901d              STR      r0,[sp,#0x74]         ;2354
000120  b318              CBZ      r0,|L13.362|
000122  48c0              LDR      r0,|L13.1060|
000124  f8d0014c          LDR      r0,[r0,#0x14c]        ;2354
000128  2831              CMP      r0,#0x31              ;2354
00012a  da1f              BGE      |L13.364|
00012c  49bd              LDR      r1,|L13.1060|
00012e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2354
000132  f8d1114c          LDR      r1,[r1,#0x14c]        ;2354
000136  1c49              ADDS     r1,r1,#1              ;2354
000138  4aba              LDR      r2,|L13.1060|
00013a  f8c2114c          STR      r1,[r2,#0x14c]        ;2354
00013e  eb030183          ADD      r1,r3,r3,LSL #2       ;2354
000142  4aba              LDR      r2,|L13.1068|
000144  eb021101          ADD      r1,r2,r1,LSL #4       ;2354
000148  4608              MOV      r0,r1                 ;2354
00014a  49b7              LDR      r1,|L13.1064|
00014c  f7fffffe          BL       strcpy
000150  f04f0100          MOV      r1,#0                 ;2354
000154  48b3              LDR      r0,|L13.1060|
000156  f8d0014c          LDR      r0,[r0,#0x14c]        ;2354
00015a  eb000080          ADD      r0,r0,r0,LSL #2       ;2354
00015e  4ab3              LDR      r2,|L13.1068|
000160  eb021000          ADD      r0,r2,r0,LSL #4       ;2354
000164  7001              STRB     r1,[r0,#0]            ;2354
000166  981d              LDR      r0,[sp,#0x74]         ;2354
000168  e7b2              B        |L13.208|
                  |L13.362|
00016a  e001              B        |L13.368|
                  |L13.364|
00016c  981d              LDR      r0,[sp,#0x74]         ;2354
00016e  e7af              B        |L13.208|
                  |L13.368|
000170  f5067664          ADD      r6,r6,#0x390          ;2360
000174  f8d6b020          LDR      r11,[r6,#0x20]        ;2360
000178  e9d60106          LDRD     r0,r1,[r6,#0x18]      ;2362
00017c  e9cd0116          STRD     r0,r1,[sp,#0x58]      ;2362
000180  463a              MOV      r2,r7                 ;2363
000182  4643              MOV      r3,r8                 ;2363
000184  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2363
000188  f7fffffe          BL       __aeabi_dsub
00018c  4622              MOV      r2,r4                 ;2363
00018e  462b              MOV      r3,r5                 ;2363
000190  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2363
000194  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2363
000198  f7fffffe          BL       __aeabi_dsub
00019c  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2363
0001a0  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2363
0001a4  f7fffffe          BL       hypot
0001a8  e9cd0132          STRD     r0,r1,[sp,#0xc8]      ;2363
0001ac  e9d60100          LDRD     r0,r1,[r6,#0]         ;2364
0001b0  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;2364
0001b4  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2364
0001b8  f7fffffe          BL       __aeabi_dsub
0001bc  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2364
0001c0  e9d61002          LDRD     r1,r0,[r6,#8]         ;2364
0001c4  f5a67664          SUB      r6,r6,#0x390          ;2364
0001c8  e9cd100e          STRD     r1,r0,[sp,#0x38]      ;2364
0001cc  4608              MOV      r0,r1                 ;2364
0001ce  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2364
0001d2  990f              LDR      r1,[sp,#0x3c]         ;2364
0001d4  f7fffffe          BL       __aeabi_dsub
0001d8  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2364
0001dc  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2364
0001e0  f7fffffe          BL       atan2
0001e4  e9cd011a          STRD     r0,r1,[sp,#0x68]      ;2364
0001e8  f1bb0f02          CMP      r11,#2                ;2366
0001ec  d106              BNE      |L13.508|
0001ee  4a90              LDR      r2,|L13.1072|
0001f0  4b90              LDR      r3,|L13.1076|
0001f2  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2366
0001f6  f7fffffe          BL       __aeabi_dsub
0001fa  e005              B        |L13.520|
                  |L13.508|
0001fc  4a8c              LDR      r2,|L13.1072|
0001fe  4b8d              LDR      r3,|L13.1076|
000200  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2366
000204  f7fffffe          BL       __aeabi_dadd
                  |L13.520|
000208  e9cd011a          STRD     r0,r1,[sp,#0x68]      ;2366
00020c  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2367
000210  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2367
000214  f7fffffe          BL       __aeabi_dsub
000218  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2367
00021c  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2367
000220  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2367
000224  f7fffffe          BL       __aeabi_dsub
000228  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2367
00022c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2367
000230  f7fffffe          BL       atan2
000234  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;2367
000238  9837              LDR      r0,[sp,#0xdc]         ;2368
00023a  281e              CMP      r0,#0x1e              ;2368
00023c  d106              BNE      |L13.588|
00023e  4a7c              LDR      r2,|L13.1072|
000240  4b7c              LDR      r3,|L13.1076|
000242  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2368
000246  f7fffffe          BL       __aeabi_dsub
00024a  e005              B        |L13.600|
                  |L13.588|
00024c  4a78              LDR      r2,|L13.1072|
00024e  4b79              LDR      r3,|L13.1076|
000250  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2368
000254  f7fffffe          BL       __aeabi_dadd
                  |L13.600|
000258  e9cd0134          STRD     r0,r1,[sp,#0xd0]      ;2368
00025c  f1bb0f02          CMP      r11,#2                ;2369
000260  d106              BNE      |L13.624|
000262  e9dd2334          LDRD     r2,r3,[sp,#0xd0]      ;2369
000266  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2369
00026a  f7fffffe          BL       __aeabi_dsub
00026e  e005              B        |L13.636|
                  |L13.624|
000270  e9dd231a          LDRD     r2,r3,[sp,#0x68]      ;2369
000274  e9dd0134          LDRD     r0,r1,[sp,#0xd0]      ;2369
000278  f7fffffe          BL       __aeabi_dsub
                  |L13.636|
00027c  e9cd0130          STRD     r0,r1,[sp,#0xc0]      ;2369
000280  4a6d              LDR      r2,|L13.1080|
000282  4b6e              LDR      r3,|L13.1084|
000284  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2370
000288  f7fffffe          BL       __aeabi_cdrcmple
00028c  d206              BCS      |L13.668|
00028e  4a68              LDR      r2,|L13.1072|
000290  4b6b              LDR      r3,|L13.1088|
000292  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2370
000296  f7fffffe          BL       __aeabi_dsub
00029a  e00f              B        |L13.700|
                  |L13.668|
00029c  4a64              LDR      r2,|L13.1072|
00029e  4b69              LDR      r3,|L13.1092|
0002a0  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2371
0002a4  f7fffffe          BL       __aeabi_cdcmple
0002a8  d206              BCS      |L13.696|
0002aa  4a61              LDR      r2,|L13.1072|
0002ac  4b64              LDR      r3,|L13.1088|
0002ae  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2371
0002b2  f7fffffe          BL       __aeabi_dadd
0002b6  e001              B        |L13.700|
                  |L13.696|
0002b8  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2371
                  |L13.700|
0002bc  e9cd0130          STRD     r0,r1,[sp,#0xc0]      ;2371
0002c0  f1bb0f02          CMP      r11,#2                ;2373
0002c4  d102              BNE      |L13.716|
0002c6  9837              LDR      r0,[sp,#0xdc]         ;2373
0002c8  281e              CMP      r0,#0x1e              ;2373
0002ca  d005              BEQ      |L13.728|
                  |L13.716|
0002cc  f1bb0f01          CMP      r11,#1                ;2374
0002d0  d145              BNE      |L13.862|
0002d2  9837              LDR      r0,[sp,#0xdc]         ;2374
0002d4  2814              CMP      r0,#0x14              ;2374
0002d6  d142              BNE      |L13.862|
                  |L13.728|
0002d8  4622              MOV      r2,r4                 ;2376
0002da  462b              MOV      r3,r5                 ;2376
0002dc  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2376
0002e0  f7fffffe          BL       __aeabi_dsub
0002e4  463a              MOV      r2,r7                 ;2376
0002e6  4643              MOV      r3,r8                 ;2376
0002e8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2376
0002ec  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2376
0002f0  f7fffffe          BL       __aeabi_dsub
0002f4  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2376
0002f8  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2376
0002fc  f7fffffe          BL       atan2
000300  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;2376
000304  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2377
000308  e9dd0132          LDRD     r0,r1,[sp,#0xc8]      ;2377
00030c  f7fffffe          BL       __aeabi_cdcmple
000310  d843              BHI      |L13.922|
000312  f04f0100          MOV      r1,#0                 ;2377
000316  4843              LDR      r0,|L13.1060|
000318  f8c0114c          STR      r1,[r0,#0x14c]        ;2377
00031c  4601              MOV      r1,r0                 ;2377
00031e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2377
000322  f8d1114c          LDR      r1,[r1,#0x14c]        ;2377
000326  f1010101          ADD      r1,r1,#1              ;2377
00032a  4602              MOV      r2,r0                 ;2377
00032c  f8c2114c          STR      r1,[r2,#0x14c]        ;2377
000330  eb030183          ADD      r1,r3,r3,LSL #2       ;2377
000334  4a3d              LDR      r2,|L13.1068|
000336  eb021101          ADD      r1,r2,r1,LSL #4       ;2377
00033a  4608              MOV      r0,r1                 ;2377
00033c  493a              LDR      r1,|L13.1064|
00033e  f7fffffe          BL       strcpy
000342  f04f0100          MOV      r1,#0                 ;2377
000346  4837              LDR      r0,|L13.1060|
000348  f8d0014c          LDR      r0,[r0,#0x14c]        ;2377
00034c  eb000080          ADD      r0,r0,r0,LSL #2       ;2377
000350  4a36              LDR      r2,|L13.1068|
000352  eb021000          ADD      r0,r2,r0,LSL #4       ;2377
000356  7001              STRB     r1,[r0,#0]            ;2377
000358  f04f00a7          MOV      r0,#0xa7              ;2377
00035c  e6b8              B        |L13.208|
                  |L13.862|
00035e  4620              MOV      r0,r4                 ;2382
000360  4629              MOV      r1,r5                 ;2382
000362  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;2382
000366  f7fffffe          BL       __aeabi_dsub
00036a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2382
00036e  4638              MOV      r0,r7                 ;2382
000370  4641              MOV      r1,r8                 ;2382
000372  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;2382
000376  f7fffffe          BL       __aeabi_dsub
00037a  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2382
00037e  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2382
000382  f7fffffe          BL       atan2
000386  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;2382
00038a  4a29              LDR      r2,|L13.1072|
00038c  4b2e              LDR      r3,|L13.1096|
00038e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2383
000392  f7fffffe          BL       __aeabi_dadd
000396  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;2383
                  |L13.922|
00039a  f5064030          ADD      r0,r6,#0xb000         ;2386
00039e  f50070bc          ADD      r0,r0,#0x178          ;2386
0003a2  c030              STM      r0!,{r4,r5}           ;2386
0003a4  f5064030          ADD      r0,r6,#0xb000         ;2387
0003a8  f8c08184          STR      r8,[r0,#0x184]        ;2387
0003ac  f8c07180          STR      r7,[r0,#0x180]        ;2387
0003b0  e9dd0128          LDRD     r0,r1,[sp,#0xa0]      ;2389
0003b4  f7fffffe          BL       ||cos||
0003b8  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2389
0003bc  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2389
0003c0  f7fffffe          BL       __aeabi_dmul
0003c4  4622              MOV      r2,r4                 ;2389
0003c6  462b              MOV      r3,r5                 ;2389
0003c8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2389
0003cc  f7fffffe          BL       __aeabi_dadd
0003d0  4604              MOV      r4,r0                 ;2389
0003d2  460d              MOV      r5,r1                 ;2389
0003d4  e9dd0128          LDRD     r0,r1,[sp,#0xa0]      ;2391
0003d8  f7fffffe          BL       ||sin||
0003dc  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2391
0003e0  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2391
0003e4  f7fffffe          BL       __aeabi_dmul
0003e8  463a              MOV      r2,r7                 ;2391
0003ea  4643              MOV      r3,r8                 ;2391
0003ec  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2391
0003f0  f7fffffe          BL       __aeabi_dadd
0003f4  4607              MOV      r7,r0                 ;2391
0003f6  4688              MOV      r8,r1                 ;2391
0003f8  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;2395
0003fc  f0814100          EOR      r1,r1,#0x80000000     ;2395
000400  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2395
000404  e9dd2330          LDRD     r2,r3,[sp,#0xc0]      ;2395
000408  e020              B        |L13.1100|
00040a  0000              DCW      0x0000
                  |L13.1036|
                          DCD      0x47ae147b
                  |L13.1040|
                          DCD      0x3f847ae1
                  |L13.1044|
                          DCD      0xeb1c432d
                  |L13.1048|
                          DCD      0x3f2a36e2
                  |L13.1052|
                          DCD      0xd2f1a9fc
                  |L13.1056|
                          DCD      0x3f60624d
                  |L13.1060|
                          DCD      _setup+0xc000
                  |L13.1064|
                          DCD      |symbol_number.452|
                  |L13.1068|
                          DCD      _setup+0xb1ac
                  |L13.1072|
                          DCD      0x54442d18
                  |L13.1076|
                          DCD      0x3ff921fb
                  |L13.1080|
                          DCD      0x7f3321d2
                  |L13.1084|
                          DCD      0x4012d97c
                  |L13.1088|
                          DCD      0x401921fb
                  |L13.1092|
                          DCD      0xbff921fb
                  |L13.1096|
                          DCD      0x400921fb
                  |L13.1100|
00044c  f7fffffe          BL       __aeabi_cdrcmple
000450  d30c              BCC      |L13.1132|
000452  4880              LDR      r0,|L13.1620|
000454  4980              LDR      r1,|L13.1624|
000456  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;2395
00045a  f7fffffe          BL       __aeabi_dadd
00045e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2395
000462  e9dd2330          LDRD     r2,r3,[sp,#0xc0]      ;2395
000466  f7fffffe          BL       __aeabi_cdcmple
00046a  d226              BCS      |L13.1210|
                  |L13.1132|
00046c  f04f0100          MOV      r1,#0                 ;2395
000470  487a              LDR      r0,|L13.1628|
000472  f8c0114c          STR      r1,[r0,#0x14c]        ;2395
000476  4601              MOV      r1,r0                 ;2395
000478  f8d1314c          LDR      r3,[r1,#0x14c]        ;2395
00047c  f8d1114c          LDR      r1,[r1,#0x14c]        ;2395
000480  f1010101          ADD      r1,r1,#1              ;2395
000484  4602              MOV      r2,r0                 ;2395
000486  f8c2114c          STR      r1,[r2,#0x14c]        ;2395
00048a  eb030183          ADD      r1,r3,r3,LSL #2       ;2395
00048e  f6a06254          SUB      r2,r0,#0xe54          ;2395
000492  eb021101          ADD      r1,r2,r1,LSL #4       ;2395
000496  4608              MOV      r0,r1                 ;2395
000498  4971              LDR      r1,|L13.1632|
00049a  f7fffffe          BL       strcpy
00049e  f04f0100          MOV      r1,#0                 ;2395
0004a2  486e              LDR      r0,|L13.1628|
0004a4  f8d0014c          LDR      r0,[r0,#0x14c]        ;2395
0004a8  eb000080          ADD      r0,r0,r0,LSL #2       ;2395
0004ac  4a6d              LDR      r2,|L13.1636|
0004ae  eb021000          ADD      r0,r2,r0,LSL #4       ;2395
0004b2  7001              STRB     r1,[r0,#0]            ;2395
0004b4  f04f0043          MOV      r0,#0x43              ;2395
0004b8  e60a              B        |L13.208|
                  |L13.1210|
0004ba  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;2397
0004be  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2397
0004c2  f7fffffe          BL       __aeabi_cdrcmple
0004c6  d27c              BCS      |L13.1474|
0004c8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2399
0004cc  f7fffffe          BL       ||cos||
0004d0  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2399
0004d4  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2399
0004d8  f7fffffe          BL       __aeabi_dmul
0004dc  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2399
0004e0  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2399
0004e4  f7fffffe          BL       __aeabi_dadd
0004e8  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;2399
0004ec  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2400
0004f0  f7fffffe          BL       ||sin||
0004f4  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2400
0004f8  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2400
0004fc  f7fffffe          BL       __aeabi_dmul
000500  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2400
000504  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2400
000508  f7fffffe          BL       __aeabi_dadd
00050c  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;2400
000510  f8d603fc          LDR      r0,[r6,#0x3fc]        ;2401
000514  2801              CMP      r0,#1                 ;2401
000516  d125              BNE      |L13.1380|
000518  9838              LDR      r0,[sp,#0xe0]         ;2402
00051a  a90c              ADD      r1,sp,#0x30           ;2402
00051c  e8a107b0          STM      r1!,{r4,r5,r7-r10}    ;2402
000520  e9cd0612          STRD     r0,r6,[sp,#0x48]      ;2402
000524  9815              LDR      r0,[sp,#0x54]         ;2402
000526  900a              STR      r0,[sp,#0x28]         ;2402
000528  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2402
00052c  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2402
000530  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2402
000534  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2402
000538  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;2402
00053c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2402
000540  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;2402
000544  e9cd0102          STRD     r0,r1,[sp,#8]         ;2402
000548  f1bb0f02          CMP      r11,#2                ;2402
00054c  d102              BNE      |L13.1364|
00054e  f04f30ff          MOV      r0,#0xffffffff        ;2402
000552  e000              B        |L13.1366|
                  |L13.1364|
000554  2001              MOVS     r0,#1                 ;2402
                  |L13.1366|
000556  9000              STR      r0,[sp,#0]            ;2402
000558  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2402
00055c  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2402
000560  f7fffffe          BL       inverse_time_rate_arc2
                  |L13.1380|
000564  f5067068          ADD      r0,r6,#0x3a0          ;2405
000568  c803              LDM      r0,{r0,r1}            ;2405
00056a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2405
00056e  f1bb0f02          CMP      r11,#2                ;2405
000572  d102              BNE      |L13.1402|
000574  f04f30ff          MOV      r0,#0xffffffff        ;2405
000578  e000              B        |L13.1404|
                  |L13.1402|
00057a  2001              MOVS     r0,#1                 ;2405
                  |L13.1404|
00057c  9004              STR      r0,[sp,#0x10]         ;2405
00057e  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2405
000582  e9cd0102          STRD     r0,r1,[sp,#8]         ;2405
000586  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2405
00058a  e9cd0100          STRD     r0,r1,[sp,#0]         ;2405
00058e  e9dd2324          LDRD     r2,r3,[sp,#0x90]      ;2405
000592  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;2405
000596  f7fffffe          BL       ARC_FEED
00059a  e9cd9a06          STRD     r9,r10,[sp,#0x18]     ;2429
00059e  9815              LDR      r0,[sp,#0x54]         ;2429
0005a0  9004              STR      r0,[sp,#0x10]         ;2429
0005a2  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2429
0005a6  e9cd0102          STRD     r0,r1,[sp,#8]         ;2429
0005aa  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2429
0005ae  463a              MOV      r2,r7                 ;2429
0005b0  4643              MOV      r3,r8                 ;2429
0005b2  e9cd0100          STRD     r0,r1,[sp,#0]         ;2429
0005b6  4620              MOV      r0,r4                 ;2429
0005b8  4629              MOV      r1,r5                 ;2429
0005ba  f7fffffe          BL       ARC_FEED
0005be  e03b              B        |L13.1592|
0005c0  e7ff              B        |L13.1474|
                  |L13.1474|
0005c2  f8d603fc          LDR      r0,[r6,#0x3fc]        ;2456
0005c6  2801              CMP      r0,#1                 ;2456
0005c8  d124              BNE      |L13.1556|
0005ca  9838              LDR      r0,[sp,#0xe0]         ;2457
0005cc  a908              ADD      r1,sp,#0x20           ;2457
0005ce  e8a107b0          STM      r1!,{r4,r5,r7-r10}    ;2457
0005d2  e9cd060e          STRD     r0,r6,[sp,#0x38]      ;2457
0005d6  9815              LDR      r0,[sp,#0x54]         ;2457
0005d8  9006              STR      r0,[sp,#0x18]         ;2457
0005da  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2457
0005de  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2457
0005e2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2457
0005e6  f5067664          ADD      r6,r6,#0x390          ;2457
0005ea  e9cd0102          STRD     r0,r1,[sp,#8]         ;2457
0005ee  e9d60104          LDRD     r0,r1,[r6,#0x10]      ;2457
0005f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;2457
0005f6  e9d60102          LDRD     r0,r1,[r6,#8]         ;2457
0005fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2457
0005fe  e9d61000          LDRD     r1,r0,[r6,#0]         ;2457
000602  f5a67664          SUB      r6,r6,#0x390          ;2457
000606  e9cd1010          STRD     r1,r0,[sp,#0x40]      ;2457
00060a  4608              MOV      r0,r1                 ;2457
00060c  a911              ADD      r1,sp,#0x44           ;2457
00060e  c90e              LDM      r1,{r1-r3}            ;2457
000610  f7fffffe          BL       inverse_time_rate_arc
                  |L13.1556|
000614  e9cd9a06          STRD     r9,r10,[sp,#0x18]     ;2460
000618  9815              LDR      r0,[sp,#0x54]         ;2460
00061a  9004              STR      r0,[sp,#0x10]         ;2460
00061c  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2460
000620  e9cd0102          STRD     r0,r1,[sp,#8]         ;2460
000624  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2460
000628  463a              MOV      r2,r7                 ;2460
00062a  4643              MOV      r3,r8                 ;2460
00062c  e9cd0100          STRD     r0,r1,[sp,#0]         ;2460
000630  4620              MOV      r0,r4                 ;2460
000632  4629              MOV      r1,r5                 ;2460
000634  f7fffffe          BL       ARC_FEED
                  |L13.1592|
000638  f5067064          ADD      r0,r6,#0x390          ;2486
00063c  c030              STM      r0!,{r4,r5}           ;2486
00063e  f8c6839c          STR      r8,[r6,#0x39c]        ;2487
000642  f8c67398          STR      r7,[r6,#0x398]        ;2487
000646  f8c6a3a4          STR      r10,[r6,#0x3a4]       ;2488
00064a  f8c693a0          STR      r9,[r6,#0x3a0]        ;2488
00064e  2000              MOVS     r0,#0                 ;2499
000650  e53e              B        |L13.208|
;;;2501   
                          ENDP

000652  0000              DCW      0x0000
                  |L13.1620|
                          DCD      0x54442d18
                  |L13.1624|
                          DCD      0x400921fb
                  |L13.1628|
                          DCD      _setup+0xc000
                  |L13.1632|
                          DCD      |symbol_number.452|
                  |L13.1636|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_axis_offsets||, CODE, READONLY, ALIGN=2

                  convert_axis_offsets PROC
;;;2560   
;;;2561       static int convert_axis_offsets(              /* ARGUMENTS                               */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;2562       int g_code,                                   /* g_code being executed (must be in G_92 series) */
;;;2563       block_pointer block,                          /* pointer to a block of RS274/NGC instructions   */
;;;2564       setup_pointer settings)                       /* pointer to machine settings                    */
;;;2565       {
000004  b089              SUB      sp,sp,#0x24
000006  4681              MOV      r9,r0
000008  4688              MOV      r8,r1
00000a  4614              MOV      r4,r2
;;;2566           static char name[] SET_TO "convert_axis_offsets";
;;;2567           double * pars;                            /* short name for settings->parameters            */
;;;2568   
;;;2569           CHK((settings->cutter_comp_side ISNT OFF),/* not "IS ON" */
00000c  f8d403b0          LDR      r0,[r4,#0x3b0]
000010  b340              CBZ      r0,|L14.100|
000012  f04f0100          MOV      r1,#0
000016  48ff              LDR      r0,|L14.1044|
000018  f8c0114c          STR      r1,[r0,#0x14c]
00001c  4601              MOV      r1,r0
00001e  f8d1314c          LDR      r3,[r1,#0x14c]
000022  f8d1114c          LDR      r1,[r1,#0x14c]
000026  f1010101          ADD      r1,r1,#1
00002a  4602              MOV      r2,r0
00002c  f8c2114c          STR      r1,[r2,#0x14c]
000030  eb030183          ADD      r1,r3,r3,LSL #2
000034  f6a06254          SUB      r2,r0,#0xe54
000038  eb021101          ADD      r1,r2,r1,LSL #4
00003c  4608              MOV      r0,r1
00003e  49f6              LDR      r1,|L14.1048|
000040  f7fffffe          BL       strcpy
000044  f04f0100          MOV      r1,#0
000048  48f2              LDR      r0,|L14.1044|
00004a  f8d0014c          LDR      r0,[r0,#0x14c]
00004e  eb000080          ADD      r0,r0,r0,LSL #2
000052  4af2              LDR      r2,|L14.1052|
000054  eb021000          ADD      r0,r2,r0,LSL #4
000058  7001              STRB     r1,[r0,#0]
00005a  f04f0026          MOV      r0,#0x26
                  |L14.94|
;;;2570               NCE_CANNOT_CHANGE_AXIS_OFFSETS_WITH_CUTTER_RADIUS_COMP);
;;;2571           pars SET_TO settings->parameters;
;;;2572           if (g_code IS G_92)
;;;2573           {
;;;2574               if (block->x_flag IS ON)
;;;2575               {
;;;2576                   settings->axis_offset_x SET_TO
;;;2577                       (settings->current_x + settings->axis_offset_x - block->x_number);
;;;2578                   settings->current_x SET_TO block->x_number;
;;;2579               }
;;;2580   
;;;2581               if (block->y_flag IS ON)
;;;2582               {
;;;2583                   settings->axis_offset_y SET_TO
;;;2584                       (settings->current_y + settings->axis_offset_y - block->y_number);
;;;2585                   settings->current_y SET_TO block->y_number;
;;;2586               }
;;;2587   
;;;2588               if (block->z_flag IS ON)
;;;2589               {
;;;2590                   settings->axis_offset_z SET_TO
;;;2591                       (settings->current_z + settings->axis_offset_z - block->z_number);
;;;2592                   settings->current_z SET_TO block->z_number;
;;;2593               }
;;;2594   
;;;2595   #ifdef AA
;;;2596               if (block->a_flag IS ON)              /*AA*/
;;;2597   #endif
;;;2598   #ifdef AA
;;;2599               {                                     /*AA*/
;;;2600                   settings->AA_axis_offset SET_TO (settings->AA_current +
;;;2601       #endif
;;;2602       #ifdef AA
;;;2603      /*AA*/
;;;2604                       settings->AA_axis_offset - block->a_number);
;;;2605   #endif
;;;2606   #ifdef AA
;;;2607      /*AA*/
;;;2608                   settings->AA_current SET_TO block->a_number;
;;;2609               }
;;;2610   #endif
;;;2611   
;;;2612   #ifdef BB
;;;2613               if (block->b_flag IS ON)              /*BB*/
;;;2614   #endif
;;;2615   #ifdef BB
;;;2616               {                                     /*BB*/
;;;2617                   settings->BB_axis_offset SET_TO (settings->BB_current +
;;;2618       #endif
;;;2619       #ifdef BB
;;;2620      /*BB*/
;;;2621                       settings->BB_axis_offset - block->b_number);
;;;2622   #endif
;;;2623   #ifdef BB
;;;2624      /*BB*/
;;;2625                   settings->BB_current SET_TO block->b_number;
;;;2626               }
;;;2627   #endif
;;;2628   
;;;2629   #ifdef CC
;;;2630               if (block->c_flag IS ON)              /*CC*/
;;;2631   #endif
;;;2632   #ifdef CC
;;;2633               {                                     /*CC*/
;;;2634                   settings->CC_axis_offset SET_TO (settings->CC_current +
;;;2635       #endif
;;;2636       #ifdef CC
;;;2637      /*CC*/
;;;2638                       settings->CC_axis_offset - block->c_number);
;;;2639   #endif
;;;2640   #ifdef CC
;;;2641      /*CC*/
;;;2642                   settings->CC_current SET_TO block->c_number;
;;;2643               }
;;;2644   #endif
;;;2645   
;;;2646               SET_ORIGIN_OFFSETS(settings->origin_offset_x + settings->axis_offset_x,
;;;2647                   settings->origin_offset_y + settings->axis_offset_y,
;;;2648                   settings->origin_offset_z + settings->axis_offset_z
;;;2649       #ifdef AA
;;;2650                   ,                      (settings->AA_origin_offset + settings->AA_axis_offset)
;;;2651       #else
;;;2652       #ifdef ALL_AXES
;;;2653                   , 0
;;;2654       #endif
;;;2655       #endif
;;;2656       #ifdef BB
;;;2657                   ,                      (settings->BB_origin_offset + settings->BB_axis_offset)
;;;2658       #else
;;;2659       #ifdef ALL_AXES
;;;2660                   , 0
;;;2661       #endif
;;;2662       #endif
;;;2663       #ifdef CC
;;;2664                   ,                      (settings->CC_origin_offset + settings->CC_axis_offset)
;;;2665       #else
;;;2666       #ifdef ALL_AXES
;;;2667                   , 0
;;;2668       #endif
;;;2669       #endif
;;;2670                   );
;;;2671               pars[5211] SET_TO settings->axis_offset_x;
;;;2672               pars[5212] SET_TO settings->axis_offset_y;
;;;2673               pars[5213] SET_TO settings->axis_offset_z;
;;;2674   #ifdef AA
;;;2675      /*AA*/
;;;2676               pars[5214] SET_TO settings->AA_axis_offset;
;;;2677   #endif
;;;2678   #ifdef BB
;;;2679      /*BB*/
;;;2680               pars[5215] SET_TO settings->BB_axis_offset;
;;;2681   #endif
;;;2682   #ifdef CC
;;;2683      /*CC*/
;;;2684               pars[5216] SET_TO settings->CC_axis_offset;
;;;2685   #endif
;;;2686   
;;;2687           }
;;;2688           else if ((g_code IS G_92_1) OR (g_code IS G_92_2))
;;;2689           {
;;;2690               settings->current_x SET_TO
;;;2691                   settings->current_x + settings->axis_offset_x;
;;;2692               settings->current_y SET_TO
;;;2693                   settings->current_y + settings->axis_offset_y;
;;;2694               settings->current_z SET_TO
;;;2695                   settings->current_z + settings->axis_offset_z;
;;;2696   #ifdef AA
;;;2697               settings->AA_current SET_TO           /*AA*/
;;;2698       #endif
;;;2699       #ifdef AA
;;;2700      /*AA*/
;;;2701                   (settings->AA_current + settings->AA_axis_offset);
;;;2702   #endif
;;;2703   #ifdef BB
;;;2704               settings->BB_current SET_TO           /*BB*/
;;;2705       #endif
;;;2706       #ifdef BB
;;;2707      /*BB*/
;;;2708                   (settings->BB_current + settings->BB_axis_offset);
;;;2709   #endif
;;;2710   #ifdef CC
;;;2711               settings->CC_current SET_TO           /*CC*/
;;;2712       #endif
;;;2713       #ifdef CC
;;;2714      /*CC*/
;;;2715                   (settings->CC_current + settings->CC_axis_offset);
;;;2716   #endif
;;;2717               SET_ORIGIN_OFFSETS(settings->origin_offset_x,
;;;2718                   settings->origin_offset_y,
;;;2719                   settings->origin_offset_z
;;;2720       #ifdef AA
;;;2721                   ,            settings->AA_origin_offset
;;;2722       #else
;;;2723       #ifdef ALL_AXES
;;;2724                   , 0
;;;2725       #endif
;;;2726       #endif
;;;2727       #ifdef BB
;;;2728                   ,            settings->BB_origin_offset
;;;2729       #else
;;;2730       #ifdef ALL_AXES
;;;2731                   , 0
;;;2732       #endif
;;;2733       #endif
;;;2734       #ifdef CC
;;;2735                   ,            settings->CC_origin_offset
;;;2736       #else
;;;2737       #ifdef ALL_AXES
;;;2738                   , 0
;;;2739       #endif
;;;2740       #endif
;;;2741                   );
;;;2742               settings->axis_offset_x SET_TO 0.0;
;;;2743               settings->axis_offset_y SET_TO 0.0;
;;;2744               settings->axis_offset_z SET_TO 0.0;
;;;2745   #ifdef AA
;;;2746               settings->AA_axis_offset SET_TO 0.0;  /*AA*/
;;;2747   #endif
;;;2748   #ifdef BB
;;;2749               settings->BB_axis_offset SET_TO 0.0;  /*BB*/
;;;2750   #endif
;;;2751   #ifdef CC
;;;2752               settings->CC_axis_offset SET_TO 0.0;  /*CC*/
;;;2753   #endif
;;;2754               if (g_code IS G_92_1)
;;;2755               {
;;;2756                   pars[5211] SET_TO 0.0;
;;;2757                   pars[5212] SET_TO 0.0;
;;;2758                   pars[5213] SET_TO 0.0;
;;;2759   #ifdef AA
;;;2760                   pars[5214] SET_TO 0.0;            /*AA*/
;;;2761   #endif
;;;2762   #ifdef BB
;;;2763                   pars[5215] SET_TO 0.0;            /*BB*/
;;;2764   #endif
;;;2765   #ifdef CC
;;;2766                   pars[5216] SET_TO 0.0;            /*CC*/
;;;2767   #endif
;;;2768               }
;;;2769           }
;;;2770           else if (g_code IS G_92_3)
;;;2771           {
;;;2772               settings->current_x SET_TO
;;;2773                   settings->current_x + settings->axis_offset_x - pars[5211];
;;;2774               settings->current_y SET_TO
;;;2775                   settings->current_y + settings->axis_offset_y - pars[5212];
;;;2776               settings->current_z SET_TO
;;;2777                   settings->current_z + settings->axis_offset_z - pars[5213];
;;;2778   #ifdef AA
;;;2779               settings->AA_current SET_TO           /*AA*/
;;;2780       #endif
;;;2781       #ifdef AA
;;;2782      /*AA*/
;;;2783                   settings->AA_current + settings->AA_axis_offset - pars[5214];
;;;2784   #endif
;;;2785   #ifdef BB
;;;2786               settings->BB_current SET_TO           /*BB*/
;;;2787       #endif
;;;2788       #ifdef BB
;;;2789      /*BB*/
;;;2790                   settings->BB_current + settings->BB_axis_offset - pars[5215];
;;;2791   #endif
;;;2792   #ifdef CC
;;;2793               settings->CC_current SET_TO           /*CC*/
;;;2794       #endif
;;;2795       #ifdef CC
;;;2796      /*CC*/
;;;2797                   settings->CC_current + settings->CC_axis_offset - pars[5216];
;;;2798   #endif
;;;2799               settings->axis_offset_x SET_TO pars[5211];
;;;2800               settings->axis_offset_y SET_TO pars[5212];
;;;2801               settings->axis_offset_z SET_TO pars[5213];
;;;2802   #ifdef AA
;;;2803      /*AA*/
;;;2804               settings->AA_axis_offset SET_TO pars[5214];
;;;2805   #endif
;;;2806   #ifdef BB
;;;2807      /*BB*/
;;;2808               settings->BB_axis_offset SET_TO pars[5215];
;;;2809   #endif
;;;2810   #ifdef CC
;;;2811      /*CC*/
;;;2812               settings->CC_axis_offset SET_TO pars[5216];
;;;2813   #endif
;;;2814               SET_ORIGIN_OFFSETS(settings->origin_offset_x + settings->axis_offset_x,
;;;2815                   settings->origin_offset_y + settings->axis_offset_y,
;;;2816                   settings->origin_offset_z + settings->axis_offset_z
;;;2817       #ifdef AA
;;;2818                   ,                      (settings->AA_origin_offset + settings->AA_axis_offset)
;;;2819       #else
;;;2820       #ifdef ALL_AXES
;;;2821                   , 0
;;;2822       #endif
;;;2823       #endif
;;;2824       #ifdef BB
;;;2825                   ,                      (settings->BB_origin_offset + settings->BB_axis_offset)
;;;2826       #else
;;;2827       #ifdef ALL_AXES
;;;2828                   , 0
;;;2829       #endif
;;;2830       #endif
;;;2831       #ifdef CC
;;;2832                   ,                      (settings->CC_origin_offset + settings->CC_axis_offset)
;;;2833       #else
;;;2834       #ifdef ALL_AXES
;;;2835                   , 0
;;;2836       #endif
;;;2837       #endif
;;;2838                   );
;;;2839           }
;;;2840           else
;;;2841               ERM(NCE_BUG_CODE_NOT_IN_G92_SERIES);
;;;2842   
;;;2843           return RS274NGC_OK;
;;;2844       }
00005e  b009              ADD      sp,sp,#0x24
000060  e8bd8ff0          POP      {r4-r11,pc}
                  |L14.100|
000064  f50465c9          ADD      r5,r4,#0x648          ;2571
000068  f5b97f66          CMP      r9,#0x398             ;2572
00006c  d17d              BNE      |L14.362|
00006e  f8d801dc          LDR      r0,[r8,#0x1dc]        ;2574
000072  2801              CMP      r0,#1                 ;2574
000074  d11f              BNE      |L14.182|
000076  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2576
00007a  460e              MOV      r6,r1                 ;2576
00007c  4607              MOV      r7,r0                 ;2576
00007e  f5047064          ADD      r0,r4,#0x390          ;2576
000082  c803              LDM      r0,{r0,r1}            ;2576
000084  4682              MOV      r10,r0                ;2576
000086  4632              MOV      r2,r6                 ;2576
000088  463b              MOV      r3,r7                 ;2576
00008a  f7fffffe          BL       __aeabi_dadd
00008e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2576
000092  f50870f0          ADD      r0,r8,#0x1e0          ;2576
000096  c803              LDM      r0,{r0,r1}            ;2576
000098  4606              MOV      r6,r0                 ;2576
00009a  4632              MOV      r2,r6                 ;2576
00009c  460b              MOV      r3,r1                 ;2576
00009e  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2576
0000a2  f7fffffe          BL       __aeabi_dsub
0000a6  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;2576
0000aa  f50870f0          ADD      r0,r8,#0x1e0          ;2578
0000ae  c803              LDM      r0,{r0,r1}            ;2578
0000b0  f5047264          ADD      r2,r4,#0x390          ;2578
0000b4  c203              STM      r2!,{r0,r1}           ;2578
                  |L14.182|
0000b6  f8d801e8          LDR      r0,[r8,#0x1e8]        ;2581
0000ba  2801              CMP      r0,#1                 ;2581
0000bc  d124              BNE      |L14.264|
0000be  e9d4011c          LDRD     r0,r1,[r4,#0x70]      ;2583
0000c2  4606              MOV      r6,r0                 ;2583
0000c4  460f              MOV      r7,r1                 ;2583
0000c6  f8d41398          LDR      r1,[r4,#0x398]        ;2583
0000ca  468a              MOV      r10,r1                ;2583
0000cc  f8d4039c          LDR      r0,[r4,#0x39c]        ;2583
0000d0  4683              MOV      r11,r0                ;2583
0000d2  4632              MOV      r2,r6                 ;2583
0000d4  463b              MOV      r3,r7                 ;2583
0000d6  4650              MOV      r0,r10                ;2583
0000d8  4659              MOV      r1,r11                ;2583
0000da  f7fffffe          BL       __aeabi_dadd
0000de  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2583
0000e2  f8d811f0          LDR      r1,[r8,#0x1f0]        ;2583
0000e6  460e              MOV      r6,r1                 ;2583
0000e8  4632              MOV      r2,r6                 ;2583
0000ea  f8d801f4          LDR      r0,[r8,#0x1f4]        ;2583
0000ee  4603              MOV      r3,r0                 ;2583
0000f0  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2583
0000f4  f7fffffe          BL       __aeabi_dsub
0000f8  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;2583
0000fc  f50870f8          ADD      r0,r8,#0x1f0          ;2585
000100  c803              LDM      r0,{r0,r1}            ;2585
000102  f5047266          ADD      r2,r4,#0x398          ;2585
000106  c203              STM      r2!,{r0,r1}           ;2585
                  |L14.264|
000108  f8d801f8          LDR      r0,[r8,#0x1f8]        ;2588
00010c  2801              CMP      r0,#1                 ;2588
00010e  d11f              BNE      |L14.336|
000110  e9d4101e          LDRD     r1,r0,[r4,#0x78]      ;2590
000114  460e              MOV      r6,r1                 ;2590
000116  4607              MOV      r7,r0                 ;2590
000118  f5047068          ADD      r0,r4,#0x3a0          ;2590
00011c  c803              LDM      r0,{r0,r1}            ;2590
00011e  4682              MOV      r10,r0                ;2590
000120  4632              MOV      r2,r6                 ;2590
000122  463b              MOV      r3,r7                 ;2590
000124  f7fffffe          BL       __aeabi_dadd
000128  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2590
00012c  f5087000          ADD      r0,r8,#0x200          ;2590
000130  c803              LDM      r0,{r0,r1}            ;2590
000132  4606              MOV      r6,r0                 ;2590
000134  4632              MOV      r2,r6                 ;2590
000136  460b              MOV      r3,r1                 ;2590
000138  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2590
00013c  f7fffffe          BL       __aeabi_dsub
000140  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;2590
000144  f5087000          ADD      r0,r8,#0x200          ;2592
000148  c803              LDM      r0,{r0,r1}            ;2592
00014a  f5047268          ADD      r2,r4,#0x3a0          ;2592
00014e  c203              STM      r2!,{r0,r1}           ;2592
                  |L14.336|
000150  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2646
000154  4606              MOV      r6,r0                 ;2646
000156  460f              MOV      r7,r1                 ;2646
000158  f50460c8          ADD      r0,r4,#0x640          ;2646
00015c  c803              LDM      r0,{r0,r1}            ;2646
00015e  4682              MOV      r10,r0                ;2646
000160  4632              MOV      r2,r6                 ;2646
000162  463b              MOV      r3,r7                 ;2646
000164  f7fffffe          BL       __aeabi_dadd
000168  e000              B        |L14.364|
                  |L14.362|
00016a  e03f              B        |L14.492|
                  |L14.364|
00016c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2646
000170  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;2646
000174  460e              MOV      r6,r1                 ;2646
000176  4607              MOV      r7,r0                 ;2646
000178  f50460c7          ADD      r0,r4,#0x638          ;2646
00017c  c803              LDM      r0,{r0,r1}            ;2646
00017e  4682              MOV      r10,r0                ;2646
000180  4632              MOV      r2,r6                 ;2646
000182  463b              MOV      r3,r7                 ;2646
000184  f7fffffe          BL       __aeabi_dadd
000188  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2646
00018c  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2646
000190  460e              MOV      r6,r1                 ;2646
000192  4607              MOV      r7,r0                 ;2646
000194  f8d41630          LDR      r1,[r4,#0x630]        ;2646
000198  468a              MOV      r10,r1                ;2646
00019a  f8d40634          LDR      r0,[r4,#0x634]        ;2646
00019e  4683              MOV      r11,r0                ;2646
0001a0  4632              MOV      r2,r6                 ;2646
0001a2  463b              MOV      r3,r7                 ;2646
0001a4  4650              MOV      r0,r10                ;2646
0001a6  4659              MOV      r1,r11                ;2646
0001a8  f7fffffe          BL       __aeabi_dadd
0001ac  e9cd0102          STRD     r0,r1,[sp,#8]         ;2646
0001b0  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2646
0001b4  e9cd0100          STRD     r0,r1,[sp,#0]         ;2646
0001b8  a802              ADD      r0,sp,#8              ;2646
0001ba  c80f              LDM      r0,{r0-r3}            ;2646
0001bc  f7fffffe          BL       SET_ORIGIN_OFFSETS
0001c0  f5054220          ADD      r2,r5,#0xa000         ;2671
0001c4  e9d4011a          LDRD     r0,r1,[r4,#0x68]      ;2671
0001c8  f5027236          ADD      r2,r2,#0x2d8          ;2671
0001cc  c203              STM      r2!,{r0,r1}           ;2671
0001ce  f5054020          ADD      r0,r5,#0xa000         ;2672
0001d2  e9d4121c          LDRD     r1,r2,[r4,#0x70]      ;2672
0001d6  f5007038          ADD      r0,r0,#0x2e0          ;2672
0001da  c006              STM      r0!,{r1,r2}           ;2672
0001dc  f5054220          ADD      r2,r5,#0xa000         ;2673
0001e0  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2673
0001e4  f502723a          ADD      r2,r2,#0x2e8          ;2673
0001e8  c203              STM      r2!,{r0,r1}           ;2673
                  |L14.490|
0001ea  e157              B        |L14.1180|
                  |L14.492|
0001ec  f5a97040          SUB      r0,r9,#0x300          ;2688
0001f0  3899              SUBS     r0,r0,#0x99           ;2688
0001f2  d001              BEQ      |L14.504|
0001f4  1e40              SUBS     r0,r0,#1              ;2688
0001f6  d164              BNE      |L14.706|
                  |L14.504|
0001f8  e9d4011a          LDRD     r0,r1,[r4,#0x68]      ;2690
0001fc  4606              MOV      r6,r0                 ;2690
0001fe  460f              MOV      r7,r1                 ;2690
000200  f8d41390          LDR      r1,[r4,#0x390]        ;2690
000204  468a              MOV      r10,r1                ;2690
000206  f8d40394          LDR      r0,[r4,#0x394]        ;2690
00020a  4683              MOV      r11,r0                ;2690
00020c  4632              MOV      r2,r6                 ;2690
00020e  463b              MOV      r3,r7                 ;2690
000210  4650              MOV      r0,r10                ;2690
000212  4659              MOV      r1,r11                ;2690
000214  f7fffffe          BL       __aeabi_dadd
000218  f5047264          ADD      r2,r4,#0x390          ;2690
00021c  c203              STM      r2!,{r0,r1}           ;2690
00021e  e9d4011c          LDRD     r0,r1,[r4,#0x70]      ;2692
000222  4682              MOV      r10,r0                ;2692
000224  468b              MOV      r11,r1                ;2692
000226  f5047066          ADD      r0,r4,#0x398          ;2692
00022a  c803              LDM      r0,{r0,r1}            ;2692
00022c  4606              MOV      r6,r0                 ;2692
00022e  4652              MOV      r2,r10                ;2692
000230  465b              MOV      r3,r11                ;2692
000232  f7fffffe          BL       __aeabi_dadd
000236  f5047266          ADD      r2,r4,#0x398          ;2692
00023a  c203              STM      r2!,{r0,r1}           ;2692
00023c  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2694
000240  4682              MOV      r10,r0                ;2694
000242  468b              MOV      r11,r1                ;2694
000244  f5047068          ADD      r0,r4,#0x3a0          ;2694
000248  c803              LDM      r0,{r0,r1}            ;2694
00024a  4606              MOV      r6,r0                 ;2694
00024c  4652              MOV      r2,r10                ;2694
00024e  465b              MOV      r3,r11                ;2694
000250  f7fffffe          BL       __aeabi_dadd
000254  f5047268          ADD      r2,r4,#0x3a0          ;2694
000258  c203              STM      r2!,{r0,r1}           ;2694
00025a  f50460c8          ADD      r0,r4,#0x640          ;2717
00025e  c803              LDM      r0,{r0,r1}            ;2717
000260  e9cd0100          STRD     r0,r1,[sp,#0]         ;2717
000264  f8d41638          LDR      r1,[r4,#0x638]        ;2717
000268  460e              MOV      r6,r1                 ;2717
00026a  f8d4063c          LDR      r0,[r4,#0x63c]        ;2717
00026e  4607              MOV      r7,r0                 ;2717
000270  f8d41630          LDR      r1,[r4,#0x630]        ;2717
000274  468a              MOV      r10,r1                ;2717
000276  f8d40634          LDR      r0,[r4,#0x634]        ;2717
00027a  4683              MOV      r11,r0                ;2717
00027c  4632              MOV      r2,r6                 ;2717
00027e  463b              MOV      r3,r7                 ;2717
000280  4650              MOV      r0,r10                ;2717
000282  4659              MOV      r1,r11                ;2717
000284  f7fffffe          BL       SET_ORIGIN_OFFSETS
000288  f04f0100          MOV      r1,#0                 ;2742
00028c  66a1              STR      r1,[r4,#0x68]         ;2742
00028e  66e1              STR      r1,[r4,#0x6c]         ;2742
000290  6721              STR      r1,[r4,#0x70]         ;2743
000292  6761              STR      r1,[r4,#0x74]         ;2743
000294  67a1              STR      r1,[r4,#0x78]         ;2744
000296  67e1              STR      r1,[r4,#0x7c]         ;2744
000298  f5a97040          SUB      r0,r9,#0x300          ;2754
00029c  3899              SUBS     r0,r0,#0x99           ;2754
00029e  d1a4              BNE      |L14.490|
0002a0  4602              MOV      r2,r0                 ;2756
0002a2  f5054020          ADD      r0,r5,#0xa000         ;2756
0002a6  f8c022d8          STR      r2,[r0,#0x2d8]        ;2756
0002aa  f8c022dc          STR      r2,[r0,#0x2dc]        ;2756
0002ae  f8c022e0          STR      r2,[r0,#0x2e0]        ;2757
0002b2  f8c022e4          STR      r2,[r0,#0x2e4]        ;2757
0002b6  4602              MOV      r2,r0                 ;2758
0002b8  f8c212e8          STR      r1,[r2,#0x2e8]        ;2758
0002bc  f8c212ec          STR      r1,[r2,#0x2ec]        ;2758
0002c0  e0ec              B        |L14.1180|
                  |L14.706|
0002c2  f5a97040          SUB      r0,r9,#0x300          ;2770
0002c6  389b              SUBS     r0,r0,#0x9b           ;2770
0002c8  d17d              BNE      |L14.966|
0002ca  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2772
0002ce  460e              MOV      r6,r1                 ;2772
0002d0  4607              MOV      r7,r0                 ;2772
0002d2  f8d41390          LDR      r1,[r4,#0x390]        ;2772
0002d6  468a              MOV      r10,r1                ;2772
0002d8  f8d40394          LDR      r0,[r4,#0x394]        ;2772
0002dc  4683              MOV      r11,r0                ;2772
0002de  4632              MOV      r2,r6                 ;2772
0002e0  463b              MOV      r3,r7                 ;2772
0002e2  4650              MOV      r0,r10                ;2772
0002e4  4659              MOV      r1,r11                ;2772
0002e6  f7fffffe          BL       __aeabi_dadd
0002ea  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2772
0002ee  f5054020          ADD      r0,r5,#0xa000         ;2772
0002f2  f8d012d8          LDR      r1,[r0,#0x2d8]        ;2772
0002f6  f8d002dc          LDR      r0,[r0,#0x2dc]        ;2772
0002fa  460e              MOV      r6,r1                 ;2772
0002fc  4632              MOV      r2,r6                 ;2772
0002fe  4603              MOV      r3,r0                 ;2772
000300  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2772
000304  f7fffffe          BL       __aeabi_dsub
000308  f5047264          ADD      r2,r4,#0x390          ;2772
00030c  c203              STM      r2!,{r0,r1}           ;2772
00030e  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;2774
000312  468a              MOV      r10,r1                ;2774
000314  4683              MOV      r11,r0                ;2774
000316  f8d41398          LDR      r1,[r4,#0x398]        ;2774
00031a  460e              MOV      r6,r1                 ;2774
00031c  f8d4039c          LDR      r0,[r4,#0x39c]        ;2774
000320  4607              MOV      r7,r0                 ;2774
000322  4652              MOV      r2,r10                ;2774
000324  465b              MOV      r3,r11                ;2774
000326  4630              MOV      r0,r6                 ;2774
000328  4639              MOV      r1,r7                 ;2774
00032a  f7fffffe          BL       __aeabi_dadd
00032e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2774
000332  f5054120          ADD      r1,r5,#0xa000         ;2774
000336  f5017138          ADD      r1,r1,#0x2e0          ;2774
00033a  c903              LDM      r1,{r0,r1}            ;2774
00033c  4606              MOV      r6,r0                 ;2774
00033e  4632              MOV      r2,r6                 ;2774
000340  460b              MOV      r3,r1                 ;2774
000342  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2774
000346  f7fffffe          BL       __aeabi_dsub
00034a  f5047266          ADD      r2,r4,#0x398          ;2774
00034e  c203              STM      r2!,{r0,r1}           ;2774
000350  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2776
000354  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2776
000358  f8d413a0          LDR      r1,[r4,#0x3a0]        ;2776
00035c  460e              MOV      r6,r1                 ;2776
00035e  f8d403a4          LDR      r0,[r4,#0x3a4]        ;2776
000362  4607              MOV      r7,r0                 ;2776
000364  4630              MOV      r0,r6                 ;2776
000366  4639              MOV      r1,r7                 ;2776
000368  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;2776
00036c  f7fffffe          BL       __aeabi_dadd
000370  4682              MOV      r10,r0                ;2776
000372  468b              MOV      r11,r1                ;2776
000374  f5054120          ADD      r1,r5,#0xa000         ;2776
000378  f501713a          ADD      r1,r1,#0x2e8          ;2776
00037c  c903              LDM      r1,{r0,r1}            ;2776
00037e  4606              MOV      r6,r0                 ;2776
000380  4632              MOV      r2,r6                 ;2776
000382  460b              MOV      r3,r1                 ;2776
000384  4650              MOV      r0,r10                ;2776
000386  4659              MOV      r1,r11                ;2776
000388  f7fffffe          BL       __aeabi_dsub
00038c  f5047268          ADD      r2,r4,#0x3a0          ;2776
000390  c203              STM      r2!,{r0,r1}           ;2776
000392  f5054020          ADD      r0,r5,#0xa000         ;2799
000396  f5007036          ADD      r0,r0,#0x2d8          ;2799
00039a  c803              LDM      r0,{r0,r1}            ;2799
00039c  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;2799
0003a0  f5054120          ADD      r1,r5,#0xa000         ;2800
0003a4  f5017138          ADD      r1,r1,#0x2e0          ;2800
0003a8  c903              LDM      r1,{r0,r1}            ;2800
0003aa  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;2800
0003ae  f5054120          ADD      r1,r5,#0xa000         ;2801
0003b2  f501713a          ADD      r1,r1,#0x2e8          ;2801
0003b6  c903              LDM      r1,{r0,r1}            ;2801
0003b8  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;2801
0003bc  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2814
0003c0  4606              MOV      r6,r0                 ;2814
0003c2  460f              MOV      r7,r1                 ;2814
0003c4  e000              B        |L14.968|
                  |L14.966|
0003c6  e042              B        |L14.1102|
                  |L14.968|
0003c8  f8d41640          LDR      r1,[r4,#0x640]        ;2814
0003cc  468a              MOV      r10,r1                ;2814
0003ce  f8d40644          LDR      r0,[r4,#0x644]        ;2814
0003d2  4683              MOV      r11,r0                ;2814
0003d4  4632              MOV      r2,r6                 ;2814
0003d6  463b              MOV      r3,r7                 ;2814
0003d8  4650              MOV      r0,r10                ;2814
0003da  4659              MOV      r1,r11                ;2814
0003dc  f7fffffe          BL       __aeabi_dadd
0003e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2814
0003e4  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;2814
0003e8  468a              MOV      r10,r1                ;2814
0003ea  4683              MOV      r11,r0                ;2814
0003ec  f8d41638          LDR      r1,[r4,#0x638]        ;2814
0003f0  460e              MOV      r6,r1                 ;2814
0003f2  f8d4063c          LDR      r0,[r4,#0x63c]        ;2814
0003f6  4607              MOV      r7,r0                 ;2814
0003f8  4652              MOV      r2,r10                ;2814
0003fa  465b              MOV      r3,r11                ;2814
0003fc  4630              MOV      r0,r6                 ;2814
0003fe  4639              MOV      r1,r7                 ;2814
000400  f7fffffe          BL       __aeabi_dadd
000404  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2814
000408  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2814
00040c  460e              MOV      r6,r1                 ;2814
00040e  4607              MOV      r7,r0                 ;2814
000410  e006              B        |L14.1056|
000412  0000              DCW      0x0000
                  |L14.1044|
                          DCD      _setup+0xc000
                  |L14.1048|
                          DCD      |symbol_number.453|
                  |L14.1052|
                          DCD      _setup+0xb1ac
                  |L14.1056|
000420  f8d41630          LDR      r1,[r4,#0x630]        ;2814
000424  468a              MOV      r10,r1                ;2814
000426  f8d40634          LDR      r0,[r4,#0x634]        ;2814
00042a  4683              MOV      r11,r0                ;2814
00042c  4632              MOV      r2,r6                 ;2814
00042e  463b              MOV      r3,r7                 ;2814
000430  4650              MOV      r0,r10                ;2814
000432  4659              MOV      r1,r11                ;2814
000434  f7fffffe          BL       __aeabi_dadd
000438  e9cd0102          STRD     r0,r1,[sp,#8]         ;2814
00043c  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2814
000440  e9cd0100          STRD     r0,r1,[sp,#0]         ;2814
000444  a802              ADD      r0,sp,#8              ;2814
000446  c80f              LDM      r0,{r0-r3}            ;2814
000448  f7fffffe          BL       SET_ORIGIN_OFFSETS
00044c  e026              B        |L14.1180|
                  |L14.1102|
00044e  f04f0100          MOV      r1,#0                 ;2841
000452  4813              LDR      r0,|L14.1184|
000454  f8c0114c          STR      r1,[r0,#0x14c]        ;2841
000458  4601              MOV      r1,r0                 ;2841
00045a  f8d1314c          LDR      r3,[r1,#0x14c]        ;2841
00045e  f8d1114c          LDR      r1,[r1,#0x14c]        ;2841
000462  f1010101          ADD      r1,r1,#1              ;2841
000466  4602              MOV      r2,r0                 ;2841
000468  f8c2114c          STR      r1,[r2,#0x14c]        ;2841
00046c  eb030183          ADD      r1,r3,r3,LSL #2       ;2841
000470  f6a06254          SUB      r2,r0,#0xe54          ;2841
000474  eb021101          ADD      r1,r2,r1,LSL #4       ;2841
000478  4608              MOV      r0,r1                 ;2841
00047a  490a              LDR      r1,|L14.1188|
00047c  f7fffffe          BL       strcpy
000480  f04f0100          MOV      r1,#0                 ;2841
000484  4806              LDR      r0,|L14.1184|
000486  f8d0014c          LDR      r0,[r0,#0x14c]        ;2841
00048a  eb000080          ADD      r0,r0,r0,LSL #2       ;2841
00048e  4a06              LDR      r2,|L14.1192|
000490  eb021000          ADD      r0,r2,r0,LSL #4       ;2841
000494  7001              STRB     r1,[r0,#0]            ;2841
000496  f04f001c          MOV      r0,#0x1c              ;2841
00049a  e5e0              B        |L14.94|
                  |L14.1180|
00049c  2000              MOVS     r0,#0                 ;2843
00049e  e5de              B        |L14.94|
;;;2845   
                          ENDP

                  |L14.1184|
                          DCD      _setup+0xc000
                  |L14.1188|
                          DCD      |symbol_number.453|
                  |L14.1192|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_comment||, CODE, READONLY, ALIGN=1

                  convert_comment PROC
;;;2868   
;;;2869       static int convert_comment(                   /*ARGUMENTS            */
000000  b570              PUSH     {r4-r6,lr}
;;;2870       char * comment)                               /* string with comment */
;;;2871       {
000002  4606              MOV      r6,r0
;;;2872           int m;
;;;2873           int item;
;;;2874   
;;;2875           for (m SET_TO 0; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
000004  f04f0000          MOV      r0,#0
000008  4604              MOV      r4,r0
00000a  e002              B        |L15.18|
                  |L15.12|
00000c  f1040001          ADD      r0,r4,#1
000010  4604              MOV      r4,r0
                  |L15.18|
000012  5d35              LDRB     r5,[r6,r4]
000014  2d20              CMP      r5,#0x20
000016  d0f9              BEQ      |L15.12|
000018  2d09              CMP      r5,#9
00001a  d0f7              BEQ      |L15.12|
;;;2876           if ((item ISNT 'M') AND (item ISNT 'm'))
00001c  2d4d              CMP      r5,#0x4d
00001e  d006              BEQ      |L15.46|
000020  2d6d              CMP      r5,#0x6d
000022  d004              BEQ      |L15.46|
;;;2877           {
;;;2878               COMMENT(comment);
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       COMMENT
;;;2879               return RS274NGC_OK;
00002a  2000              MOVS     r0,#0
                  |L15.44|
;;;2880           }
;;;2881           for (m++; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
;;;2882           if ((item ISNT 'S') AND (item ISNT 's'))
;;;2883           {
;;;2884               COMMENT(comment);
;;;2885               return RS274NGC_OK;
;;;2886           }
;;;2887           for (m++; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
;;;2888           if ((item ISNT 'G') AND (item ISNT 'g'))
;;;2889           {
;;;2890               COMMENT(comment);
;;;2891               return RS274NGC_OK;
;;;2892           }
;;;2893           for (m++; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
;;;2894           if (item ISNT ',')
;;;2895           {
;;;2896               COMMENT(comment);
;;;2897               return RS274NGC_OK;
;;;2898           }
;;;2899           MESSAGE(comment + m + 1);
;;;2900           return RS274NGC_OK;
;;;2901       }
00002c  bd70              POP      {r4-r6,pc}
                  |L15.46|
00002e  f1040001          ADD      r0,r4,#1              ;2881
000032  4604              MOV      r4,r0                 ;2881
000034  e002              B        |L15.60|
                  |L15.54|
000036  f1040001          ADD      r0,r4,#1              ;2881
00003a  4604              MOV      r4,r0                 ;2881
                  |L15.60|
00003c  5d30              LDRB     r0,[r6,r4]            ;2881
00003e  4605              MOV      r5,r0                 ;2881
000040  2820              CMP      r0,#0x20              ;2881
000042  d0f8              BEQ      |L15.54|
000044  2d09              CMP      r5,#9                 ;2881
000046  d0f6              BEQ      |L15.54|
000048  2d53              CMP      r5,#0x53              ;2882
00004a  d006              BEQ      |L15.90|
00004c  2d73              CMP      r5,#0x73              ;2882
00004e  d004              BEQ      |L15.90|
000050  4630              MOV      r0,r6                 ;2884
000052  f7fffffe          BL       COMMENT
000056  2000              MOVS     r0,#0                 ;2885
000058  e7e8              B        |L15.44|
                  |L15.90|
00005a  f1040001          ADD      r0,r4,#1              ;2887
00005e  4604              MOV      r4,r0                 ;2887
000060  e002              B        |L15.104|
                  |L15.98|
000062  f1040001          ADD      r0,r4,#1              ;2887
000066  4604              MOV      r4,r0                 ;2887
                  |L15.104|
000068  5d30              LDRB     r0,[r6,r4]            ;2887
00006a  4605              MOV      r5,r0                 ;2887
00006c  2820              CMP      r0,#0x20              ;2887
00006e  d0f8              BEQ      |L15.98|
000070  2d09              CMP      r5,#9                 ;2887
000072  d0f6              BEQ      |L15.98|
000074  2d47              CMP      r5,#0x47              ;2888
000076  d006              BEQ      |L15.134|
000078  2d67              CMP      r5,#0x67              ;2888
00007a  d004              BEQ      |L15.134|
00007c  4630              MOV      r0,r6                 ;2890
00007e  f7fffffe          BL       COMMENT
000082  2000              MOVS     r0,#0                 ;2891
000084  e7d2              B        |L15.44|
                  |L15.134|
000086  f1040001          ADD      r0,r4,#1              ;2893
00008a  4604              MOV      r4,r0                 ;2893
00008c  e002              B        |L15.148|
                  |L15.142|
00008e  f1040001          ADD      r0,r4,#1              ;2893
000092  4604              MOV      r4,r0                 ;2893
                  |L15.148|
000094  5d30              LDRB     r0,[r6,r4]            ;2893
000096  4605              MOV      r5,r0                 ;2893
000098  2820              CMP      r0,#0x20              ;2893
00009a  d0f8              BEQ      |L15.142|
00009c  2d09              CMP      r5,#9                 ;2893
00009e  d0f6              BEQ      |L15.142|
0000a0  2d2c              CMP      r5,#0x2c              ;2894
0000a2  d004              BEQ      |L15.174|
0000a4  4630              MOV      r0,r6                 ;2896
0000a6  f7fffffe          BL       COMMENT
0000aa  2000              MOVS     r0,#0                 ;2897
0000ac  e7be              B        |L15.44|
                  |L15.174|
0000ae  1931              ADDS     r1,r6,r4              ;2899
0000b0  1c49              ADDS     r1,r1,#1              ;2899
0000b2  4608              MOV      r0,r1                 ;2899
0000b4  f7fffffe          BL       MESSAGE
0000b8  2000              MOVS     r0,#0                 ;2900
0000ba  e7b7              B        |L15.44|
;;;2902   
                          ENDP


                          AREA ||i.convert_control_mode||, CODE, READONLY, ALIGN=2

                  convert_control_mode PROC
;;;2935   
;;;2936       static int convert_control_mode(              /* ARGUMENTS                             */
000000  b570              PUSH     {r4-r6,lr}
;;;2937       int g_code,                                   /* g_code being executed (G_61, G61_1, OR G_64) */
;;;2938       setup_pointer settings)                       /* pointer to machine settings                  */
;;;2939       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;2940           static char name[] SET_TO "convert_control_mode";
;;;2941           if (g_code IS G_61)
000006  f5a47000          SUB      r0,r4,#0x200
00000a  3862              SUBS     r0,r0,#0x62
00000c  d107              BNE      |L16.30|
;;;2942           {
;;;2943               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
00000e  2002              MOVS     r0,#2
000010  f7fffffe          BL       SET_MOTION_CONTROL_MODE
;;;2944               settings->control_mode SET_TO CANON_EXACT_PATH;
000014  f04f0002          MOV      r0,#2
000018  f8c50388          STR      r0,[r5,#0x388]
00001c  e03d              B        |L16.154|
                  |L16.30|
;;;2945           }
;;;2946           else if (g_code IS G_61_1)
00001e  f5a47000          SUB      r0,r4,#0x200
000022  3863              SUBS     r0,r0,#0x63
000024  d107              BNE      |L16.54|
;;;2947           {
;;;2948               SET_MOTION_CONTROL_MODE(CANON_EXACT_STOP);
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       SET_MOTION_CONTROL_MODE
;;;2949               settings->control_mode SET_TO CANON_EXACT_STOP;
00002c  f04f0001          MOV      r0,#1
000030  f8c50388          STR      r0,[r5,#0x388]
000034  e031              B        |L16.154|
                  |L16.54|
;;;2950           }
;;;2951           else if (g_code IS G_64)
000036  f5b47f20          CMP      r4,#0x280
00003a  d107              BNE      |L16.76|
;;;2952           {
;;;2953               SET_MOTION_CONTROL_MODE(CANON_CONTINUOUS);
00003c  2003              MOVS     r0,#3
00003e  f7fffffe          BL       SET_MOTION_CONTROL_MODE
;;;2954               settings->control_mode SET_TO CANON_CONTINUOUS;
000042  f04f0003          MOV      r0,#3
000046  f8c50388          STR      r0,[r5,#0x388]
00004a  e026              B        |L16.154|
                  |L16.76|
;;;2955           }
;;;2956           else
;;;2957               ERM(NCE_BUG_CODE_NOT_G61_G61_1_OR_G64);
00004c  f04f0100          MOV      r1,#0
000050  4813              LDR      r0,|L16.160|
000052  f8c0114c          STR      r1,[r0,#0x14c]
000056  4601              MOV      r1,r0
000058  f8d1314c          LDR      r3,[r1,#0x14c]
00005c  f8d1114c          LDR      r1,[r1,#0x14c]
000060  f1010101          ADD      r1,r1,#1
000064  4602              MOV      r2,r0
000066  f8c2114c          STR      r1,[r2,#0x14c]
00006a  eb030183          ADD      r1,r3,r3,LSL #2
00006e  f6a06254          SUB      r2,r0,#0xe54
000072  eb021101          ADD      r1,r2,r1,LSL #4
000076  4608              MOV      r0,r1
000078  490a              LDR      r1,|L16.164|
00007a  f7fffffe          BL       strcpy
00007e  f04f0100          MOV      r1,#0
000082  4807              LDR      r0,|L16.160|
000084  f8d0014c          LDR      r0,[r0,#0x14c]
000088  eb000080          ADD      r0,r0,r0,LSL #2
00008c  4a06              LDR      r2,|L16.168|
00008e  eb021000          ADD      r0,r2,r0,LSL #4
000092  7001              STRB     r1,[r0,#0]
000094  f04f0018          MOV      r0,#0x18
                  |L16.152|
;;;2958           return RS274NGC_OK;
;;;2959       }
000098  bd70              POP      {r4-r6,pc}
                  |L16.154|
00009a  2000              MOVS     r0,#0                 ;2958
00009c  e7fc              B        |L16.152|
;;;2960   
                          ENDP

00009e  0000              DCW      0x0000
                  |L16.160|
                          DCD      _setup+0xc000
                  |L16.164|
                          DCD      |symbol_number.454|
                  |L16.168|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_coordinate_system||, CODE, READONLY, ALIGN=2

                  convert_coordinate_system PROC
;;;3031   
;;;3032       static int convert_coordinate_system(         /* ARGUMENTS                         */
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;3033       int g_code,                                   /* g_code called (must be one listed above)      */
;;;3034       setup_pointer settings)                       /* pointer to machine settings                   */
;;;3035       {
000004  b089              SUB      sp,sp,#0x24
000006  468a              MOV      r10,r1
;;;3036           static char name[] SET_TO "convert_coordinate_system";
;;;3037           int origin;
;;;3038           double x;
;;;3039           double y;
;;;3040           double z;
;;;3041   #ifdef AA
;;;3042           double a;                                 /*AA*/
;;;3043   #endif
;;;3044   #ifdef BB
;;;3045           double b;                                 /*BB*/
;;;3046   #endif
;;;3047   #ifdef CC
;;;3048           double c;                                 /*CC*/
;;;3049   #endif
;;;3050           double * parameters;
;;;3051   
;;;3052           parameters SET_TO settings->parameters;
000008  f50a60c9          ADD      r0,r10,#0x648
00000c  9008              STR      r0,[sp,#0x20]
;;;3053           switch(g_code)
00000e  9809              LDR      r0,[sp,#0x24]
000010  f5b07f11          CMP      r0,#0x244
000014  d023              BEQ      |L17.94|
000016  dc0b              BGT      |L17.48|
000018  f5b07f07          CMP      r0,#0x21c
00001c  d013              BEQ      |L17.70|
00001e  f5a07000          SUB      r0,r0,#0x200
000022  3826              SUBS     r0,r0,#0x26
000024  d012              BEQ      |L17.76|
000026  280a              CMP      r0,#0xa
000028  d013              BEQ      |L17.82|
00002a  2814              CMP      r0,#0x14
00002c  d126              BNE      |L17.124|
00002e  e013              B        |L17.88|
                  |L17.48|
000030  f5a07000          SUB      r0,r0,#0x200
000034  384e              SUBS     r0,r0,#0x4e
000036  d015              BEQ      |L17.100|
000038  2801              CMP      r0,#1
00003a  d016              BEQ      |L17.106|
00003c  2802              CMP      r0,#2
00003e  d017              BEQ      |L17.112|
000040  2803              CMP      r0,#3
000042  d11b              BNE      |L17.124|
000044  e017              B        |L17.118|
                  |L17.70|
;;;3054           {
;;;3055               case 540:
;;;3056                   origin SET_TO 1;
000046  f04f0b01          MOV      r11,#1
;;;3057                   break;
00004a  e040              B        |L17.206|
                  |L17.76|
;;;3058               case 550:
;;;3059                   origin SET_TO 2;
00004c  f04f0b02          MOV      r11,#2
;;;3060                   break;
000050  e03d              B        |L17.206|
                  |L17.82|
;;;3061               case 560:
;;;3062                   origin SET_TO 3;
000052  f04f0b03          MOV      r11,#3
;;;3063                   break;
000056  e03a              B        |L17.206|
                  |L17.88|
;;;3064               case 570:
;;;3065                   origin SET_TO 4;
000058  f04f0b04          MOV      r11,#4
;;;3066                   break;
00005c  e037              B        |L17.206|
                  |L17.94|
;;;3067               case 580:
;;;3068                   origin SET_TO 5;
00005e  f04f0b05          MOV      r11,#5
;;;3069                   break;
000062  e034              B        |L17.206|
                  |L17.100|
;;;3070               case 590:
;;;3071                   origin SET_TO 6;
000064  f04f0b06          MOV      r11,#6
;;;3072                   break;
000068  e031              B        |L17.206|
                  |L17.106|
;;;3073               case 591:
;;;3074                   origin SET_TO 7;
00006a  f04f0b07          MOV      r11,#7
;;;3075                   break;
00006e  e02e              B        |L17.206|
                  |L17.112|
;;;3076               case 592:
;;;3077                   origin SET_TO 8;
000070  f04f0b08          MOV      r11,#8
;;;3078                   break;
000074  e02b              B        |L17.206|
                  |L17.118|
;;;3079               case 593:
;;;3080                   origin SET_TO 9;
000076  f04f0b09          MOV      r11,#9
;;;3081                   break;
00007a  e028              B        |L17.206|
                  |L17.124|
;;;3082               default:
;;;3083                   ERM(NCE_BUG_CODE_NOT_IN_RANGE_G54_TO_G593);
00007c  f04f0100          MOV      r1,#0
000080  4872              LDR      r0,|L17.588|
000082  f8c0114c          STR      r1,[r0,#0x14c]
000086  4601              MOV      r1,r0
000088  f8d1314c          LDR      r3,[r1,#0x14c]
00008c  f8d1114c          LDR      r1,[r1,#0x14c]
000090  f1010101          ADD      r1,r1,#1
000094  4602              MOV      r2,r0
000096  f8c2114c          STR      r1,[r2,#0x14c]
00009a  eb030183          ADD      r1,r3,r3,LSL #2
00009e  f6a06254          SUB      r2,r0,#0xe54
0000a2  eb021101          ADD      r1,r2,r1,LSL #4
0000a6  4608              MOV      r0,r1
0000a8  4969              LDR      r1,|L17.592|
0000aa  f7fffffe          BL       strcpy
0000ae  f04f0100          MOV      r1,#0
0000b2  4866              LDR      r0,|L17.588|
0000b4  f8d0014c          LDR      r0,[r0,#0x14c]
0000b8  eb000080          ADD      r0,r0,r0,LSL #2
0000bc  4a65              LDR      r2,|L17.596|
0000be  eb021000          ADD      r0,r2,r0,LSL #4
0000c2  7001              STRB     r1,[r0,#0]
0000c4  f04f001d          MOV      r0,#0x1d
                  |L17.200|
;;;3084           }
;;;3085   
;;;3086           if (origin IS settings->origin_index)     /* already using this origin */
;;;3087           {
;;;3088   #ifdef DEBUG_EMC
;;;3089               COMMENT("interpreter: continuing to use same coordinate system");
;;;3090   #endif
;;;3091               return RS274NGC_OK;
;;;3092           }
;;;3093   
;;;3094           settings->origin_index SET_TO origin;
;;;3095           parameters[5220] SET_TO (double)origin;
;;;3096   
;;;3097      /* axis offsets could be included in the two set of calculations for
;;;3098         current_x, current_y, etc., but do not need to be because the results
;;;3099         would be the same. They would be added in then subtracted out. */
;;;3100           settings->current_x SET_TO
;;;3101               (settings->current_x + settings->origin_offset_x);
;;;3102           settings->current_y SET_TO
;;;3103               (settings->current_y + settings->origin_offset_y);
;;;3104           settings->current_z SET_TO
;;;3105               (settings->current_z + settings->origin_offset_z);
;;;3106   #ifdef AA
;;;3107           settings->AA_current SET_TO               /*AA*/
;;;3108       #endif
;;;3109       #ifdef AA
;;;3110      /*AA*/
;;;3111               (settings->AA_current + settings->AA_origin_offset);
;;;3112   #endif
;;;3113   #ifdef BB
;;;3114           settings->BB_current SET_TO               /*BB*/
;;;3115       #endif
;;;3116       #ifdef BB
;;;3117      /*BB*/
;;;3118               (settings->BB_current + settings->BB_origin_offset);
;;;3119   #endif
;;;3120   #ifdef CC
;;;3121           settings->CC_current SET_TO               /*CC*/
;;;3122       #endif
;;;3123       #ifdef CC
;;;3124      /*CC*/
;;;3125               (settings->CC_current + settings->CC_origin_offset);
;;;3126   #endif
;;;3127   
;;;3128           x SET_TO parameters[5201 + (origin * 20)];
;;;3129           y SET_TO parameters[5202 + (origin * 20)];
;;;3130           z SET_TO parameters[5203 + (origin * 20)];
;;;3131   #ifdef AA
;;;3132           a SET_TO parameters[5204 + (origin * 20)];/*AA*/
;;;3133   #endif
;;;3134   #ifdef BB
;;;3135           b SET_TO parameters[5205 + (origin * 20)];/*BB*/
;;;3136   #endif
;;;3137   #ifdef CC
;;;3138           c SET_TO parameters[5206 + (origin * 20)];/*CC*/
;;;3139   #endif
;;;3140   
;;;3141           settings->origin_offset_x SET_TO x;
;;;3142           settings->origin_offset_y SET_TO y;
;;;3143           settings->origin_offset_z SET_TO z;
;;;3144   #ifdef AA
;;;3145           settings->AA_origin_offset SET_TO a;      /*AA*/
;;;3146   #endif
;;;3147   #ifdef BB
;;;3148           settings->BB_origin_offset SET_TO b;      /*BB*/
;;;3149   #endif
;;;3150   #ifdef CC
;;;3151           settings->CC_origin_offset SET_TO c;      /*CC*/
;;;3152   #endif
;;;3153   
;;;3154           settings->current_x SET_TO (settings->current_x - x);
;;;3155           settings->current_y SET_TO (settings->current_y - y);
;;;3156           settings->current_z SET_TO (settings->current_z - z);
;;;3157   #ifdef AA
;;;3158      /*AA*/
;;;3159           settings->AA_current SET_TO (settings->AA_current - a);
;;;3160   #endif
;;;3161   #ifdef BB
;;;3162      /*BB*/
;;;3163           settings->BB_current SET_TO (settings->BB_current - b);
;;;3164   #endif
;;;3165   #ifdef CC
;;;3166      /*CC*/
;;;3167           settings->CC_current SET_TO (settings->CC_current - c);
;;;3168   #endif
;;;3169   
;;;3170           SET_ORIGIN_OFFSETS(x + settings->axis_offset_x,
;;;3171               y + settings->axis_offset_y,
;;;3172               z + settings->axis_offset_z
;;;3173       #ifdef AA
;;;3174               ,            a + settings->AA_axis_offset
;;;3175       #else
;;;3176       #ifdef ALL_AXES
;;;3177               , 0
;;;3178       #endif
;;;3179       #endif
;;;3180       #ifdef BB
;;;3181               ,            b + settings->BB_axis_offset
;;;3182       #else
;;;3183       #ifdef ALL_AXES
;;;3184               , 0
;;;3185       #endif
;;;3186       #endif
;;;3187       #ifdef CC
;;;3188               ,            c + settings->CC_axis_offset
;;;3189       #else
;;;3190       #ifdef ALL_AXES
;;;3191               , 0
;;;3192       #endif
;;;3193       #endif
;;;3194               );
;;;3195           return RS274NGC_OK;
;;;3196       }
0000c8  b00b              ADD      sp,sp,#0x2c
0000ca  e8bd8ff0          POP      {r4-r11,pc}
                  |L17.206|
0000ce  bf00              NOP                            ;3057
0000d0  f8da062c          LDR      r0,[r10,#0x62c]       ;3086
0000d4  4558              CMP      r0,r11                ;3086
0000d6  d104              BNE      |L17.226|
0000d8  a05f              ADR      r0,|L17.600|
0000da  f7fffffe          BL       COMMENT
0000de  2000              MOVS     r0,#0                 ;3091
0000e0  e7f2              B        |L17.200|
                  |L17.226|
0000e2  f8cab62c          STR      r11,[r10,#0x62c]      ;3094
0000e6  4658              MOV      r0,r11                ;3095
0000e8  f7fffffe          BL       __aeabi_i2d
0000ec  9a08              LDR      r2,[sp,#0x20]         ;3095
0000ee  f5024220          ADD      r2,r2,#0xa000         ;3095
0000f2  f5027248          ADD      r2,r2,#0x320          ;3095
0000f6  c203              STM      r2!,{r0,r1}           ;3095
0000f8  f50a60c6          ADD      r0,r10,#0x630         ;3100
0000fc  c803              LDM      r0,{r0,r1}            ;3100
0000fe  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3100
000102  f50a7064          ADD      r0,r10,#0x390         ;3100
000106  c803              LDM      r0,{r0,r1}            ;3100
000108  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;3100
00010c  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3100
000110  f7fffffe          BL       __aeabi_dadd
000114  f50a7264          ADD      r2,r10,#0x390         ;3100
000118  c203              STM      r2!,{r0,r1}           ;3100
00011a  f50a60c7          ADD      r0,r10,#0x638         ;3102
00011e  c803              LDM      r0,{r0,r1}            ;3102
000120  4602              MOV      r2,r0                 ;3102
000122  e9cd2106          STRD     r2,r1,[sp,#0x18]      ;3102
000126  f50a7066          ADD      r0,r10,#0x398         ;3102
00012a  c803              LDM      r0,{r0,r1}            ;3102
00012c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;3102
000130  9b07              LDR      r3,[sp,#0x1c]         ;3102
000132  f7fffffe          BL       __aeabi_dadd
000136  f50a7266          ADD      r2,r10,#0x398         ;3102
00013a  c203              STM      r2!,{r0,r1}           ;3102
00013c  f50a60c8          ADD      r0,r10,#0x640         ;3104
000140  c803              LDM      r0,{r0,r1}            ;3104
000142  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3104
000146  f50a7068          ADD      r0,r10,#0x3a0         ;3104
00014a  c803              LDM      r0,{r0,r1}            ;3104
00014c  4602              MOV      r2,r0                 ;3104
00014e  e9cd2104          STRD     r2,r1,[sp,#0x10]      ;3104
000152  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3104
000156  9804              LDR      r0,[sp,#0x10]         ;3104
000158  f7fffffe          BL       __aeabi_dadd
00015c  f50a7268          ADD      r2,r10,#0x3a0         ;3104
000160  c203              STM      r2!,{r0,r1}           ;3104
000162  eb0b008b          ADD      r0,r11,r11,LSL #2     ;3128
000166  f2414151          MOV      r1,#0x1451            ;3128
00016a  eb010180          ADD      r1,r1,r0,LSL #2       ;3128
00016e  9808              LDR      r0,[sp,#0x20]         ;3128
000170  eb0000c1          ADD      r0,r0,r1,LSL #3       ;3128
000174  c830              LDM      r0!,{r4,r5}           ;3128
000176  eb0b008b          ADD      r0,r11,r11,LSL #2     ;3129
00017a  f2414152          MOV      r1,#0x1452            ;3129
00017e  eb010180          ADD      r1,r1,r0,LSL #2       ;3129
000182  9808              LDR      r0,[sp,#0x20]         ;3129
000184  eb0000c1          ADD      r0,r0,r1,LSL #3       ;3129
000188  c8c0              LDM      r0!,{r6,r7}           ;3129
00018a  eb0b008b          ADD      r0,r11,r11,LSL #2     ;3130
00018e  f2414153          MOV      r1,#0x1453            ;3130
000192  eb010180          ADD      r1,r1,r0,LSL #2       ;3130
000196  9808              LDR      r0,[sp,#0x20]         ;3130
000198  eb0000c1          ADD      r0,r0,r1,LSL #3       ;3130
00019c  e9d08900          LDRD     r8,r9,[r0,#0]         ;3130
0001a0  f50a60c6          ADD      r0,r10,#0x630         ;3141
0001a4  c030              STM      r0!,{r4,r5}           ;3141
0001a6  f50a60c7          ADD      r0,r10,#0x638         ;3142
0001aa  c0c0              STM      r0!,{r6,r7}           ;3142
0001ac  f8ca9644          STR      r9,[r10,#0x644]       ;3143
0001b0  f8ca8640          STR      r8,[r10,#0x640]       ;3143
0001b4  f50a7064          ADD      r0,r10,#0x390         ;3154
0001b8  c803              LDM      r0,{r0,r1}            ;3154
0001ba  4622              MOV      r2,r4                 ;3154
0001bc  462b              MOV      r3,r5                 ;3154
0001be  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3154
0001c2  f7fffffe          BL       __aeabi_dsub
0001c6  f50a7264          ADD      r2,r10,#0x390         ;3154
0001ca  c203              STM      r2!,{r0,r1}           ;3154
0001cc  f50a7066          ADD      r0,r10,#0x398         ;3155
0001d0  c803              LDM      r0,{r0,r1}            ;3155
0001d2  4632              MOV      r2,r6                 ;3155
0001d4  463b              MOV      r3,r7                 ;3155
0001d6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3155
0001da  f7fffffe          BL       __aeabi_dsub
0001de  f50a7266          ADD      r2,r10,#0x398         ;3155
0001e2  c203              STM      r2!,{r0,r1}           ;3155
0001e4  f50a7068          ADD      r0,r10,#0x3a0         ;3156
0001e8  c803              LDM      r0,{r0,r1}            ;3156
0001ea  4642              MOV      r2,r8                 ;3156
0001ec  464b              MOV      r3,r9                 ;3156
0001ee  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3156
0001f2  f7fffffe          BL       __aeabi_dsub
0001f6  f50a7268          ADD      r2,r10,#0x3a0         ;3156
0001fa  c203              STM      r2!,{r0,r1}           ;3156
0001fc  e9da011e          LDRD     r0,r1,[r10,#0x78]     ;3170
000200  4642              MOV      r2,r8                 ;3170
000202  464b              MOV      r3,r9                 ;3170
000204  e9cd0100          STRD     r0,r1,[sp,#0]         ;3170
000208  f7fffffe          BL       __aeabi_dadd
00020c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3170
000210  e9da011c          LDRD     r0,r1,[r10,#0x70]     ;3170
000214  4632              MOV      r2,r6                 ;3170
000216  463b              MOV      r3,r7                 ;3170
000218  e9cd0100          STRD     r0,r1,[sp,#0]         ;3170
00021c  f7fffffe          BL       __aeabi_dadd
000220  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;3170
000224  e9da011a          LDRD     r0,r1,[r10,#0x68]     ;3170
000228  4622              MOV      r2,r4                 ;3170
00022a  462b              MOV      r3,r5                 ;3170
00022c  e9cd0100          STRD     r0,r1,[sp,#0]         ;3170
000230  f7fffffe          BL       __aeabi_dadd
000234  e9cd0102          STRD     r0,r1,[sp,#8]         ;3170
000238  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;3170
00023c  e9cd0100          STRD     r0,r1,[sp,#0]         ;3170
000240  a802              ADD      r0,sp,#8              ;3170
000242  c80f              LDM      r0,{r0-r3}            ;3170
000244  f7fffffe          BL       SET_ORIGIN_OFFSETS
000248  2000              MOVS     r0,#0                 ;3195
00024a  e73d              B        |L17.200|
;;;3197   
                          ENDP

                  |L17.588|
                          DCD      _setup+0xc000
                  |L17.592|
                          DCD      |symbol_number.455|
                  |L17.596|
                          DCD      _setup+0xb1ac
                  |L17.600|
000258  696e7465          DCB      "interpreter: continuing to use same coordinate system",0
00025c  72707265
000260  7465723a
000264  20636f6e
000268  74696e75
00026c  696e6720
000270  746f2075
000274  73652073
000278  616d6520
00027c  636f6f72
000280  64696e61
000284  74652073
000288  79737465
00028c  6d00    
00028e  00                DCB      0
00028f  00                DCB      0

                          AREA ||i.convert_cutter_compensation||, CODE, READONLY, ALIGN=2

                  convert_cutter_compensation PROC
;;;3222   
;;;3223       static int convert_cutter_compensation(       /* ARGUMENTS                  */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;3224       int g_code,                                   /* must be G_40, G_41, or G_42              */
;;;3225       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;3226       setup_pointer settings)                       /* pointer to machine settings              */
;;;3227       {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
;;;3228           static char name[] SET_TO "convert_cutter_compensation";
;;;3229           int status;
;;;3230   
;;;3231           if (g_code IS G_40)
00000a  f5b47fc8          CMP      r4,#0x190
00000e  d12c              BNE      |L18.106|
;;;3232           {
;;;3233               CHP(convert_cutter_compensation_off(settings));
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       convert_cutter_compensation_off
000016  0005              MOVS     r5,r0
000018  d07e              BEQ      |L18.280|
00001a  4859              LDR      r0,|L18.384|
00001c  f8d0014c          LDR      r0,[r0,#0x14c]
000020  2831              CMP      r0,#0x31
000022  da20              BGE      |L18.102|
000024  4956              LDR      r1,|L18.384|
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  1c49              ADDS     r1,r1,#1
000030  4a53              LDR      r2,|L18.384|
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a26254          SUB      r2,r2,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  494f              LDR      r1,|L18.388|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  484c              LDR      r0,|L18.384|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4a4b              LDR      r2,|L18.392|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  4628              MOV      r0,r5
                  |L18.98|
;;;3234           }
;;;3235           else if (g_code IS G_41)
;;;3236           {
;;;3237               CHP(convert_cutter_compensation_on(LEFT, block, settings));
;;;3238           }
;;;3239           else if (g_code IS G_42)
;;;3240           {
;;;3241               CHP(convert_cutter_compensation_on(RIGHT, block, settings));
;;;3242           }
;;;3243           else
;;;3244               ERM(NCE_BUG_CODE_NOT_G40_G41_OR_G42);
;;;3245   
;;;3246           return RS274NGC_OK;
;;;3247       }
000062  e8bd81f0          POP      {r4-r8,pc}
                  |L18.102|
000066  4628              MOV      r0,r5                 ;3233
000068  e7fb              B        |L18.98|
                  |L18.106|
00006a  f5b47fcd          CMP      r4,#0x19a             ;3235
00006e  d12c              BNE      |L18.202|
000070  4632              MOV      r2,r6                 ;3237
000072  4639              MOV      r1,r7                 ;3237
000074  2002              MOVS     r0,#2                 ;3237
000076  f7fffffe          BL       convert_cutter_compensation_on
00007a  0005              MOVS     r5,r0                 ;3237
00007c  d07d              BEQ      |L18.378|
00007e  4840              LDR      r0,|L18.384|
000080  f8d0014c          LDR      r0,[r0,#0x14c]        ;3237
000084  2831              CMP      r0,#0x31              ;3237
000086  da1e              BGE      |L18.198|
000088  493d              LDR      r1,|L18.384|
00008a  f8d1314c          LDR      r3,[r1,#0x14c]        ;3237
00008e  f8d1114c          LDR      r1,[r1,#0x14c]        ;3237
000092  1c49              ADDS     r1,r1,#1              ;3237
000094  4a3a              LDR      r2,|L18.384|
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;3237
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;3237
00009e  4a3a              LDR      r2,|L18.392|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;3237
0000a4  4608              MOV      r0,r1                 ;3237
0000a6  4937              LDR      r1,|L18.388|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;3237
0000b0  4833              LDR      r0,|L18.384|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;3237
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;3237
0000ba  4a33              LDR      r2,|L18.392|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;3237
0000c0  7001              STRB     r1,[r0,#0]            ;3237
0000c2  4628              MOV      r0,r5                 ;3237
0000c4  e7cd              B        |L18.98|
                  |L18.198|
0000c6  4628              MOV      r0,r5                 ;3237
0000c8  e7cb              B        |L18.98|
                  |L18.202|
0000ca  f5b47fd2          CMP      r4,#0x1a4             ;3239
0000ce  d12e              BNE      |L18.302|
0000d0  4632              MOV      r2,r6                 ;3241
0000d2  4639              MOV      r1,r7                 ;3241
0000d4  2001              MOVS     r0,#1                 ;3241
0000d6  f7fffffe          BL       convert_cutter_compensation_on
0000da  0005              MOVS     r5,r0                 ;3241
0000dc  d04d              BEQ      |L18.378|
0000de  4828              LDR      r0,|L18.384|
0000e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;3241
0000e4  2831              CMP      r0,#0x31              ;3241
0000e6  da20              BGE      |L18.298|
0000e8  4925              LDR      r1,|L18.384|
0000ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;3241
0000ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;3241
0000f2  1c49              ADDS     r1,r1,#1              ;3241
0000f4  4a22              LDR      r2,|L18.384|
0000f6  f8c2114c          STR      r1,[r2,#0x14c]        ;3241
0000fa  eb030183          ADD      r1,r3,r3,LSL #2       ;3241
0000fe  4a22              LDR      r2,|L18.392|
000100  eb021101          ADD      r1,r2,r1,LSL #4       ;3241
000104  4608              MOV      r0,r1                 ;3241
000106  491f              LDR      r1,|L18.388|
000108  f7fffffe          BL       strcpy
00010c  f04f0100          MOV      r1,#0                 ;3241
000110  481b              LDR      r0,|L18.384|
000112  f8d0014c          LDR      r0,[r0,#0x14c]        ;3241
000116  e000              B        |L18.282|
                  |L18.280|
000118  e02f              B        |L18.378|
                  |L18.282|
00011a  eb000080          ADD      r0,r0,r0,LSL #2       ;3241
00011e  4a1a              LDR      r2,|L18.392|
000120  eb021000          ADD      r0,r2,r0,LSL #4       ;3241
000124  7001              STRB     r1,[r0,#0]            ;3241
000126  4628              MOV      r0,r5                 ;3241
000128  e79b              B        |L18.98|
                  |L18.298|
00012a  4628              MOV      r0,r5                 ;3241
00012c  e799              B        |L18.98|
                  |L18.302|
00012e  f04f0100          MOV      r1,#0                 ;3244
000132  4813              LDR      r0,|L18.384|
000134  f8c0114c          STR      r1,[r0,#0x14c]        ;3244
000138  4601              MOV      r1,r0                 ;3244
00013a  f8d1314c          LDR      r3,[r1,#0x14c]        ;3244
00013e  f8d1114c          LDR      r1,[r1,#0x14c]        ;3244
000142  f1010101          ADD      r1,r1,#1              ;3244
000146  4602              MOV      r2,r0                 ;3244
000148  f8c2114c          STR      r1,[r2,#0x14c]        ;3244
00014c  eb030183          ADD      r1,r3,r3,LSL #2       ;3244
000150  4a0d              LDR      r2,|L18.392|
000152  eb021101          ADD      r1,r2,r1,LSL #4       ;3244
000156  4608              MOV      r0,r1                 ;3244
000158  490a              LDR      r1,|L18.388|
00015a  f7fffffe          BL       strcpy
00015e  f04f0100          MOV      r1,#0                 ;3244
000162  4807              LDR      r0,|L18.384|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;3244
000168  eb000080          ADD      r0,r0,r0,LSL #2       ;3244
00016c  4a06              LDR      r2,|L18.392|
00016e  eb021000          ADD      r0,r2,r0,LSL #4       ;3244
000172  7001              STRB     r1,[r0,#0]            ;3244
000174  f04f0015          MOV      r0,#0x15              ;3244
000178  e773              B        |L18.98|
                  |L18.378|
00017a  2000              MOVS     r0,#0                 ;3246
00017c  e771              B        |L18.98|
;;;3248   
                          ENDP

00017e  0000              DCW      0x0000
                  |L18.384|
                          DCD      _setup+0xc000
                  |L18.388|
                          DCD      |symbol_number.456|
                  |L18.392|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cutter_compensation_off||, CODE, READONLY, ALIGN=2

                  convert_cutter_compensation_off PROC
;;;3265   
;;;3266       static int convert_cutter_compensation_off(   /* ARGUMENTS                   */
000000  b510              PUSH     {r4,lr}
;;;3267       setup_pointer settings)                       /* pointer to machine settings */
;;;3268       {
000002  4604              MOV      r4,r0
;;;3269   #ifdef DEBUG_EMC
;;;3270           COMMENT("interpreter: cutter radius compensation off");
000004  a008              ADR      r0,|L19.40|
000006  f7fffffe          BL       COMMENT
;;;3271   #endif
;;;3272           settings->cutter_comp_side SET_TO OFF;
00000a  f04f0000          MOV      r0,#0
00000e  f8c403b0          STR      r0,[r4,#0x3b0]
;;;3273           settings->program_x SET_TO UNKNOWN;
000012  4a10              LDR      r2,|L19.84|
000014  4810              LDR      r0,|L19.88|
000016  f5044130          ADD      r1,r4,#0xb000
00001a  f8c12178          STR      r2,[r1,#0x178]
00001e  f8c1017c          STR      r0,[r1,#0x17c]
;;;3274           return RS274NGC_OK;
000022  f04f0000          MOV      r0,#0
;;;3275       }
000026  bd10              POP      {r4,pc}
;;;3276   
                          ENDP

                  |L19.40|
000028  696e7465          DCB      "interpreter: cutter radius compensation off",0
00002c  72707265
000030  7465723a
000034  20637574
000038  74657220
00003c  72616469
000040  75732063
000044  6f6d7065
000048  6e736174
00004c  696f6e20
000050  6f666600
                  |L19.84|
                          DCD      0x0c924223
                  |L19.88|
                          DCD      0x3bc79ca1

                          AREA ||i.convert_cutter_compensation_on||, CODE, READONLY, ALIGN=2

                  convert_cutter_compensation_on PROC
;;;3328   
;;;3329       static int convert_cutter_compensation_on(    /* ARGUMENTS               */
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;3330       int side,                                     /* side of path cutter is on (LEFT or RIGHT) */
;;;3331       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;3332       setup_pointer settings)                       /* pointer to machine settings               */
;;;3333       {
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4690              MOV      r8,r2
;;;3334           static char name[] SET_TO "convert_cutter_compensation_on";
;;;3335           double radius;
;;;3336           int index;
;;;3337   
;;;3338           CHK((settings->plane ISNT CANON_PLANE_XY),
00000a  f24b106c          MOV      r0,#0xb16c
00000e  f8500008          LDR      r0,[r0,r8]
000012  2801              CMP      r0,#1
000014  d027              BEQ      |L20.102|
000016  f04f0100          MOV      r1,#0
00001a  484c              LDR      r0,|L20.332|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4943              LDR      r1,|L20.336|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  483f              LDR      r0,|L20.332|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a3f              LDR      r2,|L20.340|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0035          MOV      r0,#0x35
                  |L20.98|
;;;3339               NCE_CANNOT_TURN_CUTTER_RADIUS_COMP_ON_OUT_OF_XY_PLANE);
;;;3340           CHK((settings->cutter_comp_side ISNT OFF),
;;;3341               NCE_CANNOT_TURN_CUTTER_RADIUS_COMP_ON_WHEN_ON);
;;;3342           index SET_TO
;;;3343               (block->d_number ISNT -1) ? block->d_number : settings->current_slot;
;;;3344           radius SET_TO ((settings->tool_table[index].diameter)/2.0);
;;;3345   
;;;3346           if (radius < 0.0)                         /* switch side & make radius positive if radius negative */
;;;3347           {
;;;3348               radius SET_TO -radius;
;;;3349               if (side IS RIGHT)
;;;3350                   side SET_TO LEFT;
;;;3351               else
;;;3352                   side SET_TO RIGHT;
;;;3353           }
;;;3354   
;;;3355   #ifdef DEBUG_EMC
;;;3356           if (side IS RIGHT)
;;;3357               COMMENT("interpreter: cutter radius compensation on right");
;;;3358           else
;;;3359               COMMENT("interpreter: cutter radius compensation on left");
;;;3360   #endif
;;;3361   
;;;3362           settings->cutter_comp_radius SET_TO radius;
;;;3363           settings->tool_table_index SET_TO index;
;;;3364           settings->cutter_comp_side SET_TO side;
;;;3365           return RS274NGC_OK;
;;;3366       }
000062  e8bd9ff0          POP      {r4-r12,pc}
                  |L20.102|
000066  f8d803b0          LDR      r0,[r8,#0x3b0]        ;3340
00006a  b328              CBZ      r0,|L20.184|
00006c  f04f0100          MOV      r1,#0                 ;3340
000070  4836              LDR      r0,|L20.332|
000072  f8c0114c          STR      r1,[r0,#0x14c]        ;3340
000076  4601              MOV      r1,r0                 ;3340
000078  f8d1314c          LDR      r3,[r1,#0x14c]        ;3340
00007c  f8d1114c          LDR      r1,[r1,#0x14c]        ;3340
000080  f1010101          ADD      r1,r1,#1              ;3340
000084  4602              MOV      r2,r0                 ;3340
000086  f8c2114c          STR      r1,[r2,#0x14c]        ;3340
00008a  eb030183          ADD      r1,r3,r3,LSL #2       ;3340
00008e  4a31              LDR      r2,|L20.340|
000090  eb021101          ADD      r1,r2,r1,LSL #4       ;3340
000094  4608              MOV      r0,r1                 ;3340
000096  492e              LDR      r1,|L20.336|
000098  f7fffffe          BL       strcpy
00009c  f04f0100          MOV      r1,#0                 ;3340
0000a0  482a              LDR      r0,|L20.332|
0000a2  f8d0014c          LDR      r0,[r0,#0x14c]        ;3340
0000a6  eb000080          ADD      r0,r0,r0,LSL #2       ;3340
0000aa  4a2a              LDR      r2,|L20.340|
0000ac  eb021000          ADD      r0,r2,r0,LSL #4       ;3340
0000b0  7001              STRB     r1,[r0,#0]            ;3340
0000b2  f04f0036          MOV      r0,#0x36              ;3340
0000b6  e7d4              B        |L20.98|
                  |L20.184|
0000b8  f8da0100          LDR      r0,[r10,#0x100]       ;3342
0000bc  1c40              ADDS     r0,r0,#1              ;3342
0000be  d002              BEQ      |L20.198|
0000c0  f8da0100          LDR      r0,[r10,#0x100]       ;3343
0000c4  e001              B        |L20.202|
                  |L20.198|
0000c6  f8d8038c          LDR      r0,[r8,#0x38c]        ;3343
                  |L20.202|
0000ca  4683              MOV      r11,r0                ;3343
0000cc  eb0b004b          ADD      r0,r11,r11,LSL #1     ;3344
0000d0  f24c1160          MOV      r1,#0xc160            ;3344
0000d4  4441              ADD      r1,r1,r8              ;3344
0000d6  eb0100c0          ADD      r0,r1,r0,LSL #3       ;3344
0000da  e9d01004          LDRD     r1,r0,[r0,#0x10]      ;3344
0000de  460e              MOV      r6,r1                 ;3344
0000e0  4607              MOV      r7,r0                 ;3344
0000e2  f04f0200          MOV      r2,#0                 ;3344
0000e6  f04f4380          MOV      r3,#0x40000000        ;3344
0000ea  4630              MOV      r0,r6                 ;3344
0000ec  4639              MOV      r1,r7                 ;3344
0000ee  f7fffffe          BL       __aeabi_ddiv
0000f2  4604              MOV      r4,r0                 ;3344
0000f4  460d              MOV      r5,r1                 ;3344
0000f6  f04f0200          MOV      r2,#0                 ;3346
0000fa  4613              MOV      r3,r2                 ;3346
0000fc  4620              MOV      r0,r4                 ;3346
0000fe  4629              MOV      r1,r5                 ;3346
000100  f7fffffe          BL       __aeabi_cdcmple
000104  d20c              BCS      |L20.288|
000106  f0854000          EOR      r0,r5,#0x80000000     ;3348
00010a  4605              MOV      r5,r0                 ;3348
00010c  f1b90f01          CMP      r9,#1                 ;3349
000110  d103              BNE      |L20.282|
000112  f04f0002          MOV      r0,#2                 ;3350
000116  4681              MOV      r9,r0                 ;3350
000118  e002              B        |L20.288|
                  |L20.282|
00011a  f04f0001          MOV      r0,#1                 ;3352
00011e  4681              MOV      r9,r0                 ;3352
                  |L20.288|
000120  f1b90f01          CMP      r9,#1                 ;3356
000124  d103              BNE      |L20.302|
000126  a00c              ADR      r0,|L20.344|
000128  f7fffffe          BL       COMMENT
00012c  e002              B        |L20.308|
                  |L20.302|
00012e  a017              ADR      r0,|L20.396|
000130  f7fffffe          BL       COMMENT
                  |L20.308|
000134  f508706a          ADD      r0,r8,#0x3a8          ;3362
000138  c030              STM      r0!,{r4,r5}           ;3362
00013a  f64c5078          MOV      r0,#0xcd78            ;3363
00013e  f840b008          STR      r11,[r0,r8]           ;3363
000142  f8c893b0          STR      r9,[r8,#0x3b0]        ;3364
000146  f04f0000          MOV      r0,#0                 ;3365
00014a  e78a              B        |L20.98|
;;;3367   
                          ENDP

                  |L20.332|
                          DCD      _setup+0xc000
                  |L20.336|
                          DCD      |symbol_number.457|
                  |L20.340|
                          DCD      _setup+0xb1ac
                  |L20.344|
000158  696e7465          DCB      "interpreter: cutter radius compensation on right",0
00015c  72707265
000160  7465723a
000164  20637574
000168  74657220
00016c  72616469
000170  75732063
000174  6f6d7065
000178  6e736174
00017c  696f6e20
000180  6f6e2072
000184  69676874
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0
                  |L20.396|
00018c  696e7465          DCB      "interpreter: cutter radius compensation on left",0
000190  72707265
000194  7465723a
000198  20637574
00019c  74657220
0001a0  72616469
0001a4  75732063
0001a8  6f6d7065
0001ac  6e736174
0001b0  696f6e20
0001b4  6f6e206c
0001b8  65667400

                          AREA ||i.convert_cycle||, CODE, READONLY, ALIGN=2

                  convert_cycle PROC
;;;3397   
;;;3398       static int convert_cycle(                     /* ARGUMENTS                                      */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;3399       int motion,                                   /* a g-code between G_81 and G_89, a canned cycle */
;;;3400       block_pointer block,                          /* pointer to a block of RS274 instructions       */
;;;3401       setup_pointer settings)                       /* pointer to machine settings                    */
;;;3402       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;3403           static char name[] SET_TO "convert_cycle";
;;;3404           CANON_PLANE plane;
;;;3405           int status;
;;;3406   
;;;3407           plane SET_TO settings->plane;
00000a  f24b106c          MOV      r0,#0xb16c
00000e  5940              LDR      r0,[r0,r5]
000010  4607              MOV      r7,r0
;;;3408           if (block->r_flag IS OFF)
000012  f8d401c0          LDR      r0,[r4,#0x1c0]
000016  bb90              CBNZ     r0,|L21.126|
;;;3409           {
;;;3410               if (settings->motion_mode IS motion)
000018  f8d50628          LDR      r0,[r5,#0x628]
00001c  42b0              CMP      r0,r6
00001e  d106              BNE      |L21.46|
;;;3411                   block->r_number SET_TO settings->cycle_r;
000020  f505707c          ADD      r0,r5,#0x3f0
000024  c803              LDM      r0,{r0,r1}
000026  f50473e4          ADD      r3,r4,#0x1c8
00002a  c303              STM      r3!,{r0,r1}
00002c  e028              B        |L21.128|
                  |L21.46|
;;;3412               else
;;;3413                   ERM(NCE_R_CLEARANCE_PLANE_UNSPECIFIED_IN_CYCLE);
00002e  f04f0100          MOV      r1,#0
000032  488f              LDR      r0,|L21.624|
000034  f8c0114c          STR      r1,[r0,#0x14c]
000038  4601              MOV      r1,r0
00003a  f8d1314c          LDR      r3,[r1,#0x14c]
00003e  f8d1114c          LDR      r1,[r1,#0x14c]
000042  f1010101          ADD      r1,r1,#1
000046  4602              MOV      r2,r0
000048  f8c2114c          STR      r1,[r2,#0x14c]
00004c  eb030183          ADD      r1,r3,r3,LSL #2
000050  f6a06254          SUB      r2,r0,#0xe54
000054  eb021101          ADD      r1,r2,r1,LSL #4
000058  4608              MOV      r0,r1
00005a  4986              LDR      r1,|L21.628|
00005c  f7fffffe          BL       strcpy
000060  f04f0100          MOV      r1,#0
000064  4882              LDR      r0,|L21.624|
000066  f8d0014c          LDR      r0,[r0,#0x14c]
00006a  eb000080          ADD      r0,r0,r0,LSL #2
00006e  4a82              LDR      r2,|L21.632|
000070  eb021000          ADD      r0,r2,r0,LSL #4
000074  7001              STRB     r1,[r0,#0]
000076  f04f0092          MOV      r0,#0x92
                  |L21.122|
;;;3414           }
;;;3415   
;;;3416           CHK((block->l_number IS 0), NCE_CANNOT_DO_ZERO_REPEATS_OF_CYCLE);
;;;3417           if (block->l_number IS -1)
;;;3418               block->l_number SET_TO 1;
;;;3419   
;;;3420           if (plane IS CANON_PLANE_XY)
;;;3421           {
;;;3422               CHP(convert_cycle_xy(motion, block, settings));
;;;3423           }
;;;3424           else if (plane IS CANON_PLANE_YZ)
;;;3425           {
;;;3426               CHP(convert_cycle_yz(motion, block, settings));
;;;3427           }
;;;3428           else if (plane IS CANON_PLANE_XZ)
;;;3429           {
;;;3430               CHP(convert_cycle_zx(motion, block, settings));
;;;3431           }
;;;3432           else
;;;3433               ERM(NCE_BUG_PLANE_NOT_XY_YZ_OR_XZ);
;;;3434   
;;;3435           settings->cycle_l SET_TO block->l_number;
;;;3436           settings->cycle_r SET_TO block->r_number;
;;;3437           settings->motion_mode SET_TO motion;
;;;3438           return RS274NGC_OK;
;;;3439       }
00007a  e8bd81f0          POP      {r4-r8,pc}
                  |L21.126|
00007e  e7ff              B        |L21.128|
                  |L21.128|
000080  f8d40178          LDR      r0,[r4,#0x178]        ;3416
000084  bb28              CBNZ     r0,|L21.210|
000086  f04f0100          MOV      r1,#0                 ;3416
00008a  4879              LDR      r0,|L21.624|
00008c  f8c0114c          STR      r1,[r0,#0x14c]        ;3416
000090  4601              MOV      r1,r0                 ;3416
000092  f8d1314c          LDR      r3,[r1,#0x14c]        ;3416
000096  f8d1114c          LDR      r1,[r1,#0x14c]        ;3416
00009a  f1010101          ADD      r1,r1,#1              ;3416
00009e  4602              MOV      r2,r0                 ;3416
0000a0  f8c2114c          STR      r1,[r2,#0x14c]        ;3416
0000a4  eb030183          ADD      r1,r3,r3,LSL #2       ;3416
0000a8  4a73              LDR      r2,|L21.632|
0000aa  eb021101          ADD      r1,r2,r1,LSL #4       ;3416
0000ae  4608              MOV      r0,r1                 ;3416
0000b0  4970              LDR      r1,|L21.628|
0000b2  f7fffffe          BL       strcpy
0000b6  f04f0100          MOV      r1,#0                 ;3416
0000ba  486d              LDR      r0,|L21.624|
0000bc  f8d0014c          LDR      r0,[r0,#0x14c]        ;3416
0000c0  eb000080          ADD      r0,r0,r0,LSL #2       ;3416
0000c4  4a6c              LDR      r2,|L21.632|
0000c6  eb021000          ADD      r0,r2,r0,LSL #4       ;3416
0000ca  7001              STRB     r1,[r0,#0]            ;3416
0000cc  f04f002a          MOV      r0,#0x2a              ;3416
0000d0  e7d3              B        |L21.122|
                  |L21.210|
0000d2  f8d40178          LDR      r0,[r4,#0x178]        ;3417
0000d6  1c40              ADDS     r0,r0,#1              ;3417
0000d8  d103              BNE      |L21.226|
0000da  f04f0001          MOV      r0,#1                 ;3418
0000de  f8c40178          STR      r0,[r4,#0x178]        ;3418
                  |L21.226|
0000e2  2f01              CMP      r7,#1                 ;3420
0000e4  d12d              BNE      |L21.322|
0000e6  462a              MOV      r2,r5                 ;3422
0000e8  4621              MOV      r1,r4                 ;3422
0000ea  4630              MOV      r0,r6                 ;3422
0000ec  f7fffffe          BL       convert_cycle_xy
0000f0  ea5f0800          MOVS     r8,r0                 ;3422
0000f4  d07e              BEQ      |L21.500|
0000f6  485e              LDR      r0,|L21.624|
0000f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;3422
0000fc  2831              CMP      r0,#0x31              ;3422
0000fe  da1e              BGE      |L21.318|
000100  495b              LDR      r1,|L21.624|
000102  f8d1314c          LDR      r3,[r1,#0x14c]        ;3422
000106  f8d1114c          LDR      r1,[r1,#0x14c]        ;3422
00010a  1c49              ADDS     r1,r1,#1              ;3422
00010c  4a58              LDR      r2,|L21.624|
00010e  f8c2114c          STR      r1,[r2,#0x14c]        ;3422
000112  eb030183          ADD      r1,r3,r3,LSL #2       ;3422
000116  4a58              LDR      r2,|L21.632|
000118  eb021101          ADD      r1,r2,r1,LSL #4       ;3422
00011c  4608              MOV      r0,r1                 ;3422
00011e  4955              LDR      r1,|L21.628|
000120  f7fffffe          BL       strcpy
000124  f04f0100          MOV      r1,#0                 ;3422
000128  4851              LDR      r0,|L21.624|
00012a  f8d0014c          LDR      r0,[r0,#0x14c]        ;3422
00012e  eb000080          ADD      r0,r0,r0,LSL #2       ;3422
000132  4a51              LDR      r2,|L21.632|
000134  eb021000          ADD      r0,r2,r0,LSL #4       ;3422
000138  7001              STRB     r1,[r0,#0]            ;3422
00013a  4640              MOV      r0,r8                 ;3422
00013c  e79d              B        |L21.122|
                  |L21.318|
00013e  4640              MOV      r0,r8                 ;3422
000140  e79b              B        |L21.122|
                  |L21.322|
000142  2f02              CMP      r7,#2                 ;3424
000144  d12d              BNE      |L21.418|
000146  462a              MOV      r2,r5                 ;3426
000148  4621              MOV      r1,r4                 ;3426
00014a  4630              MOV      r0,r6                 ;3426
00014c  f7fffffe          BL       convert_cycle_yz
000150  ea5f0800          MOVS     r8,r0                 ;3426
000154  d07d              BEQ      |L21.594|
000156  4846              LDR      r0,|L21.624|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;3426
00015c  2831              CMP      r0,#0x31              ;3426
00015e  da1e              BGE      |L21.414|
000160  4943              LDR      r1,|L21.624|
000162  f8d1314c          LDR      r3,[r1,#0x14c]        ;3426
000166  f8d1114c          LDR      r1,[r1,#0x14c]        ;3426
00016a  1c49              ADDS     r1,r1,#1              ;3426
00016c  4a40              LDR      r2,|L21.624|
00016e  f8c2114c          STR      r1,[r2,#0x14c]        ;3426
000172  eb030183          ADD      r1,r3,r3,LSL #2       ;3426
000176  4a40              LDR      r2,|L21.632|
000178  eb021101          ADD      r1,r2,r1,LSL #4       ;3426
00017c  4608              MOV      r0,r1                 ;3426
00017e  493d              LDR      r1,|L21.628|
000180  f7fffffe          BL       strcpy
000184  f04f0100          MOV      r1,#0                 ;3426
000188  4839              LDR      r0,|L21.624|
00018a  f8d0014c          LDR      r0,[r0,#0x14c]        ;3426
00018e  eb000080          ADD      r0,r0,r0,LSL #2       ;3426
000192  4a39              LDR      r2,|L21.632|
000194  eb021000          ADD      r0,r2,r0,LSL #4       ;3426
000198  7001              STRB     r1,[r0,#0]            ;3426
00019a  4640              MOV      r0,r8                 ;3426
00019c  e76d              B        |L21.122|
                  |L21.414|
00019e  4640              MOV      r0,r8                 ;3426
0001a0  e76b              B        |L21.122|
                  |L21.418|
0001a2  2f03              CMP      r7,#3                 ;3428
0001a4  d12f              BNE      |L21.518|
0001a6  462a              MOV      r2,r5                 ;3430
0001a8  4621              MOV      r1,r4                 ;3430
0001aa  4630              MOV      r0,r6                 ;3430
0001ac  f7fffffe          BL       convert_cycle_zx
0001b0  ea5f0800          MOVS     r8,r0                 ;3430
0001b4  d04d              BEQ      |L21.594|
0001b6  482e              LDR      r0,|L21.624|
0001b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;3430
0001bc  2831              CMP      r0,#0x31              ;3430
0001be  da20              BGE      |L21.514|
0001c0  492b              LDR      r1,|L21.624|
0001c2  f8d1314c          LDR      r3,[r1,#0x14c]        ;3430
0001c6  f8d1114c          LDR      r1,[r1,#0x14c]        ;3430
0001ca  1c49              ADDS     r1,r1,#1              ;3430
0001cc  4a28              LDR      r2,|L21.624|
0001ce  f8c2114c          STR      r1,[r2,#0x14c]        ;3430
0001d2  eb030183          ADD      r1,r3,r3,LSL #2       ;3430
0001d6  4a28              LDR      r2,|L21.632|
0001d8  eb021101          ADD      r1,r2,r1,LSL #4       ;3430
0001dc  4608              MOV      r0,r1                 ;3430
0001de  4925              LDR      r1,|L21.628|
0001e0  f7fffffe          BL       strcpy
0001e4  f04f0100          MOV      r1,#0                 ;3430
0001e8  4821              LDR      r0,|L21.624|
0001ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;3430
0001ee  eb000080          ADD      r0,r0,r0,LSL #2       ;3430
0001f2  e000              B        |L21.502|
                  |L21.500|
0001f4  e02d              B        |L21.594|
                  |L21.502|
0001f6  4a20              LDR      r2,|L21.632|
0001f8  eb021000          ADD      r0,r2,r0,LSL #4       ;3430
0001fc  7001              STRB     r1,[r0,#0]            ;3430
0001fe  4640              MOV      r0,r8                 ;3430
000200  e73b              B        |L21.122|
                  |L21.514|
000202  4640              MOV      r0,r8                 ;3430
000204  e739              B        |L21.122|
                  |L21.518|
000206  f04f0100          MOV      r1,#0                 ;3433
00020a  4819              LDR      r0,|L21.624|
00020c  f8c0114c          STR      r1,[r0,#0x14c]        ;3433
000210  4601              MOV      r1,r0                 ;3433
000212  f8d1314c          LDR      r3,[r1,#0x14c]        ;3433
000216  f8d1114c          LDR      r1,[r1,#0x14c]        ;3433
00021a  f1010101          ADD      r1,r1,#1              ;3433
00021e  4602              MOV      r2,r0                 ;3433
000220  f8c2114c          STR      r1,[r2,#0x14c]        ;3433
000224  eb030183          ADD      r1,r3,r3,LSL #2       ;3433
000228  4a13              LDR      r2,|L21.632|
00022a  eb021101          ADD      r1,r2,r1,LSL #4       ;3433
00022e  4608              MOV      r0,r1                 ;3433
000230  4910              LDR      r1,|L21.628|
000232  f7fffffe          BL       strcpy
000236  f04f0100          MOV      r1,#0                 ;3433
00023a  480d              LDR      r0,|L21.624|
00023c  f8d0014c          LDR      r0,[r0,#0x14c]        ;3433
000240  eb000080          ADD      r0,r0,r0,LSL #2       ;3433
000244  4a0c              LDR      r2,|L21.632|
000246  eb021000          ADD      r0,r2,r0,LSL #4       ;3433
00024a  7001              STRB     r1,[r0,#0]            ;3433
00024c  f04f0022          MOV      r0,#0x22              ;3433
000250  e713              B        |L21.122|
                  |L21.594|
000252  f8d40178          LDR      r0,[r4,#0x178]        ;3435
000256  f8c503d8          STR      r0,[r5,#0x3d8]        ;3435
00025a  f50470e4          ADD      r0,r4,#0x1c8          ;3436
00025e  c803              LDM      r0,{r0,r1}            ;3436
000260  f505727c          ADD      r2,r5,#0x3f0          ;3436
000264  c203              STM      r2!,{r0,r1}           ;3436
000266  f8c56628          STR      r6,[r5,#0x628]        ;3437
00026a  2000              MOVS     r0,#0                 ;3438
00026c  e705              B        |L21.122|
;;;3440   
                          ENDP

00026e  0000              DCW      0x0000
                  |L21.624|
                          DCD      _setup+0xc000
                  |L21.628|
                          DCD      |symbol_number.458|
                  |L21.632|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g81||, CODE, READONLY, ALIGN=1

                  convert_cycle_g81 PROC
;;;3466   
;;;3467       static int convert_cycle_g81(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3468       CANON_PLANE plane,                            /* selected plane                   */
;;;3469       double x,                                     /* x-value where cycle is executed  */
;;;3470       double y,                                     /* y-value where cycle is executed  */
;;;3471       double clear_z,                               /* z-value of clearance plane       */
;;;3472       double bottom_z)                              /* value of z at bottom of cycle    */
;;;3473       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3474           static char name[] SET_TO "convert_cycle_g81";
;;;3475   
;;;3476           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3477           cycle_traverse(plane, x, y, clear_z);
00001e  4632              MOV      r2,r6
000020  463b              MOV      r3,r7
000022  e88d0330          STM      sp,{r4,r5,r8,r9}
000026  9804              LDR      r0,[sp,#0x10]
000028  f7fffffe          BL       cycle_traverse
;;;3478   
;;;3479           return RS274NGC_OK;
00002c  2000              MOVS     r0,#0
;;;3480       }
00002e  b008              ADD      sp,sp,#0x20
000030  e8bd9ff0          POP      {r4-r12,pc}
;;;3481   
                          ENDP


                          AREA ||i.convert_cycle_g82||, CODE, READONLY, ALIGN=1

                  convert_cycle_g82 PROC
;;;3506   
;;;3507       static int convert_cycle_g82(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3508       CANON_PLANE plane,                            /* selected plane                   */
;;;3509       double x,                                     /* x-value where cycle is executed  */
;;;3510       double y,                                     /* y-value where cycle is executed  */
;;;3511       double clear_z,                               /* z-value of clearance plane       */
;;;3512       double bottom_z,                              /* value of z at bottom of cycle    */
;;;3513       double dwell)                                 /* dwell time                       */
;;;3514       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3515           static char name[] SET_TO "convert_cycle_g82";
;;;3516   
;;;3517           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3518           DWELL(dwell);
00001e  e9dd0118          LDRD     r0,r1,[sp,#0x60]
000022  f7fffffe          BL       DWELL
;;;3519           cycle_traverse(plane, x, y, clear_z);
000026  4632              MOV      r2,r6
000028  463b              MOV      r3,r7
00002a  e88d0330          STM      sp,{r4,r5,r8,r9}
00002e  9804              LDR      r0,[sp,#0x10]
000030  f7fffffe          BL       cycle_traverse
;;;3520   
;;;3521           return RS274NGC_OK;
000034  2000              MOVS     r0,#0
;;;3522       }
000036  b008              ADD      sp,sp,#0x20
000038  e8bd9ff0          POP      {r4-r12,pc}
;;;3523   
                          ENDP


                          AREA ||i.convert_cycle_g83||, CODE, READONLY, ALIGN=2

                  convert_cycle_g83 PROC
;;;3559   
;;;3560       static int convert_cycle_g83(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3561       CANON_PLANE plane,                            /* selected plane                   */
;;;3562       double x,                                     /* x-value where cycle is executed  */
;;;3563       double y,                                     /* y-value where cycle is executed  */
;;;3564       double r,                                     /* initial z-value                  */
;;;3565       double clear_z,                               /* z-value of clearance plane       */
;;;3566       double bottom_z,                              /* value of z at bottom of cycle    */
;;;3567       double delta)                                 /* size of z-axis feed increment    */
;;;3568       {
000004  b088              SUB      sp,sp,#0x20
000006  4690              MOV      r8,r2
000008  4699              MOV      r9,r3
00000a  e9ddab1a          LDRD     r10,r11,[sp,#0x68]
00000e  e9dd4516          LDRD     r4,r5,[sp,#0x58]
;;;3569           static char name[] SET_TO "convert_cycle_g83";
;;;3570           double current_depth;
;;;3571           double rapid_delta;
;;;3572   
;;;3573           rapid_delta SET_TO G83_RAPID_DELTA;
000012  492f              LDR      r1,|L24.208|
000014  482f              LDR      r0,|L24.212|
000016  e9cd1006          STRD     r1,r0,[sp,#0x18]
;;;3574           if (_setup.length_units IS CANON_UNITS_MM)
00001a  482f              LDR      r0,|L24.216|
00001c  f8d0051c          LDR      r0,[r0,#0x51c]  ; _setup
000020  2802              CMP      r0,#2
000022  d108              BNE      |L24.54|
;;;3575               rapid_delta SET_TO (rapid_delta * 25.4);
000024  f04f3266          MOV      r2,#0x66666666
000028  4b2c              LDR      r3,|L24.220|
00002a  e9dd0106          LDRD     r0,r1,[sp,#0x18]
00002e  f7fffffe          BL       __aeabi_dmul
000032  e9cd0106          STRD     r0,r1,[sp,#0x18]
                  |L24.54|
;;;3576   
;;;3577           for (current_depth SET_TO (r - delta);
000036  e9dd231e          LDRD     r2,r3,[sp,#0x78]
00003a  e9dd0118          LDRD     r0,r1,[sp,#0x60]
00003e  f7fffffe          BL       __aeabi_dsub
000042  4606              MOV      r6,r0
000044  460f              MOV      r7,r1
000046  e026              B        |L24.150|
                  |L24.72|
;;;3578               current_depth > bottom_z;
;;;3579               current_depth SET_TO (current_depth - delta))
;;;3580           {
;;;3581               cycle_feed(plane, x, y, current_depth);
000048  4642              MOV      r2,r8
00004a  464b              MOV      r3,r9
00004c  e88d00f0          STM      sp,{r4-r7}
000050  9808              LDR      r0,[sp,#0x20]
000052  f7fffffe          BL       cycle_feed
;;;3582               cycle_traverse(plane, x, y, clear_z);
000056  4642              MOV      r2,r8
000058  464b              MOV      r3,r9
00005a  e88d0c30          STM      sp,{r4,r5,r10,r11}
00005e  9808              LDR      r0,[sp,#0x20]
000060  f7fffffe          BL       cycle_traverse
;;;3583               cycle_traverse(plane, x, y, current_depth + rapid_delta);
000064  4630              MOV      r0,r6
000066  4639              MOV      r1,r7
000068  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00006c  f7fffffe          BL       __aeabi_dadd
000070  e9cd0104          STRD     r0,r1,[sp,#0x10]
000074  4642              MOV      r2,r8
000076  464b              MOV      r3,r9
000078  e9cd4500          STRD     r4,r5,[sp,#0]
00007c  e9cd0102          STRD     r0,r1,[sp,#8]
000080  9808              LDR      r0,[sp,#0x20]
000082  f7fffffe          BL       cycle_traverse
000086  4630              MOV      r0,r6                 ;3579
000088  4639              MOV      r1,r7                 ;3579
00008a  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;3579
00008e  f7fffffe          BL       __aeabi_dsub
000092  4606              MOV      r6,r0                 ;3579
000094  460f              MOV      r7,r1                 ;3579
                  |L24.150|
000096  4630              MOV      r0,r6                 ;3578
000098  4639              MOV      r1,r7                 ;3578
00009a  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;3578
00009e  f7fffffe          BL       __aeabi_cdrcmple
0000a2  d3d1              BCC      |L24.72|
;;;3584           }
;;;3585           cycle_feed(plane, x, y, bottom_z);
0000a4  e9dd011c          LDRD     r0,r1,[sp,#0x70]
0000a8  4642              MOV      r2,r8
0000aa  464b              MOV      r3,r9
0000ac  e9cd4500          STRD     r4,r5,[sp,#0]
0000b0  e9cd0102          STRD     r0,r1,[sp,#8]
0000b4  9808              LDR      r0,[sp,#0x20]
0000b6  f7fffffe          BL       cycle_feed
;;;3586           cycle_traverse(plane, x, y, clear_z);
0000ba  4642              MOV      r2,r8
0000bc  464b              MOV      r3,r9
0000be  e88d0c30          STM      sp,{r4,r5,r10,r11}
0000c2  9808              LDR      r0,[sp,#0x20]
0000c4  f7fffffe          BL       cycle_traverse
;;;3587   
;;;3588           return RS274NGC_OK;
0000c8  2000              MOVS     r0,#0
;;;3589       }
0000ca  b00c              ADD      sp,sp,#0x30
0000cc  e8bd9ff0          POP      {r4-r12,pc}
;;;3590   
                          ENDP

                  |L24.208|
                          DCD      0x47ae147b
                  |L24.212|
                          DCD      0x3f847ae1
                  |L24.216|
                          DCD      _setup
                  |L24.220|
                          DCD      0x40396666

                          AREA ||i.convert_cycle_g84||, CODE, READONLY, ALIGN=2

                  convert_cycle_g84 PROC
;;;3624   
;;;3625       static int convert_cycle_g84(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3626       CANON_PLANE plane,                            /* selected plane                      */
;;;3627       double x,                                     /* x-value where cycle is executed     */
;;;3628       double y,                                     /* y-value where cycle is executed     */
;;;3629       double clear_z,                               /* z-value of clearance plane          */
;;;3630       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3631       CANON_DIRECTION direction,                    /* direction spindle turning at outset */
;;;3632       CANON_SPEED_FEED_MODE mode)                   /* the speed-feed mode at outset       */
;;;3633       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3634           static char name[] SET_TO "convert_cycle_g84";
;;;3635   
;;;3636           CHK((direction ISNT CANON_CLOCKWISE),
000010  9818              LDR      r0,[sp,#0x60]
000012  2802              CMP      r0,#2
000014  d028              BEQ      |L25.104|
000016  f04f0100          MOV      r1,#0
00001a  4823              LDR      r0,|L25.168|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  491a              LDR      r1,|L25.172|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4816              LDR      r0,|L25.168|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a16              LDR      r2,|L25.176|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f009d          MOV      r0,#0x9d
                  |L25.98|
;;;3637               NCE_SPINDLE_NOT_TURNING_CLOCKWISE_IN_G84);
;;;3638           START_SPEED_FEED_SYNCH();
;;;3639           cycle_feed(plane, x, y, bottom_z);
;;;3640           STOP_SPINDLE_TURNING();
;;;3641           START_SPINDLE_COUNTERCLOCKWISE();
;;;3642           cycle_feed(plane, x, y, clear_z);
;;;3643           if (mode ISNT CANON_SYNCHED)
;;;3644               STOP_SPEED_FEED_SYNCH();
;;;3645           STOP_SPINDLE_TURNING();
;;;3646           START_SPINDLE_CLOCKWISE();
;;;3647   
;;;3648           return RS274NGC_OK;
;;;3649       }
000062  b008              ADD      sp,sp,#0x20
000064  e8bd9ff0          POP      {r4-r12,pc}
                  |L25.104|
000068  f7fffffe          BL       START_SPEED_FEED_SYNCH
00006c  4632              MOV      r2,r6                 ;3639
00006e  463b              MOV      r3,r7                 ;3639
000070  e88d0c30          STM      sp,{r4,r5,r10,r11}    ;3639
000074  9804              LDR      r0,[sp,#0x10]         ;3639
000076  f7fffffe          BL       cycle_feed
00007a  f7fffffe          BL       STOP_SPINDLE_TURNING
00007e  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
000082  4632              MOV      r2,r6                 ;3642
000084  463b              MOV      r3,r7                 ;3642
000086  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3642
00008a  9804              LDR      r0,[sp,#0x10]         ;3642
00008c  f7fffffe          BL       cycle_feed
000090  9819              LDR      r0,[sp,#0x64]         ;3643
000092  2801              CMP      r0,#1                 ;3643
000094  d001              BEQ      |L25.154|
000096  f7fffffe          BL       STOP_SPEED_FEED_SYNCH
                  |L25.154|
00009a  f7fffffe          BL       STOP_SPINDLE_TURNING
00009e  f7fffffe          BL       START_SPINDLE_CLOCKWISE
0000a2  2000              MOVS     r0,#0                 ;3648
0000a4  e7dd              B        |L25.98|
;;;3650   
                          ENDP

0000a6  0000              DCW      0x0000
                  |L25.168|
                          DCD      _setup+0xc000
                  |L25.172|
                          DCD      |symbol_number.462|
                  |L25.176|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g85||, CODE, READONLY, ALIGN=1

                  convert_cycle_g85 PROC
;;;3675   
;;;3676       static int convert_cycle_g85(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3677       CANON_PLANE plane,                            /* selected plane                   */
;;;3678       double x,                                     /* x-value where cycle is executed  */
;;;3679       double y,                                     /* y-value where cycle is executed  */
;;;3680       double clear_z,                               /* z-value of clearance plane       */
;;;3681       double bottom_z)                              /* value of z at bottom of cycle    */
;;;3682       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3683           static char name[] SET_TO "convert_cycle_g85";
;;;3684   
;;;3685           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3686           cycle_feed(plane, x, y, clear_z);
00001e  4632              MOV      r2,r6
000020  463b              MOV      r3,r7
000022  e88d0330          STM      sp,{r4,r5,r8,r9}
000026  9804              LDR      r0,[sp,#0x10]
000028  f7fffffe          BL       cycle_feed
;;;3687   
;;;3688           return RS274NGC_OK;
00002c  2000              MOVS     r0,#0
;;;3689       }
00002e  b008              ADD      sp,sp,#0x20
000030  e8bd9ff0          POP      {r4-r12,pc}
;;;3690   
                          ENDP


                          AREA ||i.convert_cycle_g86||, CODE, READONLY, ALIGN=2

                  convert_cycle_g86 PROC
;;;3721   
;;;3722       static int convert_cycle_g86(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3723       CANON_PLANE plane,                            /* selected plane                      */
;;;3724       double x,                                     /* x-value where cycle is executed     */
;;;3725       double y,                                     /* y-value where cycle is executed     */
;;;3726       double clear_z,                               /* z-value of clearance plane          */
;;;3727       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3728       double dwell,                                 /* dwell time                          */
;;;3729       CANON_DIRECTION direction)                    /* direction spindle turning at outset */
;;;3730       {
000004  4683              MOV      r11,r0
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  f8dda058          LDR      r10,[sp,#0x58]
00000e  ac0e              ADD      r4,sp,#0x38
000010  e8940330          LDM      r4,{r4,r5,r8,r9}
;;;3731           static char name[] SET_TO "convert_cycle_g86";
;;;3732   
;;;3733           CHK(((direction ISNT CANON_CLOCKWISE) AND
000014  f1ba0f02          CMP      r10,#2
000018  d02b              BEQ      |L27.114|
00001a  f1ba0f03          CMP      r10,#3
00001e  d028              BEQ      |L27.114|
000020  f04f0100          MOV      r1,#0
000024  4824              LDR      r0,|L27.184|
000026  f8c0114c          STR      r1,[r0,#0x14c]
00002a  4601              MOV      r1,r0
00002c  f8d1314c          LDR      r3,[r1,#0x14c]
000030  f8d1114c          LDR      r1,[r1,#0x14c]
000034  f1010101          ADD      r1,r1,#1
000038  4602              MOV      r2,r0
00003a  f8c2114c          STR      r1,[r2,#0x14c]
00003e  eb030183          ADD      r1,r3,r3,LSL #2
000042  f6a06254          SUB      r2,r0,#0xe54
000046  eb021101          ADD      r1,r2,r1,LSL #4
00004a  4608              MOV      r0,r1
00004c  491b              LDR      r1,|L27.188|
00004e  f7fffffe          BL       strcpy
000052  f04f0100          MOV      r1,#0
000056  4818              LDR      r0,|L27.184|
000058  f8d0014c          LDR      r0,[r0,#0x14c]
00005c  eb000080          ADD      r0,r0,r0,LSL #2
000060  4a17              LDR      r2,|L27.192|
000062  eb021000          ADD      r0,r2,r0,LSL #4
000066  7001              STRB     r1,[r0,#0]
000068  f04f009e          MOV      r0,#0x9e
                  |L27.108|
;;;3734               (direction ISNT CANON_COUNTERCLOCKWISE)),
;;;3735               NCE_SPINDLE_NOT_TURNING_IN_G86);
;;;3736   
;;;3737           cycle_feed(plane, x, y, bottom_z);
;;;3738           DWELL(dwell);
;;;3739           STOP_SPINDLE_TURNING();
;;;3740           cycle_traverse(plane, x, y, clear_z);
;;;3741           if (direction IS CANON_CLOCKWISE)
;;;3742               START_SPINDLE_CLOCKWISE();
;;;3743           else
;;;3744               START_SPINDLE_COUNTERCLOCKWISE();
;;;3745   
;;;3746           return RS274NGC_OK;
;;;3747       }
00006c  b004              ADD      sp,sp,#0x10
00006e  e8bd9ff0          POP      {r4-r12,pc}
                  |L27.114|
000072  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;3737
000076  4632              MOV      r2,r6                 ;3737
000078  463b              MOV      r3,r7                 ;3737
00007a  e9cd4500          STRD     r4,r5,[sp,#0]         ;3737
00007e  e9cd0102          STRD     r0,r1,[sp,#8]         ;3737
000082  4658              MOV      r0,r11                ;3737
000084  f7fffffe          BL       cycle_feed
000088  e9dd0114          LDRD     r0,r1,[sp,#0x50]      ;3738
00008c  f7fffffe          BL       DWELL
000090  f7fffffe          BL       STOP_SPINDLE_TURNING
000094  4632              MOV      r2,r6                 ;3740
000096  463b              MOV      r3,r7                 ;3740
000098  4658              MOV      r0,r11                ;3740
00009a  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3740
00009e  f7fffffe          BL       cycle_traverse
0000a2  f1ba0f02          CMP      r10,#2                ;3741
0000a6  d102              BNE      |L27.174|
0000a8  f7fffffe          BL       START_SPINDLE_CLOCKWISE
0000ac  e001              B        |L27.178|
                  |L27.174|
0000ae  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L27.178|
0000b2  2000              MOVS     r0,#0                 ;3746
0000b4  e7da              B        |L27.108|
;;;3748   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L27.184|
                          DCD      _setup+0xc000
                  |L27.188|
                          DCD      |symbol_number.464|
                  |L27.192|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g87||, CODE, READONLY, ALIGN=2

                  convert_cycle_g87 PROC
;;;3807   
;;;3808       static int convert_cycle_g87(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3809       CANON_PLANE plane,                            /* selected plane                      */
;;;3810       double x,                                     /* x-value where cycle is executed     */
;;;3811       double offset_x,                              /* x-axis offset position              */
;;;3812       double y,                                     /* y-value where cycle is executed     */
;;;3813       double offset_y,                              /* y-axis offset position              */
;;;3814       double r,                                     /* z_value of r_plane                  */
;;;3815       double clear_z,                               /* z-value of clearance plane          */
;;;3816       double middle_z,                              /* z-value of top of back bore         */
;;;3817       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3818       CANON_DIRECTION direction)                    /* direction spindle turning at outset */
;;;3819       {
000004  b084              SUB      sp,sp,#0x10
000006  4683              MOV      r11,r0
000008  e9dd9a1f          LDRD     r9,r10,[sp,#0x7c]
00000c  f8dd8078          LDR      r8,[sp,#0x78]
000010  ac14              ADD      r4,sp,#0x50
000012  ccf0              LDM      r4,{r4-r7}
;;;3820           static char name[] SET_TO "convert_cycle_g87";
;;;3821   
;;;3822           CHK(((direction ISNT CANON_CLOCKWISE) AND
000014  f1ba0f02          CMP      r10,#2
000018  d02b              BEQ      |L28.114|
00001a  f1ba0f03          CMP      r10,#3
00001e  d028              BEQ      |L28.114|
000020  f04f0100          MOV      r1,#0
000024  4847              LDR      r0,|L28.324|
000026  f8c0114c          STR      r1,[r0,#0x14c]
00002a  4601              MOV      r1,r0
00002c  f8d1314c          LDR      r3,[r1,#0x14c]
000030  f8d1114c          LDR      r1,[r1,#0x14c]
000034  f1010101          ADD      r1,r1,#1
000038  4602              MOV      r2,r0
00003a  f8c2114c          STR      r1,[r2,#0x14c]
00003e  eb030183          ADD      r1,r3,r3,LSL #2
000042  f6a06254          SUB      r2,r0,#0xe54
000046  eb021101          ADD      r1,r2,r1,LSL #4
00004a  4608              MOV      r0,r1
00004c  493e              LDR      r1,|L28.328|
00004e  f7fffffe          BL       strcpy
000052  f04f0100          MOV      r1,#0
000056  483b              LDR      r0,|L28.324|
000058  f8d0014c          LDR      r0,[r0,#0x14c]
00005c  eb000080          ADD      r0,r0,r0,LSL #2
000060  4a3a              LDR      r2,|L28.332|
000062  eb021000          ADD      r0,r2,r0,LSL #4
000066  7001              STRB     r1,[r0,#0]
000068  f04f009f          MOV      r0,#0x9f
                  |L28.108|
;;;3823               (direction ISNT CANON_COUNTERCLOCKWISE)),
;;;3824               NCE_SPINDLE_NOT_TURNING_IN_G87);
;;;3825   
;;;3826           cycle_traverse(plane, offset_x, offset_y, r);
;;;3827           STOP_SPINDLE_TURNING();
;;;3828           ORIENT_SPINDLE(0.0, direction);
;;;3829           cycle_traverse(plane, offset_x, offset_y, bottom_z);
;;;3830           cycle_traverse(plane, x, y, bottom_z);
;;;3831           if (direction IS CANON_CLOCKWISE)
;;;3832               START_SPINDLE_CLOCKWISE();
;;;3833           else
;;;3834               START_SPINDLE_COUNTERCLOCKWISE();
;;;3835           cycle_feed(plane, x, y, middle_z);
;;;3836           cycle_feed(plane, x, y, bottom_z);
;;;3837           STOP_SPINDLE_TURNING();
;;;3838           ORIENT_SPINDLE(0.0, direction);
;;;3839           cycle_traverse(plane, offset_x, offset_y, bottom_z);
;;;3840           cycle_traverse(plane, offset_x, offset_y, clear_z);
;;;3841           cycle_traverse(plane, x, y, clear_z);
;;;3842           if (direction IS CANON_CLOCKWISE)
;;;3843               START_SPINDLE_CLOCKWISE();
;;;3844           else
;;;3845               START_SPINDLE_COUNTERCLOCKWISE();
;;;3846   
;;;3847           return RS274NGC_OK;
;;;3848       }
00006c  b008              ADD      sp,sp,#0x20
00006e  e8bd9ff0          POP      {r4-r12,pc}
                  |L28.114|
000072  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;3826
000076  e9cd6700          STRD     r6,r7,[sp,#0]         ;3826
00007a  e9cd0102          STRD     r0,r1,[sp,#8]         ;3826
00007e  4658              MOV      r0,r11                ;3826
000080  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3826
000084  f7fffffe          BL       cycle_traverse
000088  f7fffffe          BL       STOP_SPINDLE_TURNING
00008c  4652              MOV      r2,r10                ;3828
00008e  2000              MOVS     r0,#0                 ;3828
000090  4601              MOV      r1,r0                 ;3828
000092  f7fffffe          BL       ORIENT_SPINDLE
000096  e88d03c0          STM      sp,{r6-r9}            ;3829
00009a  4658              MOV      r0,r11                ;3829
00009c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3829
0000a0  f7fffffe          BL       cycle_traverse
0000a4  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3830
0000a8  4658              MOV      r0,r11                ;3830
0000aa  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3830
0000ae  f7fffffe          BL       cycle_traverse
0000b2  f1ba0f02          CMP      r10,#2                ;3831
0000b6  d102              BNE      |L28.190|
0000b8  f7fffffe          BL       START_SPINDLE_CLOCKWISE
0000bc  e001              B        |L28.194|
                  |L28.190|
0000be  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L28.194|
0000c2  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;3835
0000c6  e9cd4500          STRD     r4,r5,[sp,#0]         ;3835
0000ca  e9cd0102          STRD     r0,r1,[sp,#8]         ;3835
0000ce  4658              MOV      r0,r11                ;3835
0000d0  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3835
0000d4  f7fffffe          BL       cycle_feed
0000d8  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3836
0000dc  4658              MOV      r0,r11                ;3836
0000de  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3836
0000e2  f7fffffe          BL       cycle_feed
0000e6  f7fffffe          BL       STOP_SPINDLE_TURNING
0000ea  4652              MOV      r2,r10                ;3838
0000ec  2000              MOVS     r0,#0                 ;3838
0000ee  4601              MOV      r1,r0                 ;3838
0000f0  f7fffffe          BL       ORIENT_SPINDLE
0000f4  e88d03c0          STM      sp,{r6-r9}            ;3839
0000f8  4658              MOV      r0,r11                ;3839
0000fa  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3839
0000fe  f7fffffe          BL       cycle_traverse
000102  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;3840
000106  e9cd6700          STRD     r6,r7,[sp,#0]         ;3840
00010a  e9cd0102          STRD     r0,r1,[sp,#8]         ;3840
00010e  4658              MOV      r0,r11                ;3840
000110  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3840
000114  f7fffffe          BL       cycle_traverse
000118  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;3841
00011c  e9cd4500          STRD     r4,r5,[sp,#0]         ;3841
000120  e9cd0102          STRD     r0,r1,[sp,#8]         ;3841
000124  4658              MOV      r0,r11                ;3841
000126  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3841
00012a  f7fffffe          BL       cycle_traverse
00012e  f1ba0f02          CMP      r10,#2                ;3842
000132  d102              BNE      |L28.314|
000134  f7fffffe          BL       START_SPINDLE_CLOCKWISE
000138  e001              B        |L28.318|
                  |L28.314|
00013a  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L28.318|
00013e  2000              MOVS     r0,#0                 ;3847
000140  e794              B        |L28.108|
;;;3849   
                          ENDP

000142  0000              DCW      0x0000
                  |L28.324|
                          DCD      _setup+0xc000
                  |L28.328|
                          DCD      |symbol_number.465|
                  |L28.332|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g88||, CODE, READONLY, ALIGN=2

                  convert_cycle_g88 PROC
;;;3879   
;;;3880       static int convert_cycle_g88(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3881       CANON_PLANE plane,                            /* selected plane                      */
;;;3882       double x,                                     /* x-value where cycle is executed     */
;;;3883       double y,                                     /* y-value where cycle is executed     */
;;;3884       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3885       double dwell,                                 /* dwell time                          */
;;;3886       CANON_DIRECTION direction)                    /* direction spindle turning at outset */
;;;3887       {
000004  4683              MOV      r11,r0
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
00000a  f8dda050          LDR      r10,[sp,#0x50]
00000e  ae0e              ADD      r6,sp,#0x38
000010  e89603c0          LDM      r6,{r6-r9}
;;;3888           static char name[] SET_TO "convert_cycle_g88";
;;;3889   
;;;3890           CHK(((direction ISNT CANON_CLOCKWISE) AND
000014  f1ba0f02          CMP      r10,#2
000018  d02b              BEQ      |L29.114|
00001a  f1ba0f03          CMP      r10,#3
00001e  d028              BEQ      |L29.114|
000020  f04f0100          MOV      r1,#0
000024  481f              LDR      r0,|L29.164|
000026  f8c0114c          STR      r1,[r0,#0x14c]
00002a  4601              MOV      r1,r0
00002c  f8d1314c          LDR      r3,[r1,#0x14c]
000030  f8d1114c          LDR      r1,[r1,#0x14c]
000034  f1010101          ADD      r1,r1,#1
000038  4602              MOV      r2,r0
00003a  f8c2114c          STR      r1,[r2,#0x14c]
00003e  eb030183          ADD      r1,r3,r3,LSL #2
000042  f6a06254          SUB      r2,r0,#0xe54
000046  eb021101          ADD      r1,r2,r1,LSL #4
00004a  4608              MOV      r0,r1
00004c  4916              LDR      r1,|L29.168|
00004e  f7fffffe          BL       strcpy
000052  f04f0100          MOV      r1,#0
000056  4813              LDR      r0,|L29.164|
000058  f8d0014c          LDR      r0,[r0,#0x14c]
00005c  eb000080          ADD      r0,r0,r0,LSL #2
000060  4a12              LDR      r2,|L29.172|
000062  eb021000          ADD      r0,r2,r0,LSL #4
000066  7001              STRB     r1,[r0,#0]
000068  f04f00a0          MOV      r0,#0xa0
                  |L29.108|
;;;3891               (direction ISNT CANON_COUNTERCLOCKWISE)),
;;;3892               NCE_SPINDLE_NOT_TURNING_IN_G88);
;;;3893   
;;;3894           cycle_feed(plane, x, y, bottom_z);
;;;3895           DWELL(dwell);
;;;3896           STOP_SPINDLE_TURNING();
;;;3897           PROGRAM_STOP();                           /* operator retracts the spindle here */
;;;3898           if (direction IS CANON_CLOCKWISE)
;;;3899               START_SPINDLE_CLOCKWISE();
;;;3900           else
;;;3901               START_SPINDLE_COUNTERCLOCKWISE();
;;;3902   
;;;3903           return RS274NGC_OK;
;;;3904       }
00006c  b004              ADD      sp,sp,#0x10
00006e  e8bd9ff0          POP      {r4-r12,pc}
                  |L29.114|
000072  4622              MOV      r2,r4                 ;3894
000074  462b              MOV      r3,r5                 ;3894
000076  4658              MOV      r0,r11                ;3894
000078  e88d03c0          STM      sp,{r6-r9}            ;3894
00007c  f7fffffe          BL       cycle_feed
000080  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;3895
000084  f7fffffe          BL       DWELL
000088  f7fffffe          BL       STOP_SPINDLE_TURNING
00008c  f7fffffe          BL       PROGRAM_STOP
000090  f1ba0f02          CMP      r10,#2                ;3898
000094  d102              BNE      |L29.156|
000096  f7fffffe          BL       START_SPINDLE_CLOCKWISE
00009a  e001              B        |L29.160|
                  |L29.156|
00009c  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L29.160|
0000a0  2000              MOVS     r0,#0                 ;3903
0000a2  e7e3              B        |L29.108|
;;;3905   
                          ENDP

                  |L29.164|
                          DCD      _setup+0xc000
                  |L29.168|
                          DCD      |symbol_number.466|
                  |L29.172|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g89||, CODE, READONLY, ALIGN=1

                  convert_cycle_g89 PROC
;;;3929   
;;;3930       static int convert_cycle_g89(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3931       CANON_PLANE plane,                            /* selected plane                   */
;;;3932       double x,                                     /* x-value where cycle is executed  */
;;;3933       double y,                                     /* y-value where cycle is executed  */
;;;3934       double clear_z,                               /* z-value of clearance plane       */
;;;3935       double bottom_z,                              /* value of z at bottom of cycle    */
;;;3936       double dwell)                                 /* dwell time                       */
;;;3937       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3938           static char name[] SET_TO "convert_cycle_g89";
;;;3939   
;;;3940           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3941           DWELL(dwell);
00001e  e9dd0118          LDRD     r0,r1,[sp,#0x60]
000022  f7fffffe          BL       DWELL
;;;3942           cycle_feed(plane, x, y, clear_z);
000026  4632              MOV      r2,r6
000028  463b              MOV      r3,r7
00002a  e88d0330          STM      sp,{r4,r5,r8,r9}
00002e  9804              LDR      r0,[sp,#0x10]
000030  f7fffffe          BL       cycle_feed
;;;3943   
;;;3944           return RS274NGC_OK;
000034  2000              MOVS     r0,#0
;;;3945       }
000036  b008              ADD      sp,sp,#0x20
000038  e8bd9ff0          POP      {r4-r12,pc}
;;;3946   
                          ENDP


                          AREA ||i.convert_cycle_xy||, CODE, READONLY, ALIGN=2

                  convert_cycle_xy PROC
;;;4063   
;;;4064           static int convert_cycle_xy(              /* ARGUMENTS                                 */
000000  b507              PUSH     {r0-r2,lr}
;;;4065           int motion,                               /* a g-code between G_81 and G_89, a canned cycle */
;;;4066           block_pointer block,                      /* pointer to a block of RS274 instructions       */
;;;4067           setup_pointer settings)                   /* pointer to machine settings                    */
;;;4068       {
000002  b0b0              SUB      sp,sp,#0xc0
;;;4069           static char name[] SET_TO "convert_cycle_xy";
;;;4070           double aa;
;;;4071           double aa_increment;
;;;4072           double bb;
;;;4073           double bb_increment;
;;;4074           double cc;
;;;4075           double clear_cc;
;;;4076           double i;
;;;4077           double j;
;;;4078           double k;
;;;4079           double old_cc;
;;;4080           CANON_PLANE plane;
;;;4081           double r;
;;;4082           int repeat;
;;;4083           CANON_MOTION_MODE save_mode;
;;;4084           int status;
;;;4085   
;;;4086           plane SET_TO CANON_PLANE_XY;
000004  f04f0001          MOV      r0,#1
000008  901b              STR      r0,[sp,#0x6c]
;;;4087           if (settings->motion_mode ISNT motion)
00000a  9832              LDR      r0,[sp,#0xc8]
00000c  f8d01628          LDR      r1,[r0,#0x628]
000010  9830              LDR      r0,[sp,#0xc0]
000012  4281              CMP      r1,r0
000014  d02a              BEQ      |L31.108|
;;;4088           {
;;;4089               CHK((block->z_flag IS OFF),
000016  9831              LDR      r0,[sp,#0xc4]
000018  f8d001f8          LDR      r0,[r0,#0x1f8]
00001c  bb30              CBNZ     r0,|L31.108|
00001e  f04f0100          MOV      r1,#0
000022  48ff              LDR      r0,|L31.1056|
000024  f8c0114c          STR      r1,[r0,#0x14c]
000028  f8d0214c          LDR      r2,[r0,#0x14c]
00002c  f8d0014c          LDR      r0,[r0,#0x14c]
000030  f1000001          ADD      r0,r0,#1
000034  49fa              LDR      r1,|L31.1056|
000036  f8c1014c          STR      r0,[r1,#0x14c]
00003a  eb020082          ADD      r0,r2,r2,LSL #2
00003e  f6a16154          SUB      r1,r1,#0xe54
000042  eb011000          ADD      r0,r1,r0,LSL #4
000046  49f7              LDR      r1,|L31.1060|
000048  9014              STR      r0,[sp,#0x50]
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  48f3              LDR      r0,|L31.1056|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4af2              LDR      r2,|L31.1064|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00c3          MOV      r0,#0xc3
                  |L31.104|
;;;4090                   NCE_Z_VALUE_UNSPECIFIED_IN_XY_PLANE_CANNED_CYCLE);
;;;4091           }
;;;4092           block->z_number SET_TO
;;;4093               block->z_flag IS ON ? block->z_number : settings->cycle_cc;
;;;4094           old_cc SET_TO settings->current_z;
;;;4095   
;;;4096           if (settings->distance_mode IS MODE_ABSOLUTE)
;;;4097           {
;;;4098               aa_increment SET_TO 0.0;
;;;4099               bb_increment SET_TO 0.0;
;;;4100               r SET_TO block->r_number;
;;;4101               cc SET_TO block->z_number;
;;;4102               aa SET_TO block->x_flag IS ON ? block->x_number : settings->current_x;
;;;4103               bb SET_TO block->y_flag IS ON ? block->y_number : settings->current_y;
;;;4104           }
;;;4105           else if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4106           {
;;;4107               aa_increment SET_TO block->x_number;
;;;4108               bb_increment SET_TO block->y_number;
;;;4109               r SET_TO (block->r_number + old_cc);
;;;4110               cc SET_TO (r + block->z_number);      /* [NCMS, page 98] */
;;;4111               aa SET_TO settings->current_x;
;;;4112               bb SET_TO settings->current_y;
;;;4113           }
;;;4114           else
;;;4115               ERM(NCE_BUG_DISTANCE_MODE_NOT_G90_OR_G91);
;;;4116           CHK((r < cc), NCE_R_LESS_THAN_Z_IN_CYCLE_IN_XY_PLANE);
;;;4117   
;;;4118           if (old_cc < r)
;;;4119           {
;;;4120               STRAIGHT_TRAVERSE(settings->current_x, settings->current_y, r
;;;4121       #ifdef AA
;;;4122                   ,     settings->AA_current
;;;4123       #else
;;;4124       #ifdef ALL_AXES
;;;4125                   , 0
;;;4126       #endif
;;;4127       #endif
;;;4128       #ifdef BB
;;;4129                   ,  settings->BB_current
;;;4130       #else
;;;4131       #ifdef ALL_AXES
;;;4132                   , 0
;;;4133       #endif
;;;4134       #endif
;;;4135       #ifdef CC
;;;4136                   ,  settings->CC_current
;;;4137       #else
;;;4138       #ifdef ALL_AXES
;;;4139                   , 0
;;;4140       #endif
;;;4141       #endif
;;;4142                   );
;;;4143               old_cc SET_TO r;
;;;4144           }
;;;4145           clear_cc SET_TO (settings->retract_mode IS R_PLANE) ? r : old_cc;
;;;4146   
;;;4147           save_mode SET_TO GET_EXTERNAL_MOTION_CONTROL_MODE();
;;;4148           if (save_mode ISNT CANON_EXACT_PATH)
;;;4149               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
;;;4150   
;;;4151           switch(motion)
;;;4152           {
;;;4153               case G_81:
;;;4154                   CYCLE_MACRO(convert_cycle_g81(CANON_PLANE_XY, aa, bb, clear_cc, cc))
;;;4155                       break;
;;;4156               case G_82:
;;;4157                   CHK(((settings->motion_mode ISNT G_82) AND (block->p_number IS -1.0)),
;;;4158                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G82);
;;;4159                   block->p_number SET_TO
;;;4160                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4161                   CYCLE_MACRO(convert_cycle_g82 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4162                       block->p_number))
;;;4163                       settings->cycle_p SET_TO block->p_number;
;;;4164                   break;
;;;4165               case G_83:
;;;4166                   CHK(((settings->motion_mode ISNT G_83) AND (block->q_number IS -1.0)),
;;;4167                       NCE_Q_WORD_MISSING_WITH_G83);
;;;4168                   block->q_number SET_TO
;;;4169                       block->q_number IS -1.0 ? settings->cycle_q : block->q_number;
;;;4170                   CYCLE_MACRO(convert_cycle_g83 (CANON_PLANE_XY, aa, bb, r, clear_cc, cc,
;;;4171                       block->q_number))
;;;4172                       settings->cycle_q SET_TO block->q_number;
;;;4173                   break;
;;;4174               case G_84:
;;;4175                   CYCLE_MACRO(convert_cycle_g84 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4176                       settings->spindle_turning, settings->speed_feed_mode))
;;;4177                       break;
;;;4178               case G_85:
;;;4179                   CYCLE_MACRO(convert_cycle_g85 (CANON_PLANE_XY, aa, bb, clear_cc, cc))
;;;4180                       break;
;;;4181               case G_86:
;;;4182                   CHK(((settings->motion_mode ISNT G_86) AND (block->p_number IS -1.0)),
;;;4183                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G86);
;;;4184                   block->p_number SET_TO
;;;4185                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4186                   CYCLE_MACRO(convert_cycle_g86 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4187                       block->p_number, settings->spindle_turning))
;;;4188                       settings->cycle_p SET_TO block->p_number;
;;;4189                   break;
;;;4190               case G_87:
;;;4191                   if (settings->motion_mode ISNT G_87)
;;;4192                   {
;;;4193                       CHK((block->i_flag IS OFF), NCE_I_WORD_MISSING_WITH_G87);
;;;4194                       CHK((block->j_flag IS OFF), NCE_J_WORD_MISSING_WITH_G87);
;;;4195                       CHK((block->k_flag IS OFF), NCE_K_WORD_MISSING_WITH_G87);
;;;4196                   }
;;;4197                   i SET_TO block->i_flag IS ON ? block->i_number : settings->cycle_i;
;;;4198                   j SET_TO block->j_flag IS ON ? block->j_number : settings->cycle_j;
;;;4199                   k SET_TO block->k_flag IS ON ? block->k_number : settings->cycle_k;
;;;4200                   settings->cycle_i SET_TO i;
;;;4201                   settings->cycle_j SET_TO j;
;;;4202                   settings->cycle_k SET_TO k;
;;;4203                   if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4204                   {
;;;4205                       k SET_TO (cc + k);            /* k always absolute in function call below */
;;;4206                   }
;;;4207                   CYCLE_MACRO(convert_cycle_g87 (CANON_PLANE_XY, aa, (aa + i), bb,
;;;4208                       (bb + j), r, clear_cc, k, cc, settings->spindle_turning))
;;;4209                       break;
;;;4210               case G_88:
;;;4211                   CHK(((settings->motion_mode ISNT G_88) AND (block->p_number IS -1.0)),
;;;4212                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G88);
;;;4213                   block->p_number SET_TO
;;;4214                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4215                   CYCLE_MACRO(convert_cycle_g88 (CANON_PLANE_XY, aa, bb, cc,
;;;4216                       block->p_number, settings->spindle_turning))
;;;4217                       settings->cycle_p SET_TO block->p_number;
;;;4218                   break;
;;;4219               case G_89:
;;;4220                   CHK(((settings->motion_mode ISNT G_89) AND (block->p_number IS -1.0)),
;;;4221                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G89);
;;;4222                   block->p_number SET_TO
;;;4223                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4224                   CYCLE_MACRO(convert_cycle_g89 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4225                       block->p_number))
;;;4226                       settings->cycle_p SET_TO block->p_number;
;;;4227                   break;
;;;4228               default:
;;;4229                   ERM(NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
;;;4230           }
;;;4231           settings->current_x SET_TO aa;            /* CYCLE_MACRO updates aa and bb */
;;;4232           settings->current_y SET_TO bb;
;;;4233           settings->current_z SET_TO clear_cc;
;;;4234           settings->cycle_cc SET_TO block->z_number;
;;;4235   
;;;4236           if (save_mode ISNT CANON_EXACT_PATH)
;;;4237               SET_MOTION_CONTROL_MODE(save_mode);
;;;4238   
;;;4239           return RS274NGC_OK;
;;;4240       }
000068  b033              ADD      sp,sp,#0xcc
00006a  bd00              POP      {pc}
                  |L31.108|
00006c  9831              LDR      r0,[sp,#0xc4]         ;4092
00006e  f8d001f8          LDR      r0,[r0,#0x1f8]        ;4092
000072  2801              CMP      r0,#1                 ;4092
000074  d104              BNE      |L31.128|
000076  9931              LDR      r1,[sp,#0xc4]         ;4093
000078  f5017100          ADD      r1,r1,#0x200          ;4093
00007c  c903              LDM      r1,{r0,r1}            ;4093
00007e  e003              B        |L31.136|
                  |L31.128|
000080  9932              LDR      r1,[sp,#0xc8]         ;4093
000082  f501716e          ADD      r1,r1,#0x3b8          ;4093
000086  c903              LDM      r1,{r0,r1}            ;4093
                  |L31.136|
000088  9a31              LDR      r2,[sp,#0xc4]         ;4093
00008a  f5027200          ADD      r2,r2,#0x200          ;4093
00008e  c203              STM      r2!,{r0,r1}           ;4093
000090  9832              LDR      r0,[sp,#0xc8]         ;4094
000092  f5007068          ADD      r0,r0,#0x3a0          ;4094
000096  c803              LDM      r0,{r0,r1}            ;4094
000098  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4094
00009c  9832              LDR      r0,[sp,#0xc8]         ;4096
00009e  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4096
0000a2  bb98              CBNZ     r0,|L31.268|
0000a4  f04f0100          MOV      r1,#0                 ;4098
0000a8  912c              STR      r1,[sp,#0xb0]         ;4098
0000aa  912d              STR      r1,[sp,#0xb4]         ;4098
0000ac  4608              MOV      r0,r1                 ;4099
0000ae  9028              STR      r0,[sp,#0xa0]         ;4099
0000b0  9029              STR      r0,[sp,#0xa4]         ;4099
0000b2  9931              LDR      r1,[sp,#0xc4]         ;4100
0000b4  f50171e4          ADD      r1,r1,#0x1c8          ;4100
0000b8  c903              LDM      r1,{r0,r1}            ;4100
0000ba  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4100
0000be  9831              LDR      r0,[sp,#0xc4]         ;4101
0000c0  f5007000          ADD      r0,r0,#0x200          ;4101
0000c4  c803              LDM      r0,{r0,r1}            ;4101
0000c6  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4101
0000ca  9831              LDR      r0,[sp,#0xc4]         ;4102
0000cc  f8d001dc          LDR      r0,[r0,#0x1dc]        ;4102
0000d0  2801              CMP      r0,#1                 ;4102
0000d2  d104              BNE      |L31.222|
0000d4  9931              LDR      r1,[sp,#0xc4]         ;4102
0000d6  f50171f0          ADD      r1,r1,#0x1e0          ;4102
0000da  c903              LDM      r1,{r0,r1}            ;4102
0000dc  e003              B        |L31.230|
                  |L31.222|
0000de  9932              LDR      r1,[sp,#0xc8]         ;4102
0000e0  f5017164          ADD      r1,r1,#0x390          ;4102
0000e4  c903              LDM      r1,{r0,r1}            ;4102
                  |L31.230|
0000e6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4102
0000ea  9831              LDR      r0,[sp,#0xc4]         ;4103
0000ec  f8d001e8          LDR      r0,[r0,#0x1e8]        ;4103
0000f0  2801              CMP      r0,#1                 ;4103
0000f2  d104              BNE      |L31.254|
0000f4  9931              LDR      r1,[sp,#0xc4]         ;4103
0000f6  f50171f8          ADD      r1,r1,#0x1f0          ;4103
0000fa  c903              LDM      r1,{r0,r1}            ;4103
0000fc  e003              B        |L31.262|
                  |L31.254|
0000fe  9932              LDR      r1,[sp,#0xc8]         ;4103
000100  f5017166          ADD      r1,r1,#0x398          ;4103
000104  c903              LDM      r1,{r0,r1}            ;4103
                  |L31.262|
000106  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4103
00010a  e05b              B        |L31.452|
                  |L31.268|
00010c  e7ff              B        |L31.270|
                  |L31.270|
00010e  9832              LDR      r0,[sp,#0xc8]         ;4105
000110  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4105
000114  2801              CMP      r0,#1                 ;4105
000116  d130              BNE      |L31.378|
000118  9931              LDR      r1,[sp,#0xc4]         ;4107
00011a  f50171f0          ADD      r1,r1,#0x1e0          ;4107
00011e  c903              LDM      r1,{r0,r1}            ;4107
000120  e9cd012c          STRD     r0,r1,[sp,#0xb0]      ;4107
000124  9931              LDR      r1,[sp,#0xc4]         ;4108
000126  f50171f8          ADD      r1,r1,#0x1f0          ;4108
00012a  c903              LDM      r1,{r0,r1}            ;4108
00012c  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;4108
000130  9931              LDR      r1,[sp,#0xc4]         ;4109
000132  f50171e4          ADD      r1,r1,#0x1c8          ;4109
000136  c903              LDM      r1,{r0,r1}            ;4109
000138  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4109
00013c  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;4109
000140  f7fffffe          BL       __aeabi_dadd
000144  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4109
000148  9931              LDR      r1,[sp,#0xc4]         ;4110
00014a  f5017100          ADD      r1,r1,#0x200          ;4110
00014e  c903              LDM      r1,{r0,r1}            ;4110
000150  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4110
000154  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4110
000158  f7fffffe          BL       __aeabi_dadd
00015c  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4110
000160  9832              LDR      r0,[sp,#0xc8]         ;4111
000162  f5007064          ADD      r0,r0,#0x390          ;4111
000166  c803              LDM      r0,{r0,r1}            ;4111
000168  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4111
00016c  9932              LDR      r1,[sp,#0xc8]         ;4112
00016e  f5017166          ADD      r1,r1,#0x398          ;4112
000172  c903              LDM      r1,{r0,r1}            ;4112
000174  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4112
000178  e024              B        |L31.452|
                  |L31.378|
00017a  f04f0100          MOV      r1,#0                 ;4115
00017e  48a8              LDR      r0,|L31.1056|
000180  f8c0114c          STR      r1,[r0,#0x14c]        ;4115
000184  f8d0214c          LDR      r2,[r0,#0x14c]        ;4115
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;4115
00018c  f1000001          ADD      r0,r0,#1              ;4115
000190  49a3              LDR      r1,|L31.1056|
000192  f8c1014c          STR      r0,[r1,#0x14c]        ;4115
000196  eb020182          ADD      r1,r2,r2,LSL #2       ;4115
00019a  48a3              LDR      r0,|L31.1064|
00019c  eb001001          ADD      r0,r0,r1,LSL #4       ;4115
0001a0  49a0              LDR      r1,|L31.1060|
0001a2  9014              STR      r0,[sp,#0x50]         ;4115
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;4115
0001ac  489c              LDR      r0,|L31.1056|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;4115
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;4115
0001b6  4a9c              LDR      r2,|L31.1064|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;4115
0001bc  7001              STRB     r1,[r0,#0]            ;4115
0001be  f04f001f          MOV      r0,#0x1f              ;4115
                  |L31.450|
0001c2  e751              B        |L31.104|
                  |L31.452|
0001c4  e9dd2326          LDRD     r2,r3,[sp,#0x98]      ;4116
0001c8  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4116
0001cc  f7fffffe          BL       __aeabi_cdcmple
0001d0  d224              BCS      |L31.540|
0001d2  f04f0100          MOV      r1,#0                 ;4116
0001d6  4892              LDR      r0,|L31.1056|
0001d8  f8c0114c          STR      r1,[r0,#0x14c]        ;4116
0001dc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4116
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4116
0001e4  f1000001          ADD      r0,r0,#1              ;4116
0001e8  498d              LDR      r1,|L31.1056|
0001ea  f8c1014c          STR      r0,[r1,#0x14c]        ;4116
0001ee  eb020082          ADD      r0,r2,r2,LSL #2       ;4116
0001f2  498d              LDR      r1,|L31.1064|
0001f4  eb011000          ADD      r0,r1,r0,LSL #4       ;4116
0001f8  498a              LDR      r1,|L31.1060|
0001fa  9014              STR      r0,[sp,#0x50]         ;4116
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;4116
000204  4886              LDR      r0,|L31.1056|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;4116
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;4116
00020e  4a86              LDR      r2,|L31.1064|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;4116
000214  7001              STRB     r1,[r0,#0]            ;4116
000216  f04f0096          MOV      r0,#0x96              ;4116
                  |L31.538|
00021a  e725              B        |L31.104|
                  |L31.540|
00021c  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4118
000220  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4118
000224  f7fffffe          BL       __aeabi_cdcmple
000228  d217              BCS      |L31.602|
00022a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4120
00022e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4120
000232  9932              LDR      r1,[sp,#0xc8]         ;4120
000234  f5017166          ADD      r1,r1,#0x398          ;4120
000238  c903              LDM      r1,{r0,r1}            ;4120
00023a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4120
00023e  9932              LDR      r1,[sp,#0xc8]         ;4120
000240  f5017164          ADD      r1,r1,#0x390          ;4120
000244  c903              LDM      r1,{r0,r1}            ;4120
000246  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4120
00024a  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;4120
00024e  f7fffffe          BL       STRAIGHT_TRAVERSE
000252  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4143
000256  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4143
                  |L31.602|
00025a  9832              LDR      r0,[sp,#0xc8]         ;4145
00025c  f5004030          ADD      r0,r0,#0xb000         ;4145
000260  f8900188          LDRB     r0,[r0,#0x188]        ;4145
000264  b910              CBNZ     r0,|L31.620|
000266  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4145
00026a  e001              B        |L31.624|
                  |L31.620|
00026c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4145
                  |L31.624|
000270  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;4145
000274  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000278  9016              STR      r0,[sp,#0x58]         ;4147
00027a  9816              LDR      r0,[sp,#0x58]         ;4148
00027c  2802              CMP      r0,#2                 ;4148
00027e  d002              BEQ      |L31.646|
000280  2002              MOVS     r0,#2                 ;4149
000282  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L31.646|
000286  f2403252          MOV      r2,#0x352             ;4151
00028a  9830              LDR      r0,[sp,#0xc0]         ;4151
00028c  1a81              SUBS     r1,r0,r2              ;4151
00028e  4290              CMP      r0,r2                 ;4151
000290  d07d              BEQ      |L31.910|
000292  dc0a              BGT      |L31.682|
000294  f5a07040          SUB      r0,r0,#0x300          ;4151
000298  382a              SUBS     r0,r0,#0x2a           ;4151
00029a  d00f              BEQ      |L31.700|
00029c  280a              CMP      r0,#0xa               ;4151
00029e  d077              BEQ      |L31.912|
0002a0  2814              CMP      r0,#0x14              ;4151
0002a2  d076              BEQ      |L31.914|
0002a4  281e              CMP      r0,#0x1e              ;4151
                  |L31.678|
0002a6  d175              BNE      |L31.916|
0002a8  e24a              B        |L31.1856|
                  |L31.682|
0002aa  290a              CMP      r1,#0xa               ;4151
0002ac  d073              BEQ      |L31.918|
0002ae  2914              CMP      r1,#0x14              ;4151
0002b0  d072              BEQ      |L31.920|
0002b2  291e              CMP      r1,#0x1e              ;4151
0002b4  d071              BEQ      |L31.922|
0002b6  2928              CMP      r1,#0x28              ;4151
0002b8  d1f5              BNE      |L31.678|
0002ba  e3fe              B        |L31.2746|
                  |L31.700|
0002bc  9831              LDR      r0,[sp,#0xc4]         ;4154
0002be  f8d00178          LDR      r0,[r0,#0x178]        ;4154
0002c2  9017              STR      r0,[sp,#0x5c]         ;4154
0002c4  e07a              B        |L31.956|
                  |L31.710|
0002c6  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4154
0002ca  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4154
0002ce  f7fffffe          BL       __aeabi_dadd
0002d2  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4154
0002d6  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4154
0002da  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4154
0002de  f7fffffe          BL       __aeabi_dadd
0002e2  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4154
0002e6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4154
0002ea  e9cd0102          STRD     r0,r1,[sp,#8]         ;4154
0002ee  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4154
0002f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4154
0002f6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4154
0002fa  981b              LDR      r0,[sp,#0x6c]         ;4154
0002fc  f7fffffe          BL       cycle_traverse
000300  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4154
000304  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4154
000308  f7fffffe          BL       __aeabi_cdcmpeq
00030c  d00c              BEQ      |L31.808|
00030e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4154
000312  e9cd0102          STRD     r0,r1,[sp,#8]         ;4154
000316  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4154
00031a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4154
00031e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4154
000322  981b              LDR      r0,[sp,#0x6c]         ;4154
000324  f7fffffe          BL       cycle_traverse
                  |L31.808|
000328  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4154
00032c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4154
000330  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4154
000334  e9cd0102          STRD     r0,r1,[sp,#8]         ;4154
000338  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4154
00033c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4154
000340  2001              MOVS     r0,#1                 ;4154
000342  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4154
000346  f7fffffe          BL       convert_cycle_g81
00034a  9015              STR      r0,[sp,#0x54]         ;4154
00034c  b330              CBZ      r0,|L31.924|
00034e  4834              LDR      r0,|L31.1056|
000350  f8d0014c          LDR      r0,[r0,#0x14c]        ;4154
000354  2831              CMP      r0,#0x31              ;4154
000356  da27              BGE      |L31.936|
000358  4831              LDR      r0,|L31.1056|
00035a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4154
00035e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4154
000362  1c40              ADDS     r0,r0,#1              ;4154
000364  492e              LDR      r1,|L31.1056|
000366  f8c1014c          STR      r0,[r1,#0x14c]        ;4154
00036a  eb020182          ADD      r1,r2,r2,LSL #2       ;4154
00036e  482e              LDR      r0,|L31.1064|
000370  eb001001          ADD      r0,r0,r1,LSL #4       ;4154
000374  492b              LDR      r1,|L31.1060|
000376  9014              STR      r0,[sp,#0x50]         ;4154
000378  f7fffffe          BL       strcpy
00037c  f04f0100          MOV      r1,#0                 ;4154
000380  4827              LDR      r0,|L31.1056|
000382  f8d0014c          LDR      r0,[r0,#0x14c]        ;4154
000386  eb000380          ADD      r3,r0,r0,LSL #2       ;4154
00038a  4827              LDR      r0,|L31.1064|
00038c  e007              B        |L31.926|
                  |L31.910|
00038e  e268              B        |L31.2146|
                  |L31.912|
000390  e018              B        |L31.964|
                  |L31.914|
000392  e0f7              B        |L31.1412|
                  |L31.916|
000394  e3f1              B        |L31.2938|
                  |L31.918|
000396  e2e0              B        |L31.2394|
                  |L31.920|
000398  e3bf              B        |L31.2842|
                  |L31.922|
00039a  e3ef              B        |L31.2940|
                  |L31.924|
00039c  e006              B        |L31.940|
                  |L31.926|
00039e  eb001003          ADD      r0,r0,r3,LSL #4       ;4154
0003a2  7001              STRB     r1,[r0,#0]            ;4154
0003a4  9815              LDR      r0,[sp,#0x54]         ;4154
                  |L31.934|
0003a6  e65f              B        |L31.104|
                  |L31.936|
0003a8  9815              LDR      r0,[sp,#0x54]         ;4154
0003aa  e65d              B        |L31.104|
                  |L31.940|
0003ac  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4154
0003b0  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4154
0003b4  9817              LDR      r0,[sp,#0x5c]         ;4154
0003b6  f1a00001          SUB      r0,r0,#1              ;4154
0003ba  9017              STR      r0,[sp,#0x5c]         ;4154
                  |L31.956|
0003bc  9817              LDR      r0,[sp,#0x5c]         ;4154
0003be  2800              CMP      r0,#0                 ;4154
0003c0  dc81              BGT      |L31.710|
                  |L31.962|
0003c2  e3a9              B        |L31.2840|
                  |L31.964|
0003c4  9832              LDR      r0,[sp,#0xc8]         ;4157
0003c6  f8d00628          LDR      r0,[r0,#0x628]        ;4157
0003ca  f5b07f4d          CMP      r0,#0x334             ;4157
0003ce  d038              BEQ      |L31.1090|
0003d0  9931              LDR      r1,[sp,#0xc4]         ;4157
0003d2  f50171d8          ADD      r1,r1,#0x1b0          ;4157
0003d6  c903              LDM      r1,{r0,r1}            ;4157
0003d8  2200              MOVS     r2,#0                 ;4157
0003da  4b14              LDR      r3,|L31.1068|
0003dc  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4157
0003e0  f7fffffe          BL       __aeabi_cdcmpeq
0003e4  d12d              BNE      |L31.1090|
0003e6  f04f0100          MOV      r1,#0                 ;4157
0003ea  480d              LDR      r0,|L31.1056|
0003ec  f8c0114c          STR      r1,[r0,#0x14c]        ;4157
0003f0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4157
0003f4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4157
0003f8  f1000001          ADD      r0,r0,#1              ;4157
0003fc  4908              LDR      r1,|L31.1056|
0003fe  f8c1014c          STR      r0,[r1,#0x14c]        ;4157
000402  eb020082          ADD      r0,r2,r2,LSL #2       ;4157
000406  4908              LDR      r1,|L31.1064|
000408  eb011000          ADD      r0,r1,r0,LSL #4       ;4157
00040c  4905              LDR      r1,|L31.1060|
00040e  9014              STR      r0,[sp,#0x50]         ;4157
000410  f7fffffe          BL       strcpy
000414  f04f0100          MOV      r1,#0                 ;4157
000418  4801              LDR      r0,|L31.1056|
00041a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4157
00041e  e007              B        |L31.1072|
                  |L31.1056|
                          DCD      _setup+0xc000
                  |L31.1060|
                          DCD      |symbol_number.468|
                  |L31.1064|
                          DCD      _setup+0xb1ac
                  |L31.1068|
                          DCD      0xbff00000
                  |L31.1072|
000430  eb000080          ADD      r0,r0,r0,LSL #2       ;4157
000434  4aff              LDR      r2,|L31.2100|
000436  eb021000          ADD      r0,r2,r0,LSL #4       ;4157
00043a  7001              STRB     r1,[r0,#0]            ;4157
00043c  f04f0049          MOV      r0,#0x49              ;4157
                  |L31.1088|
000440  e612              B        |L31.104|
                  |L31.1090|
000442  9931              LDR      r1,[sp,#0xc4]         ;4159
000444  f50171d8          ADD      r1,r1,#0x1b0          ;4159
000448  c903              LDM      r1,{r0,r1}            ;4159
00044a  2200              MOVS     r2,#0                 ;4159
00044c  4bfa              LDR      r3,|L31.2104|
00044e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4159
000452  f7fffffe          BL       __aeabi_cdcmpeq
000456  d104              BNE      |L31.1122|
000458  9932              LDR      r1,[sp,#0xc8]         ;4160
00045a  f5017178          ADD      r1,r1,#0x3e0          ;4160
00045e  c903              LDM      r1,{r0,r1}            ;4160
000460  e003              B        |L31.1130|
                  |L31.1122|
000462  9931              LDR      r1,[sp,#0xc4]         ;4160
000464  f50171d8          ADD      r1,r1,#0x1b0          ;4160
000468  c903              LDM      r1,{r0,r1}            ;4160
                  |L31.1130|
00046a  9a31              LDR      r2,[sp,#0xc4]         ;4160
00046c  f50272d8          ADD      r2,r2,#0x1b0          ;4160
000470  c203              STM      r2!,{r0,r1}           ;4160
000472  9831              LDR      r0,[sp,#0xc4]         ;4161
000474  f8d00178          LDR      r0,[r0,#0x178]        ;4161
000478  9017              STR      r0,[sp,#0x5c]         ;4161
00047a  e077              B        |L31.1388|
                  |L31.1148|
00047c  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4161
000480  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4161
000484  f7fffffe          BL       __aeabi_dadd
000488  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4161
00048c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4161
000490  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4161
000494  f7fffffe          BL       __aeabi_dadd
000498  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4161
00049c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4161
0004a0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4161
0004a4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4161
0004a8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4161
0004ac  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4161
0004b0  981b              LDR      r0,[sp,#0x6c]         ;4161
0004b2  f7fffffe          BL       cycle_traverse
0004b6  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4161
0004ba  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4161
0004be  f7fffffe          BL       __aeabi_cdcmpeq
0004c2  d00c              BEQ      |L31.1246|
0004c4  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4161
0004c8  e9cd0102          STRD     r0,r1,[sp,#8]         ;4161
0004cc  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4161
0004d0  e9cd0100          STRD     r0,r1,[sp,#0]         ;4161
0004d4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4161
0004d8  981b              LDR      r0,[sp,#0x6c]         ;4161
0004da  f7fffffe          BL       cycle_traverse
                  |L31.1246|
0004de  9831              LDR      r0,[sp,#0xc4]         ;4161
0004e0  f50070d8          ADD      r0,r0,#0x1b0          ;4161
0004e4  c803              LDM      r0,{r0,r1}            ;4161
0004e6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4161
0004ea  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4161
0004ee  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4161
0004f2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4161
0004f6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4161
0004fa  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4161
0004fe  e9cd0100          STRD     r0,r1,[sp,#0]         ;4161
000502  2001              MOVS     r0,#1                 ;4161
000504  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4161
000508  f7fffffe          BL       convert_cycle_g82
00050c  9015              STR      r0,[sp,#0x54]         ;4161
00050e  b328              CBZ      r0,|L31.1372|
000510  48ca              LDR      r0,|L31.2108|
000512  f8d0014c          LDR      r0,[r0,#0x14c]        ;4161
000516  2831              CMP      r0,#0x31              ;4161
000518  da1e              BGE      |L31.1368|
00051a  48c8              LDR      r0,|L31.2108|
00051c  f8d0214c          LDR      r2,[r0,#0x14c]        ;4161
000520  f8d0014c          LDR      r0,[r0,#0x14c]        ;4161
000524  1c40              ADDS     r0,r0,#1              ;4161
000526  49c5              LDR      r1,|L31.2108|
000528  f8c1014c          STR      r0,[r1,#0x14c]        ;4161
00052c  eb020082          ADD      r0,r2,r2,LSL #2       ;4161
000530  49c0              LDR      r1,|L31.2100|
000532  eb011000          ADD      r0,r1,r0,LSL #4       ;4161
000536  49c2              LDR      r1,|L31.2112|
000538  9014              STR      r0,[sp,#0x50]         ;4161
00053a  f7fffffe          BL       strcpy
00053e  f04f0100          MOV      r1,#0                 ;4161
000542  48be              LDR      r0,|L31.2108|
000544  f8d0014c          LDR      r0,[r0,#0x14c]        ;4161
000548  eb000080          ADD      r0,r0,r0,LSL #2       ;4161
00054c  4ab9              LDR      r2,|L31.2100|
00054e  eb021000          ADD      r0,r2,r0,LSL #4       ;4161
000552  7001              STRB     r1,[r0,#0]            ;4161
000554  9815              LDR      r0,[sp,#0x54]         ;4161
000556  e587              B        |L31.104|
                  |L31.1368|
000558  9815              LDR      r0,[sp,#0x54]         ;4161
00055a  e585              B        |L31.104|
                  |L31.1372|
00055c  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4161
000560  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4161
000564  9817              LDR      r0,[sp,#0x5c]         ;4161
000566  f1a00001          SUB      r0,r0,#1              ;4161
00056a  9017              STR      r0,[sp,#0x5c]         ;4161
                  |L31.1388|
00056c  9817              LDR      r0,[sp,#0x5c]         ;4161
00056e  2800              CMP      r0,#0                 ;4161
000570  dc84              BGT      |L31.1148|
000572  9831              LDR      r0,[sp,#0xc4]         ;4163
000574  f50070d8          ADD      r0,r0,#0x1b0          ;4163
000578  c806              LDM      r0!,{r1,r2}           ;4163
00057a  9832              LDR      r0,[sp,#0xc8]         ;4163
00057c  f5007078          ADD      r0,r0,#0x3e0          ;4163
000580  c006              STM      r0!,{r1,r2}           ;4163
000582  e71e              B        |L31.962|
                  |L31.1412|
000584  9832              LDR      r0,[sp,#0xc8]         ;4166
000586  f8d00628          LDR      r0,[r0,#0x628]        ;4166
00058a  f5a07140          SUB      r1,r0,#0x300          ;4166
00058e  393e              SUBS     r1,r1,#0x3e           ;4166
000590  d02f              BEQ      |L31.1522|
000592  9931              LDR      r1,[sp,#0xc4]         ;4166
000594  f50171dc          ADD      r1,r1,#0x1b8          ;4166
000598  c903              LDM      r1,{r0,r1}            ;4166
00059a  2200              MOVS     r2,#0                 ;4166
00059c  4ba6              LDR      r3,|L31.2104|
00059e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4166
0005a2  f7fffffe          BL       __aeabi_cdcmpeq
0005a6  d124              BNE      |L31.1522|
0005a8  f04f0100          MOV      r1,#0                 ;4166
0005ac  48a3              LDR      r0,|L31.2108|
0005ae  f8c0114c          STR      r1,[r0,#0x14c]        ;4166
0005b2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4166
0005b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4166
0005ba  f1000001          ADD      r0,r0,#1              ;4166
0005be  499f              LDR      r1,|L31.2108|
0005c0  f8c1014c          STR      r0,[r1,#0x14c]        ;4166
0005c4  eb020082          ADD      r0,r2,r2,LSL #2       ;4166
0005c8  499a              LDR      r1,|L31.2100|
0005ca  eb011000          ADD      r0,r1,r0,LSL #4       ;4166
0005ce  499c              LDR      r1,|L31.2112|
0005d0  9014              STR      r0,[sp,#0x50]         ;4166
0005d2  f7fffffe          BL       strcpy
0005d6  f04f0100          MOV      r1,#0                 ;4166
0005da  4898              LDR      r0,|L31.2108|
0005dc  f8d0014c          LDR      r0,[r0,#0x14c]        ;4166
0005e0  eb000080          ADD      r0,r0,r0,LSL #2       ;4166
0005e4  4a93              LDR      r2,|L31.2100|
0005e6  eb021000          ADD      r0,r2,r0,LSL #4       ;4166
0005ea  7001              STRB     r1,[r0,#0]            ;4166
0005ec  f04f008f          MOV      r0,#0x8f              ;4166
0005f0  e53a              B        |L31.104|
                  |L31.1522|
0005f2  9931              LDR      r1,[sp,#0xc4]         ;4168
0005f4  f50171dc          ADD      r1,r1,#0x1b8          ;4168
0005f8  c903              LDM      r1,{r0,r1}            ;4168
0005fa  2200              MOVS     r2,#0                 ;4168
0005fc  4b8e              LDR      r3,|L31.2104|
0005fe  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4168
000602  f7fffffe          BL       __aeabi_cdcmpeq
000606  d104              BNE      |L31.1554|
000608  9932              LDR      r1,[sp,#0xc8]         ;4169
00060a  f501717a          ADD      r1,r1,#0x3e8          ;4169
00060e  c903              LDM      r1,{r0,r1}            ;4169
000610  e003              B        |L31.1562|
                  |L31.1554|
000612  9931              LDR      r1,[sp,#0xc4]         ;4169
000614  f50171dc          ADD      r1,r1,#0x1b8          ;4169
000618  c903              LDM      r1,{r0,r1}            ;4169
                  |L31.1562|
00061a  9a31              LDR      r2,[sp,#0xc4]         ;4169
00061c  f50272dc          ADD      r2,r2,#0x1b8          ;4169
000620  c203              STM      r2!,{r0,r1}           ;4169
000622  9831              LDR      r0,[sp,#0xc4]         ;4170
000624  f8d00178          LDR      r0,[r0,#0x178]        ;4170
000628  9017              STR      r0,[sp,#0x5c]         ;4170
00062a  e07b              B        |L31.1828|
                  |L31.1580|
00062c  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4170
000630  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4170
000634  f7fffffe          BL       __aeabi_dadd
000638  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4170
00063c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4170
000640  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4170
000644  f7fffffe          BL       __aeabi_dadd
000648  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4170
00064c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4170
000650  e9cd0102          STRD     r0,r1,[sp,#8]         ;4170
000654  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4170
000658  e9cd0100          STRD     r0,r1,[sp,#0]         ;4170
00065c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4170
000660  981b              LDR      r0,[sp,#0x6c]         ;4170
000662  f7fffffe          BL       cycle_traverse
000666  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4170
00066a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4170
00066e  f7fffffe          BL       __aeabi_cdcmpeq
000672  d00c              BEQ      |L31.1678|
000674  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4170
000678  e9cd0102          STRD     r0,r1,[sp,#8]         ;4170
00067c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4170
000680  e9cd0100          STRD     r0,r1,[sp,#0]         ;4170
000684  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4170
000688  981b              LDR      r0,[sp,#0x6c]         ;4170
00068a  f7fffffe          BL       cycle_traverse
                  |L31.1678|
00068e  9931              LDR      r1,[sp,#0xc4]         ;4170
000690  f50171dc          ADD      r1,r1,#0x1b8          ;4170
000694  c903              LDM      r1,{r0,r1}            ;4170
000696  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4170
00069a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4170
00069e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4170
0006a2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4170
0006a6  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4170
0006aa  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4170
0006ae  e9cd0102          STRD     r0,r1,[sp,#8]         ;4170
0006b2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4170
0006b6  e9cd0100          STRD     r0,r1,[sp,#0]         ;4170
0006ba  2001              MOVS     r0,#1                 ;4170
0006bc  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4170
0006c0  f7fffffe          BL       convert_cycle_g83
0006c4  9015              STR      r0,[sp,#0x54]         ;4170
0006c6  b328              CBZ      r0,|L31.1812|
0006c8  485c              LDR      r0,|L31.2108|
0006ca  f8d0014c          LDR      r0,[r0,#0x14c]        ;4170
0006ce  2831              CMP      r0,#0x31              ;4170
0006d0  da1e              BGE      |L31.1808|
0006d2  485a              LDR      r0,|L31.2108|
0006d4  f8d0214c          LDR      r2,[r0,#0x14c]        ;4170
0006d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4170
0006dc  1c40              ADDS     r0,r0,#1              ;4170
0006de  4957              LDR      r1,|L31.2108|
0006e0  f8c1014c          STR      r0,[r1,#0x14c]        ;4170
0006e4  eb020082          ADD      r0,r2,r2,LSL #2       ;4170
0006e8  4952              LDR      r1,|L31.2100|
0006ea  eb011000          ADD      r0,r1,r0,LSL #4       ;4170
0006ee  4954              LDR      r1,|L31.2112|
0006f0  9014              STR      r0,[sp,#0x50]         ;4170
0006f2  f7fffffe          BL       strcpy
0006f6  f04f0100          MOV      r1,#0                 ;4170
0006fa  4850              LDR      r0,|L31.2108|
0006fc  f8d0014c          LDR      r0,[r0,#0x14c]        ;4170
000700  eb000080          ADD      r0,r0,r0,LSL #2       ;4170
000704  4a4b              LDR      r2,|L31.2100|
000706  eb021000          ADD      r0,r2,r0,LSL #4       ;4170
00070a  7001              STRB     r1,[r0,#0]            ;4170
00070c  9815              LDR      r0,[sp,#0x54]         ;4170
                  |L31.1806|
00070e  e4ab              B        |L31.104|
                  |L31.1808|
000710  9815              LDR      r0,[sp,#0x54]         ;4170
000712  e4a9              B        |L31.104|
                  |L31.1812|
000714  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4170
000718  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4170
00071c  9817              LDR      r0,[sp,#0x5c]         ;4170
00071e  f1a00001          SUB      r0,r0,#1              ;4170
000722  9017              STR      r0,[sp,#0x5c]         ;4170
                  |L31.1828|
000724  9817              LDR      r0,[sp,#0x5c]         ;4170
000726  2800              CMP      r0,#0                 ;4170
000728  dc80              BGT      |L31.1580|
00072a  9831              LDR      r0,[sp,#0xc4]         ;4172
00072c  f8d021b8          LDR      r2,[r0,#0x1b8]        ;4172
000730  f8d011bc          LDR      r1,[r0,#0x1bc]        ;4172
000734  9832              LDR      r0,[sp,#0xc8]         ;4172
000736  f8c023e8          STR      r2,[r0,#0x3e8]        ;4172
00073a  f8c013ec          STR      r1,[r0,#0x3ec]        ;4172
00073e  e640              B        |L31.962|
                  |L31.1856|
000740  9831              LDR      r0,[sp,#0xc4]         ;4175
000742  f8d00178          LDR      r0,[r0,#0x178]        ;4175
000746  9017              STR      r0,[sp,#0x5c]         ;4175
000748  e086              B        |L31.2136|
                  |L31.1866|
00074a  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4175
00074e  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4175
000752  f7fffffe          BL       __aeabi_dadd
000756  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4175
00075a  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4175
00075e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4175
000762  f7fffffe          BL       __aeabi_dadd
000766  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4175
00076a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4175
00076e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4175
000772  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4175
000776  e9cd0100          STRD     r0,r1,[sp,#0]         ;4175
00077a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4175
00077e  981b              LDR      r0,[sp,#0x6c]         ;4175
000780  f7fffffe          BL       cycle_traverse
000784  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4175
000788  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4175
00078c  f7fffffe          BL       __aeabi_cdcmpeq
000790  d00c              BEQ      |L31.1964|
000792  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4175
000796  e9cd0102          STRD     r0,r1,[sp,#8]         ;4175
00079a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4175
00079e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4175
0007a2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4175
0007a6  981b              LDR      r0,[sp,#0x6c]         ;4175
0007a8  f7fffffe          BL       cycle_traverse
                  |L31.1964|
0007ac  9832              LDR      r0,[sp,#0xc8]         ;4175
0007ae  f5004030          ADD      r0,r0,#0xb000         ;4175
0007b2  f8d011a0          LDR      r1,[r0,#0x1a0]        ;4175
0007b6  9832              LDR      r0,[sp,#0xc8]         ;4175
0007b8  f5004030          ADD      r0,r0,#0xb000         ;4175
0007bc  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4175
0007c0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4175
0007c4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4175
0007c8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4175
0007cc  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4175
0007d0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4175
0007d4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4175
0007d8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4175
0007dc  2001              MOVS     r0,#1                 ;4175
0007de  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4175
0007e2  f7fffffe          BL       convert_cycle_g84
0007e6  9015              STR      r0,[sp,#0x54]         ;4175
0007e8  b318              CBZ      r0,|L31.2098|
0007ea  4814              LDR      r0,|L31.2108|
0007ec  f8d0014c          LDR      r0,[r0,#0x14c]        ;4175
0007f0  2831              CMP      r0,#0x31              ;4175
0007f2  da27              BGE      |L31.2116|
0007f4  4811              LDR      r0,|L31.2108|
0007f6  f8d0214c          LDR      r2,[r0,#0x14c]        ;4175
0007fa  f8d0014c          LDR      r0,[r0,#0x14c]        ;4175
0007fe  1c40              ADDS     r0,r0,#1              ;4175
000800  490e              LDR      r1,|L31.2108|
000802  eb020282          ADD      r2,r2,r2,LSL #2       ;4175
000806  f8c1014c          STR      r0,[r1,#0x14c]        ;4175
00080a  480a              LDR      r0,|L31.2100|
00080c  eb001002          ADD      r0,r0,r2,LSL #4       ;4175
000810  490b              LDR      r1,|L31.2112|
000812  9014              STR      r0,[sp,#0x50]         ;4175
000814  f7fffffe          BL       strcpy
000818  f04f0100          MOV      r1,#0                 ;4175
00081c  4807              LDR      r0,|L31.2108|
00081e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4175
000822  eb000080          ADD      r0,r0,r0,LSL #2       ;4175
000826  4a03              LDR      r2,|L31.2100|
000828  eb021000          ADD      r0,r2,r0,LSL #4       ;4175
00082c  7001              STRB     r1,[r0,#0]            ;4175
00082e  9815              LDR      r0,[sp,#0x54]         ;4175
                  |L31.2096|
000830  e41a              B        |L31.104|
                  |L31.2098|
000832  e009              B        |L31.2120|
                  |L31.2100|
                          DCD      _setup+0xb1ac
                  |L31.2104|
                          DCD      0xbff00000
                  |L31.2108|
                          DCD      _setup+0xc000
                  |L31.2112|
                          DCD      |symbol_number.468|
                  |L31.2116|
000844  9815              LDR      r0,[sp,#0x54]         ;4175
000846  e40f              B        |L31.104|
                  |L31.2120|
000848  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4175
00084c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4175
000850  9817              LDR      r0,[sp,#0x5c]         ;4175
000852  f1a00001          SUB      r0,r0,#1              ;4175
000856  9017              STR      r0,[sp,#0x5c]         ;4175
                  |L31.2136|
000858  9817              LDR      r0,[sp,#0x5c]         ;4175
00085a  2800              CMP      r0,#0                 ;4175
00085c  f73faf75          BGT      |L31.1866|
000860  e5af              B        |L31.962|
                  |L31.2146|
000862  9831              LDR      r0,[sp,#0xc4]         ;4179
000864  f8d00178          LDR      r0,[r0,#0x178]        ;4179
000868  9017              STR      r0,[sp,#0x5c]         ;4179
00086a  e072              B        |L31.2386|
                  |L31.2156|
00086c  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4179
000870  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4179
000874  f7fffffe          BL       __aeabi_dadd
000878  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4179
00087c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4179
000880  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4179
000884  f7fffffe          BL       __aeabi_dadd
000888  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4179
00088c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4179
000890  e9cd0102          STRD     r0,r1,[sp,#8]         ;4179
000894  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4179
000898  e9cd0100          STRD     r0,r1,[sp,#0]         ;4179
00089c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4179
0008a0  981b              LDR      r0,[sp,#0x6c]         ;4179
0008a2  f7fffffe          BL       cycle_traverse
0008a6  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4179
0008aa  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4179
0008ae  f7fffffe          BL       __aeabi_cdcmpeq
0008b2  d00c              BEQ      |L31.2254|
0008b4  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4179
0008b8  e9cd0102          STRD     r0,r1,[sp,#8]         ;4179
0008bc  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4179
0008c0  e9cd0100          STRD     r0,r1,[sp,#0]         ;4179
0008c4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4179
0008c8  981b              LDR      r0,[sp,#0x6c]         ;4179
0008ca  f7fffffe          BL       cycle_traverse
                  |L31.2254|
0008ce  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4179
0008d2  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4179
0008d6  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4179
0008da  e9cd0102          STRD     r0,r1,[sp,#8]         ;4179
0008de  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4179
0008e2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4179
0008e6  2001              MOVS     r0,#1                 ;4179
0008e8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4179
0008ec  f7fffffe          BL       convert_cycle_g85
0008f0  9015              STR      r0,[sp,#0x54]         ;4179
0008f2  b330              CBZ      r0,|L31.2370|
0008f4  48ff              LDR      r0,|L31.3316|
0008f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4179
0008fa  2831              CMP      r0,#0x31              ;4179
0008fc  da1f              BGE      |L31.2366|
0008fe  48fd              LDR      r0,|L31.3316|
000900  f8d0214c          LDR      r2,[r0,#0x14c]        ;4179
000904  f8d0014c          LDR      r0,[r0,#0x14c]        ;4179
000908  1c40              ADDS     r0,r0,#1              ;4179
00090a  49fa              LDR      r1,|L31.3316|
00090c  f8c1014c          STR      r0,[r1,#0x14c]        ;4179
000910  eb020082          ADD      r0,r2,r2,LSL #2       ;4179
000914  f6a16154          SUB      r1,r1,#0xe54          ;4179
000918  eb011000          ADD      r0,r1,r0,LSL #4       ;4179
00091c  49f6              LDR      r1,|L31.3320|
00091e  9014              STR      r0,[sp,#0x50]         ;4179
000920  f7fffffe          BL       strcpy
000924  f04f0100          MOV      r1,#0                 ;4179
000928  48f2              LDR      r0,|L31.3316|
00092a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4179
00092e  eb000080          ADD      r0,r0,r0,LSL #2       ;4179
000932  4af2              LDR      r2,|L31.3324|
000934  eb021000          ADD      r0,r2,r0,LSL #4       ;4179
000938  7001              STRB     r1,[r0,#0]            ;4179
00093a  9815              LDR      r0,[sp,#0x54]         ;4179
                  |L31.2364|
00093c  e441              B        |L31.450|
                  |L31.2366|
00093e  9815              LDR      r0,[sp,#0x54]         ;4179
000940  e43f              B        |L31.450|
                  |L31.2370|
000942  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4179
000946  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4179
00094a  9817              LDR      r0,[sp,#0x5c]         ;4179
00094c  f1a00001          SUB      r0,r0,#1              ;4179
000950  9017              STR      r0,[sp,#0x5c]         ;4179
                  |L31.2386|
000952  9817              LDR      r0,[sp,#0x5c]         ;4179
000954  2800              CMP      r0,#0                 ;4179
000956  dc89              BGT      |L31.2156|
000958  e533              B        |L31.962|
                  |L31.2394|
00095a  9832              LDR      r0,[sp,#0xc8]         ;4182
00095c  f8d00628          LDR      r0,[r0,#0x628]        ;4182
000960  f5b07f57          CMP      r0,#0x35c             ;4182
000964  d02f              BEQ      |L31.2502|
000966  9931              LDR      r1,[sp,#0xc4]         ;4182
000968  f50171d8          ADD      r1,r1,#0x1b0          ;4182
00096c  c903              LDM      r1,{r0,r1}            ;4182
00096e  2200              MOVS     r2,#0                 ;4182
000970  4be3              LDR      r3,|L31.3328|
000972  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4182
000976  f7fffffe          BL       __aeabi_cdcmpeq
00097a  d124              BNE      |L31.2502|
00097c  f04f0100          MOV      r1,#0                 ;4182
000980  48dc              LDR      r0,|L31.3316|
000982  f8c0114c          STR      r1,[r0,#0x14c]        ;4182
000986  f8d0214c          LDR      r2,[r0,#0x14c]        ;4182
00098a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4182
00098e  f1000001          ADD      r0,r0,#1              ;4182
000992  49d8              LDR      r1,|L31.3316|
000994  f8c1014c          STR      r0,[r1,#0x14c]        ;4182
000998  eb020082          ADD      r0,r2,r2,LSL #2       ;4182
00099c  49d7              LDR      r1,|L31.3324|
00099e  eb011000          ADD      r0,r1,r0,LSL #4       ;4182
0009a2  49d5              LDR      r1,|L31.3320|
0009a4  9014              STR      r0,[sp,#0x50]         ;4182
0009a6  f7fffffe          BL       strcpy
0009aa  f04f0100          MOV      r1,#0                 ;4182
0009ae  48d1              LDR      r0,|L31.3316|
0009b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4182
0009b4  eb000080          ADD      r0,r0,r0,LSL #2       ;4182
0009b8  4ad0              LDR      r2,|L31.3324|
0009ba  eb021000          ADD      r0,r2,r0,LSL #4       ;4182
0009be  7001              STRB     r1,[r0,#0]            ;4182
0009c0  f04f004a          MOV      r0,#0x4a              ;4182
                  |L31.2500|
0009c4  e429              B        |L31.538|
                  |L31.2502|
0009c6  9931              LDR      r1,[sp,#0xc4]         ;4184
0009c8  f50171d8          ADD      r1,r1,#0x1b0          ;4184
0009cc  c903              LDM      r1,{r0,r1}            ;4184
0009ce  2200              MOVS     r2,#0                 ;4184
0009d0  4bcb              LDR      r3,|L31.3328|
0009d2  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4184
0009d6  f7fffffe          BL       __aeabi_cdcmpeq
0009da  d104              BNE      |L31.2534|
0009dc  9932              LDR      r1,[sp,#0xc8]         ;4185
0009de  f5017178          ADD      r1,r1,#0x3e0          ;4185
0009e2  c903              LDM      r1,{r0,r1}            ;4185
0009e4  e003              B        |L31.2542|
                  |L31.2534|
0009e6  9931              LDR      r1,[sp,#0xc4]         ;4185
0009e8  f50171d8          ADD      r1,r1,#0x1b0          ;4185
0009ec  c903              LDM      r1,{r0,r1}            ;4185
                  |L31.2542|
0009ee  9a31              LDR      r2,[sp,#0xc4]         ;4185
0009f0  f50272d8          ADD      r2,r2,#0x1b0          ;4185
0009f4  c203              STM      r2!,{r0,r1}           ;4185
0009f6  9831              LDR      r0,[sp,#0xc4]         ;4186
0009f8  f8d00178          LDR      r0,[r0,#0x178]        ;4186
0009fc  9017              STR      r0,[sp,#0x5c]         ;4186
0009fe  e07f              B        |L31.2816|
                  |L31.2560|
000a00  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4186
000a04  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4186
000a08  f7fffffe          BL       __aeabi_dadd
000a0c  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4186
000a10  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4186
000a14  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4186
000a18  f7fffffe          BL       __aeabi_dadd
000a1c  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4186
000a20  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4186
000a24  e9cd0102          STRD     r0,r1,[sp,#8]         ;4186
000a28  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4186
000a2c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4186
000a30  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4186
000a34  981b              LDR      r0,[sp,#0x6c]         ;4186
000a36  f7fffffe          BL       cycle_traverse
000a3a  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4186
000a3e  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4186
000a42  f7fffffe          BL       __aeabi_cdcmpeq
000a46  d00c              BEQ      |L31.2658|
000a48  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4186
000a4c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4186
000a50  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4186
000a54  e9cd0100          STRD     r0,r1,[sp,#0]         ;4186
000a58  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4186
000a5c  981b              LDR      r0,[sp,#0x6c]         ;4186
000a5e  f7fffffe          BL       cycle_traverse
                  |L31.2658|
000a62  9832              LDR      r0,[sp,#0xc8]         ;4186
000a64  f5004030          ADD      r0,r0,#0xb000         ;4186
000a68  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4186
000a6c  9008              STR      r0,[sp,#0x20]         ;4186
000a6e  9831              LDR      r0,[sp,#0xc4]         ;4186
000a70  f50070d8          ADD      r0,r0,#0x1b0          ;4186
000a74  c803              LDM      r0,{r0,r1}            ;4186
000a76  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4186
000a7a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4186
000a7e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4186
000a82  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4186
000a86  e9cd0102          STRD     r0,r1,[sp,#8]         ;4186
000a8a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4186
000a8e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4186
000a92  2001              MOVS     r0,#1                 ;4186
000a94  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4186
000a98  f7fffffe          BL       convert_cycle_g86
000a9c  9015              STR      r0,[sp,#0x54]         ;4186
000a9e  b338              CBZ      r0,|L31.2800|
000aa0  4894              LDR      r0,|L31.3316|
000aa2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4186
000aa6  2831              CMP      r0,#0x31              ;4186
000aa8  da20              BGE      |L31.2796|
000aaa  4892              LDR      r0,|L31.3316|
000aac  f8d0214c          LDR      r2,[r0,#0x14c]        ;4186
000ab0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4186
000ab4  1c40              ADDS     r0,r0,#1              ;4186
000ab6  498f              LDR      r1,|L31.3316|
000ab8  e000              B        |L31.2748|
                  |L31.2746|
000aba  e28a              B        |L31.4050|
                  |L31.2748|
000abc  f8c1014c          STR      r0,[r1,#0x14c]        ;4186
000ac0  eb020082          ADD      r0,r2,r2,LSL #2       ;4186
000ac4  498d              LDR      r1,|L31.3324|
000ac6  eb011000          ADD      r0,r1,r0,LSL #4       ;4186
000aca  498b              LDR      r1,|L31.3320|
000acc  9014              STR      r0,[sp,#0x50]         ;4186
000ace  f7fffffe          BL       strcpy
000ad2  f04f0100          MOV      r1,#0                 ;4186
000ad6  4887              LDR      r0,|L31.3316|
000ad8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4186
000adc  eb000080          ADD      r0,r0,r0,LSL #2       ;4186
000ae0  4a86              LDR      r2,|L31.3324|
000ae2  eb021000          ADD      r0,r2,r0,LSL #4       ;4186
000ae6  7001              STRB     r1,[r0,#0]            ;4186
000ae8  9815              LDR      r0,[sp,#0x54]         ;4186
                  |L31.2794|
000aea  e45c              B        |L31.934|
                  |L31.2796|
000aec  9815              LDR      r0,[sp,#0x54]         ;4186
000aee  e45a              B        |L31.934|
                  |L31.2800|
000af0  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4186
000af4  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4186
000af8  9817              LDR      r0,[sp,#0x5c]         ;4186
000afa  f1a00001          SUB      r0,r0,#1              ;4186
000afe  9017              STR      r0,[sp,#0x5c]         ;4186
                  |L31.2816|
000b00  9817              LDR      r0,[sp,#0x5c]         ;4186
000b02  2800              CMP      r0,#0                 ;4186
000b04  f73faf7c          BGT      |L31.2560|
000b08  9831              LDR      r0,[sp,#0xc4]         ;4188
000b0a  f50070d8          ADD      r0,r0,#0x1b0          ;4188
000b0e  c806              LDM      r0!,{r1,r2}           ;4188
000b10  9832              LDR      r0,[sp,#0xc8]         ;4188
000b12  f5007078          ADD      r0,r0,#0x3e0          ;4188
000b16  c006              STM      r0!,{r1,r2}           ;4188
                  |L31.2840|
000b18  e360              B        |L31.4572|
                  |L31.2842|
000b1a  9832              LDR      r0,[sp,#0xc8]         ;4191
000b1c  f8d01628          LDR      r1,[r0,#0x628]        ;4191
000b20  f5a17040          SUB      r0,r1,#0x300          ;4191
000b24  3866              SUBS     r0,r0,#0x66           ;4191
000b26  d07d              BEQ      |L31.3108|
000b28  9831              LDR      r0,[sp,#0xc4]         ;4193
000b2a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4193
000b2e  bb30              CBNZ     r0,|L31.2942|
000b30  f04f0100          MOV      r1,#0                 ;4193
000b34  486f              LDR      r0,|L31.3316|
000b36  f8c0114c          STR      r1,[r0,#0x14c]        ;4193
000b3a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4193
000b3e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4193
000b42  f1000001          ADD      r0,r0,#1              ;4193
000b46  496b              LDR      r1,|L31.3316|
000b48  f8c1014c          STR      r0,[r1,#0x14c]        ;4193
000b4c  eb020082          ADD      r0,r2,r2,LSL #2       ;4193
000b50  496a              LDR      r1,|L31.3324|
000b52  eb011000          ADD      r0,r1,r0,LSL #4       ;4193
000b56  4968              LDR      r1,|L31.3320|
000b58  9014              STR      r0,[sp,#0x50]         ;4193
000b5a  f7fffffe          BL       strcpy
000b5e  f04f0100          MOV      r1,#0                 ;4193
000b62  4864              LDR      r0,|L31.3316|
000b64  f8d0014c          LDR      r0,[r0,#0x14c]        ;4193
000b68  eb000080          ADD      r0,r0,r0,LSL #2       ;4193
000b6c  4a63              LDR      r2,|L31.3324|
000b6e  eb021000          ADD      r0,r2,r0,LSL #4       ;4193
000b72  7001              STRB     r1,[r0,#0]            ;4193
000b74  f04f0057          MOV      r0,#0x57              ;4193
000b78  e415              B        |L31.934|
                  |L31.2938|
000b7a  e301              B        |L31.4480|
                  |L31.2940|
000b7c  e14e              B        |L31.3612|
                  |L31.2942|
000b7e  9831              LDR      r0,[sp,#0xc4]         ;4194
000b80  f8d00158          LDR      r0,[r0,#0x158]        ;4194
000b84  bb20              CBNZ     r0,|L31.3024|
000b86  f04f0100          MOV      r1,#0                 ;4194
000b8a  485a              LDR      r0,|L31.3316|
000b8c  f8c0114c          STR      r1,[r0,#0x14c]        ;4194
000b90  f8d0214c          LDR      r2,[r0,#0x14c]        ;4194
000b94  f8d0014c          LDR      r0,[r0,#0x14c]        ;4194
000b98  f1000001          ADD      r0,r0,#1              ;4194
000b9c  4955              LDR      r1,|L31.3316|
000b9e  f8c1014c          STR      r0,[r1,#0x14c]        ;4194
000ba2  eb020082          ADD      r0,r2,r2,LSL #2       ;4194
000ba6  4955              LDR      r1,|L31.3324|
000ba8  eb011000          ADD      r0,r1,r0,LSL #4       ;4194
000bac  4952              LDR      r1,|L31.3320|
000bae  9014              STR      r0,[sp,#0x50]         ;4194
000bb0  f7fffffe          BL       strcpy
000bb4  f04f0100          MOV      r1,#0                 ;4194
000bb8  484e              LDR      r0,|L31.3316|
000bba  f8d0014c          LDR      r0,[r0,#0x14c]        ;4194
000bbe  eb000080          ADD      r0,r0,r0,LSL #2       ;4194
000bc2  4a4e              LDR      r2,|L31.3324|
000bc4  eb021000          ADD      r0,r2,r0,LSL #4       ;4194
000bc8  7001              STRB     r1,[r0,#0]            ;4194
000bca  f04f005a          MOV      r0,#0x5a              ;4194
000bce  e437              B        |L31.1088|
                  |L31.3024|
000bd0  9831              LDR      r0,[sp,#0xc4]         ;4195
000bd2  f8d00168          LDR      r0,[r0,#0x168]        ;4195
000bd6  bb20              CBNZ     r0,|L31.3106|
000bd8  f04f0100          MOV      r1,#0                 ;4195
000bdc  4845              LDR      r0,|L31.3316|
000bde  f8c0114c          STR      r1,[r0,#0x14c]        ;4195
000be2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4195
000be6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4195
000bea  f1000001          ADD      r0,r0,#1              ;4195
000bee  4941              LDR      r1,|L31.3316|
000bf0  f8c1014c          STR      r0,[r1,#0x14c]        ;4195
000bf4  eb020082          ADD      r0,r2,r2,LSL #2       ;4195
000bf8  4940              LDR      r1,|L31.3324|
000bfa  eb011000          ADD      r0,r1,r0,LSL #4       ;4195
000bfe  493e              LDR      r1,|L31.3320|
000c00  9014              STR      r0,[sp,#0x50]         ;4195
000c02  f7fffffe          BL       strcpy
000c06  f04f0100          MOV      r1,#0                 ;4195
000c0a  483a              LDR      r0,|L31.3316|
000c0c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4195
000c10  eb000080          ADD      r0,r0,r0,LSL #2       ;4195
000c14  4a39              LDR      r2,|L31.3324|
000c16  eb021000          ADD      r0,r2,r0,LSL #4       ;4195
000c1a  7001              STRB     r1,[r0,#0]            ;4195
000c1c  f04f005d          MOV      r0,#0x5d              ;4195
000c20  e40e              B        |L31.1088|
                  |L31.3106|
000c22  e7ff              B        |L31.3108|
                  |L31.3108|
000c24  9831              LDR      r0,[sp,#0xc4]         ;4197
000c26  f8d0014c          LDR      r0,[r0,#0x14c]        ;4197
000c2a  2801              CMP      r0,#1                 ;4197
000c2c  d104              BNE      |L31.3128|
000c2e  9931              LDR      r1,[sp,#0xc4]         ;4197
000c30  f50171a8          ADD      r1,r1,#0x150          ;4197
000c34  c903              LDM      r1,{r0,r1}            ;4197
000c36  e003              B        |L31.3136|
                  |L31.3128|
000c38  9932              LDR      r1,[sp,#0xc8]         ;4197
000c3a  f5017170          ADD      r1,r1,#0x3c0          ;4197
000c3e  c903              LDM      r1,{r0,r1}            ;4197
                  |L31.3136|
000c40  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4197
000c44  9831              LDR      r0,[sp,#0xc4]         ;4198
000c46  f8d00158          LDR      r0,[r0,#0x158]        ;4198
000c4a  2801              CMP      r0,#1                 ;4198
000c4c  d104              BNE      |L31.3160|
000c4e  9931              LDR      r1,[sp,#0xc4]         ;4198
000c50  f50171b0          ADD      r1,r1,#0x160          ;4198
000c54  c903              LDM      r1,{r0,r1}            ;4198
000c56  e003              B        |L31.3168|
                  |L31.3160|
000c58  9932              LDR      r1,[sp,#0xc8]         ;4198
000c5a  f5017172          ADD      r1,r1,#0x3c8          ;4198
000c5e  c903              LDM      r1,{r0,r1}            ;4198
                  |L31.3168|
000c60  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4198
000c64  9831              LDR      r0,[sp,#0xc4]         ;4199
000c66  f8d00168          LDR      r0,[r0,#0x168]        ;4199
000c6a  2801              CMP      r0,#1                 ;4199
000c6c  d104              BNE      |L31.3192|
000c6e  9931              LDR      r1,[sp,#0xc4]         ;4199
000c70  f50171b8          ADD      r1,r1,#0x170          ;4199
000c74  c903              LDM      r1,{r0,r1}            ;4199
000c76  e003              B        |L31.3200|
                  |L31.3192|
000c78  9932              LDR      r1,[sp,#0xc8]         ;4199
000c7a  f5017174          ADD      r1,r1,#0x3d0          ;4199
000c7e  c903              LDM      r1,{r0,r1}            ;4199
                  |L31.3200|
000c80  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4199
000c84  9a32              LDR      r2,[sp,#0xc8]         ;4200
000c86  e9dd1022          LDRD     r1,r0,[sp,#0x88]      ;4200
000c8a  f8c213c0          STR      r1,[r2,#0x3c0]        ;4200
000c8e  f8c203c4          STR      r0,[r2,#0x3c4]        ;4200
000c92  9a32              LDR      r2,[sp,#0xc8]         ;4201
000c94  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4201
000c98  f5027272          ADD      r2,r2,#0x3c8          ;4201
000c9c  c203              STM      r2!,{r0,r1}           ;4201
000c9e  9a32              LDR      r2,[sp,#0xc8]         ;4202
000ca0  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4202
000ca4  f5027274          ADD      r2,r2,#0x3d0          ;4202
000ca8  c203              STM      r2!,{r0,r1}           ;4202
000caa  9832              LDR      r0,[sp,#0xc8]         ;4203
000cac  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4203
000cb0  2801              CMP      r0,#1                 ;4203
000cb2  d107              BNE      |L31.3268|
000cb4  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;4205
000cb8  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4205
000cbc  f7fffffe          BL       __aeabi_dadd
000cc0  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4205
                  |L31.3268|
000cc4  9831              LDR      r0,[sp,#0xc4]         ;4207
000cc6  f8d00178          LDR      r0,[r0,#0x178]        ;4207
000cca  9017              STR      r0,[sp,#0x5c]         ;4207
000ccc  e0a1              B        |L31.3602|
                  |L31.3278|
000cce  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4207
000cd2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4207
000cd6  f7fffffe          BL       __aeabi_dadd
000cda  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4207
000cde  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4207
000ce2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4207
000ce6  f7fffffe          BL       __aeabi_dadd
000cea  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4207
000cee  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4207
000cf2  e007              B        |L31.3332|
                  |L31.3316|
                          DCD      _setup+0xc000
                  |L31.3320|
                          DCD      |symbol_number.468|
                  |L31.3324|
                          DCD      _setup+0xb1ac
                  |L31.3328|
                          DCD      0xbff00000
                  |L31.3332|
000d04  e9cd0102          STRD     r0,r1,[sp,#8]         ;4207
000d08  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4207
000d0c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4207
000d10  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4207
000d14  981b              LDR      r0,[sp,#0x6c]         ;4207
000d16  f7fffffe          BL       cycle_traverse
000d1a  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4207
000d1e  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4207
000d22  f7fffffe          BL       __aeabi_cdcmpeq
000d26  d00c              BEQ      |L31.3394|
000d28  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4207
000d2c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4207
000d30  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4207
000d34  e9cd0100          STRD     r0,r1,[sp,#0]         ;4207
000d38  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4207
000d3c  981b              LDR      r0,[sp,#0x6c]         ;4207
000d3e  f7fffffe          BL       cycle_traverse
                  |L31.3394|
000d42  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;4207
000d46  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4207
000d4a  f7fffffe          BL       __aeabi_dadd
000d4e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4207
000d52  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;4207
000d56  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4207
000d5a  f7fffffe          BL       __aeabi_dadd
000d5e  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4207
000d62  9832              LDR      r0,[sp,#0xc8]         ;4207
000d64  f5004030          ADD      r0,r0,#0xb000         ;4207
000d68  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4207
000d6c  900e              STR      r0,[sp,#0x38]         ;4207
000d6e  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4207
000d72  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;4207
000d76  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4207
000d7a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;4207
000d7e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4207
000d82  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4207
000d86  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4207
000d8a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4207
000d8e  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;4207
000d92  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4207
000d96  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4207
000d9a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4207
000d9e  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;4207
000da2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4207
000da6  2001              MOVS     r0,#1                 ;4207
000da8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4207
000dac  f7fffffe          BL       convert_cycle_g87
000db0  9015              STR      r0,[sp,#0x54]         ;4207
000db2  b330              CBZ      r0,|L31.3586|
000db4  48ff              LDR      r0,|L31.4532|
000db6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4207
000dba  2831              CMP      r0,#0x31              ;4207
000dbc  da1f              BGE      |L31.3582|
000dbe  48fd              LDR      r0,|L31.4532|
000dc0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4207
000dc4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4207
000dc8  1c40              ADDS     r0,r0,#1              ;4207
000dca  49fa              LDR      r1,|L31.4532|
000dcc  f8c1014c          STR      r0,[r1,#0x14c]        ;4207
000dd0  eb020082          ADD      r0,r2,r2,LSL #2       ;4207
000dd4  f6a16154          SUB      r1,r1,#0xe54          ;4207
000dd8  eb011000          ADD      r0,r1,r0,LSL #4       ;4207
000ddc  49f6              LDR      r1,|L31.4536|
000dde  9014              STR      r0,[sp,#0x50]         ;4207
000de0  f7fffffe          BL       strcpy
000de4  f04f0100          MOV      r1,#0                 ;4207
000de8  48f2              LDR      r0,|L31.4532|
000dea  f8d0014c          LDR      r0,[r0,#0x14c]        ;4207
000dee  eb000080          ADD      r0,r0,r0,LSL #2       ;4207
000df2  4af2              LDR      r2,|L31.4540|
000df4  eb021000          ADD      r0,r2,r0,LSL #4       ;4207
000df8  7001              STRB     r1,[r0,#0]            ;4207
000dfa  9815              LDR      r0,[sp,#0x54]         ;4207
000dfc  e487              B        |L31.1806|
                  |L31.3582|
000dfe  9815              LDR      r0,[sp,#0x54]         ;4207
000e00  e485              B        |L31.1806|
                  |L31.3586|
000e02  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4207
000e06  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4207
000e0a  9817              LDR      r0,[sp,#0x5c]         ;4207
000e0c  f1a00001          SUB      r0,r0,#1              ;4207
000e10  9017              STR      r0,[sp,#0x5c]         ;4207
                  |L31.3602|
000e12  9817              LDR      r0,[sp,#0x5c]         ;4207
000e14  2800              CMP      r0,#0                 ;4207
000e16  f73faf5a          BGT      |L31.3278|
000e1a  e1df              B        |L31.4572|
                  |L31.3612|
000e1c  9832              LDR      r0,[sp,#0xc8]         ;4211
000e1e  f8d00628          LDR      r0,[r0,#0x628]        ;4211
000e22  f5b07f5c          CMP      r0,#0x370             ;4211
000e26  d02f              BEQ      |L31.3720|
000e28  9931              LDR      r1,[sp,#0xc4]         ;4211
000e2a  f50171d8          ADD      r1,r1,#0x1b0          ;4211
000e2e  c903              LDM      r1,{r0,r1}            ;4211
000e30  2200              MOVS     r2,#0                 ;4211
000e32  4be3              LDR      r3,|L31.4544|
000e34  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4211
000e38  f7fffffe          BL       __aeabi_cdcmpeq
000e3c  d124              BNE      |L31.3720|
000e3e  f04f0100          MOV      r1,#0                 ;4211
000e42  48dc              LDR      r0,|L31.4532|
000e44  f8c0114c          STR      r1,[r0,#0x14c]        ;4211
000e48  f8d0214c          LDR      r2,[r0,#0x14c]        ;4211
000e4c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4211
000e50  f1000001          ADD      r0,r0,#1              ;4211
000e54  49d7              LDR      r1,|L31.4532|
000e56  f8c1014c          STR      r0,[r1,#0x14c]        ;4211
000e5a  eb020082          ADD      r0,r2,r2,LSL #2       ;4211
000e5e  49d7              LDR      r1,|L31.4540|
000e60  eb011000          ADD      r0,r1,r0,LSL #4       ;4211
000e64  49d4              LDR      r1,|L31.4536|
000e66  9014              STR      r0,[sp,#0x50]         ;4211
000e68  f7fffffe          BL       strcpy
000e6c  f04f0100          MOV      r1,#0                 ;4211
000e70  48d0              LDR      r0,|L31.4532|
000e72  f8d0014c          LDR      r0,[r0,#0x14c]        ;4211
000e76  eb000080          ADD      r0,r0,r0,LSL #2       ;4211
000e7a  4ad0              LDR      r2,|L31.4540|
000e7c  eb021000          ADD      r0,r2,r0,LSL #4       ;4211
000e80  7001              STRB     r1,[r0,#0]            ;4211
000e82  f04f004b          MOV      r0,#0x4b              ;4211
000e86  e442              B        |L31.1806|
                  |L31.3720|
000e88  9931              LDR      r1,[sp,#0xc4]         ;4213
000e8a  f50171d8          ADD      r1,r1,#0x1b0          ;4213
000e8e  c903              LDM      r1,{r0,r1}            ;4213
000e90  2200              MOVS     r2,#0                 ;4213
000e92  4bcb              LDR      r3,|L31.4544|
000e94  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4213
000e98  f7fffffe          BL       __aeabi_cdcmpeq
000e9c  d104              BNE      |L31.3752|
000e9e  9932              LDR      r1,[sp,#0xc8]         ;4214
000ea0  f5017178          ADD      r1,r1,#0x3e0          ;4214
000ea4  c903              LDM      r1,{r0,r1}            ;4214
000ea6  e003              B        |L31.3760|
                  |L31.3752|
000ea8  9931              LDR      r1,[sp,#0xc4]         ;4214
000eaa  f50171d8          ADD      r1,r1,#0x1b0          ;4214
000eae  c903              LDM      r1,{r0,r1}            ;4214
                  |L31.3760|
000eb0  9a31              LDR      r2,[sp,#0xc4]         ;4214
000eb2  f50272d8          ADD      r2,r2,#0x1b0          ;4214
000eb6  c203              STM      r2!,{r0,r1}           ;4214
000eb8  9831              LDR      r0,[sp,#0xc4]         ;4215
000eba  f8d00178          LDR      r0,[r0,#0x178]        ;4215
000ebe  9017              STR      r0,[sp,#0x5c]         ;4215
000ec0  e079              B        |L31.4022|
                  |L31.3778|
000ec2  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4215
000ec6  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4215
000eca  f7fffffe          BL       __aeabi_dadd
000ece  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4215
000ed2  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4215
000ed6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4215
000eda  f7fffffe          BL       __aeabi_dadd
000ede  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4215
000ee2  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4215
000ee6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4215
000eea  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4215
000eee  e9cd0100          STRD     r0,r1,[sp,#0]         ;4215
000ef2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4215
000ef6  981b              LDR      r0,[sp,#0x6c]         ;4215
000ef8  f7fffffe          BL       cycle_traverse
000efc  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4215
000f00  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4215
000f04  f7fffffe          BL       __aeabi_cdcmpeq
000f08  d00c              BEQ      |L31.3876|
000f0a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4215
000f0e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4215
000f12  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4215
000f16  e9cd0100          STRD     r0,r1,[sp,#0]         ;4215
000f1a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4215
000f1e  981b              LDR      r0,[sp,#0x6c]         ;4215
000f20  f7fffffe          BL       cycle_traverse
                  |L31.3876|
000f24  9832              LDR      r0,[sp,#0xc8]         ;4215
000f26  f5004030          ADD      r0,r0,#0xb000         ;4215
000f2a  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4215
000f2e  9006              STR      r0,[sp,#0x18]         ;4215
000f30  9831              LDR      r0,[sp,#0xc4]         ;4215
000f32  f50070d8          ADD      r0,r0,#0x1b0          ;4215
000f36  c803              LDM      r0,{r0,r1}            ;4215
000f38  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4215
000f3c  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4215
000f40  e9cd0102          STRD     r0,r1,[sp,#8]         ;4215
000f44  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4215
000f48  e9cd0100          STRD     r0,r1,[sp,#0]         ;4215
000f4c  2001              MOVS     r0,#1                 ;4215
000f4e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4215
000f52  f7fffffe          BL       convert_cycle_g88
000f56  9015              STR      r0,[sp,#0x54]         ;4215
000f58  b328              CBZ      r0,|L31.4006|
000f5a  4896              LDR      r0,|L31.4532|
000f5c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4215
000f60  2831              CMP      r0,#0x31              ;4215
000f62  da1e              BGE      |L31.4002|
000f64  4893              LDR      r0,|L31.4532|
000f66  f8d0214c          LDR      r2,[r0,#0x14c]        ;4215
000f6a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4215
000f6e  1c40              ADDS     r0,r0,#1              ;4215
000f70  4990              LDR      r1,|L31.4532|
000f72  f8c1014c          STR      r0,[r1,#0x14c]        ;4215
000f76  eb020082          ADD      r0,r2,r2,LSL #2       ;4215
000f7a  4990              LDR      r1,|L31.4540|
000f7c  eb011000          ADD      r0,r1,r0,LSL #4       ;4215
000f80  498d              LDR      r1,|L31.4536|
000f82  9014              STR      r0,[sp,#0x50]         ;4215
000f84  f7fffffe          BL       strcpy
000f88  f04f0100          MOV      r1,#0                 ;4215
000f8c  4889              LDR      r0,|L31.4532|
000f8e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4215
000f92  eb000080          ADD      r0,r0,r0,LSL #2       ;4215
000f96  4a89              LDR      r2,|L31.4540|
000f98  eb021000          ADD      r0,r2,r0,LSL #4       ;4215
000f9c  7001              STRB     r1,[r0,#0]            ;4215
000f9e  9815              LDR      r0,[sp,#0x54]         ;4215
000fa0  e446              B        |L31.2096|
                  |L31.4002|
000fa2  9815              LDR      r0,[sp,#0x54]         ;4215
000fa4  e444              B        |L31.2096|
                  |L31.4006|
000fa6  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4215
000faa  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4215
000fae  9817              LDR      r0,[sp,#0x5c]         ;4215
000fb0  f1a00001          SUB      r0,r0,#1              ;4215
000fb4  9017              STR      r0,[sp,#0x5c]         ;4215
                  |L31.4022|
000fb6  9817              LDR      r0,[sp,#0x5c]         ;4215
000fb8  2800              CMP      r0,#0                 ;4215
000fba  dc82              BGT      |L31.3778|
000fbc  9831              LDR      r0,[sp,#0xc4]         ;4217
000fbe  f8d021b0          LDR      r2,[r0,#0x1b0]        ;4217
000fc2  f8d011b4          LDR      r1,[r0,#0x1b4]        ;4217
000fc6  9832              LDR      r0,[sp,#0xc8]         ;4217
000fc8  f8c023e0          STR      r2,[r0,#0x3e0]        ;4217
000fcc  f8c013e4          STR      r1,[r0,#0x3e4]        ;4217
000fd0  e104              B        |L31.4572|
                  |L31.4050|
000fd2  9832              LDR      r0,[sp,#0xc8]         ;4220
000fd4  f8d00628          LDR      r0,[r0,#0x628]        ;4220
000fd8  f5a07140          SUB      r1,r0,#0x300          ;4220
000fdc  397a              SUBS     r1,r1,#0x7a           ;4220
000fde  d02f              BEQ      |L31.4160|
000fe0  9931              LDR      r1,[sp,#0xc4]         ;4220
000fe2  f50171d8          ADD      r1,r1,#0x1b0          ;4220
000fe6  c903              LDM      r1,{r0,r1}            ;4220
000fe8  2200              MOVS     r2,#0                 ;4220
000fea  4b75              LDR      r3,|L31.4544|
000fec  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4220
000ff0  f7fffffe          BL       __aeabi_cdcmpeq
000ff4  d124              BNE      |L31.4160|
000ff6  f04f0100          MOV      r1,#0                 ;4220
000ffa  486e              LDR      r0,|L31.4532|
000ffc  f8c0114c          STR      r1,[r0,#0x14c]        ;4220
001000  f8d0214c          LDR      r2,[r0,#0x14c]        ;4220
001004  f8d0014c          LDR      r0,[r0,#0x14c]        ;4220
001008  f1000001          ADD      r0,r0,#1              ;4220
00100c  4969              LDR      r1,|L31.4532|
00100e  f8c1014c          STR      r0,[r1,#0x14c]        ;4220
001012  eb020082          ADD      r0,r2,r2,LSL #2       ;4220
001016  4969              LDR      r1,|L31.4540|
001018  eb011000          ADD      r0,r1,r0,LSL #4       ;4220
00101c  4966              LDR      r1,|L31.4536|
00101e  9014              STR      r0,[sp,#0x50]         ;4220
001020  f7fffffe          BL       strcpy
001024  f04f0100          MOV      r1,#0                 ;4220
001028  4862              LDR      r0,|L31.4532|
00102a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4220
00102e  eb000080          ADD      r0,r0,r0,LSL #2       ;4220
001032  4a62              LDR      r2,|L31.4540|
001034  eb021000          ADD      r0,r2,r0,LSL #4       ;4220
001038  7001              STRB     r1,[r0,#0]            ;4220
00103a  f04f004c          MOV      r0,#0x4c              ;4220
00103e  e47d              B        |L31.2364|
                  |L31.4160|
001040  9931              LDR      r1,[sp,#0xc4]         ;4222
001042  f50171d8          ADD      r1,r1,#0x1b0          ;4222
001046  c903              LDM      r1,{r0,r1}            ;4222
001048  2200              MOVS     r2,#0                 ;4222
00104a  4b5d              LDR      r3,|L31.4544|
00104c  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4222
001050  f7fffffe          BL       __aeabi_cdcmpeq
001054  d104              BNE      |L31.4192|
001056  9932              LDR      r1,[sp,#0xc8]         ;4223
001058  f5017178          ADD      r1,r1,#0x3e0          ;4223
00105c  c903              LDM      r1,{r0,r1}            ;4223
00105e  e003              B        |L31.4200|
                  |L31.4192|
001060  9931              LDR      r1,[sp,#0xc4]         ;4223
001062  f50171d8          ADD      r1,r1,#0x1b0          ;4223
001066  c903              LDM      r1,{r0,r1}            ;4223
                  |L31.4200|
001068  9a31              LDR      r2,[sp,#0xc4]         ;4223
00106a  f50272d8          ADD      r2,r2,#0x1b0          ;4223
00106e  c203              STM      r2!,{r0,r1}           ;4223
001070  9831              LDR      r0,[sp,#0xc4]         ;4224
001072  f8d00178          LDR      r0,[r0,#0x178]        ;4224
001076  9017              STR      r0,[sp,#0x5c]         ;4224
001078  e076              B        |L31.4456|
                  |L31.4218|
00107a  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4224
00107e  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4224
001082  f7fffffe          BL       __aeabi_dadd
001086  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4224
00108a  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4224
00108e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4224
001092  f7fffffe          BL       __aeabi_dadd
001096  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4224
00109a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4224
00109e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4224
0010a2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4224
0010a6  e9cd0100          STRD     r0,r1,[sp,#0]         ;4224
0010aa  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4224
0010ae  981b              LDR      r0,[sp,#0x6c]         ;4224
0010b0  f7fffffe          BL       cycle_traverse
0010b4  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4224
0010b8  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4224
0010bc  f7fffffe          BL       __aeabi_cdcmpeq
0010c0  d00c              BEQ      |L31.4316|
0010c2  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4224
0010c6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4224
0010ca  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4224
0010ce  e9cd0100          STRD     r0,r1,[sp,#0]         ;4224
0010d2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4224
0010d6  981b              LDR      r0,[sp,#0x6c]         ;4224
0010d8  f7fffffe          BL       cycle_traverse
                  |L31.4316|
0010dc  9931              LDR      r1,[sp,#0xc4]         ;4224
0010de  f50171d8          ADD      r1,r1,#0x1b0          ;4224
0010e2  c903              LDM      r1,{r0,r1}            ;4224
0010e4  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4224
0010e8  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4224
0010ec  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4224
0010f0  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4224
0010f4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4224
0010f8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4224
0010fc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4224
001100  2001              MOVS     r0,#1                 ;4224
001102  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4224
001106  f7fffffe          BL       convert_cycle_g89
00110a  9015              STR      r0,[sp,#0x54]         ;4224
00110c  b320              CBZ      r0,|L31.4440|
00110e  4829              LDR      r0,|L31.4532|
001110  f8d0014c          LDR      r0,[r0,#0x14c]        ;4224
001114  2831              CMP      r0,#0x31              ;4224
001116  da1d              BGE      |L31.4436|
001118  4826              LDR      r0,|L31.4532|
00111a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4224
00111e  f8d0114c          LDR      r1,[r0,#0x14c]        ;4224
001122  1c49              ADDS     r1,r1,#1              ;4224
001124  f8c0114c          STR      r1,[r0,#0x14c]        ;4224
001128  eb020082          ADD      r0,r2,r2,LSL #2       ;4224
00112c  4923              LDR      r1,|L31.4540|
00112e  eb011000          ADD      r0,r1,r0,LSL #4       ;4224
001132  4921              LDR      r1,|L31.4536|
001134  9014              STR      r0,[sp,#0x50]         ;4224
001136  f7fffffe          BL       strcpy
00113a  f04f0100          MOV      r1,#0                 ;4224
00113e  481d              LDR      r0,|L31.4532|
001140  f8d0014c          LDR      r0,[r0,#0x14c]        ;4224
001144  eb000080          ADD      r0,r0,r0,LSL #2       ;4224
001148  4a1c              LDR      r2,|L31.4540|
00114a  eb021000          ADD      r0,r2,r0,LSL #4       ;4224
00114e  7001              STRB     r1,[r0,#0]            ;4224
001150  9815              LDR      r0,[sp,#0x54]         ;4224
001152  e437              B        |L31.2500|
                  |L31.4436|
001154  9815              LDR      r0,[sp,#0x54]         ;4224
001156  e435              B        |L31.2500|
                  |L31.4440|
001158  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4224
00115c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4224
001160  9817              LDR      r0,[sp,#0x5c]         ;4224
001162  f1a00001          SUB      r0,r0,#1              ;4224
001166  9017              STR      r0,[sp,#0x5c]         ;4224
                  |L31.4456|
001168  9817              LDR      r0,[sp,#0x5c]         ;4224
00116a  2800              CMP      r0,#0                 ;4224
00116c  dc85              BGT      |L31.4218|
00116e  9831              LDR      r0,[sp,#0xc4]         ;4226
001170  f50070d8          ADD      r0,r0,#0x1b0          ;4226
001174  c806              LDM      r0!,{r1,r2}           ;4226
001176  9832              LDR      r0,[sp,#0xc8]         ;4226
001178  f5007078          ADD      r0,r0,#0x3e0          ;4226
00117c  c006              STM      r0!,{r1,r2}           ;4226
00117e  e02d              B        |L31.4572|
                  |L31.4480|
001180  f04f0100          MOV      r1,#0                 ;4229
001184  480b              LDR      r0,|L31.4532|
001186  f8c0114c          STR      r1,[r0,#0x14c]        ;4229
00118a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4229
00118e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4229
001192  f1000001          ADD      r0,r0,#1              ;4229
001196  4907              LDR      r1,|L31.4532|
001198  f8c1014c          STR      r0,[r1,#0x14c]        ;4229
00119c  eb020082          ADD      r0,r2,r2,LSL #2       ;4229
0011a0  4906              LDR      r1,|L31.4540|
0011a2  eb011000          ADD      r0,r1,r0,LSL #4       ;4229
0011a6  4904              LDR      r1,|L31.4536|
0011a8  9014              STR      r0,[sp,#0x50]         ;4229
0011aa  f7fffffe          BL       strcpy
0011ae  f04f0100          MOV      r1,#0                 ;4229
0011b2  e007              B        |L31.4548|
                  |L31.4532|
                          DCD      _setup+0xc000
                  |L31.4536|
                          DCD      |symbol_number.468|
                  |L31.4540|
                          DCD      _setup+0xb1ac
                  |L31.4544|
                          DCD      0xbff00000
                  |L31.4548|
0011c4  4818              LDR      r0,|L31.4648|
0011c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4229
0011ca  eb000080          ADD      r0,r0,r0,LSL #2       ;4229
0011ce  4a17              LDR      r2,|L31.4652|
0011d0  eb021000          ADD      r0,r2,r0,LSL #4       ;4229
0011d4  7001              STRB     r1,[r0,#0]            ;4229
0011d6  f04f0020          MOV      r0,#0x20              ;4229
0011da  e486              B        |L31.2794|
                  |L31.4572|
0011dc  bf00              NOP                            ;4155
0011de  9a32              LDR      r2,[sp,#0xc8]         ;4231
0011e0  e9dd102e          LDRD     r1,r0,[sp,#0xb8]      ;4231
0011e4  f8c21390          STR      r1,[r2,#0x390]        ;4231
0011e8  f8c20394          STR      r0,[r2,#0x394]        ;4231
0011ec  9a32              LDR      r2,[sp,#0xc8]         ;4232
0011ee  e9dd102a          LDRD     r1,r0,[sp,#0xa8]      ;4232
0011f2  f8c21398          STR      r1,[r2,#0x398]        ;4232
0011f6  f8c2039c          STR      r0,[r2,#0x39c]        ;4232
0011fa  9a32              LDR      r2,[sp,#0xc8]         ;4233
0011fc  e9dd1024          LDRD     r1,r0,[sp,#0x90]      ;4233
001200  f8c213a0          STR      r1,[r2,#0x3a0]        ;4233
001204  f8c203a4          STR      r0,[r2,#0x3a4]        ;4233
001208  9931              LDR      r1,[sp,#0xc4]         ;4234
00120a  f5017100          ADD      r1,r1,#0x200          ;4234
00120e  c905              LDM      r1!,{r0,r2}           ;4234
001210  9932              LDR      r1,[sp,#0xc8]         ;4234
001212  f501716e          ADD      r1,r1,#0x3b8          ;4234
001216  c105              STM      r1!,{r0,r2}           ;4234
001218  9816              LDR      r0,[sp,#0x58]         ;4236
00121a  2802              CMP      r0,#2                 ;4236
00121c  d002              BEQ      |L31.4644|
00121e  9816              LDR      r0,[sp,#0x58]         ;4237
001220  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L31.4644|
001224  2000              MOVS     r0,#0                 ;4239
001226  e460              B        |L31.2794|
;;;4241   
                          ENDP

                  |L31.4648|
                          DCD      _setup+0xc000
                  |L31.4652|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_yz||, CODE, READONLY, ALIGN=2

                  convert_cycle_yz PROC
;;;4290   
;;;4291       static int convert_cycle_yz(                  /* ARGUMENTS                                 */
000000  b507              PUSH     {r0-r2,lr}
;;;4292       int motion,                                   /* a g-code between G_81 and G_89, a canned cycle */
;;;4293       block_pointer block,                          /* pointer to a block of RS274/NGC instructions   */
;;;4294       setup_pointer settings)                       /* pointer to machine settings                    */
;;;4295       {
000002  b0b0              SUB      sp,sp,#0xc0
;;;4296           static char name[] SET_TO "convert_cycle_yz";
;;;4297           double aa;
;;;4298           double aa_increment;
;;;4299           double bb;
;;;4300           double bb_increment;
;;;4301           double cc;
;;;4302           double clear_cc;
;;;4303           double i;
;;;4304           double j;
;;;4305           double k;
;;;4306           double old_cc;
;;;4307           CANON_PLANE plane;
;;;4308           double r;
;;;4309           int repeat;
;;;4310           CANON_MOTION_MODE save_mode;
;;;4311           int status;
;;;4312   
;;;4313           plane SET_TO CANON_PLANE_YZ;
000004  f04f0002          MOV      r0,#2
000008  901b              STR      r0,[sp,#0x6c]
;;;4314           if (settings->motion_mode ISNT motion)
00000a  9832              LDR      r0,[sp,#0xc8]
00000c  f8d01628          LDR      r1,[r0,#0x628]
000010  9830              LDR      r0,[sp,#0xc0]
000012  4281              CMP      r1,r0
000014  d02a              BEQ      |L32.108|
;;;4315           {
;;;4316               CHK((block->x_flag IS OFF),
000016  9831              LDR      r0,[sp,#0xc4]
000018  f8d001dc          LDR      r0,[r0,#0x1dc]
00001c  bb30              CBNZ     r0,|L32.108|
00001e  f04f0100          MOV      r1,#0
000022  48ff              LDR      r0,|L32.1056|
000024  f8c0114c          STR      r1,[r0,#0x14c]
000028  f8d0214c          LDR      r2,[r0,#0x14c]
00002c  f8d0014c          LDR      r0,[r0,#0x14c]
000030  f1000001          ADD      r0,r0,#1
000034  49fa              LDR      r1,|L32.1056|
000036  f8c1014c          STR      r0,[r1,#0x14c]
00003a  eb020082          ADD      r0,r2,r2,LSL #2
00003e  f6a16154          SUB      r1,r1,#0xe54
000042  eb011000          ADD      r0,r1,r0,LSL #4
000046  49f7              LDR      r1,|L32.1060|
000048  9014              STR      r0,[sp,#0x50]
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  48f3              LDR      r0,|L32.1056|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4af2              LDR      r2,|L32.1064|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00bf          MOV      r0,#0xbf
                  |L32.104|
;;;4317                   NCE_X_VALUE_UNSPECIFIED_IN_YZ_PLANE_CANNED_CYCLE);
;;;4318           }
;;;4319           block->x_number SET_TO
;;;4320               block->x_flag IS ON ? block->x_number : settings->cycle_cc;
;;;4321           old_cc SET_TO settings->current_x;
;;;4322   
;;;4323           if (settings->distance_mode IS MODE_ABSOLUTE)
;;;4324           {
;;;4325               aa_increment SET_TO 0.0;
;;;4326               bb_increment SET_TO 0.0;
;;;4327               r SET_TO block->r_number;
;;;4328               cc SET_TO block->x_number;
;;;4329               aa SET_TO block->y_flag IS ON ? block->y_number : settings->current_y;
;;;4330               bb SET_TO block->z_flag IS ON ? block->z_number : settings->current_z;
;;;4331           }
;;;4332           else if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4333           {
;;;4334               aa_increment SET_TO block->y_number;
;;;4335               bb_increment SET_TO block->z_number;
;;;4336               r SET_TO (block->r_number + old_cc);
;;;4337               cc SET_TO (r + block->x_number);      /* [NCMS, page 98] */
;;;4338               aa SET_TO settings->current_y;
;;;4339               bb SET_TO settings->current_z;
;;;4340           }
;;;4341           else
;;;4342               ERM(NCE_BUG_DISTANCE_MODE_NOT_G90_OR_G91);
;;;4343           CHK((r < cc), NCE_R_LESS_THAN_X_IN_CYCLE_IN_YZ_PLANE);
;;;4344   
;;;4345           if (old_cc < r)
;;;4346           {
;;;4347               STRAIGHT_TRAVERSE(r, settings->current_y, settings->current_z
;;;4348       #ifdef AA
;;;4349                   ,      settings->AA_current
;;;4350       #else
;;;4351       #ifdef ALL_AXES
;;;4352                   , 0
;;;4353       #endif
;;;4354       #endif
;;;4355       #ifdef BB
;;;4356                   ,  settings->BB_current
;;;4357       #else
;;;4358       #ifdef ALL_AXES
;;;4359                   , 0
;;;4360       #endif
;;;4361       #endif
;;;4362       #ifdef CC
;;;4363                   ,  settings->CC_current
;;;4364       #else
;;;4365       #ifdef ALL_AXES
;;;4366                   , 0
;;;4367       #endif
;;;4368       #endif
;;;4369                   );
;;;4370               old_cc SET_TO r;
;;;4371           }
;;;4372           clear_cc SET_TO (settings->retract_mode IS R_PLANE) ? r : old_cc;
;;;4373   
;;;4374           save_mode = GET_EXTERNAL_MOTION_CONTROL_MODE();
;;;4375           if (save_mode ISNT CANON_EXACT_PATH)
;;;4376               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
;;;4377   
;;;4378           switch(motion)
;;;4379           {
;;;4380               case G_81:
;;;4381                   CYCLE_MACRO(convert_cycle_g81(CANON_PLANE_YZ, aa, bb, clear_cc, cc))
;;;4382                       break;
;;;4383               case G_82:
;;;4384                   CHK(((settings->motion_mode ISNT G_82) AND (block->p_number IS -1.0)),
;;;4385                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G82);
;;;4386                   block->p_number SET_TO
;;;4387                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4388                   CYCLE_MACRO(convert_cycle_g82 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4389                       block->p_number))
;;;4390                       settings->cycle_p SET_TO block->p_number;
;;;4391                   break;
;;;4392               case G_83:
;;;4393                   CHK(((settings->motion_mode ISNT G_83) AND (block->q_number IS -1.0)),
;;;4394                       NCE_Q_WORD_MISSING_WITH_G83);
;;;4395                   block->q_number SET_TO
;;;4396                       block->q_number IS -1.0 ? settings->cycle_q : block->q_number;
;;;4397                   CYCLE_MACRO(convert_cycle_g83 (CANON_PLANE_YZ, aa, bb, r, clear_cc, cc,
;;;4398                       block->q_number))
;;;4399                       settings->cycle_q SET_TO block->q_number;
;;;4400                   break;
;;;4401               case G_84:
;;;4402                   CYCLE_MACRO(convert_cycle_g84 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4403                       settings->spindle_turning, settings->speed_feed_mode))
;;;4404                       break;
;;;4405               case G_85:
;;;4406                   CYCLE_MACRO(convert_cycle_g85 (CANON_PLANE_YZ, aa, bb, clear_cc, cc))
;;;4407                       break;
;;;4408               case G_86:
;;;4409                   CHK(((settings->motion_mode ISNT G_86) AND (block->p_number IS -1.0)),
;;;4410                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G86);
;;;4411                   block->p_number SET_TO
;;;4412                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4413                   CYCLE_MACRO(convert_cycle_g86 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4414                       block->p_number, settings->spindle_turning))
;;;4415                       settings->cycle_p SET_TO block->p_number;
;;;4416                   break;
;;;4417               case G_87:
;;;4418                   if (settings->motion_mode ISNT G_87)
;;;4419                   {
;;;4420                       CHK((block->i_flag IS OFF), NCE_I_WORD_MISSING_WITH_G87);
;;;4421                       CHK((block->j_flag IS OFF), NCE_J_WORD_MISSING_WITH_G87);
;;;4422                       CHK((block->k_flag IS OFF), NCE_K_WORD_MISSING_WITH_G87);
;;;4423                   }
;;;4424                   i SET_TO block->i_flag IS ON ? block->i_number : settings->cycle_i;
;;;4425                   j SET_TO block->j_flag IS ON ? block->j_number : settings->cycle_j;
;;;4426                   k SET_TO block->k_flag IS ON ? block->k_number : settings->cycle_k;
;;;4427                   settings->cycle_i SET_TO i;
;;;4428                   settings->cycle_j SET_TO j;
;;;4429                   settings->cycle_k SET_TO k;
;;;4430                   if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4431                   {
;;;4432                       i SET_TO (cc + i);            /* i always absolute in function call below */
;;;4433                   }
;;;4434                   CYCLE_MACRO(convert_cycle_g87 (CANON_PLANE_YZ, aa, (aa + j), bb,
;;;4435                       (bb + k), r, clear_cc, i, cc, settings->spindle_turning))
;;;4436                       break;
;;;4437               case G_88:
;;;4438                   CHK(((settings->motion_mode ISNT G_88) AND (block->p_number IS -1.0)),
;;;4439                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G88);
;;;4440                   block->p_number SET_TO
;;;4441                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4442                   CYCLE_MACRO(convert_cycle_g88 (CANON_PLANE_YZ, aa, bb, cc,
;;;4443                       block->p_number, settings->spindle_turning))
;;;4444                       settings->cycle_p SET_TO block->p_number;
;;;4445                   break;
;;;4446               case G_89:
;;;4447                   CHK(((settings->motion_mode ISNT G_89) AND (block->p_number IS -1.0)),
;;;4448                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G89);
;;;4449                   block->p_number SET_TO
;;;4450                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4451                   CYCLE_MACRO(convert_cycle_g89 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4452                       block->p_number))
;;;4453                       settings->cycle_p SET_TO block->p_number;
;;;4454                   break;
;;;4455               default:
;;;4456                   ERM(NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
;;;4457           }
;;;4458           settings->current_y SET_TO aa;            /* CYCLE_MACRO updates aa and bb */
;;;4459           settings->current_z SET_TO bb;
;;;4460           settings->current_x SET_TO clear_cc;
;;;4461           settings->cycle_cc SET_TO block->x_number;
;;;4462   
;;;4463           if (save_mode ISNT CANON_EXACT_PATH)
;;;4464               SET_MOTION_CONTROL_MODE(save_mode);
;;;4465   
;;;4466           return RS274NGC_OK;
;;;4467       }
000068  b033              ADD      sp,sp,#0xcc
00006a  bd00              POP      {pc}
                  |L32.108|
00006c  9831              LDR      r0,[sp,#0xc4]         ;4319
00006e  f8d001dc          LDR      r0,[r0,#0x1dc]        ;4319
000072  2801              CMP      r0,#1                 ;4319
000074  d104              BNE      |L32.128|
000076  9931              LDR      r1,[sp,#0xc4]         ;4320
000078  f50171f0          ADD      r1,r1,#0x1e0          ;4320
00007c  c903              LDM      r1,{r0,r1}            ;4320
00007e  e003              B        |L32.136|
                  |L32.128|
000080  9932              LDR      r1,[sp,#0xc8]         ;4320
000082  f501716e          ADD      r1,r1,#0x3b8          ;4320
000086  c903              LDM      r1,{r0,r1}            ;4320
                  |L32.136|
000088  9a31              LDR      r2,[sp,#0xc4]         ;4320
00008a  f50272f0          ADD      r2,r2,#0x1e0          ;4320
00008e  c203              STM      r2!,{r0,r1}           ;4320
000090  9832              LDR      r0,[sp,#0xc8]         ;4321
000092  f5007064          ADD      r0,r0,#0x390          ;4321
000096  c803              LDM      r0,{r0,r1}            ;4321
000098  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4321
00009c  9832              LDR      r0,[sp,#0xc8]         ;4323
00009e  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4323
0000a2  bb98              CBNZ     r0,|L32.268|
0000a4  f04f0100          MOV      r1,#0                 ;4325
0000a8  912c              STR      r1,[sp,#0xb0]         ;4325
0000aa  912d              STR      r1,[sp,#0xb4]         ;4325
0000ac  4608              MOV      r0,r1                 ;4326
0000ae  9028              STR      r0,[sp,#0xa0]         ;4326
0000b0  9029              STR      r0,[sp,#0xa4]         ;4326
0000b2  9831              LDR      r0,[sp,#0xc4]         ;4327
0000b4  f50070e4          ADD      r0,r0,#0x1c8          ;4327
0000b8  c803              LDM      r0,{r0,r1}            ;4327
0000ba  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4327
0000be  9931              LDR      r1,[sp,#0xc4]         ;4328
0000c0  f50171f0          ADD      r1,r1,#0x1e0          ;4328
0000c4  c903              LDM      r1,{r0,r1}            ;4328
0000c6  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4328
0000ca  9831              LDR      r0,[sp,#0xc4]         ;4329
0000cc  f8d001e8          LDR      r0,[r0,#0x1e8]        ;4329
0000d0  2801              CMP      r0,#1                 ;4329
0000d2  d104              BNE      |L32.222|
0000d4  9931              LDR      r1,[sp,#0xc4]         ;4329
0000d6  f50171f8          ADD      r1,r1,#0x1f0          ;4329
0000da  c903              LDM      r1,{r0,r1}            ;4329
0000dc  e003              B        |L32.230|
                  |L32.222|
0000de  9932              LDR      r1,[sp,#0xc8]         ;4329
0000e0  f5017166          ADD      r1,r1,#0x398          ;4329
0000e4  c903              LDM      r1,{r0,r1}            ;4329
                  |L32.230|
0000e6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4329
0000ea  9831              LDR      r0,[sp,#0xc4]         ;4330
0000ec  f8d001f8          LDR      r0,[r0,#0x1f8]        ;4330
0000f0  2801              CMP      r0,#1                 ;4330
0000f2  d104              BNE      |L32.254|
0000f4  9931              LDR      r1,[sp,#0xc4]         ;4330
0000f6  f5017100          ADD      r1,r1,#0x200          ;4330
0000fa  c903              LDM      r1,{r0,r1}            ;4330
0000fc  e003              B        |L32.262|
                  |L32.254|
0000fe  9932              LDR      r1,[sp,#0xc8]         ;4330
000100  f5017168          ADD      r1,r1,#0x3a0          ;4330
000104  c903              LDM      r1,{r0,r1}            ;4330
                  |L32.262|
000106  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4330
00010a  e05b              B        |L32.452|
                  |L32.268|
00010c  e7ff              B        |L32.270|
                  |L32.270|
00010e  9832              LDR      r0,[sp,#0xc8]         ;4332
000110  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4332
000114  2801              CMP      r0,#1                 ;4332
000116  d130              BNE      |L32.378|
000118  9831              LDR      r0,[sp,#0xc4]         ;4334
00011a  f50070f8          ADD      r0,r0,#0x1f0          ;4334
00011e  c803              LDM      r0,{r0,r1}            ;4334
000120  e9cd012c          STRD     r0,r1,[sp,#0xb0]      ;4334
000124  9831              LDR      r0,[sp,#0xc4]         ;4335
000126  f5007000          ADD      r0,r0,#0x200          ;4335
00012a  c803              LDM      r0,{r0,r1}            ;4335
00012c  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;4335
000130  9931              LDR      r1,[sp,#0xc4]         ;4336
000132  f50171e4          ADD      r1,r1,#0x1c8          ;4336
000136  c903              LDM      r1,{r0,r1}            ;4336
000138  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4336
00013c  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;4336
000140  f7fffffe          BL       __aeabi_dadd
000144  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4336
000148  9931              LDR      r1,[sp,#0xc4]         ;4337
00014a  f50171f0          ADD      r1,r1,#0x1e0          ;4337
00014e  c903              LDM      r1,{r0,r1}            ;4337
000150  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4337
000154  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4337
000158  f7fffffe          BL       __aeabi_dadd
00015c  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4337
000160  9932              LDR      r1,[sp,#0xc8]         ;4338
000162  f5017166          ADD      r1,r1,#0x398          ;4338
000166  c903              LDM      r1,{r0,r1}            ;4338
000168  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4338
00016c  9832              LDR      r0,[sp,#0xc8]         ;4339
00016e  f5007068          ADD      r0,r0,#0x3a0          ;4339
000172  c803              LDM      r0,{r0,r1}            ;4339
000174  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4339
000178  e024              B        |L32.452|
                  |L32.378|
00017a  f04f0100          MOV      r1,#0                 ;4342
00017e  48a8              LDR      r0,|L32.1056|
000180  f8c0114c          STR      r1,[r0,#0x14c]        ;4342
000184  f8d0214c          LDR      r2,[r0,#0x14c]        ;4342
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;4342
00018c  f1000001          ADD      r0,r0,#1              ;4342
000190  49a3              LDR      r1,|L32.1056|
000192  f8c1014c          STR      r0,[r1,#0x14c]        ;4342
000196  eb020182          ADD      r1,r2,r2,LSL #2       ;4342
00019a  48a3              LDR      r0,|L32.1064|
00019c  eb001001          ADD      r0,r0,r1,LSL #4       ;4342
0001a0  49a0              LDR      r1,|L32.1060|
0001a2  9014              STR      r0,[sp,#0x50]         ;4342
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;4342
0001ac  489c              LDR      r0,|L32.1056|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;4342
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;4342
0001b6  4a9c              LDR      r2,|L32.1064|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;4342
0001bc  7001              STRB     r1,[r0,#0]            ;4342
0001be  f04f001f          MOV      r0,#0x1f              ;4342
                  |L32.450|
0001c2  e751              B        |L32.104|
                  |L32.452|
0001c4  e9dd2326          LDRD     r2,r3,[sp,#0x98]      ;4343
0001c8  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4343
0001cc  f7fffffe          BL       __aeabi_cdcmple
0001d0  d224              BCS      |L32.540|
0001d2  f04f0100          MOV      r1,#0                 ;4343
0001d6  4892              LDR      r0,|L32.1056|
0001d8  f8c0114c          STR      r1,[r0,#0x14c]        ;4343
0001dc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4343
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4343
0001e4  f1000001          ADD      r0,r0,#1              ;4343
0001e8  498d              LDR      r1,|L32.1056|
0001ea  f8c1014c          STR      r0,[r1,#0x14c]        ;4343
0001ee  eb020082          ADD      r0,r2,r2,LSL #2       ;4343
0001f2  498d              LDR      r1,|L32.1064|
0001f4  eb011000          ADD      r0,r1,r0,LSL #4       ;4343
0001f8  498a              LDR      r1,|L32.1060|
0001fa  9014              STR      r0,[sp,#0x50]         ;4343
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;4343
000204  4886              LDR      r0,|L32.1056|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;4343
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;4343
00020e  4a86              LDR      r2,|L32.1064|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;4343
000214  7001              STRB     r1,[r0,#0]            ;4343
000216  f04f0094          MOV      r0,#0x94              ;4343
                  |L32.538|
00021a  e725              B        |L32.104|
                  |L32.540|
00021c  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4345
000220  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4345
000224  f7fffffe          BL       __aeabi_cdcmple
000228  d215              BCS      |L32.598|
00022a  9832              LDR      r0,[sp,#0xc8]         ;4347
00022c  f5007068          ADD      r0,r0,#0x3a0          ;4347
000230  c803              LDM      r0,{r0,r1}            ;4347
000232  e9cd0100          STRD     r0,r1,[sp,#0]         ;4347
000236  9932              LDR      r1,[sp,#0xc8]         ;4347
000238  f5017166          ADD      r1,r1,#0x398          ;4347
00023c  c903              LDM      r1,{r0,r1}            ;4347
00023e  4602              MOV      r2,r0                 ;4347
000240  460b              MOV      r3,r1                 ;4347
000242  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4347
000246  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4347
00024a  f7fffffe          BL       STRAIGHT_TRAVERSE
00024e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4370
000252  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4370
                  |L32.598|
000256  9832              LDR      r0,[sp,#0xc8]         ;4372
000258  f5004030          ADD      r0,r0,#0xb000         ;4372
00025c  f8900188          LDRB     r0,[r0,#0x188]        ;4372
000260  b910              CBNZ     r0,|L32.616|
000262  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4372
000266  e001              B        |L32.620|
                  |L32.616|
000268  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4372
                  |L32.620|
00026c  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;4372
000270  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000274  9016              STR      r0,[sp,#0x58]         ;4374
000276  9816              LDR      r0,[sp,#0x58]         ;4375
000278  2802              CMP      r0,#2                 ;4375
00027a  d002              BEQ      |L32.642|
00027c  2002              MOVS     r0,#2                 ;4376
00027e  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L32.642|
000282  f2403252          MOV      r2,#0x352             ;4378
000286  9830              LDR      r0,[sp,#0xc0]         ;4378
000288  1a81              SUBS     r1,r0,r2              ;4378
00028a  4290              CMP      r0,r2                 ;4378
00028c  d07d              BEQ      |L32.906|
00028e  dc0a              BGT      |L32.678|
000290  f5a07040          SUB      r0,r0,#0x300          ;4378
000294  382a              SUBS     r0,r0,#0x2a           ;4378
000296  d00f              BEQ      |L32.696|
000298  280a              CMP      r0,#0xa               ;4378
00029a  d077              BEQ      |L32.908|
00029c  2814              CMP      r0,#0x14              ;4378
00029e  d076              BEQ      |L32.910|
0002a0  281e              CMP      r0,#0x1e              ;4378
                  |L32.674|
0002a2  d175              BNE      |L32.912|
0002a4  e24a              B        |L32.1852|
                  |L32.678|
0002a6  290a              CMP      r1,#0xa               ;4378
0002a8  d073              BEQ      |L32.914|
0002aa  2914              CMP      r1,#0x14              ;4378
0002ac  d072              BEQ      |L32.916|
0002ae  291e              CMP      r1,#0x1e              ;4378
0002b0  d071              BEQ      |L32.918|
0002b2  2928              CMP      r1,#0x28              ;4378
0002b4  d1f5              BNE      |L32.674|
0002b6  e3fe              B        |L32.2742|
                  |L32.696|
0002b8  9831              LDR      r0,[sp,#0xc4]         ;4381
0002ba  f8d00178          LDR      r0,[r0,#0x178]        ;4381
0002be  9017              STR      r0,[sp,#0x5c]         ;4381
0002c0  e07a              B        |L32.952|
                  |L32.706|
0002c2  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4381
0002c6  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4381
0002ca  f7fffffe          BL       __aeabi_dadd
0002ce  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4381
0002d2  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4381
0002d6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4381
0002da  f7fffffe          BL       __aeabi_dadd
0002de  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4381
0002e2  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4381
0002e6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4381
0002ea  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4381
0002ee  e9cd0100          STRD     r0,r1,[sp,#0]         ;4381
0002f2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4381
0002f6  981b              LDR      r0,[sp,#0x6c]         ;4381
0002f8  f7fffffe          BL       cycle_traverse
0002fc  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4381
000300  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4381
000304  f7fffffe          BL       __aeabi_cdcmpeq
000308  d00c              BEQ      |L32.804|
00030a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4381
00030e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4381
000312  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4381
000316  e9cd0100          STRD     r0,r1,[sp,#0]         ;4381
00031a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4381
00031e  981b              LDR      r0,[sp,#0x6c]         ;4381
000320  f7fffffe          BL       cycle_traverse
                  |L32.804|
000324  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4381
000328  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4381
00032c  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4381
000330  e9cd0102          STRD     r0,r1,[sp,#8]         ;4381
000334  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4381
000338  e9cd0100          STRD     r0,r1,[sp,#0]         ;4381
00033c  2002              MOVS     r0,#2                 ;4381
00033e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4381
000342  f7fffffe          BL       convert_cycle_g81
000346  9015              STR      r0,[sp,#0x54]         ;4381
000348  b330              CBZ      r0,|L32.920|
00034a  4835              LDR      r0,|L32.1056|
00034c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4381
000350  2831              CMP      r0,#0x31              ;4381
000352  da27              BGE      |L32.932|
000354  4832              LDR      r0,|L32.1056|
000356  f8d0214c          LDR      r2,[r0,#0x14c]        ;4381
00035a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4381
00035e  1c40              ADDS     r0,r0,#1              ;4381
000360  492f              LDR      r1,|L32.1056|
000362  f8c1014c          STR      r0,[r1,#0x14c]        ;4381
000366  eb020182          ADD      r1,r2,r2,LSL #2       ;4381
00036a  482f              LDR      r0,|L32.1064|
00036c  eb001001          ADD      r0,r0,r1,LSL #4       ;4381
000370  492c              LDR      r1,|L32.1060|
000372  9014              STR      r0,[sp,#0x50]         ;4381
000374  f7fffffe          BL       strcpy
000378  f04f0100          MOV      r1,#0                 ;4381
00037c  4828              LDR      r0,|L32.1056|
00037e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4381
000382  eb000380          ADD      r3,r0,r0,LSL #2       ;4381
000386  4828              LDR      r0,|L32.1064|
000388  e007              B        |L32.922|
                  |L32.906|
00038a  e268              B        |L32.2142|
                  |L32.908|
00038c  e018              B        |L32.960|
                  |L32.910|
00038e  e0f7              B        |L32.1408|
                  |L32.912|
000390  e3f1              B        |L32.2934|
                  |L32.914|
000392  e2e0              B        |L32.2390|
                  |L32.916|
000394  e3bf              B        |L32.2838|
                  |L32.918|
000396  e3ef              B        |L32.2936|
                  |L32.920|
000398  e006              B        |L32.936|
                  |L32.922|
00039a  eb001003          ADD      r0,r0,r3,LSL #4       ;4381
00039e  7001              STRB     r1,[r0,#0]            ;4381
0003a0  9815              LDR      r0,[sp,#0x54]         ;4381
                  |L32.930|
0003a2  e661              B        |L32.104|
                  |L32.932|
0003a4  9815              LDR      r0,[sp,#0x54]         ;4381
0003a6  e65f              B        |L32.104|
                  |L32.936|
0003a8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4381
0003ac  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4381
0003b0  9817              LDR      r0,[sp,#0x5c]         ;4381
0003b2  f1a00001          SUB      r0,r0,#1              ;4381
0003b6  9017              STR      r0,[sp,#0x5c]         ;4381
                  |L32.952|
0003b8  9817              LDR      r0,[sp,#0x5c]         ;4381
0003ba  2800              CMP      r0,#0                 ;4381
0003bc  dc81              BGT      |L32.706|
                  |L32.958|
0003be  e3a9              B        |L32.2836|
                  |L32.960|
0003c0  9832              LDR      r0,[sp,#0xc8]         ;4384
0003c2  f8d00628          LDR      r0,[r0,#0x628]        ;4384
0003c6  f5b07f4d          CMP      r0,#0x334             ;4384
0003ca  d038              BEQ      |L32.1086|
0003cc  9931              LDR      r1,[sp,#0xc4]         ;4384
0003ce  f50171d8          ADD      r1,r1,#0x1b0          ;4384
0003d2  c903              LDM      r1,{r0,r1}            ;4384
0003d4  2200              MOVS     r2,#0                 ;4384
0003d6  4b15              LDR      r3,|L32.1068|
0003d8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4384
0003dc  f7fffffe          BL       __aeabi_cdcmpeq
0003e0  d12d              BNE      |L32.1086|
0003e2  f04f0100          MOV      r1,#0                 ;4384
0003e6  480e              LDR      r0,|L32.1056|
0003e8  f8c0114c          STR      r1,[r0,#0x14c]        ;4384
0003ec  f8d0214c          LDR      r2,[r0,#0x14c]        ;4384
0003f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4384
0003f4  f1000001          ADD      r0,r0,#1              ;4384
0003f8  4909              LDR      r1,|L32.1056|
0003fa  f8c1014c          STR      r0,[r1,#0x14c]        ;4384
0003fe  eb020082          ADD      r0,r2,r2,LSL #2       ;4384
000402  4909              LDR      r1,|L32.1064|
000404  eb011000          ADD      r0,r1,r0,LSL #4       ;4384
000408  4906              LDR      r1,|L32.1060|
00040a  9014              STR      r0,[sp,#0x50]         ;4384
00040c  f7fffffe          BL       strcpy
000410  f04f0100          MOV      r1,#0                 ;4384
000414  4802              LDR      r0,|L32.1056|
000416  f8d0014c          LDR      r0,[r0,#0x14c]        ;4384
00041a  eb000080          ADD      r0,r0,r0,LSL #2       ;4384
00041e  e007              B        |L32.1072|
                  |L32.1056|
                          DCD      _setup+0xc000
                  |L32.1060|
                          DCD      |symbol_number.469|
                  |L32.1064|
                          DCD      _setup+0xb1ac
                  |L32.1068|
                          DCD      0xbff00000
                  |L32.1072|
000430  4aff              LDR      r2,|L32.2096|
000432  eb021000          ADD      r0,r2,r0,LSL #4       ;4384
000436  7001              STRB     r1,[r0,#0]            ;4384
000438  f04f0049          MOV      r0,#0x49              ;4384
                  |L32.1084|
00043c  e614              B        |L32.104|
                  |L32.1086|
00043e  9931              LDR      r1,[sp,#0xc4]         ;4386
000440  f50171d8          ADD      r1,r1,#0x1b0          ;4386
000444  c903              LDM      r1,{r0,r1}            ;4386
000446  2200              MOVS     r2,#0                 ;4386
000448  4bfa              LDR      r3,|L32.2100|
00044a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4386
00044e  f7fffffe          BL       __aeabi_cdcmpeq
000452  d104              BNE      |L32.1118|
000454  9932              LDR      r1,[sp,#0xc8]         ;4387
000456  f5017178          ADD      r1,r1,#0x3e0          ;4387
00045a  c903              LDM      r1,{r0,r1}            ;4387
00045c  e003              B        |L32.1126|
                  |L32.1118|
00045e  9931              LDR      r1,[sp,#0xc4]         ;4387
000460  f50171d8          ADD      r1,r1,#0x1b0          ;4387
000464  c903              LDM      r1,{r0,r1}            ;4387
                  |L32.1126|
000466  9a31              LDR      r2,[sp,#0xc4]         ;4387
000468  f50272d8          ADD      r2,r2,#0x1b0          ;4387
00046c  c203              STM      r2!,{r0,r1}           ;4387
00046e  9831              LDR      r0,[sp,#0xc4]         ;4388
000470  f8d00178          LDR      r0,[r0,#0x178]        ;4388
000474  9017              STR      r0,[sp,#0x5c]         ;4388
000476  e077              B        |L32.1384|
                  |L32.1144|
000478  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4388
00047c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4388
000480  f7fffffe          BL       __aeabi_dadd
000484  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4388
000488  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4388
00048c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4388
000490  f7fffffe          BL       __aeabi_dadd
000494  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4388
000498  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4388
00049c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4388
0004a0  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4388
0004a4  e9cd0100          STRD     r0,r1,[sp,#0]         ;4388
0004a8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4388
0004ac  981b              LDR      r0,[sp,#0x6c]         ;4388
0004ae  f7fffffe          BL       cycle_traverse
0004b2  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4388
0004b6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4388
0004ba  f7fffffe          BL       __aeabi_cdcmpeq
0004be  d00c              BEQ      |L32.1242|
0004c0  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4388
0004c4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4388
0004c8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4388
0004cc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4388
0004d0  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4388
0004d4  981b              LDR      r0,[sp,#0x6c]         ;4388
0004d6  f7fffffe          BL       cycle_traverse
                  |L32.1242|
0004da  9831              LDR      r0,[sp,#0xc4]         ;4388
0004dc  f50070d8          ADD      r0,r0,#0x1b0          ;4388
0004e0  c803              LDM      r0,{r0,r1}            ;4388
0004e2  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4388
0004e6  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4388
0004ea  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4388
0004ee  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4388
0004f2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4388
0004f6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4388
0004fa  e9cd0100          STRD     r0,r1,[sp,#0]         ;4388
0004fe  2002              MOVS     r0,#2                 ;4388
000500  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4388
000504  f7fffffe          BL       convert_cycle_g82
000508  9015              STR      r0,[sp,#0x54]         ;4388
00050a  b328              CBZ      r0,|L32.1368|
00050c  48ca              LDR      r0,|L32.2104|
00050e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4388
000512  2831              CMP      r0,#0x31              ;4388
000514  da1e              BGE      |L32.1364|
000516  48c8              LDR      r0,|L32.2104|
000518  f8d0214c          LDR      r2,[r0,#0x14c]        ;4388
00051c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4388
000520  1c40              ADDS     r0,r0,#1              ;4388
000522  49c5              LDR      r1,|L32.2104|
000524  f8c1014c          STR      r0,[r1,#0x14c]        ;4388
000528  eb020082          ADD      r0,r2,r2,LSL #2       ;4388
00052c  49c0              LDR      r1,|L32.2096|
00052e  eb011000          ADD      r0,r1,r0,LSL #4       ;4388
000532  49c2              LDR      r1,|L32.2108|
000534  9014              STR      r0,[sp,#0x50]         ;4388
000536  f7fffffe          BL       strcpy
00053a  f04f0100          MOV      r1,#0                 ;4388
00053e  48be              LDR      r0,|L32.2104|
000540  f8d0014c          LDR      r0,[r0,#0x14c]        ;4388
000544  eb000080          ADD      r0,r0,r0,LSL #2       ;4388
000548  4ab9              LDR      r2,|L32.2096|
00054a  eb021000          ADD      r0,r2,r0,LSL #4       ;4388
00054e  7001              STRB     r1,[r0,#0]            ;4388
000550  9815              LDR      r0,[sp,#0x54]         ;4388
000552  e589              B        |L32.104|
                  |L32.1364|
000554  9815              LDR      r0,[sp,#0x54]         ;4388
000556  e587              B        |L32.104|
                  |L32.1368|
000558  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4388
00055c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4388
000560  9817              LDR      r0,[sp,#0x5c]         ;4388
000562  f1a00001          SUB      r0,r0,#1              ;4388
000566  9017              STR      r0,[sp,#0x5c]         ;4388
                  |L32.1384|
000568  9817              LDR      r0,[sp,#0x5c]         ;4388
00056a  2800              CMP      r0,#0                 ;4388
00056c  dc84              BGT      |L32.1144|
00056e  9831              LDR      r0,[sp,#0xc4]         ;4390
000570  f50070d8          ADD      r0,r0,#0x1b0          ;4390
000574  c806              LDM      r0!,{r1,r2}           ;4390
000576  9832              LDR      r0,[sp,#0xc8]         ;4390
000578  f5007078          ADD      r0,r0,#0x3e0          ;4390
00057c  c006              STM      r0!,{r1,r2}           ;4390
00057e  e71e              B        |L32.958|
                  |L32.1408|
000580  9832              LDR      r0,[sp,#0xc8]         ;4393
000582  f8d00628          LDR      r0,[r0,#0x628]        ;4393
000586  f5a07140          SUB      r1,r0,#0x300          ;4393
00058a  393e              SUBS     r1,r1,#0x3e           ;4393
00058c  d02f              BEQ      |L32.1518|
00058e  9931              LDR      r1,[sp,#0xc4]         ;4393
000590  f50171dc          ADD      r1,r1,#0x1b8          ;4393
000594  c903              LDM      r1,{r0,r1}            ;4393
000596  2200              MOVS     r2,#0                 ;4393
000598  4ba6              LDR      r3,|L32.2100|
00059a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4393
00059e  f7fffffe          BL       __aeabi_cdcmpeq
0005a2  d124              BNE      |L32.1518|
0005a4  f04f0100          MOV      r1,#0                 ;4393
0005a8  48a3              LDR      r0,|L32.2104|
0005aa  f8c0114c          STR      r1,[r0,#0x14c]        ;4393
0005ae  f8d0214c          LDR      r2,[r0,#0x14c]        ;4393
0005b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4393
0005b6  f1000001          ADD      r0,r0,#1              ;4393
0005ba  499f              LDR      r1,|L32.2104|
0005bc  f8c1014c          STR      r0,[r1,#0x14c]        ;4393
0005c0  eb020082          ADD      r0,r2,r2,LSL #2       ;4393
0005c4  499a              LDR      r1,|L32.2096|
0005c6  eb011000          ADD      r0,r1,r0,LSL #4       ;4393
0005ca  499c              LDR      r1,|L32.2108|
0005cc  9014              STR      r0,[sp,#0x50]         ;4393
0005ce  f7fffffe          BL       strcpy
0005d2  f04f0100          MOV      r1,#0                 ;4393
0005d6  4898              LDR      r0,|L32.2104|
0005d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4393
0005dc  eb000080          ADD      r0,r0,r0,LSL #2       ;4393
0005e0  4a93              LDR      r2,|L32.2096|
0005e2  eb021000          ADD      r0,r2,r0,LSL #4       ;4393
0005e6  7001              STRB     r1,[r0,#0]            ;4393
0005e8  f04f008f          MOV      r0,#0x8f              ;4393
0005ec  e53c              B        |L32.104|
                  |L32.1518|
0005ee  9931              LDR      r1,[sp,#0xc4]         ;4395
0005f0  f50171dc          ADD      r1,r1,#0x1b8          ;4395
0005f4  c903              LDM      r1,{r0,r1}            ;4395
0005f6  2200              MOVS     r2,#0                 ;4395
0005f8  4b8e              LDR      r3,|L32.2100|
0005fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4395
0005fe  f7fffffe          BL       __aeabi_cdcmpeq
000602  d104              BNE      |L32.1550|
000604  9932              LDR      r1,[sp,#0xc8]         ;4396
000606  f501717a          ADD      r1,r1,#0x3e8          ;4396
00060a  c903              LDM      r1,{r0,r1}            ;4396
00060c  e003              B        |L32.1558|
                  |L32.1550|
00060e  9931              LDR      r1,[sp,#0xc4]         ;4396
000610  f50171dc          ADD      r1,r1,#0x1b8          ;4396
000614  c903              LDM      r1,{r0,r1}            ;4396
                  |L32.1558|
000616  9a31              LDR      r2,[sp,#0xc4]         ;4396
000618  f50272dc          ADD      r2,r2,#0x1b8          ;4396
00061c  c203              STM      r2!,{r0,r1}           ;4396
00061e  9831              LDR      r0,[sp,#0xc4]         ;4397
000620  f8d00178          LDR      r0,[r0,#0x178]        ;4397
000624  9017              STR      r0,[sp,#0x5c]         ;4397
000626  e07b              B        |L32.1824|
                  |L32.1576|
000628  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4397
00062c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4397
000630  f7fffffe          BL       __aeabi_dadd
000634  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4397
000638  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4397
00063c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4397
000640  f7fffffe          BL       __aeabi_dadd
000644  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4397
000648  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4397
00064c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4397
000650  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4397
000654  e9cd0100          STRD     r0,r1,[sp,#0]         ;4397
000658  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4397
00065c  981b              LDR      r0,[sp,#0x6c]         ;4397
00065e  f7fffffe          BL       cycle_traverse
000662  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4397
000666  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4397
00066a  f7fffffe          BL       __aeabi_cdcmpeq
00066e  d00c              BEQ      |L32.1674|
000670  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4397
000674  e9cd0102          STRD     r0,r1,[sp,#8]         ;4397
000678  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4397
00067c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4397
000680  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4397
000684  981b              LDR      r0,[sp,#0x6c]         ;4397
000686  f7fffffe          BL       cycle_traverse
                  |L32.1674|
00068a  9931              LDR      r1,[sp,#0xc4]         ;4397
00068c  f50171dc          ADD      r1,r1,#0x1b8          ;4397
000690  c903              LDM      r1,{r0,r1}            ;4397
000692  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4397
000696  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4397
00069a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4397
00069e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4397
0006a2  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4397
0006a6  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4397
0006aa  e9cd0102          STRD     r0,r1,[sp,#8]         ;4397
0006ae  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4397
0006b2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4397
0006b6  2002              MOVS     r0,#2                 ;4397
0006b8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4397
0006bc  f7fffffe          BL       convert_cycle_g83
0006c0  9015              STR      r0,[sp,#0x54]         ;4397
0006c2  b328              CBZ      r0,|L32.1808|
0006c4  485c              LDR      r0,|L32.2104|
0006c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4397
0006ca  2831              CMP      r0,#0x31              ;4397
0006cc  da1e              BGE      |L32.1804|
0006ce  485a              LDR      r0,|L32.2104|
0006d0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4397
0006d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4397
0006d8  1c40              ADDS     r0,r0,#1              ;4397
0006da  4957              LDR      r1,|L32.2104|
0006dc  f8c1014c          STR      r0,[r1,#0x14c]        ;4397
0006e0  eb020082          ADD      r0,r2,r2,LSL #2       ;4397
0006e4  4952              LDR      r1,|L32.2096|
0006e6  eb011000          ADD      r0,r1,r0,LSL #4       ;4397
0006ea  4954              LDR      r1,|L32.2108|
0006ec  9014              STR      r0,[sp,#0x50]         ;4397
0006ee  f7fffffe          BL       strcpy
0006f2  f04f0100          MOV      r1,#0                 ;4397
0006f6  4850              LDR      r0,|L32.2104|
0006f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4397
0006fc  eb000080          ADD      r0,r0,r0,LSL #2       ;4397
000700  4a4b              LDR      r2,|L32.2096|
000702  eb021000          ADD      r0,r2,r0,LSL #4       ;4397
000706  7001              STRB     r1,[r0,#0]            ;4397
000708  9815              LDR      r0,[sp,#0x54]         ;4397
                  |L32.1802|
00070a  e4ad              B        |L32.104|
                  |L32.1804|
00070c  9815              LDR      r0,[sp,#0x54]         ;4397
00070e  e4ab              B        |L32.104|
                  |L32.1808|
000710  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4397
000714  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4397
000718  9817              LDR      r0,[sp,#0x5c]         ;4397
00071a  f1a00001          SUB      r0,r0,#1              ;4397
00071e  9017              STR      r0,[sp,#0x5c]         ;4397
                  |L32.1824|
000720  9817              LDR      r0,[sp,#0x5c]         ;4397
000722  2800              CMP      r0,#0                 ;4397
000724  dc80              BGT      |L32.1576|
000726  9831              LDR      r0,[sp,#0xc4]         ;4399
000728  f8d021b8          LDR      r2,[r0,#0x1b8]        ;4399
00072c  f8d011bc          LDR      r1,[r0,#0x1bc]        ;4399
000730  9832              LDR      r0,[sp,#0xc8]         ;4399
000732  f8c023e8          STR      r2,[r0,#0x3e8]        ;4399
000736  f8c013ec          STR      r1,[r0,#0x3ec]        ;4399
00073a  e640              B        |L32.958|
                  |L32.1852|
00073c  9831              LDR      r0,[sp,#0xc4]         ;4402
00073e  f8d00178          LDR      r0,[r0,#0x178]        ;4402
000742  9017              STR      r0,[sp,#0x5c]         ;4402
000744  e086              B        |L32.2132|
                  |L32.1862|
000746  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4402
00074a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4402
00074e  f7fffffe          BL       __aeabi_dadd
000752  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4402
000756  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4402
00075a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4402
00075e  f7fffffe          BL       __aeabi_dadd
000762  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4402
000766  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4402
00076a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4402
00076e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4402
000772  e9cd0100          STRD     r0,r1,[sp,#0]         ;4402
000776  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4402
00077a  981b              LDR      r0,[sp,#0x6c]         ;4402
00077c  f7fffffe          BL       cycle_traverse
000780  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4402
000784  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4402
000788  f7fffffe          BL       __aeabi_cdcmpeq
00078c  d00c              BEQ      |L32.1960|
00078e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4402
000792  e9cd0102          STRD     r0,r1,[sp,#8]         ;4402
000796  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4402
00079a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4402
00079e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4402
0007a2  981b              LDR      r0,[sp,#0x6c]         ;4402
0007a4  f7fffffe          BL       cycle_traverse
                  |L32.1960|
0007a8  9832              LDR      r0,[sp,#0xc8]         ;4402
0007aa  f5004030          ADD      r0,r0,#0xb000         ;4402
0007ae  f8d011a0          LDR      r1,[r0,#0x1a0]        ;4402
0007b2  9832              LDR      r0,[sp,#0xc8]         ;4402
0007b4  f5004030          ADD      r0,r0,#0xb000         ;4402
0007b8  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4402
0007bc  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4402
0007c0  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4402
0007c4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4402
0007c8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4402
0007cc  e9cd0102          STRD     r0,r1,[sp,#8]         ;4402
0007d0  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4402
0007d4  e9cd0100          STRD     r0,r1,[sp,#0]         ;4402
0007d8  2002              MOVS     r0,#2                 ;4402
0007da  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4402
0007de  f7fffffe          BL       convert_cycle_g84
0007e2  9015              STR      r0,[sp,#0x54]         ;4402
0007e4  b318              CBZ      r0,|L32.2094|
0007e6  4814              LDR      r0,|L32.2104|
0007e8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4402
0007ec  2831              CMP      r0,#0x31              ;4402
0007ee  da27              BGE      |L32.2112|
0007f0  4811              LDR      r0,|L32.2104|
0007f2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4402
0007f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4402
0007fa  1c40              ADDS     r0,r0,#1              ;4402
0007fc  490e              LDR      r1,|L32.2104|
0007fe  eb020282          ADD      r2,r2,r2,LSL #2       ;4402
000802  f8c1014c          STR      r0,[r1,#0x14c]        ;4402
000806  480a              LDR      r0,|L32.2096|
000808  eb001002          ADD      r0,r0,r2,LSL #4       ;4402
00080c  490b              LDR      r1,|L32.2108|
00080e  9014              STR      r0,[sp,#0x50]         ;4402
000810  f7fffffe          BL       strcpy
000814  f04f0100          MOV      r1,#0                 ;4402
000818  4807              LDR      r0,|L32.2104|
00081a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4402
00081e  eb000080          ADD      r0,r0,r0,LSL #2       ;4402
000822  4a03              LDR      r2,|L32.2096|
000824  eb021000          ADD      r0,r2,r0,LSL #4       ;4402
000828  7001              STRB     r1,[r0,#0]            ;4402
00082a  9815              LDR      r0,[sp,#0x54]         ;4402
                  |L32.2092|
00082c  e41c              B        |L32.104|
                  |L32.2094|
00082e  e009              B        |L32.2116|
                  |L32.2096|
                          DCD      _setup+0xb1ac
                  |L32.2100|
                          DCD      0xbff00000
                  |L32.2104|
                          DCD      _setup+0xc000
                  |L32.2108|
                          DCD      |symbol_number.469|
                  |L32.2112|
000840  9815              LDR      r0,[sp,#0x54]         ;4402
000842  e411              B        |L32.104|
                  |L32.2116|
000844  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4402
000848  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4402
00084c  9817              LDR      r0,[sp,#0x5c]         ;4402
00084e  f1a00001          SUB      r0,r0,#1              ;4402
000852  9017              STR      r0,[sp,#0x5c]         ;4402
                  |L32.2132|
000854  9817              LDR      r0,[sp,#0x5c]         ;4402
000856  2800              CMP      r0,#0                 ;4402
000858  f73faf75          BGT      |L32.1862|
00085c  e5af              B        |L32.958|
                  |L32.2142|
00085e  9831              LDR      r0,[sp,#0xc4]         ;4406
000860  f8d00178          LDR      r0,[r0,#0x178]        ;4406
000864  9017              STR      r0,[sp,#0x5c]         ;4406
000866  e072              B        |L32.2382|
                  |L32.2152|
000868  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4406
00086c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4406
000870  f7fffffe          BL       __aeabi_dadd
000874  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4406
000878  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4406
00087c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4406
000880  f7fffffe          BL       __aeabi_dadd
000884  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4406
000888  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4406
00088c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4406
000890  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4406
000894  e9cd0100          STRD     r0,r1,[sp,#0]         ;4406
000898  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4406
00089c  981b              LDR      r0,[sp,#0x6c]         ;4406
00089e  f7fffffe          BL       cycle_traverse
0008a2  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4406
0008a6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4406
0008aa  f7fffffe          BL       __aeabi_cdcmpeq
0008ae  d00c              BEQ      |L32.2250|
0008b0  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4406
0008b4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4406
0008b8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4406
0008bc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4406
0008c0  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4406
0008c4  981b              LDR      r0,[sp,#0x6c]         ;4406
0008c6  f7fffffe          BL       cycle_traverse
                  |L32.2250|
0008ca  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4406
0008ce  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4406
0008d2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4406
0008d6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4406
0008da  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4406
0008de  e9cd0100          STRD     r0,r1,[sp,#0]         ;4406
0008e2  2002              MOVS     r0,#2                 ;4406
0008e4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4406
0008e8  f7fffffe          BL       convert_cycle_g85
0008ec  9015              STR      r0,[sp,#0x54]         ;4406
0008ee  b330              CBZ      r0,|L32.2366|
0008f0  48ff              LDR      r0,|L32.3312|
0008f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4406
0008f6  2831              CMP      r0,#0x31              ;4406
0008f8  da1f              BGE      |L32.2362|
0008fa  48fd              LDR      r0,|L32.3312|
0008fc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4406
000900  f8d0014c          LDR      r0,[r0,#0x14c]        ;4406
000904  1c40              ADDS     r0,r0,#1              ;4406
000906  49fa              LDR      r1,|L32.3312|
000908  f8c1014c          STR      r0,[r1,#0x14c]        ;4406
00090c  eb020082          ADD      r0,r2,r2,LSL #2       ;4406
000910  f6a16154          SUB      r1,r1,#0xe54          ;4406
000914  eb011000          ADD      r0,r1,r0,LSL #4       ;4406
000918  49f6              LDR      r1,|L32.3316|
00091a  9014              STR      r0,[sp,#0x50]         ;4406
00091c  f7fffffe          BL       strcpy
000920  f04f0100          MOV      r1,#0                 ;4406
000924  48f2              LDR      r0,|L32.3312|
000926  f8d0014c          LDR      r0,[r0,#0x14c]        ;4406
00092a  eb000080          ADD      r0,r0,r0,LSL #2       ;4406
00092e  4af2              LDR      r2,|L32.3320|
000930  eb021000          ADD      r0,r2,r0,LSL #4       ;4406
000934  7001              STRB     r1,[r0,#0]            ;4406
000936  9815              LDR      r0,[sp,#0x54]         ;4406
                  |L32.2360|
000938  e443              B        |L32.450|
                  |L32.2362|
00093a  9815              LDR      r0,[sp,#0x54]         ;4406
00093c  e441              B        |L32.450|
                  |L32.2366|
00093e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4406
000942  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4406
000946  9817              LDR      r0,[sp,#0x5c]         ;4406
000948  f1a00001          SUB      r0,r0,#1              ;4406
00094c  9017              STR      r0,[sp,#0x5c]         ;4406
                  |L32.2382|
00094e  9817              LDR      r0,[sp,#0x5c]         ;4406
000950  2800              CMP      r0,#0                 ;4406
000952  dc89              BGT      |L32.2152|
000954  e533              B        |L32.958|
                  |L32.2390|
000956  9832              LDR      r0,[sp,#0xc8]         ;4409
000958  f8d00628          LDR      r0,[r0,#0x628]        ;4409
00095c  f5b07f57          CMP      r0,#0x35c             ;4409
000960  d02f              BEQ      |L32.2498|
000962  9931              LDR      r1,[sp,#0xc4]         ;4409
000964  f50171d8          ADD      r1,r1,#0x1b0          ;4409
000968  c903              LDM      r1,{r0,r1}            ;4409
00096a  2200              MOVS     r2,#0                 ;4409
00096c  4be3              LDR      r3,|L32.3324|
00096e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4409
000972  f7fffffe          BL       __aeabi_cdcmpeq
000976  d124              BNE      |L32.2498|
000978  f04f0100          MOV      r1,#0                 ;4409
00097c  48dc              LDR      r0,|L32.3312|
00097e  f8c0114c          STR      r1,[r0,#0x14c]        ;4409
000982  f8d0214c          LDR      r2,[r0,#0x14c]        ;4409
000986  f8d0014c          LDR      r0,[r0,#0x14c]        ;4409
00098a  f1000001          ADD      r0,r0,#1              ;4409
00098e  49d8              LDR      r1,|L32.3312|
000990  f8c1014c          STR      r0,[r1,#0x14c]        ;4409
000994  eb020082          ADD      r0,r2,r2,LSL #2       ;4409
000998  49d7              LDR      r1,|L32.3320|
00099a  eb011000          ADD      r0,r1,r0,LSL #4       ;4409
00099e  49d5              LDR      r1,|L32.3316|
0009a0  9014              STR      r0,[sp,#0x50]         ;4409
0009a2  f7fffffe          BL       strcpy
0009a6  f04f0100          MOV      r1,#0                 ;4409
0009aa  48d1              LDR      r0,|L32.3312|
0009ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4409
0009b0  eb000080          ADD      r0,r0,r0,LSL #2       ;4409
0009b4  4ad0              LDR      r2,|L32.3320|
0009b6  eb021000          ADD      r0,r2,r0,LSL #4       ;4409
0009ba  7001              STRB     r1,[r0,#0]            ;4409
0009bc  f04f004a          MOV      r0,#0x4a              ;4409
                  |L32.2496|
0009c0  e42b              B        |L32.538|
                  |L32.2498|
0009c2  9931              LDR      r1,[sp,#0xc4]         ;4411
0009c4  f50171d8          ADD      r1,r1,#0x1b0          ;4411
0009c8  c903              LDM      r1,{r0,r1}            ;4411
0009ca  2200              MOVS     r2,#0                 ;4411
0009cc  4bcb              LDR      r3,|L32.3324|
0009ce  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4411
0009d2  f7fffffe          BL       __aeabi_cdcmpeq
0009d6  d104              BNE      |L32.2530|
0009d8  9932              LDR      r1,[sp,#0xc8]         ;4412
0009da  f5017178          ADD      r1,r1,#0x3e0          ;4412
0009de  c903              LDM      r1,{r0,r1}            ;4412
0009e0  e003              B        |L32.2538|
                  |L32.2530|
0009e2  9931              LDR      r1,[sp,#0xc4]         ;4412
0009e4  f50171d8          ADD      r1,r1,#0x1b0          ;4412
0009e8  c903              LDM      r1,{r0,r1}            ;4412
                  |L32.2538|
0009ea  9a31              LDR      r2,[sp,#0xc4]         ;4412
0009ec  f50272d8          ADD      r2,r2,#0x1b0          ;4412
0009f0  c203              STM      r2!,{r0,r1}           ;4412
0009f2  9831              LDR      r0,[sp,#0xc4]         ;4413
0009f4  f8d00178          LDR      r0,[r0,#0x178]        ;4413
0009f8  9017              STR      r0,[sp,#0x5c]         ;4413
0009fa  e07f              B        |L32.2812|
                  |L32.2556|
0009fc  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4413
000a00  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4413
000a04  f7fffffe          BL       __aeabi_dadd
000a08  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4413
000a0c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4413
000a10  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4413
000a14  f7fffffe          BL       __aeabi_dadd
000a18  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4413
000a1c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4413
000a20  e9cd0102          STRD     r0,r1,[sp,#8]         ;4413
000a24  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4413
000a28  e9cd0100          STRD     r0,r1,[sp,#0]         ;4413
000a2c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4413
000a30  981b              LDR      r0,[sp,#0x6c]         ;4413
000a32  f7fffffe          BL       cycle_traverse
000a36  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4413
000a3a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4413
000a3e  f7fffffe          BL       __aeabi_cdcmpeq
000a42  d00c              BEQ      |L32.2654|
000a44  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4413
000a48  e9cd0102          STRD     r0,r1,[sp,#8]         ;4413
000a4c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4413
000a50  e9cd0100          STRD     r0,r1,[sp,#0]         ;4413
000a54  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4413
000a58  981b              LDR      r0,[sp,#0x6c]         ;4413
000a5a  f7fffffe          BL       cycle_traverse
                  |L32.2654|
000a5e  9832              LDR      r0,[sp,#0xc8]         ;4413
000a60  f5004030          ADD      r0,r0,#0xb000         ;4413
000a64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4413
000a68  9008              STR      r0,[sp,#0x20]         ;4413
000a6a  9831              LDR      r0,[sp,#0xc4]         ;4413
000a6c  f50070d8          ADD      r0,r0,#0x1b0          ;4413
000a70  c803              LDM      r0,{r0,r1}            ;4413
000a72  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4413
000a76  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4413
000a7a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4413
000a7e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4413
000a82  e9cd0102          STRD     r0,r1,[sp,#8]         ;4413
000a86  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4413
000a8a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4413
000a8e  2002              MOVS     r0,#2                 ;4413
000a90  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4413
000a94  f7fffffe          BL       convert_cycle_g86
000a98  9015              STR      r0,[sp,#0x54]         ;4413
000a9a  b338              CBZ      r0,|L32.2796|
000a9c  4894              LDR      r0,|L32.3312|
000a9e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4413
000aa2  2831              CMP      r0,#0x31              ;4413
000aa4  da20              BGE      |L32.2792|
000aa6  4892              LDR      r0,|L32.3312|
000aa8  f8d0214c          LDR      r2,[r0,#0x14c]        ;4413
000aac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4413
000ab0  1c40              ADDS     r0,r0,#1              ;4413
000ab2  498f              LDR      r1,|L32.3312|
000ab4  e000              B        |L32.2744|
                  |L32.2742|
000ab6  e28a              B        |L32.4046|
                  |L32.2744|
000ab8  f8c1014c          STR      r0,[r1,#0x14c]        ;4413
000abc  eb020082          ADD      r0,r2,r2,LSL #2       ;4413
000ac0  498d              LDR      r1,|L32.3320|
000ac2  eb011000          ADD      r0,r1,r0,LSL #4       ;4413
000ac6  498b              LDR      r1,|L32.3316|
000ac8  9014              STR      r0,[sp,#0x50]         ;4413
000aca  f7fffffe          BL       strcpy
000ace  f04f0100          MOV      r1,#0                 ;4413
000ad2  4887              LDR      r0,|L32.3312|
000ad4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4413
000ad8  eb000080          ADD      r0,r0,r0,LSL #2       ;4413
000adc  4a86              LDR      r2,|L32.3320|
000ade  eb021000          ADD      r0,r2,r0,LSL #4       ;4413
000ae2  7001              STRB     r1,[r0,#0]            ;4413
000ae4  9815              LDR      r0,[sp,#0x54]         ;4413
                  |L32.2790|
000ae6  e45c              B        |L32.930|
                  |L32.2792|
000ae8  9815              LDR      r0,[sp,#0x54]         ;4413
000aea  e45a              B        |L32.930|
                  |L32.2796|
000aec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4413
000af0  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4413
000af4  9817              LDR      r0,[sp,#0x5c]         ;4413
000af6  f1a00001          SUB      r0,r0,#1              ;4413
000afa  9017              STR      r0,[sp,#0x5c]         ;4413
                  |L32.2812|
000afc  9817              LDR      r0,[sp,#0x5c]         ;4413
000afe  2800              CMP      r0,#0                 ;4413
000b00  f73faf7c          BGT      |L32.2556|
000b04  9831              LDR      r0,[sp,#0xc4]         ;4415
000b06  f50070d8          ADD      r0,r0,#0x1b0          ;4415
000b0a  c806              LDM      r0!,{r1,r2}           ;4415
000b0c  9832              LDR      r0,[sp,#0xc8]         ;4415
000b0e  f5007078          ADD      r0,r0,#0x3e0          ;4415
000b12  c006              STM      r0!,{r1,r2}           ;4415
                  |L32.2836|
000b14  e360              B        |L32.4568|
                  |L32.2838|
000b16  9832              LDR      r0,[sp,#0xc8]         ;4418
000b18  f8d01628          LDR      r1,[r0,#0x628]        ;4418
000b1c  f5a17040          SUB      r0,r1,#0x300          ;4418
000b20  3866              SUBS     r0,r0,#0x66           ;4418
000b22  d07d              BEQ      |L32.3104|
000b24  9831              LDR      r0,[sp,#0xc4]         ;4420
000b26  f8d0014c          LDR      r0,[r0,#0x14c]        ;4420
000b2a  bb30              CBNZ     r0,|L32.2938|
000b2c  f04f0100          MOV      r1,#0                 ;4420
000b30  486f              LDR      r0,|L32.3312|
000b32  f8c0114c          STR      r1,[r0,#0x14c]        ;4420
000b36  f8d0214c          LDR      r2,[r0,#0x14c]        ;4420
000b3a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4420
000b3e  f1000001          ADD      r0,r0,#1              ;4420
000b42  496b              LDR      r1,|L32.3312|
000b44  f8c1014c          STR      r0,[r1,#0x14c]        ;4420
000b48  eb020082          ADD      r0,r2,r2,LSL #2       ;4420
000b4c  496a              LDR      r1,|L32.3320|
000b4e  eb011000          ADD      r0,r1,r0,LSL #4       ;4420
000b52  4968              LDR      r1,|L32.3316|
000b54  9014              STR      r0,[sp,#0x50]         ;4420
000b56  f7fffffe          BL       strcpy
000b5a  f04f0100          MOV      r1,#0                 ;4420
000b5e  4864              LDR      r0,|L32.3312|
000b60  f8d0014c          LDR      r0,[r0,#0x14c]        ;4420
000b64  eb000080          ADD      r0,r0,r0,LSL #2       ;4420
000b68  4a63              LDR      r2,|L32.3320|
000b6a  eb021000          ADD      r0,r2,r0,LSL #4       ;4420
000b6e  7001              STRB     r1,[r0,#0]            ;4420
000b70  f04f0057          MOV      r0,#0x57              ;4420
000b74  e415              B        |L32.930|
                  |L32.2934|
000b76  e301              B        |L32.4476|
                  |L32.2936|
000b78  e14e              B        |L32.3608|
                  |L32.2938|
000b7a  9831              LDR      r0,[sp,#0xc4]         ;4421
000b7c  f8d00158          LDR      r0,[r0,#0x158]        ;4421
000b80  bb20              CBNZ     r0,|L32.3020|
000b82  f04f0100          MOV      r1,#0                 ;4421
000b86  485a              LDR      r0,|L32.3312|
000b88  f8c0114c          STR      r1,[r0,#0x14c]        ;4421
000b8c  f8d0214c          LDR      r2,[r0,#0x14c]        ;4421
000b90  f8d0014c          LDR      r0,[r0,#0x14c]        ;4421
000b94  f1000001          ADD      r0,r0,#1              ;4421
000b98  4955              LDR      r1,|L32.3312|
000b9a  f8c1014c          STR      r0,[r1,#0x14c]        ;4421
000b9e  eb020082          ADD      r0,r2,r2,LSL #2       ;4421
000ba2  4955              LDR      r1,|L32.3320|
000ba4  eb011000          ADD      r0,r1,r0,LSL #4       ;4421
000ba8  4952              LDR      r1,|L32.3316|
000baa  9014              STR      r0,[sp,#0x50]         ;4421
000bac  f7fffffe          BL       strcpy
000bb0  f04f0100          MOV      r1,#0                 ;4421
000bb4  484e              LDR      r0,|L32.3312|
000bb6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4421
000bba  eb000080          ADD      r0,r0,r0,LSL #2       ;4421
000bbe  4a4e              LDR      r2,|L32.3320|
000bc0  eb021000          ADD      r0,r2,r0,LSL #4       ;4421
000bc4  7001              STRB     r1,[r0,#0]            ;4421
000bc6  f04f005a          MOV      r0,#0x5a              ;4421
000bca  e437              B        |L32.1084|
                  |L32.3020|
000bcc  9831              LDR      r0,[sp,#0xc4]         ;4422
000bce  f8d00168          LDR      r0,[r0,#0x168]        ;4422
000bd2  bb20              CBNZ     r0,|L32.3102|
000bd4  f04f0100          MOV      r1,#0                 ;4422
000bd8  4845              LDR      r0,|L32.3312|
000bda  f8c0114c          STR      r1,[r0,#0x14c]        ;4422
000bde  f8d0214c          LDR      r2,[r0,#0x14c]        ;4422
000be2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4422
000be6  f1000001          ADD      r0,r0,#1              ;4422
000bea  4941              LDR      r1,|L32.3312|
000bec  f8c1014c          STR      r0,[r1,#0x14c]        ;4422
000bf0  eb020082          ADD      r0,r2,r2,LSL #2       ;4422
000bf4  4940              LDR      r1,|L32.3320|
000bf6  eb011000          ADD      r0,r1,r0,LSL #4       ;4422
000bfa  493e              LDR      r1,|L32.3316|
000bfc  9014              STR      r0,[sp,#0x50]         ;4422
000bfe  f7fffffe          BL       strcpy
000c02  f04f0100          MOV      r1,#0                 ;4422
000c06  483a              LDR      r0,|L32.3312|
000c08  f8d0014c          LDR      r0,[r0,#0x14c]        ;4422
000c0c  eb000080          ADD      r0,r0,r0,LSL #2       ;4422
000c10  4a39              LDR      r2,|L32.3320|
000c12  eb021000          ADD      r0,r2,r0,LSL #4       ;4422
000c16  7001              STRB     r1,[r0,#0]            ;4422
000c18  f04f005d          MOV      r0,#0x5d              ;4422
000c1c  e40e              B        |L32.1084|
                  |L32.3102|
000c1e  e7ff              B        |L32.3104|
                  |L32.3104|
000c20  9831              LDR      r0,[sp,#0xc4]         ;4424
000c22  f8d0014c          LDR      r0,[r0,#0x14c]        ;4424
000c26  2801              CMP      r0,#1                 ;4424
000c28  d104              BNE      |L32.3124|
000c2a  9931              LDR      r1,[sp,#0xc4]         ;4424
000c2c  f50171a8          ADD      r1,r1,#0x150          ;4424
000c30  c903              LDM      r1,{r0,r1}            ;4424
000c32  e003              B        |L32.3132|
                  |L32.3124|
000c34  9932              LDR      r1,[sp,#0xc8]         ;4424
000c36  f5017170          ADD      r1,r1,#0x3c0          ;4424
000c3a  c903              LDM      r1,{r0,r1}            ;4424
                  |L32.3132|
000c3c  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4424
000c40  9831              LDR      r0,[sp,#0xc4]         ;4425
000c42  f8d00158          LDR      r0,[r0,#0x158]        ;4425
000c46  2801              CMP      r0,#1                 ;4425
000c48  d104              BNE      |L32.3156|
000c4a  9931              LDR      r1,[sp,#0xc4]         ;4425
000c4c  f50171b0          ADD      r1,r1,#0x160          ;4425
000c50  c903              LDM      r1,{r0,r1}            ;4425
000c52  e003              B        |L32.3164|
                  |L32.3156|
000c54  9932              LDR      r1,[sp,#0xc8]         ;4425
000c56  f5017172          ADD      r1,r1,#0x3c8          ;4425
000c5a  c903              LDM      r1,{r0,r1}            ;4425
                  |L32.3164|
000c5c  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4425
000c60  9831              LDR      r0,[sp,#0xc4]         ;4426
000c62  f8d00168          LDR      r0,[r0,#0x168]        ;4426
000c66  2801              CMP      r0,#1                 ;4426
000c68  d104              BNE      |L32.3188|
000c6a  9931              LDR      r1,[sp,#0xc4]         ;4426
000c6c  f50171b8          ADD      r1,r1,#0x170          ;4426
000c70  c903              LDM      r1,{r0,r1}            ;4426
000c72  e003              B        |L32.3196|
                  |L32.3188|
000c74  9932              LDR      r1,[sp,#0xc8]         ;4426
000c76  f5017174          ADD      r1,r1,#0x3d0          ;4426
000c7a  c903              LDM      r1,{r0,r1}            ;4426
                  |L32.3196|
000c7c  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4426
000c80  9a32              LDR      r2,[sp,#0xc8]         ;4427
000c82  e9dd1022          LDRD     r1,r0,[sp,#0x88]      ;4427
000c86  f8c213c0          STR      r1,[r2,#0x3c0]        ;4427
000c8a  f8c203c4          STR      r0,[r2,#0x3c4]        ;4427
000c8e  9a32              LDR      r2,[sp,#0xc8]         ;4428
000c90  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4428
000c94  f5027272          ADD      r2,r2,#0x3c8          ;4428
000c98  c203              STM      r2!,{r0,r1}           ;4428
000c9a  9a32              LDR      r2,[sp,#0xc8]         ;4429
000c9c  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4429
000ca0  f5027274          ADD      r2,r2,#0x3d0          ;4429
000ca4  c203              STM      r2!,{r0,r1}           ;4429
000ca6  9832              LDR      r0,[sp,#0xc8]         ;4430
000ca8  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4430
000cac  2801              CMP      r0,#1                 ;4430
000cae  d107              BNE      |L32.3264|
000cb0  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;4432
000cb4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4432
000cb8  f7fffffe          BL       __aeabi_dadd
000cbc  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4432
                  |L32.3264|
000cc0  9831              LDR      r0,[sp,#0xc4]         ;4434
000cc2  f8d00178          LDR      r0,[r0,#0x178]        ;4434
000cc6  9017              STR      r0,[sp,#0x5c]         ;4434
000cc8  e0a1              B        |L32.3598|
                  |L32.3274|
000cca  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4434
000cce  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4434
000cd2  f7fffffe          BL       __aeabi_dadd
000cd6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4434
000cda  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4434
000cde  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4434
000ce2  f7fffffe          BL       __aeabi_dadd
000ce6  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4434
000cea  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4434
000cee  e007              B        |L32.3328|
                  |L32.3312|
                          DCD      _setup+0xc000
                  |L32.3316|
                          DCD      |symbol_number.469|
                  |L32.3320|
                          DCD      _setup+0xb1ac
                  |L32.3324|
                          DCD      0xbff00000
                  |L32.3328|
000d00  e9cd0102          STRD     r0,r1,[sp,#8]         ;4434
000d04  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4434
000d08  e9cd0100          STRD     r0,r1,[sp,#0]         ;4434
000d0c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4434
000d10  981b              LDR      r0,[sp,#0x6c]         ;4434
000d12  f7fffffe          BL       cycle_traverse
000d16  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4434
000d1a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4434
000d1e  f7fffffe          BL       __aeabi_cdcmpeq
000d22  d00c              BEQ      |L32.3390|
000d24  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4434
000d28  e9cd0102          STRD     r0,r1,[sp,#8]         ;4434
000d2c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4434
000d30  e9cd0100          STRD     r0,r1,[sp,#0]         ;4434
000d34  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4434
000d38  981b              LDR      r0,[sp,#0x6c]         ;4434
000d3a  f7fffffe          BL       cycle_traverse
                  |L32.3390|
000d3e  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;4434
000d42  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4434
000d46  f7fffffe          BL       __aeabi_dadd
000d4a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4434
000d4e  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;4434
000d52  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4434
000d56  f7fffffe          BL       __aeabi_dadd
000d5a  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4434
000d5e  9832              LDR      r0,[sp,#0xc8]         ;4434
000d60  f5004030          ADD      r0,r0,#0xb000         ;4434
000d64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4434
000d68  900e              STR      r0,[sp,#0x38]         ;4434
000d6a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4434
000d6e  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;4434
000d72  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;4434
000d76  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;4434
000d7a  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4434
000d7e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4434
000d82  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4434
000d86  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4434
000d8a  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;4434
000d8e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4434
000d92  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4434
000d96  e9cd0102          STRD     r0,r1,[sp,#8]         ;4434
000d9a  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;4434
000d9e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4434
000da2  2002              MOVS     r0,#2                 ;4434
000da4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4434
000da8  f7fffffe          BL       convert_cycle_g87
000dac  9015              STR      r0,[sp,#0x54]         ;4434
000dae  b330              CBZ      r0,|L32.3582|
000db0  48ff              LDR      r0,|L32.4528|
000db2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4434
000db6  2831              CMP      r0,#0x31              ;4434
000db8  da1f              BGE      |L32.3578|
000dba  48fd              LDR      r0,|L32.4528|
000dbc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4434
000dc0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4434
000dc4  1c40              ADDS     r0,r0,#1              ;4434
000dc6  49fa              LDR      r1,|L32.4528|
000dc8  f8c1014c          STR      r0,[r1,#0x14c]        ;4434
000dcc  eb020082          ADD      r0,r2,r2,LSL #2       ;4434
000dd0  f6a16154          SUB      r1,r1,#0xe54          ;4434
000dd4  eb011000          ADD      r0,r1,r0,LSL #4       ;4434
000dd8  49f6              LDR      r1,|L32.4532|
000dda  9014              STR      r0,[sp,#0x50]         ;4434
000ddc  f7fffffe          BL       strcpy
000de0  f04f0100          MOV      r1,#0                 ;4434
000de4  48f2              LDR      r0,|L32.4528|
000de6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4434
000dea  eb000080          ADD      r0,r0,r0,LSL #2       ;4434
000dee  4af2              LDR      r2,|L32.4536|
000df0  eb021000          ADD      r0,r2,r0,LSL #4       ;4434
000df4  7001              STRB     r1,[r0,#0]            ;4434
000df6  9815              LDR      r0,[sp,#0x54]         ;4434
000df8  e487              B        |L32.1802|
                  |L32.3578|
000dfa  9815              LDR      r0,[sp,#0x54]         ;4434
000dfc  e485              B        |L32.1802|
                  |L32.3582|
000dfe  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4434
000e02  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4434
000e06  9817              LDR      r0,[sp,#0x5c]         ;4434
000e08  f1a00001          SUB      r0,r0,#1              ;4434
000e0c  9017              STR      r0,[sp,#0x5c]         ;4434
                  |L32.3598|
000e0e  9817              LDR      r0,[sp,#0x5c]         ;4434
000e10  2800              CMP      r0,#0                 ;4434
000e12  f73faf5a          BGT      |L32.3274|
000e16  e1df              B        |L32.4568|
                  |L32.3608|
000e18  9832              LDR      r0,[sp,#0xc8]         ;4438
000e1a  f8d00628          LDR      r0,[r0,#0x628]        ;4438
000e1e  f5b07f5c          CMP      r0,#0x370             ;4438
000e22  d02f              BEQ      |L32.3716|
000e24  9931              LDR      r1,[sp,#0xc4]         ;4438
000e26  f50171d8          ADD      r1,r1,#0x1b0          ;4438
000e2a  c903              LDM      r1,{r0,r1}            ;4438
000e2c  2200              MOVS     r2,#0                 ;4438
000e2e  4be3              LDR      r3,|L32.4540|
000e30  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4438
000e34  f7fffffe          BL       __aeabi_cdcmpeq
000e38  d124              BNE      |L32.3716|
000e3a  f04f0100          MOV      r1,#0                 ;4438
000e3e  48dc              LDR      r0,|L32.4528|
000e40  f8c0114c          STR      r1,[r0,#0x14c]        ;4438
000e44  f8d0214c          LDR      r2,[r0,#0x14c]        ;4438
000e48  f8d0014c          LDR      r0,[r0,#0x14c]        ;4438
000e4c  f1000001          ADD      r0,r0,#1              ;4438
000e50  49d7              LDR      r1,|L32.4528|
000e52  f8c1014c          STR      r0,[r1,#0x14c]        ;4438
000e56  eb020082          ADD      r0,r2,r2,LSL #2       ;4438
000e5a  49d7              LDR      r1,|L32.4536|
000e5c  eb011000          ADD      r0,r1,r0,LSL #4       ;4438
000e60  49d4              LDR      r1,|L32.4532|
000e62  9014              STR      r0,[sp,#0x50]         ;4438
000e64  f7fffffe          BL       strcpy
000e68  f04f0100          MOV      r1,#0                 ;4438
000e6c  48d0              LDR      r0,|L32.4528|
000e6e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4438
000e72  eb000080          ADD      r0,r0,r0,LSL #2       ;4438
000e76  4ad0              LDR      r2,|L32.4536|
000e78  eb021000          ADD      r0,r2,r0,LSL #4       ;4438
000e7c  7001              STRB     r1,[r0,#0]            ;4438
000e7e  f04f004b          MOV      r0,#0x4b              ;4438
000e82  e442              B        |L32.1802|
                  |L32.3716|
000e84  9931              LDR      r1,[sp,#0xc4]         ;4440
000e86  f50171d8          ADD      r1,r1,#0x1b0          ;4440
000e8a  c903              LDM      r1,{r0,r1}            ;4440
000e8c  2200              MOVS     r2,#0                 ;4440
000e8e  4bcb              LDR      r3,|L32.4540|
000e90  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4440
000e94  f7fffffe          BL       __aeabi_cdcmpeq
000e98  d104              BNE      |L32.3748|
000e9a  9932              LDR      r1,[sp,#0xc8]         ;4441
000e9c  f5017178          ADD      r1,r1,#0x3e0          ;4441
000ea0  c903              LDM      r1,{r0,r1}            ;4441
000ea2  e003              B        |L32.3756|
                  |L32.3748|
000ea4  9931              LDR      r1,[sp,#0xc4]         ;4441
000ea6  f50171d8          ADD      r1,r1,#0x1b0          ;4441
000eaa  c903              LDM      r1,{r0,r1}            ;4441
                  |L32.3756|
000eac  9a31              LDR      r2,[sp,#0xc4]         ;4441
000eae  f50272d8          ADD      r2,r2,#0x1b0          ;4441
000eb2  c203              STM      r2!,{r0,r1}           ;4441
000eb4  9831              LDR      r0,[sp,#0xc4]         ;4442
000eb6  f8d00178          LDR      r0,[r0,#0x178]        ;4442
000eba  9017              STR      r0,[sp,#0x5c]         ;4442
000ebc  e079              B        |L32.4018|
                  |L32.3774|
000ebe  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4442
000ec2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4442
000ec6  f7fffffe          BL       __aeabi_dadd
000eca  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4442
000ece  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4442
000ed2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4442
000ed6  f7fffffe          BL       __aeabi_dadd
000eda  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4442
000ede  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4442
000ee2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4442
000ee6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4442
000eea  e9cd0100          STRD     r0,r1,[sp,#0]         ;4442
000eee  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4442
000ef2  981b              LDR      r0,[sp,#0x6c]         ;4442
000ef4  f7fffffe          BL       cycle_traverse
000ef8  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4442
000efc  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4442
000f00  f7fffffe          BL       __aeabi_cdcmpeq
000f04  d00c              BEQ      |L32.3872|
000f06  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4442
000f0a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4442
000f0e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4442
000f12  e9cd0100          STRD     r0,r1,[sp,#0]         ;4442
000f16  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4442
000f1a  981b              LDR      r0,[sp,#0x6c]         ;4442
000f1c  f7fffffe          BL       cycle_traverse
                  |L32.3872|
000f20  9832              LDR      r0,[sp,#0xc8]         ;4442
000f22  f5004030          ADD      r0,r0,#0xb000         ;4442
000f26  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4442
000f2a  9006              STR      r0,[sp,#0x18]         ;4442
000f2c  9831              LDR      r0,[sp,#0xc4]         ;4442
000f2e  f50070d8          ADD      r0,r0,#0x1b0          ;4442
000f32  c803              LDM      r0,{r0,r1}            ;4442
000f34  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4442
000f38  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4442
000f3c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4442
000f40  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4442
000f44  e9cd0100          STRD     r0,r1,[sp,#0]         ;4442
000f48  2002              MOVS     r0,#2                 ;4442
000f4a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4442
000f4e  f7fffffe          BL       convert_cycle_g88
000f52  9015              STR      r0,[sp,#0x54]         ;4442
000f54  b328              CBZ      r0,|L32.4002|
000f56  4896              LDR      r0,|L32.4528|
000f58  f8d0014c          LDR      r0,[r0,#0x14c]        ;4442
000f5c  2831              CMP      r0,#0x31              ;4442
000f5e  da1e              BGE      |L32.3998|
000f60  4893              LDR      r0,|L32.4528|
000f62  f8d0214c          LDR      r2,[r0,#0x14c]        ;4442
000f66  f8d0014c          LDR      r0,[r0,#0x14c]        ;4442
000f6a  1c40              ADDS     r0,r0,#1              ;4442
000f6c  4990              LDR      r1,|L32.4528|
000f6e  f8c1014c          STR      r0,[r1,#0x14c]        ;4442
000f72  eb020082          ADD      r0,r2,r2,LSL #2       ;4442
000f76  4990              LDR      r1,|L32.4536|
000f78  eb011000          ADD      r0,r1,r0,LSL #4       ;4442
000f7c  498d              LDR      r1,|L32.4532|
000f7e  9014              STR      r0,[sp,#0x50]         ;4442
000f80  f7fffffe          BL       strcpy
000f84  f04f0100          MOV      r1,#0                 ;4442
000f88  4889              LDR      r0,|L32.4528|
000f8a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4442
000f8e  eb000080          ADD      r0,r0,r0,LSL #2       ;4442
000f92  4a89              LDR      r2,|L32.4536|
000f94  eb021000          ADD      r0,r2,r0,LSL #4       ;4442
000f98  7001              STRB     r1,[r0,#0]            ;4442
000f9a  9815              LDR      r0,[sp,#0x54]         ;4442
000f9c  e446              B        |L32.2092|
                  |L32.3998|
000f9e  9815              LDR      r0,[sp,#0x54]         ;4442
000fa0  e444              B        |L32.2092|
                  |L32.4002|
000fa2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4442
000fa6  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4442
000faa  9817              LDR      r0,[sp,#0x5c]         ;4442
000fac  f1a00001          SUB      r0,r0,#1              ;4442
000fb0  9017              STR      r0,[sp,#0x5c]         ;4442
                  |L32.4018|
000fb2  9817              LDR      r0,[sp,#0x5c]         ;4442
000fb4  2800              CMP      r0,#0                 ;4442
000fb6  dc82              BGT      |L32.3774|
000fb8  9831              LDR      r0,[sp,#0xc4]         ;4444
000fba  f8d021b0          LDR      r2,[r0,#0x1b0]        ;4444
000fbe  f8d011b4          LDR      r1,[r0,#0x1b4]        ;4444
000fc2  9832              LDR      r0,[sp,#0xc8]         ;4444
000fc4  f8c023e0          STR      r2,[r0,#0x3e0]        ;4444
000fc8  f8c013e4          STR      r1,[r0,#0x3e4]        ;4444
000fcc  e104              B        |L32.4568|
                  |L32.4046|
000fce  9832              LDR      r0,[sp,#0xc8]         ;4447
000fd0  f8d00628          LDR      r0,[r0,#0x628]        ;4447
000fd4  f5a07140          SUB      r1,r0,#0x300          ;4447
000fd8  397a              SUBS     r1,r1,#0x7a           ;4447
000fda  d02f              BEQ      |L32.4156|
000fdc  9931              LDR      r1,[sp,#0xc4]         ;4447
000fde  f50171d8          ADD      r1,r1,#0x1b0          ;4447
000fe2  c903              LDM      r1,{r0,r1}            ;4447
000fe4  2200              MOVS     r2,#0                 ;4447
000fe6  4b75              LDR      r3,|L32.4540|
000fe8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4447
000fec  f7fffffe          BL       __aeabi_cdcmpeq
000ff0  d124              BNE      |L32.4156|
000ff2  f04f0100          MOV      r1,#0                 ;4447
000ff6  486e              LDR      r0,|L32.4528|
000ff8  f8c0114c          STR      r1,[r0,#0x14c]        ;4447
000ffc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4447
001000  f8d0014c          LDR      r0,[r0,#0x14c]        ;4447
001004  f1000001          ADD      r0,r0,#1              ;4447
001008  4969              LDR      r1,|L32.4528|
00100a  f8c1014c          STR      r0,[r1,#0x14c]        ;4447
00100e  eb020082          ADD      r0,r2,r2,LSL #2       ;4447
001012  4969              LDR      r1,|L32.4536|
001014  eb011000          ADD      r0,r1,r0,LSL #4       ;4447
001018  4966              LDR      r1,|L32.4532|
00101a  9014              STR      r0,[sp,#0x50]         ;4447
00101c  f7fffffe          BL       strcpy
001020  f04f0100          MOV      r1,#0                 ;4447
001024  4862              LDR      r0,|L32.4528|
001026  f8d0014c          LDR      r0,[r0,#0x14c]        ;4447
00102a  eb000080          ADD      r0,r0,r0,LSL #2       ;4447
00102e  4a62              LDR      r2,|L32.4536|
001030  eb021000          ADD      r0,r2,r0,LSL #4       ;4447
001034  7001              STRB     r1,[r0,#0]            ;4447
001036  f04f004c          MOV      r0,#0x4c              ;4447
00103a  e47d              B        |L32.2360|
                  |L32.4156|
00103c  9931              LDR      r1,[sp,#0xc4]         ;4449
00103e  f50171d8          ADD      r1,r1,#0x1b0          ;4449
001042  c903              LDM      r1,{r0,r1}            ;4449
001044  2200              MOVS     r2,#0                 ;4449
001046  4b5d              LDR      r3,|L32.4540|
001048  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4449
00104c  f7fffffe          BL       __aeabi_cdcmpeq
001050  d104              BNE      |L32.4188|
001052  9932              LDR      r1,[sp,#0xc8]         ;4450
001054  f5017178          ADD      r1,r1,#0x3e0          ;4450
001058  c903              LDM      r1,{r0,r1}            ;4450
00105a  e003              B        |L32.4196|
                  |L32.4188|
00105c  9931              LDR      r1,[sp,#0xc4]         ;4450
00105e  f50171d8          ADD      r1,r1,#0x1b0          ;4450
001062  c903              LDM      r1,{r0,r1}            ;4450
                  |L32.4196|
001064  9a31              LDR      r2,[sp,#0xc4]         ;4450
001066  f50272d8          ADD      r2,r2,#0x1b0          ;4450
00106a  c203              STM      r2!,{r0,r1}           ;4450
00106c  9831              LDR      r0,[sp,#0xc4]         ;4451
00106e  f8d00178          LDR      r0,[r0,#0x178]        ;4451
001072  9017              STR      r0,[sp,#0x5c]         ;4451
001074  e076              B        |L32.4452|
                  |L32.4214|
001076  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4451
00107a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4451
00107e  f7fffffe          BL       __aeabi_dadd
001082  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4451
001086  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4451
00108a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4451
00108e  f7fffffe          BL       __aeabi_dadd
001092  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4451
001096  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4451
00109a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4451
00109e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4451
0010a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4451
0010a6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4451
0010aa  981b              LDR      r0,[sp,#0x6c]         ;4451
0010ac  f7fffffe          BL       cycle_traverse
0010b0  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4451
0010b4  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4451
0010b8  f7fffffe          BL       __aeabi_cdcmpeq
0010bc  d00c              BEQ      |L32.4312|
0010be  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4451
0010c2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4451
0010c6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4451
0010ca  e9cd0100          STRD     r0,r1,[sp,#0]         ;4451
0010ce  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4451
0010d2  981b              LDR      r0,[sp,#0x6c]         ;4451
0010d4  f7fffffe          BL       cycle_traverse
                  |L32.4312|
0010d8  9931              LDR      r1,[sp,#0xc4]         ;4451
0010da  f50171d8          ADD      r1,r1,#0x1b0          ;4451
0010de  c903              LDM      r1,{r0,r1}            ;4451
0010e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4451
0010e4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4451
0010e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4451
0010ec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4451
0010f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4451
0010f4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4451
0010f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4451
0010fc  2002              MOVS     r0,#2                 ;4451
0010fe  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4451
001102  f7fffffe          BL       convert_cycle_g89
001106  9015              STR      r0,[sp,#0x54]         ;4451
001108  b320              CBZ      r0,|L32.4436|
00110a  4829              LDR      r0,|L32.4528|
00110c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4451
001110  2831              CMP      r0,#0x31              ;4451
001112  da1d              BGE      |L32.4432|
001114  4826              LDR      r0,|L32.4528|
001116  f8d0214c          LDR      r2,[r0,#0x14c]        ;4451
00111a  f8d0114c          LDR      r1,[r0,#0x14c]        ;4451
00111e  1c49              ADDS     r1,r1,#1              ;4451
001120  f8c0114c          STR      r1,[r0,#0x14c]        ;4451
001124  eb020082          ADD      r0,r2,r2,LSL #2       ;4451
001128  4923              LDR      r1,|L32.4536|
00112a  eb011000          ADD      r0,r1,r0,LSL #4       ;4451
00112e  4921              LDR      r1,|L32.4532|
001130  9014              STR      r0,[sp,#0x50]         ;4451
001132  f7fffffe          BL       strcpy
001136  f04f0100          MOV      r1,#0                 ;4451
00113a  481d              LDR      r0,|L32.4528|
00113c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4451
001140  eb000080          ADD      r0,r0,r0,LSL #2       ;4451
001144  4a1c              LDR      r2,|L32.4536|
001146  eb021000          ADD      r0,r2,r0,LSL #4       ;4451
00114a  7001              STRB     r1,[r0,#0]            ;4451
00114c  9815              LDR      r0,[sp,#0x54]         ;4451
00114e  e437              B        |L32.2496|
                  |L32.4432|
001150  9815              LDR      r0,[sp,#0x54]         ;4451
001152  e435              B        |L32.2496|
                  |L32.4436|
001154  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4451
001158  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4451
00115c  9817              LDR      r0,[sp,#0x5c]         ;4451
00115e  f1a00001          SUB      r0,r0,#1              ;4451
001162  9017              STR      r0,[sp,#0x5c]         ;4451
                  |L32.4452|
001164  9817              LDR      r0,[sp,#0x5c]         ;4451
001166  2800              CMP      r0,#0                 ;4451
001168  dc85              BGT      |L32.4214|
00116a  9831              LDR      r0,[sp,#0xc4]         ;4453
00116c  f50070d8          ADD      r0,r0,#0x1b0          ;4453
001170  c806              LDM      r0!,{r1,r2}           ;4453
001172  9832              LDR      r0,[sp,#0xc8]         ;4453
001174  f5007078          ADD      r0,r0,#0x3e0          ;4453
001178  c006              STM      r0!,{r1,r2}           ;4453
00117a  e02d              B        |L32.4568|
                  |L32.4476|
00117c  f04f0100          MOV      r1,#0                 ;4456
001180  480b              LDR      r0,|L32.4528|
001182  f8c0114c          STR      r1,[r0,#0x14c]        ;4456
001186  f8d0214c          LDR      r2,[r0,#0x14c]        ;4456
00118a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4456
00118e  f1000001          ADD      r0,r0,#1              ;4456
001192  4907              LDR      r1,|L32.4528|
001194  f8c1014c          STR      r0,[r1,#0x14c]        ;4456
001198  eb020082          ADD      r0,r2,r2,LSL #2       ;4456
00119c  4906              LDR      r1,|L32.4536|
00119e  eb011000          ADD      r0,r1,r0,LSL #4       ;4456
0011a2  4904              LDR      r1,|L32.4532|
0011a4  9014              STR      r0,[sp,#0x50]         ;4456
0011a6  f7fffffe          BL       strcpy
0011aa  f04f0100          MOV      r1,#0                 ;4456
0011ae  e007              B        |L32.4544|
                  |L32.4528|
                          DCD      _setup+0xc000
                  |L32.4532|
                          DCD      |symbol_number.469|
                  |L32.4536|
                          DCD      _setup+0xb1ac
                  |L32.4540|
                          DCD      0xbff00000
                  |L32.4544|
0011c0  4818              LDR      r0,|L32.4644|
0011c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4456
0011c6  eb000080          ADD      r0,r0,r0,LSL #2       ;4456
0011ca  4a17              LDR      r2,|L32.4648|
0011cc  eb021000          ADD      r0,r2,r0,LSL #4       ;4456
0011d0  7001              STRB     r1,[r0,#0]            ;4456
0011d2  f04f0020          MOV      r0,#0x20              ;4456
0011d6  e486              B        |L32.2790|
                  |L32.4568|
0011d8  bf00              NOP                            ;4382
0011da  9a32              LDR      r2,[sp,#0xc8]         ;4458
0011dc  e9dd102e          LDRD     r1,r0,[sp,#0xb8]      ;4458
0011e0  f8c21398          STR      r1,[r2,#0x398]        ;4458
0011e4  f8c2039c          STR      r0,[r2,#0x39c]        ;4458
0011e8  9a32              LDR      r2,[sp,#0xc8]         ;4459
0011ea  e9dd102a          LDRD     r1,r0,[sp,#0xa8]      ;4459
0011ee  f8c213a0          STR      r1,[r2,#0x3a0]        ;4459
0011f2  f8c203a4          STR      r0,[r2,#0x3a4]        ;4459
0011f6  9a32              LDR      r2,[sp,#0xc8]         ;4460
0011f8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4460
0011fc  f5027264          ADD      r2,r2,#0x390          ;4460
001200  c203              STM      r2!,{r0,r1}           ;4460
001202  9931              LDR      r1,[sp,#0xc4]         ;4461
001204  f50171f0          ADD      r1,r1,#0x1e0          ;4461
001208  c905              LDM      r1!,{r0,r2}           ;4461
00120a  9932              LDR      r1,[sp,#0xc8]         ;4461
00120c  f501716e          ADD      r1,r1,#0x3b8          ;4461
001210  c105              STM      r1!,{r0,r2}           ;4461
001212  9816              LDR      r0,[sp,#0x58]         ;4463
001214  2802              CMP      r0,#2                 ;4463
001216  d002              BEQ      |L32.4638|
001218  9816              LDR      r0,[sp,#0x58]         ;4464
00121a  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L32.4638|
00121e  2000              MOVS     r0,#0                 ;4466
001220  e461              B        |L32.2790|
;;;4468   
                          ENDP

001222  0000              DCW      0x0000
                  |L32.4644|
                          DCD      _setup+0xc000
                  |L32.4648|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_zx||, CODE, READONLY, ALIGN=2

                  convert_cycle_zx PROC
;;;4525   
;;;4526       static int convert_cycle_zx(                  /* ARGUMENTS                                 */
000000  b507              PUSH     {r0-r2,lr}
;;;4527       int motion,                                   /* a g-code between G_81 and G_89, a canned cycle */
;;;4528       block_pointer block,                          /* pointer to a block of RS274 instructions       */
;;;4529       setup_pointer settings)                       /* pointer to machine settings                    */
;;;4530       {
000002  b0b0              SUB      sp,sp,#0xc0
;;;4531           static char name[] SET_TO "convert_cycle_zx";
;;;4532           double aa;
;;;4533           double aa_increment;
;;;4534           double bb;
;;;4535           double bb_increment;
;;;4536           double cc;
;;;4537           double clear_cc;
;;;4538           double i;
;;;4539           double j;
;;;4540           double k;
;;;4541           double old_cc;
;;;4542           CANON_PLANE plane;
;;;4543           double r;
;;;4544           int repeat;
;;;4545           CANON_MOTION_MODE save_mode;
;;;4546           int status;
;;;4547   
;;;4548           plane SET_TO CANON_PLANE_XZ;
000004  f04f0003          MOV      r0,#3
000008  901b              STR      r0,[sp,#0x6c]
;;;4549           if (settings->motion_mode ISNT motion)
00000a  9832              LDR      r0,[sp,#0xc8]
00000c  f8d01628          LDR      r1,[r0,#0x628]
000010  9830              LDR      r0,[sp,#0xc0]
000012  4281              CMP      r1,r0
000014  d02a              BEQ      |L33.108|
;;;4550           {
;;;4551               CHK((block->y_flag IS OFF),
000016  9831              LDR      r0,[sp,#0xc4]
000018  f8d001e8          LDR      r0,[r0,#0x1e8]
00001c  bb30              CBNZ     r0,|L33.108|
00001e  f04f0100          MOV      r1,#0
000022  48ff              LDR      r0,|L33.1056|
000024  f8c0114c          STR      r1,[r0,#0x14c]
000028  f8d0214c          LDR      r2,[r0,#0x14c]
00002c  f8d0014c          LDR      r0,[r0,#0x14c]
000030  f1000001          ADD      r0,r0,#1
000034  49fa              LDR      r1,|L33.1056|
000036  f8c1014c          STR      r0,[r1,#0x14c]
00003a  eb020082          ADD      r0,r2,r2,LSL #2
00003e  f6a16154          SUB      r1,r1,#0xe54
000042  eb011000          ADD      r0,r1,r0,LSL #4
000046  49f7              LDR      r1,|L33.1060|
000048  9014              STR      r0,[sp,#0x50]
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  48f3              LDR      r0,|L33.1056|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4af2              LDR      r2,|L33.1064|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00c2          MOV      r0,#0xc2
                  |L33.104|
;;;4552                   NCE_Y_VALUE_UNSPECIFIED_IN_XZ_PLANE_CANNED_CYCLE);
;;;4553           }
;;;4554           block->y_number SET_TO
;;;4555               block->y_flag IS ON ? block->y_number : settings->cycle_cc;
;;;4556           old_cc SET_TO settings->current_y;
;;;4557   
;;;4558           if (settings->distance_mode IS MODE_ABSOLUTE)
;;;4559           {
;;;4560               aa_increment SET_TO 0.0;
;;;4561               bb_increment SET_TO 0.0;
;;;4562               r SET_TO block->r_number;
;;;4563               cc SET_TO block->y_number;
;;;4564               aa SET_TO block->z_flag IS ON ? block->z_number : settings->current_z;
;;;4565               bb SET_TO block->x_flag IS ON ? block->x_number : settings->current_x;
;;;4566           }
;;;4567           else if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4568           {
;;;4569               aa_increment SET_TO block->z_number;
;;;4570               bb_increment SET_TO block->x_number;
;;;4571               r SET_TO (block->r_number + old_cc);
;;;4572               cc SET_TO (r + block->y_number);      /* [NCMS, page 98] */
;;;4573               aa SET_TO settings->current_z;
;;;4574               bb SET_TO settings->current_x;
;;;4575           }
;;;4576           else
;;;4577               ERM(NCE_BUG_DISTANCE_MODE_NOT_G90_OR_G91);
;;;4578           CHK((r < cc), NCE_R_LESS_THAN_Y_IN_CYCLE_IN_XZ_PLANE);
;;;4579   
;;;4580           if (old_cc < r)
;;;4581           {
;;;4582               STRAIGHT_TRAVERSE(settings->current_x, r, settings->current_z
;;;4583       #ifdef AA
;;;4584                   ,           settings->AA_current
;;;4585       #else
;;;4586       #ifdef ALL_AXES
;;;4587                   , 0
;;;4588       #endif
;;;4589       #endif
;;;4590       #ifdef BB
;;;4591                   ,  settings->BB_current
;;;4592       #else
;;;4593       #ifdef ALL_AXES
;;;4594                   , 0
;;;4595       #endif
;;;4596       #endif
;;;4597       #ifdef CC
;;;4598                   ,  settings->CC_current
;;;4599       #else
;;;4600       #ifdef ALL_AXES
;;;4601                   , 0
;;;4602       #endif
;;;4603       #endif
;;;4604                   );
;;;4605               old_cc SET_TO r;
;;;4606           }
;;;4607           clear_cc SET_TO (settings->retract_mode IS R_PLANE) ? r : old_cc;
;;;4608   
;;;4609           save_mode = GET_EXTERNAL_MOTION_CONTROL_MODE();
;;;4610           if (save_mode ISNT CANON_EXACT_PATH)
;;;4611               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
;;;4612   
;;;4613           switch(motion)
;;;4614           {
;;;4615               case G_81:
;;;4616                   CYCLE_MACRO(convert_cycle_g81(CANON_PLANE_XZ, aa, bb, clear_cc, cc))
;;;4617                       break;
;;;4618               case G_82:
;;;4619                   CHK(((settings->motion_mode ISNT G_82) AND (block->p_number IS -1.0)),
;;;4620                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G82);
;;;4621                   block->p_number SET_TO
;;;4622                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4623                   CYCLE_MACRO(convert_cycle_g82 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4624                       block->p_number))
;;;4625                       settings->cycle_p SET_TO block->p_number;
;;;4626                   break;
;;;4627               case G_83:
;;;4628                   CHK(((settings->motion_mode ISNT G_83) AND (block->q_number IS -1.0)),
;;;4629                       NCE_Q_WORD_MISSING_WITH_G83);
;;;4630                   block->q_number SET_TO
;;;4631                       block->q_number IS -1.0 ? settings->cycle_q : block->q_number;
;;;4632                   CYCLE_MACRO(convert_cycle_g83 (CANON_PLANE_XZ, aa, bb, r, clear_cc, cc,
;;;4633                       block->q_number))
;;;4634                       settings->cycle_q SET_TO block->q_number;
;;;4635                   break;
;;;4636               case G_84:
;;;4637                   CYCLE_MACRO(convert_cycle_g84 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4638                       settings->spindle_turning, settings->speed_feed_mode))
;;;4639                       break;
;;;4640               case G_85:
;;;4641                   CYCLE_MACRO(convert_cycle_g85 (CANON_PLANE_XZ, aa, bb, clear_cc, cc))
;;;4642                       break;
;;;4643               case G_86:
;;;4644                   CHK(((settings->motion_mode ISNT G_86) AND (block->p_number IS -1.0)),
;;;4645                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G86);
;;;4646                   block->p_number SET_TO
;;;4647                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4648                   CYCLE_MACRO(convert_cycle_g86 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4649                       block->p_number, settings->spindle_turning))
;;;4650                       settings->cycle_p SET_TO block->p_number;
;;;4651                   break;
;;;4652               case G_87:
;;;4653                   if (settings->motion_mode ISNT G_87)
;;;4654                   {
;;;4655                       CHK((block->i_flag IS OFF), NCE_I_WORD_MISSING_WITH_G87);
;;;4656                       CHK((block->j_flag IS OFF), NCE_J_WORD_MISSING_WITH_G87);
;;;4657                       CHK((block->k_flag IS OFF), NCE_K_WORD_MISSING_WITH_G87);
;;;4658                   }
;;;4659                   i SET_TO block->i_flag IS ON ? block->i_number : settings->cycle_i;
;;;4660                   j SET_TO block->j_flag IS ON ? block->j_number : settings->cycle_j;
;;;4661                   k SET_TO block->k_flag IS ON ? block->k_number : settings->cycle_k;
;;;4662                   settings->cycle_i SET_TO i;
;;;4663                   settings->cycle_j SET_TO j;
;;;4664                   settings->cycle_k SET_TO k;
;;;4665                   if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4666                   {
;;;4667                       j SET_TO (cc + j);            /* j always absolute in function call below */
;;;4668                   }
;;;4669                   CYCLE_MACRO(convert_cycle_g87 (CANON_PLANE_XZ, aa, (aa + k), bb,
;;;4670                       (bb + i), r, clear_cc, j, cc, settings->spindle_turning))
;;;4671                       break;
;;;4672               case G_88:
;;;4673                   CHK(((settings->motion_mode ISNT G_88) AND (block->p_number IS -1.0)),
;;;4674                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G88);
;;;4675                   block->p_number SET_TO
;;;4676                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4677                   CYCLE_MACRO(convert_cycle_g88 (CANON_PLANE_XZ, aa, bb, cc,
;;;4678                       block->p_number, settings->spindle_turning))
;;;4679                       settings->cycle_p SET_TO block->p_number;
;;;4680                   break;
;;;4681               case G_89:
;;;4682                   CHK(((settings->motion_mode ISNT G_89) AND (block->p_number IS -1.0)),
;;;4683                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G89);
;;;4684                   block->p_number SET_TO
;;;4685                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4686                   CYCLE_MACRO(convert_cycle_g89 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4687                       block->p_number))
;;;4688                       settings->cycle_p SET_TO block->p_number;
;;;4689                   break;
;;;4690               default:
;;;4691                   ERM(NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
;;;4692           }
;;;4693           settings->current_z SET_TO aa;            /* CYCLE_MACRO updates aa and bb */
;;;4694           settings->current_x SET_TO bb;
;;;4695           settings->current_y SET_TO clear_cc;
;;;4696           settings->cycle_cc SET_TO block->y_number;
;;;4697   
;;;4698           if (save_mode ISNT CANON_EXACT_PATH)
;;;4699               SET_MOTION_CONTROL_MODE(save_mode);
;;;4700   
;;;4701           return RS274NGC_OK;
;;;4702       }
000068  b033              ADD      sp,sp,#0xcc
00006a  bd00              POP      {pc}
                  |L33.108|
00006c  9831              LDR      r0,[sp,#0xc4]         ;4554
00006e  f8d001e8          LDR      r0,[r0,#0x1e8]        ;4554
000072  2801              CMP      r0,#1                 ;4554
000074  d104              BNE      |L33.128|
000076  9931              LDR      r1,[sp,#0xc4]         ;4555
000078  f50171f8          ADD      r1,r1,#0x1f0          ;4555
00007c  c903              LDM      r1,{r0,r1}            ;4555
00007e  e003              B        |L33.136|
                  |L33.128|
000080  9932              LDR      r1,[sp,#0xc8]         ;4555
000082  f501716e          ADD      r1,r1,#0x3b8          ;4555
000086  c903              LDM      r1,{r0,r1}            ;4555
                  |L33.136|
000088  9a31              LDR      r2,[sp,#0xc4]         ;4555
00008a  f50272f8          ADD      r2,r2,#0x1f0          ;4555
00008e  c203              STM      r2!,{r0,r1}           ;4555
000090  9832              LDR      r0,[sp,#0xc8]         ;4556
000092  f5007066          ADD      r0,r0,#0x398          ;4556
000096  c803              LDM      r0,{r0,r1}            ;4556
000098  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4556
00009c  9832              LDR      r0,[sp,#0xc8]         ;4558
00009e  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4558
0000a2  bb98              CBNZ     r0,|L33.268|
0000a4  f04f0100          MOV      r1,#0                 ;4560
0000a8  912c              STR      r1,[sp,#0xb0]         ;4560
0000aa  912d              STR      r1,[sp,#0xb4]         ;4560
0000ac  4608              MOV      r0,r1                 ;4561
0000ae  9028              STR      r0,[sp,#0xa0]         ;4561
0000b0  9029              STR      r0,[sp,#0xa4]         ;4561
0000b2  9831              LDR      r0,[sp,#0xc4]         ;4562
0000b4  f50070e4          ADD      r0,r0,#0x1c8          ;4562
0000b8  c803              LDM      r0,{r0,r1}            ;4562
0000ba  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4562
0000be  9931              LDR      r1,[sp,#0xc4]         ;4563
0000c0  f50171f8          ADD      r1,r1,#0x1f0          ;4563
0000c4  c903              LDM      r1,{r0,r1}            ;4563
0000c6  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4563
0000ca  9831              LDR      r0,[sp,#0xc4]         ;4564
0000cc  f8d001f8          LDR      r0,[r0,#0x1f8]        ;4564
0000d0  2801              CMP      r0,#1                 ;4564
0000d2  d104              BNE      |L33.222|
0000d4  9931              LDR      r1,[sp,#0xc4]         ;4564
0000d6  f5017100          ADD      r1,r1,#0x200          ;4564
0000da  c903              LDM      r1,{r0,r1}            ;4564
0000dc  e003              B        |L33.230|
                  |L33.222|
0000de  9932              LDR      r1,[sp,#0xc8]         ;4564
0000e0  f5017168          ADD      r1,r1,#0x3a0          ;4564
0000e4  c903              LDM      r1,{r0,r1}            ;4564
                  |L33.230|
0000e6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4564
0000ea  9831              LDR      r0,[sp,#0xc4]         ;4565
0000ec  f8d001dc          LDR      r0,[r0,#0x1dc]        ;4565
0000f0  2801              CMP      r0,#1                 ;4565
0000f2  d104              BNE      |L33.254|
0000f4  9931              LDR      r1,[sp,#0xc4]         ;4565
0000f6  f50171f0          ADD      r1,r1,#0x1e0          ;4565
0000fa  c903              LDM      r1,{r0,r1}            ;4565
0000fc  e003              B        |L33.262|
                  |L33.254|
0000fe  9932              LDR      r1,[sp,#0xc8]         ;4565
000100  f5017164          ADD      r1,r1,#0x390          ;4565
000104  c903              LDM      r1,{r0,r1}            ;4565
                  |L33.262|
000106  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4565
00010a  e05b              B        |L33.452|
                  |L33.268|
00010c  e7ff              B        |L33.270|
                  |L33.270|
00010e  9832              LDR      r0,[sp,#0xc8]         ;4567
000110  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4567
000114  2801              CMP      r0,#1                 ;4567
000116  d130              BNE      |L33.378|
000118  9831              LDR      r0,[sp,#0xc4]         ;4569
00011a  f5007000          ADD      r0,r0,#0x200          ;4569
00011e  c803              LDM      r0,{r0,r1}            ;4569
000120  e9cd012c          STRD     r0,r1,[sp,#0xb0]      ;4569
000124  9831              LDR      r0,[sp,#0xc4]         ;4570
000126  f50070f0          ADD      r0,r0,#0x1e0          ;4570
00012a  c803              LDM      r0,{r0,r1}            ;4570
00012c  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;4570
000130  9931              LDR      r1,[sp,#0xc4]         ;4571
000132  f50171e4          ADD      r1,r1,#0x1c8          ;4571
000136  c903              LDM      r1,{r0,r1}            ;4571
000138  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4571
00013c  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;4571
000140  f7fffffe          BL       __aeabi_dadd
000144  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4571
000148  9931              LDR      r1,[sp,#0xc4]         ;4572
00014a  f50171f8          ADD      r1,r1,#0x1f0          ;4572
00014e  c903              LDM      r1,{r0,r1}            ;4572
000150  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4572
000154  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4572
000158  f7fffffe          BL       __aeabi_dadd
00015c  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4572
000160  9932              LDR      r1,[sp,#0xc8]         ;4573
000162  f5017168          ADD      r1,r1,#0x3a0          ;4573
000166  c903              LDM      r1,{r0,r1}            ;4573
000168  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4573
00016c  9832              LDR      r0,[sp,#0xc8]         ;4574
00016e  f5007064          ADD      r0,r0,#0x390          ;4574
000172  c803              LDM      r0,{r0,r1}            ;4574
000174  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4574
000178  e024              B        |L33.452|
                  |L33.378|
00017a  f04f0100          MOV      r1,#0                 ;4577
00017e  48a8              LDR      r0,|L33.1056|
000180  f8c0114c          STR      r1,[r0,#0x14c]        ;4577
000184  f8d0214c          LDR      r2,[r0,#0x14c]        ;4577
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;4577
00018c  f1000001          ADD      r0,r0,#1              ;4577
000190  49a3              LDR      r1,|L33.1056|
000192  f8c1014c          STR      r0,[r1,#0x14c]        ;4577
000196  eb020182          ADD      r1,r2,r2,LSL #2       ;4577
00019a  48a3              LDR      r0,|L33.1064|
00019c  eb001001          ADD      r0,r0,r1,LSL #4       ;4577
0001a0  49a0              LDR      r1,|L33.1060|
0001a2  9014              STR      r0,[sp,#0x50]         ;4577
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;4577
0001ac  489c              LDR      r0,|L33.1056|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;4577
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;4577
0001b6  4a9c              LDR      r2,|L33.1064|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;4577
0001bc  7001              STRB     r1,[r0,#0]            ;4577
0001be  f04f001f          MOV      r0,#0x1f              ;4577
                  |L33.450|
0001c2  e751              B        |L33.104|
                  |L33.452|
0001c4  e9dd2326          LDRD     r2,r3,[sp,#0x98]      ;4578
0001c8  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4578
0001cc  f7fffffe          BL       __aeabi_cdcmple
0001d0  d224              BCS      |L33.540|
0001d2  f04f0100          MOV      r1,#0                 ;4578
0001d6  4892              LDR      r0,|L33.1056|
0001d8  f8c0114c          STR      r1,[r0,#0x14c]        ;4578
0001dc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4578
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4578
0001e4  f1000001          ADD      r0,r0,#1              ;4578
0001e8  498d              LDR      r1,|L33.1056|
0001ea  f8c1014c          STR      r0,[r1,#0x14c]        ;4578
0001ee  eb020082          ADD      r0,r2,r2,LSL #2       ;4578
0001f2  498d              LDR      r1,|L33.1064|
0001f4  eb011000          ADD      r0,r1,r0,LSL #4       ;4578
0001f8  498a              LDR      r1,|L33.1060|
0001fa  9014              STR      r0,[sp,#0x50]         ;4578
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;4578
000204  4886              LDR      r0,|L33.1056|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;4578
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;4578
00020e  4a86              LDR      r2,|L33.1064|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;4578
000214  7001              STRB     r1,[r0,#0]            ;4578
000216  f04f0095          MOV      r0,#0x95              ;4578
                  |L33.538|
00021a  e725              B        |L33.104|
                  |L33.540|
00021c  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4580
000220  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4580
000224  f7fffffe          BL       __aeabi_cdcmple
000228  d213              BCS      |L33.594|
00022a  9832              LDR      r0,[sp,#0xc8]         ;4582
00022c  f5007068          ADD      r0,r0,#0x3a0          ;4582
000230  c803              LDM      r0,{r0,r1}            ;4582
000232  e9cd0100          STRD     r0,r1,[sp,#0]         ;4582
000236  9932              LDR      r1,[sp,#0xc8]         ;4582
000238  f5017164          ADD      r1,r1,#0x390          ;4582
00023c  c903              LDM      r1,{r0,r1}            ;4582
00023e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4582
000242  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4582
000246  f7fffffe          BL       STRAIGHT_TRAVERSE
00024a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4605
00024e  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4605
                  |L33.594|
000252  9832              LDR      r0,[sp,#0xc8]         ;4607
000254  f5004030          ADD      r0,r0,#0xb000         ;4607
000258  f8900188          LDRB     r0,[r0,#0x188]        ;4607
00025c  b910              CBNZ     r0,|L33.612|
00025e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4607
000262  e001              B        |L33.616|
                  |L33.612|
000264  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4607
                  |L33.616|
000268  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;4607
00026c  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000270  9016              STR      r0,[sp,#0x58]         ;4609
000272  9816              LDR      r0,[sp,#0x58]         ;4610
000274  2802              CMP      r0,#2                 ;4610
000276  d002              BEQ      |L33.638|
000278  2002              MOVS     r0,#2                 ;4611
00027a  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L33.638|
00027e  f2403252          MOV      r2,#0x352             ;4613
000282  9830              LDR      r0,[sp,#0xc0]         ;4613
000284  1a81              SUBS     r1,r0,r2              ;4613
000286  4290              CMP      r0,r2                 ;4613
000288  d07d              BEQ      |L33.902|
00028a  dc0a              BGT      |L33.674|
00028c  f5a07040          SUB      r0,r0,#0x300          ;4613
000290  382a              SUBS     r0,r0,#0x2a           ;4613
000292  d00f              BEQ      |L33.692|
000294  280a              CMP      r0,#0xa               ;4613
000296  d077              BEQ      |L33.904|
000298  2814              CMP      r0,#0x14              ;4613
00029a  d076              BEQ      |L33.906|
00029c  281e              CMP      r0,#0x1e              ;4613
                  |L33.670|
00029e  d175              BNE      |L33.908|
0002a0  e24c              B        |L33.1852|
                  |L33.674|
0002a2  290a              CMP      r1,#0xa               ;4613
0002a4  d073              BEQ      |L33.910|
0002a6  2914              CMP      r1,#0x14              ;4613
0002a8  d072              BEQ      |L33.912|
0002aa  291e              CMP      r1,#0x1e              ;4613
0002ac  d071              BEQ      |L33.914|
0002ae  2928              CMP      r1,#0x28              ;4613
0002b0  d1f5              BNE      |L33.670|
0002b2  e3fe              B        |L33.2738|
                  |L33.692|
0002b4  9831              LDR      r0,[sp,#0xc4]         ;4616
0002b6  f8d00178          LDR      r0,[r0,#0x178]        ;4616
0002ba  9017              STR      r0,[sp,#0x5c]         ;4616
0002bc  e07a              B        |L33.948|
                  |L33.702|
0002be  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4616
0002c2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4616
0002c6  f7fffffe          BL       __aeabi_dadd
0002ca  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4616
0002ce  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4616
0002d2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4616
0002d6  f7fffffe          BL       __aeabi_dadd
0002da  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4616
0002de  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4616
0002e2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4616
0002e6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4616
0002ea  e9cd0100          STRD     r0,r1,[sp,#0]         ;4616
0002ee  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4616
0002f2  981b              LDR      r0,[sp,#0x6c]         ;4616
0002f4  f7fffffe          BL       cycle_traverse
0002f8  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4616
0002fc  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4616
000300  f7fffffe          BL       __aeabi_cdcmpeq
000304  d00c              BEQ      |L33.800|
000306  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4616
00030a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4616
00030e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4616
000312  e9cd0100          STRD     r0,r1,[sp,#0]         ;4616
000316  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4616
00031a  981b              LDR      r0,[sp,#0x6c]         ;4616
00031c  f7fffffe          BL       cycle_traverse
                  |L33.800|
000320  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4616
000324  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4616
000328  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4616
00032c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4616
000330  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4616
000334  e9cd0100          STRD     r0,r1,[sp,#0]         ;4616
000338  2003              MOVS     r0,#3                 ;4616
00033a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4616
00033e  f7fffffe          BL       convert_cycle_g81
000342  9015              STR      r0,[sp,#0x54]         ;4616
000344  b330              CBZ      r0,|L33.916|
000346  4836              LDR      r0,|L33.1056|
000348  f8d0014c          LDR      r0,[r0,#0x14c]        ;4616
00034c  2831              CMP      r0,#0x31              ;4616
00034e  da27              BGE      |L33.928|
000350  4833              LDR      r0,|L33.1056|
000352  f8d0214c          LDR      r2,[r0,#0x14c]        ;4616
000356  f8d0014c          LDR      r0,[r0,#0x14c]        ;4616
00035a  1c40              ADDS     r0,r0,#1              ;4616
00035c  4930              LDR      r1,|L33.1056|
00035e  f8c1014c          STR      r0,[r1,#0x14c]        ;4616
000362  eb020182          ADD      r1,r2,r2,LSL #2       ;4616
000366  4830              LDR      r0,|L33.1064|
000368  eb001001          ADD      r0,r0,r1,LSL #4       ;4616
00036c  492d              LDR      r1,|L33.1060|
00036e  9014              STR      r0,[sp,#0x50]         ;4616
000370  f7fffffe          BL       strcpy
000374  f04f0100          MOV      r1,#0                 ;4616
000378  4829              LDR      r0,|L33.1056|
00037a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4616
00037e  eb000380          ADD      r3,r0,r0,LSL #2       ;4616
000382  4829              LDR      r0,|L33.1064|
000384  e007              B        |L33.918|
                  |L33.902|
000386  e26a              B        |L33.2142|
                  |L33.904|
000388  e018              B        |L33.956|
                  |L33.906|
00038a  e0f9              B        |L33.1408|
                  |L33.908|
00038c  e3f3              B        |L33.2934|
                  |L33.910|
00038e  e2e2              B        |L33.2390|
                  |L33.912|
000390  e3c1              B        |L33.2838|
                  |L33.914|
000392  e3f1              B        |L33.2936|
                  |L33.916|
000394  e006              B        |L33.932|
                  |L33.918|
000396  eb001003          ADD      r0,r0,r3,LSL #4       ;4616
00039a  7001              STRB     r1,[r0,#0]            ;4616
00039c  9815              LDR      r0,[sp,#0x54]         ;4616
                  |L33.926|
00039e  e663              B        |L33.104|
                  |L33.928|
0003a0  9815              LDR      r0,[sp,#0x54]         ;4616
0003a2  e661              B        |L33.104|
                  |L33.932|
0003a4  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4616
0003a8  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4616
0003ac  9817              LDR      r0,[sp,#0x5c]         ;4616
0003ae  f1a00001          SUB      r0,r0,#1              ;4616
0003b2  9017              STR      r0,[sp,#0x5c]         ;4616
                  |L33.948|
0003b4  9817              LDR      r0,[sp,#0x5c]         ;4616
0003b6  2800              CMP      r0,#0                 ;4616
0003b8  dc81              BGT      |L33.702|
                  |L33.954|
0003ba  e3ab              B        |L33.2836|
                  |L33.956|
0003bc  9832              LDR      r0,[sp,#0xc8]         ;4619
0003be  f8d00628          LDR      r0,[r0,#0x628]        ;4619
0003c2  f5b07f4d          CMP      r0,#0x334             ;4619
0003c6  d039              BEQ      |L33.1084|
0003c8  9931              LDR      r1,[sp,#0xc4]         ;4619
0003ca  f50171d8          ADD      r1,r1,#0x1b0          ;4619
0003ce  c903              LDM      r1,{r0,r1}            ;4619
0003d0  2200              MOVS     r2,#0                 ;4619
0003d2  4b16              LDR      r3,|L33.1068|
0003d4  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4619
0003d8  f7fffffe          BL       __aeabi_cdcmpeq
0003dc  d12e              BNE      |L33.1084|
0003de  f04f0100          MOV      r1,#0                 ;4619
0003e2  480f              LDR      r0,|L33.1056|
0003e4  f8c0114c          STR      r1,[r0,#0x14c]        ;4619
0003e8  f8d0214c          LDR      r2,[r0,#0x14c]        ;4619
0003ec  f8d0014c          LDR      r0,[r0,#0x14c]        ;4619
0003f0  f1000001          ADD      r0,r0,#1              ;4619
0003f4  490a              LDR      r1,|L33.1056|
0003f6  f8c1014c          STR      r0,[r1,#0x14c]        ;4619
0003fa  eb020082          ADD      r0,r2,r2,LSL #2       ;4619
0003fe  490a              LDR      r1,|L33.1064|
000400  eb011000          ADD      r0,r1,r0,LSL #4       ;4619
000404  4907              LDR      r1,|L33.1060|
000406  9014              STR      r0,[sp,#0x50]         ;4619
000408  f7fffffe          BL       strcpy
00040c  f04f0100          MOV      r1,#0                 ;4619
000410  4803              LDR      r0,|L33.1056|
000412  f8d0014c          LDR      r0,[r0,#0x14c]        ;4619
000416  eb000080          ADD      r0,r0,r0,LSL #2       ;4619
00041a  4a03              LDR      r2,|L33.1064|
00041c  e008              B        |L33.1072|
00041e  0000              DCW      0x0000
                  |L33.1056|
                          DCD      _setup+0xc000
                  |L33.1060|
                          DCD      |symbol_number.470|
                  |L33.1064|
                          DCD      _setup+0xb1ac
                  |L33.1068|
                          DCD      0xbff00000
                  |L33.1072|
000430  eb021000          ADD      r0,r2,r0,LSL #4       ;4619
000434  7001              STRB     r1,[r0,#0]            ;4619
000436  f04f0049          MOV      r0,#0x49              ;4619
                  |L33.1082|
00043a  e615              B        |L33.104|
                  |L33.1084|
00043c  9931              LDR      r1,[sp,#0xc4]         ;4621
00043e  f50171d8          ADD      r1,r1,#0x1b0          ;4621
000442  c903              LDM      r1,{r0,r1}            ;4621
000444  2200              MOVS     r2,#0                 ;4621
000446  4bfa              LDR      r3,|L33.2096|
000448  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4621
00044c  f7fffffe          BL       __aeabi_cdcmpeq
000450  d104              BNE      |L33.1116|
000452  9932              LDR      r1,[sp,#0xc8]         ;4622
000454  f5017178          ADD      r1,r1,#0x3e0          ;4622
000458  c903              LDM      r1,{r0,r1}            ;4622
00045a  e003              B        |L33.1124|
                  |L33.1116|
00045c  9931              LDR      r1,[sp,#0xc4]         ;4622
00045e  f50171d8          ADD      r1,r1,#0x1b0          ;4622
000462  c903              LDM      r1,{r0,r1}            ;4622
                  |L33.1124|
000464  9a31              LDR      r2,[sp,#0xc4]         ;4622
000466  f50272d8          ADD      r2,r2,#0x1b0          ;4622
00046a  c203              STM      r2!,{r0,r1}           ;4622
00046c  9831              LDR      r0,[sp,#0xc4]         ;4623
00046e  f8d00178          LDR      r0,[r0,#0x178]        ;4623
000472  9017              STR      r0,[sp,#0x5c]         ;4623
000474  e078              B        |L33.1384|
                  |L33.1142|
000476  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4623
00047a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4623
00047e  f7fffffe          BL       __aeabi_dadd
000482  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4623
000486  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4623
00048a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4623
00048e  f7fffffe          BL       __aeabi_dadd
000492  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4623
000496  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4623
00049a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4623
00049e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4623
0004a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4623
0004a6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4623
0004aa  981b              LDR      r0,[sp,#0x6c]         ;4623
0004ac  f7fffffe          BL       cycle_traverse
0004b0  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4623
0004b4  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4623
0004b8  f7fffffe          BL       __aeabi_cdcmpeq
0004bc  d00c              BEQ      |L33.1240|
0004be  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4623
0004c2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4623
0004c6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4623
0004ca  e9cd0100          STRD     r0,r1,[sp,#0]         ;4623
0004ce  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4623
0004d2  981b              LDR      r0,[sp,#0x6c]         ;4623
0004d4  f7fffffe          BL       cycle_traverse
                  |L33.1240|
0004d8  9831              LDR      r0,[sp,#0xc4]         ;4623
0004da  f50070d8          ADD      r0,r0,#0x1b0          ;4623
0004de  c803              LDM      r0,{r0,r1}            ;4623
0004e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4623
0004e4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4623
0004e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4623
0004ec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4623
0004f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4623
0004f4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4623
0004f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4623
0004fc  2003              MOVS     r0,#3                 ;4623
0004fe  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4623
000502  f7fffffe          BL       convert_cycle_g82
000506  9015              STR      r0,[sp,#0x54]         ;4623
000508  b330              CBZ      r0,|L33.1368|
00050a  48ca              LDR      r0,|L33.2100|
00050c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4623
000510  2831              CMP      r0,#0x31              ;4623
000512  da1f              BGE      |L33.1364|
000514  48c7              LDR      r0,|L33.2100|
000516  f8d0214c          LDR      r2,[r0,#0x14c]        ;4623
00051a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4623
00051e  1c40              ADDS     r0,r0,#1              ;4623
000520  49c4              LDR      r1,|L33.2100|
000522  f8c1014c          STR      r0,[r1,#0x14c]        ;4623
000526  eb020082          ADD      r0,r2,r2,LSL #2       ;4623
00052a  f6a16154          SUB      r1,r1,#0xe54          ;4623
00052e  eb011000          ADD      r0,r1,r0,LSL #4       ;4623
000532  49c1              LDR      r1,|L33.2104|
000534  9014              STR      r0,[sp,#0x50]         ;4623
000536  f7fffffe          BL       strcpy
00053a  f04f0100          MOV      r1,#0                 ;4623
00053e  48bd              LDR      r0,|L33.2100|
000540  f8d0014c          LDR      r0,[r0,#0x14c]        ;4623
000544  eb000080          ADD      r0,r0,r0,LSL #2       ;4623
000548  4abc              LDR      r2,|L33.2108|
00054a  eb021000          ADD      r0,r2,r0,LSL #4       ;4623
00054e  7001              STRB     r1,[r0,#0]            ;4623
000550  9815              LDR      r0,[sp,#0x54]         ;4623
000552  e589              B        |L33.104|
                  |L33.1364|
000554  9815              LDR      r0,[sp,#0x54]         ;4623
000556  e587              B        |L33.104|
                  |L33.1368|
000558  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4623
00055c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4623
000560  9817              LDR      r0,[sp,#0x5c]         ;4623
000562  f1a00001          SUB      r0,r0,#1              ;4623
000566  9017              STR      r0,[sp,#0x5c]         ;4623
                  |L33.1384|
000568  9817              LDR      r0,[sp,#0x5c]         ;4623
00056a  2800              CMP      r0,#0                 ;4623
00056c  dc83              BGT      |L33.1142|
00056e  9831              LDR      r0,[sp,#0xc4]         ;4625
000570  f50070d8          ADD      r0,r0,#0x1b0          ;4625
000574  c806              LDM      r0!,{r1,r2}           ;4625
000576  9832              LDR      r0,[sp,#0xc8]         ;4625
000578  f5007078          ADD      r0,r0,#0x3e0          ;4625
00057c  c006              STM      r0!,{r1,r2}           ;4625
00057e  e71c              B        |L33.954|
                  |L33.1408|
000580  9832              LDR      r0,[sp,#0xc8]         ;4628
000582  f8d00628          LDR      r0,[r0,#0x628]        ;4628
000586  f5a07140          SUB      r1,r0,#0x300          ;4628
00058a  393e              SUBS     r1,r1,#0x3e           ;4628
00058c  d02f              BEQ      |L33.1518|
00058e  9931              LDR      r1,[sp,#0xc4]         ;4628
000590  f50171dc          ADD      r1,r1,#0x1b8          ;4628
000594  c903              LDM      r1,{r0,r1}            ;4628
000596  2200              MOVS     r2,#0                 ;4628
000598  4ba5              LDR      r3,|L33.2096|
00059a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4628
00059e  f7fffffe          BL       __aeabi_cdcmpeq
0005a2  d124              BNE      |L33.1518|
0005a4  f04f0100          MOV      r1,#0                 ;4628
0005a8  48a2              LDR      r0,|L33.2100|
0005aa  f8c0114c          STR      r1,[r0,#0x14c]        ;4628
0005ae  f8d0214c          LDR      r2,[r0,#0x14c]        ;4628
0005b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4628
0005b6  f1000001          ADD      r0,r0,#1              ;4628
0005ba  499e              LDR      r1,|L33.2100|
0005bc  f8c1014c          STR      r0,[r1,#0x14c]        ;4628
0005c0  eb020082          ADD      r0,r2,r2,LSL #2       ;4628
0005c4  499d              LDR      r1,|L33.2108|
0005c6  eb011000          ADD      r0,r1,r0,LSL #4       ;4628
0005ca  499b              LDR      r1,|L33.2104|
0005cc  9014              STR      r0,[sp,#0x50]         ;4628
0005ce  f7fffffe          BL       strcpy
0005d2  f04f0100          MOV      r1,#0                 ;4628
0005d6  4897              LDR      r0,|L33.2100|
0005d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4628
0005dc  eb000080          ADD      r0,r0,r0,LSL #2       ;4628
0005e0  4a96              LDR      r2,|L33.2108|
0005e2  eb021000          ADD      r0,r2,r0,LSL #4       ;4628
0005e6  7001              STRB     r1,[r0,#0]            ;4628
0005e8  f04f008f          MOV      r0,#0x8f              ;4628
0005ec  e53c              B        |L33.104|
                  |L33.1518|
0005ee  9931              LDR      r1,[sp,#0xc4]         ;4630
0005f0  f50171dc          ADD      r1,r1,#0x1b8          ;4630
0005f4  c903              LDM      r1,{r0,r1}            ;4630
0005f6  2200              MOVS     r2,#0                 ;4630
0005f8  4b8d              LDR      r3,|L33.2096|
0005fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4630
0005fe  f7fffffe          BL       __aeabi_cdcmpeq
000602  d104              BNE      |L33.1550|
000604  9932              LDR      r1,[sp,#0xc8]         ;4631
000606  f501717a          ADD      r1,r1,#0x3e8          ;4631
00060a  c903              LDM      r1,{r0,r1}            ;4631
00060c  e003              B        |L33.1558|
                  |L33.1550|
00060e  9931              LDR      r1,[sp,#0xc4]         ;4631
000610  f50171dc          ADD      r1,r1,#0x1b8          ;4631
000614  c903              LDM      r1,{r0,r1}            ;4631
                  |L33.1558|
000616  9a31              LDR      r2,[sp,#0xc4]         ;4631
000618  f50272dc          ADD      r2,r2,#0x1b8          ;4631
00061c  c203              STM      r2!,{r0,r1}           ;4631
00061e  9831              LDR      r0,[sp,#0xc4]         ;4632
000620  f8d00178          LDR      r0,[r0,#0x178]        ;4632
000624  9017              STR      r0,[sp,#0x5c]         ;4632
000626  e07b              B        |L33.1824|
                  |L33.1576|
000628  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4632
00062c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4632
000630  f7fffffe          BL       __aeabi_dadd
000634  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4632
000638  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4632
00063c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4632
000640  f7fffffe          BL       __aeabi_dadd
000644  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4632
000648  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4632
00064c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4632
000650  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4632
000654  e9cd0100          STRD     r0,r1,[sp,#0]         ;4632
000658  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4632
00065c  981b              LDR      r0,[sp,#0x6c]         ;4632
00065e  f7fffffe          BL       cycle_traverse
000662  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4632
000666  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4632
00066a  f7fffffe          BL       __aeabi_cdcmpeq
00066e  d00c              BEQ      |L33.1674|
000670  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4632
000674  e9cd0102          STRD     r0,r1,[sp,#8]         ;4632
000678  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4632
00067c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4632
000680  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4632
000684  981b              LDR      r0,[sp,#0x6c]         ;4632
000686  f7fffffe          BL       cycle_traverse
                  |L33.1674|
00068a  9931              LDR      r1,[sp,#0xc4]         ;4632
00068c  f50171dc          ADD      r1,r1,#0x1b8          ;4632
000690  c903              LDM      r1,{r0,r1}            ;4632
000692  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4632
000696  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4632
00069a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4632
00069e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4632
0006a2  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4632
0006a6  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4632
0006aa  e9cd0102          STRD     r0,r1,[sp,#8]         ;4632
0006ae  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4632
0006b2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4632
0006b6  2003              MOVS     r0,#3                 ;4632
0006b8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4632
0006bc  f7fffffe          BL       convert_cycle_g83
0006c0  9015              STR      r0,[sp,#0x54]         ;4632
0006c2  b328              CBZ      r0,|L33.1808|
0006c4  485b              LDR      r0,|L33.2100|
0006c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4632
0006ca  2831              CMP      r0,#0x31              ;4632
0006cc  da1e              BGE      |L33.1804|
0006ce  4859              LDR      r0,|L33.2100|
0006d0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4632
0006d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4632
0006d8  1c40              ADDS     r0,r0,#1              ;4632
0006da  4956              LDR      r1,|L33.2100|
0006dc  f8c1014c          STR      r0,[r1,#0x14c]        ;4632
0006e0  eb020082          ADD      r0,r2,r2,LSL #2       ;4632
0006e4  4955              LDR      r1,|L33.2108|
0006e6  eb011000          ADD      r0,r1,r0,LSL #4       ;4632
0006ea  4953              LDR      r1,|L33.2104|
0006ec  9014              STR      r0,[sp,#0x50]         ;4632
0006ee  f7fffffe          BL       strcpy
0006f2  f04f0100          MOV      r1,#0                 ;4632
0006f6  484f              LDR      r0,|L33.2100|
0006f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4632
0006fc  eb000080          ADD      r0,r0,r0,LSL #2       ;4632
000700  4a4e              LDR      r2,|L33.2108|
000702  eb021000          ADD      r0,r2,r0,LSL #4       ;4632
000706  7001              STRB     r1,[r0,#0]            ;4632
000708  9815              LDR      r0,[sp,#0x54]         ;4632
                  |L33.1802|
00070a  e4ad              B        |L33.104|
                  |L33.1804|
00070c  9815              LDR      r0,[sp,#0x54]         ;4632
00070e  e4ab              B        |L33.104|
                  |L33.1808|
000710  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4632
000714  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4632
000718  9817              LDR      r0,[sp,#0x5c]         ;4632
00071a  f1a00001          SUB      r0,r0,#1              ;4632
00071e  9017              STR      r0,[sp,#0x5c]         ;4632
                  |L33.1824|
000720  9817              LDR      r0,[sp,#0x5c]         ;4632
000722  2800              CMP      r0,#0                 ;4632
000724  dc80              BGT      |L33.1576|
000726  9831              LDR      r0,[sp,#0xc4]         ;4634
000728  f8d021b8          LDR      r2,[r0,#0x1b8]        ;4634
00072c  f8d011bc          LDR      r1,[r0,#0x1bc]        ;4634
000730  9832              LDR      r0,[sp,#0xc8]         ;4634
000732  f8c023e8          STR      r2,[r0,#0x3e8]        ;4634
000736  f8c013ec          STR      r1,[r0,#0x3ec]        ;4634
00073a  e63e              B        |L33.954|
                  |L33.1852|
00073c  9831              LDR      r0,[sp,#0xc4]         ;4637
00073e  f8d00178          LDR      r0,[r0,#0x178]        ;4637
000742  9017              STR      r0,[sp,#0x5c]         ;4637
000744  e086              B        |L33.2132|
                  |L33.1862|
000746  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4637
00074a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4637
00074e  f7fffffe          BL       __aeabi_dadd
000752  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4637
000756  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4637
00075a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4637
00075e  f7fffffe          BL       __aeabi_dadd
000762  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4637
000766  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4637
00076a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4637
00076e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4637
000772  e9cd0100          STRD     r0,r1,[sp,#0]         ;4637
000776  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4637
00077a  981b              LDR      r0,[sp,#0x6c]         ;4637
00077c  f7fffffe          BL       cycle_traverse
000780  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4637
000784  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4637
000788  f7fffffe          BL       __aeabi_cdcmpeq
00078c  d00c              BEQ      |L33.1960|
00078e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4637
000792  e9cd0102          STRD     r0,r1,[sp,#8]         ;4637
000796  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4637
00079a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4637
00079e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4637
0007a2  981b              LDR      r0,[sp,#0x6c]         ;4637
0007a4  f7fffffe          BL       cycle_traverse
                  |L33.1960|
0007a8  9832              LDR      r0,[sp,#0xc8]         ;4637
0007aa  f5004030          ADD      r0,r0,#0xb000         ;4637
0007ae  f8d011a0          LDR      r1,[r0,#0x1a0]        ;4637
0007b2  9832              LDR      r0,[sp,#0xc8]         ;4637
0007b4  f5004030          ADD      r0,r0,#0xb000         ;4637
0007b8  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4637
0007bc  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4637
0007c0  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4637
0007c4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4637
0007c8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4637
0007cc  e9cd0102          STRD     r0,r1,[sp,#8]         ;4637
0007d0  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4637
0007d4  e9cd0100          STRD     r0,r1,[sp,#0]         ;4637
0007d8  2003              MOVS     r0,#3                 ;4637
0007da  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4637
0007de  f7fffffe          BL       convert_cycle_g84
0007e2  9015              STR      r0,[sp,#0x54]         ;4637
0007e4  b318              CBZ      r0,|L33.2094|
0007e6  4813              LDR      r0,|L33.2100|
0007e8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4637
0007ec  2831              CMP      r0,#0x31              ;4637
0007ee  da27              BGE      |L33.2112|
0007f0  4810              LDR      r0,|L33.2100|
0007f2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4637
0007f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4637
0007fa  1c40              ADDS     r0,r0,#1              ;4637
0007fc  490d              LDR      r1,|L33.2100|
0007fe  eb020282          ADD      r2,r2,r2,LSL #2       ;4637
000802  f8c1014c          STR      r0,[r1,#0x14c]        ;4637
000806  480d              LDR      r0,|L33.2108|
000808  eb001002          ADD      r0,r0,r2,LSL #4       ;4637
00080c  490a              LDR      r1,|L33.2104|
00080e  9014              STR      r0,[sp,#0x50]         ;4637
000810  f7fffffe          BL       strcpy
000814  f04f0100          MOV      r1,#0                 ;4637
000818  4806              LDR      r0,|L33.2100|
00081a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4637
00081e  eb000080          ADD      r0,r0,r0,LSL #2       ;4637
000822  4a06              LDR      r2,|L33.2108|
000824  eb021000          ADD      r0,r2,r0,LSL #4       ;4637
000828  7001              STRB     r1,[r0,#0]            ;4637
00082a  9815              LDR      r0,[sp,#0x54]         ;4637
                  |L33.2092|
00082c  e41c              B        |L33.104|
                  |L33.2094|
00082e  e009              B        |L33.2116|
                  |L33.2096|
                          DCD      0xbff00000
                  |L33.2100|
                          DCD      _setup+0xc000
                  |L33.2104|
                          DCD      |symbol_number.470|
                  |L33.2108|
                          DCD      _setup+0xb1ac
                  |L33.2112|
000840  9815              LDR      r0,[sp,#0x54]         ;4637
000842  e411              B        |L33.104|
                  |L33.2116|
000844  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4637
000848  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4637
00084c  9817              LDR      r0,[sp,#0x5c]         ;4637
00084e  f1a00001          SUB      r0,r0,#1              ;4637
000852  9017              STR      r0,[sp,#0x5c]         ;4637
                  |L33.2132|
000854  9817              LDR      r0,[sp,#0x5c]         ;4637
000856  2800              CMP      r0,#0                 ;4637
000858  f73faf75          BGT      |L33.1862|
00085c  e5ad              B        |L33.954|
                  |L33.2142|
00085e  9831              LDR      r0,[sp,#0xc4]         ;4641
000860  f8d00178          LDR      r0,[r0,#0x178]        ;4641
000864  9017              STR      r0,[sp,#0x5c]         ;4641
000866  e072              B        |L33.2382|
                  |L33.2152|
000868  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4641
00086c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4641
000870  f7fffffe          BL       __aeabi_dadd
000874  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4641
000878  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4641
00087c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4641
000880  f7fffffe          BL       __aeabi_dadd
000884  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4641
000888  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4641
00088c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4641
000890  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4641
000894  e9cd0100          STRD     r0,r1,[sp,#0]         ;4641
000898  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4641
00089c  981b              LDR      r0,[sp,#0x6c]         ;4641
00089e  f7fffffe          BL       cycle_traverse
0008a2  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4641
0008a6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4641
0008aa  f7fffffe          BL       __aeabi_cdcmpeq
0008ae  d00c              BEQ      |L33.2250|
0008b0  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4641
0008b4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4641
0008b8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4641
0008bc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4641
0008c0  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4641
0008c4  981b              LDR      r0,[sp,#0x6c]         ;4641
0008c6  f7fffffe          BL       cycle_traverse
                  |L33.2250|
0008ca  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4641
0008ce  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4641
0008d2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4641
0008d6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4641
0008da  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4641
0008de  e9cd0100          STRD     r0,r1,[sp,#0]         ;4641
0008e2  2003              MOVS     r0,#3                 ;4641
0008e4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4641
0008e8  f7fffffe          BL       convert_cycle_g85
0008ec  9015              STR      r0,[sp,#0x54]         ;4641
0008ee  b330              CBZ      r0,|L33.2366|
0008f0  48ff              LDR      r0,|L33.3312|
0008f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4641
0008f6  2831              CMP      r0,#0x31              ;4641
0008f8  da1f              BGE      |L33.2362|
0008fa  48fd              LDR      r0,|L33.3312|
0008fc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4641
000900  f8d0014c          LDR      r0,[r0,#0x14c]        ;4641
000904  1c40              ADDS     r0,r0,#1              ;4641
000906  49fa              LDR      r1,|L33.3312|
000908  f8c1014c          STR      r0,[r1,#0x14c]        ;4641
00090c  eb020082          ADD      r0,r2,r2,LSL #2       ;4641
000910  f6a16154          SUB      r1,r1,#0xe54          ;4641
000914  eb011000          ADD      r0,r1,r0,LSL #4       ;4641
000918  49f6              LDR      r1,|L33.3316|
00091a  9014              STR      r0,[sp,#0x50]         ;4641
00091c  f7fffffe          BL       strcpy
000920  f04f0100          MOV      r1,#0                 ;4641
000924  48f2              LDR      r0,|L33.3312|
000926  f8d0014c          LDR      r0,[r0,#0x14c]        ;4641
00092a  eb000080          ADD      r0,r0,r0,LSL #2       ;4641
00092e  4af2              LDR      r2,|L33.3320|
000930  eb021000          ADD      r0,r2,r0,LSL #4       ;4641
000934  7001              STRB     r1,[r0,#0]            ;4641
000936  9815              LDR      r0,[sp,#0x54]         ;4641
                  |L33.2360|
000938  e443              B        |L33.450|
                  |L33.2362|
00093a  9815              LDR      r0,[sp,#0x54]         ;4641
00093c  e441              B        |L33.450|
                  |L33.2366|
00093e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4641
000942  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4641
000946  9817              LDR      r0,[sp,#0x5c]         ;4641
000948  f1a00001          SUB      r0,r0,#1              ;4641
00094c  9017              STR      r0,[sp,#0x5c]         ;4641
                  |L33.2382|
00094e  9817              LDR      r0,[sp,#0x5c]         ;4641
000950  2800              CMP      r0,#0                 ;4641
000952  dc89              BGT      |L33.2152|
000954  e531              B        |L33.954|
                  |L33.2390|
000956  9832              LDR      r0,[sp,#0xc8]         ;4644
000958  f8d00628          LDR      r0,[r0,#0x628]        ;4644
00095c  f5b07f57          CMP      r0,#0x35c             ;4644
000960  d02f              BEQ      |L33.2498|
000962  9931              LDR      r1,[sp,#0xc4]         ;4644
000964  f50171d8          ADD      r1,r1,#0x1b0          ;4644
000968  c903              LDM      r1,{r0,r1}            ;4644
00096a  2200              MOVS     r2,#0                 ;4644
00096c  4be3              LDR      r3,|L33.3324|
00096e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4644
000972  f7fffffe          BL       __aeabi_cdcmpeq
000976  d124              BNE      |L33.2498|
000978  f04f0100          MOV      r1,#0                 ;4644
00097c  48dc              LDR      r0,|L33.3312|
00097e  f8c0114c          STR      r1,[r0,#0x14c]        ;4644
000982  f8d0214c          LDR      r2,[r0,#0x14c]        ;4644
000986  f8d0014c          LDR      r0,[r0,#0x14c]        ;4644
00098a  f1000001          ADD      r0,r0,#1              ;4644
00098e  49d8              LDR      r1,|L33.3312|
000990  f8c1014c          STR      r0,[r1,#0x14c]        ;4644
000994  eb020082          ADD      r0,r2,r2,LSL #2       ;4644
000998  49d7              LDR      r1,|L33.3320|
00099a  eb011000          ADD      r0,r1,r0,LSL #4       ;4644
00099e  49d5              LDR      r1,|L33.3316|
0009a0  9014              STR      r0,[sp,#0x50]         ;4644
0009a2  f7fffffe          BL       strcpy
0009a6  f04f0100          MOV      r1,#0                 ;4644
0009aa  48d1              LDR      r0,|L33.3312|
0009ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4644
0009b0  eb000080          ADD      r0,r0,r0,LSL #2       ;4644
0009b4  4ad0              LDR      r2,|L33.3320|
0009b6  eb021000          ADD      r0,r2,r0,LSL #4       ;4644
0009ba  7001              STRB     r1,[r0,#0]            ;4644
0009bc  f04f004a          MOV      r0,#0x4a              ;4644
                  |L33.2496|
0009c0  e42b              B        |L33.538|
                  |L33.2498|
0009c2  9931              LDR      r1,[sp,#0xc4]         ;4646
0009c4  f50171d8          ADD      r1,r1,#0x1b0          ;4646
0009c8  c903              LDM      r1,{r0,r1}            ;4646
0009ca  2200              MOVS     r2,#0                 ;4646
0009cc  4bcb              LDR      r3,|L33.3324|
0009ce  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4646
0009d2  f7fffffe          BL       __aeabi_cdcmpeq
0009d6  d104              BNE      |L33.2530|
0009d8  9932              LDR      r1,[sp,#0xc8]         ;4647
0009da  f5017178          ADD      r1,r1,#0x3e0          ;4647
0009de  c903              LDM      r1,{r0,r1}            ;4647
0009e0  e003              B        |L33.2538|
                  |L33.2530|
0009e2  9931              LDR      r1,[sp,#0xc4]         ;4647
0009e4  f50171d8          ADD      r1,r1,#0x1b0          ;4647
0009e8  c903              LDM      r1,{r0,r1}            ;4647
                  |L33.2538|
0009ea  9a31              LDR      r2,[sp,#0xc4]         ;4647
0009ec  f50272d8          ADD      r2,r2,#0x1b0          ;4647
0009f0  c203              STM      r2!,{r0,r1}           ;4647
0009f2  9831              LDR      r0,[sp,#0xc4]         ;4648
0009f4  f8d00178          LDR      r0,[r0,#0x178]        ;4648
0009f8  9017              STR      r0,[sp,#0x5c]         ;4648
0009fa  e07f              B        |L33.2812|
                  |L33.2556|
0009fc  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4648
000a00  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4648
000a04  f7fffffe          BL       __aeabi_dadd
000a08  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4648
000a0c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4648
000a10  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4648
000a14  f7fffffe          BL       __aeabi_dadd
000a18  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4648
000a1c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4648
000a20  e9cd0102          STRD     r0,r1,[sp,#8]         ;4648
000a24  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4648
000a28  e9cd0100          STRD     r0,r1,[sp,#0]         ;4648
000a2c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4648
000a30  981b              LDR      r0,[sp,#0x6c]         ;4648
000a32  f7fffffe          BL       cycle_traverse
000a36  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4648
000a3a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4648
000a3e  f7fffffe          BL       __aeabi_cdcmpeq
000a42  d00c              BEQ      |L33.2654|
000a44  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4648
000a48  e9cd0102          STRD     r0,r1,[sp,#8]         ;4648
000a4c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4648
000a50  e9cd0100          STRD     r0,r1,[sp,#0]         ;4648
000a54  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4648
000a58  981b              LDR      r0,[sp,#0x6c]         ;4648
000a5a  f7fffffe          BL       cycle_traverse
                  |L33.2654|
000a5e  9832              LDR      r0,[sp,#0xc8]         ;4648
000a60  f5004030          ADD      r0,r0,#0xb000         ;4648
000a64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4648
000a68  9008              STR      r0,[sp,#0x20]         ;4648
000a6a  9831              LDR      r0,[sp,#0xc4]         ;4648
000a6c  f50070d8          ADD      r0,r0,#0x1b0          ;4648
000a70  c803              LDM      r0,{r0,r1}            ;4648
000a72  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4648
000a76  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4648
000a7a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4648
000a7e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4648
000a82  e9cd0102          STRD     r0,r1,[sp,#8]         ;4648
000a86  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4648
000a8a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4648
000a8e  2003              MOVS     r0,#3                 ;4648
000a90  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4648
000a94  f7fffffe          BL       convert_cycle_g86
000a98  9015              STR      r0,[sp,#0x54]         ;4648
000a9a  b338              CBZ      r0,|L33.2796|
000a9c  4894              LDR      r0,|L33.3312|
000a9e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4648
000aa2  2831              CMP      r0,#0x31              ;4648
000aa4  da20              BGE      |L33.2792|
000aa6  4892              LDR      r0,|L33.3312|
000aa8  f8d0214c          LDR      r2,[r0,#0x14c]        ;4648
000aac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4648
000ab0  e000              B        |L33.2740|
                  |L33.2738|
000ab2  e28c              B        |L33.4046|
                  |L33.2740|
000ab4  1c40              ADDS     r0,r0,#1              ;4648
000ab6  498e              LDR      r1,|L33.3312|
000ab8  f8c1014c          STR      r0,[r1,#0x14c]        ;4648
000abc  eb020082          ADD      r0,r2,r2,LSL #2       ;4648
000ac0  498d              LDR      r1,|L33.3320|
000ac2  eb011000          ADD      r0,r1,r0,LSL #4       ;4648
000ac6  498b              LDR      r1,|L33.3316|
000ac8  9014              STR      r0,[sp,#0x50]         ;4648
000aca  f7fffffe          BL       strcpy
000ace  f04f0100          MOV      r1,#0                 ;4648
000ad2  4887              LDR      r0,|L33.3312|
000ad4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4648
000ad8  eb000080          ADD      r0,r0,r0,LSL #2       ;4648
000adc  4a86              LDR      r2,|L33.3320|
000ade  eb021000          ADD      r0,r2,r0,LSL #4       ;4648
000ae2  7001              STRB     r1,[r0,#0]            ;4648
000ae4  9815              LDR      r0,[sp,#0x54]         ;4648
                  |L33.2790|
000ae6  e45a              B        |L33.926|
                  |L33.2792|
000ae8  9815              LDR      r0,[sp,#0x54]         ;4648
000aea  e458              B        |L33.926|
                  |L33.2796|
000aec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4648
000af0  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4648
000af4  9817              LDR      r0,[sp,#0x5c]         ;4648
000af6  f1a00001          SUB      r0,r0,#1              ;4648
000afa  9017              STR      r0,[sp,#0x5c]         ;4648
                  |L33.2812|
000afc  9817              LDR      r0,[sp,#0x5c]         ;4648
000afe  2800              CMP      r0,#0                 ;4648
000b00  f73faf7c          BGT      |L33.2556|
000b04  9831              LDR      r0,[sp,#0xc4]         ;4650
000b06  f50070d8          ADD      r0,r0,#0x1b0          ;4650
000b0a  c806              LDM      r0!,{r1,r2}           ;4650
000b0c  9832              LDR      r0,[sp,#0xc8]         ;4650
000b0e  f5007078          ADD      r0,r0,#0x3e0          ;4650
000b12  c006              STM      r0!,{r1,r2}           ;4650
                  |L33.2836|
000b14  e360              B        |L33.4568|
                  |L33.2838|
000b16  9832              LDR      r0,[sp,#0xc8]         ;4653
000b18  f8d01628          LDR      r1,[r0,#0x628]        ;4653
000b1c  f5a17040          SUB      r0,r1,#0x300          ;4653
000b20  3866              SUBS     r0,r0,#0x66           ;4653
000b22  d07d              BEQ      |L33.3104|
000b24  9831              LDR      r0,[sp,#0xc4]         ;4655
000b26  f8d0014c          LDR      r0,[r0,#0x14c]        ;4655
000b2a  bb30              CBNZ     r0,|L33.2938|
000b2c  f04f0100          MOV      r1,#0                 ;4655
000b30  486f              LDR      r0,|L33.3312|
000b32  f8c0114c          STR      r1,[r0,#0x14c]        ;4655
000b36  f8d0214c          LDR      r2,[r0,#0x14c]        ;4655
000b3a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4655
000b3e  f1000001          ADD      r0,r0,#1              ;4655
000b42  496b              LDR      r1,|L33.3312|
000b44  f8c1014c          STR      r0,[r1,#0x14c]        ;4655
000b48  eb020082          ADD      r0,r2,r2,LSL #2       ;4655
000b4c  496a              LDR      r1,|L33.3320|
000b4e  eb011000          ADD      r0,r1,r0,LSL #4       ;4655
000b52  4968              LDR      r1,|L33.3316|
000b54  9014              STR      r0,[sp,#0x50]         ;4655
000b56  f7fffffe          BL       strcpy
000b5a  f04f0100          MOV      r1,#0                 ;4655
000b5e  4864              LDR      r0,|L33.3312|
000b60  f8d0014c          LDR      r0,[r0,#0x14c]        ;4655
000b64  eb000080          ADD      r0,r0,r0,LSL #2       ;4655
000b68  4a63              LDR      r2,|L33.3320|
000b6a  eb021000          ADD      r0,r2,r0,LSL #4       ;4655
000b6e  7001              STRB     r1,[r0,#0]            ;4655
000b70  f04f0057          MOV      r0,#0x57              ;4655
000b74  e413              B        |L33.926|
                  |L33.2934|
000b76  e301              B        |L33.4476|
                  |L33.2936|
000b78  e14e              B        |L33.3608|
                  |L33.2938|
000b7a  9831              LDR      r0,[sp,#0xc4]         ;4656
000b7c  f8d00158          LDR      r0,[r0,#0x158]        ;4656
000b80  bb20              CBNZ     r0,|L33.3020|
000b82  f04f0100          MOV      r1,#0                 ;4656
000b86  485a              LDR      r0,|L33.3312|
000b88  f8c0114c          STR      r1,[r0,#0x14c]        ;4656
000b8c  f8d0214c          LDR      r2,[r0,#0x14c]        ;4656
000b90  f8d0014c          LDR      r0,[r0,#0x14c]        ;4656
000b94  f1000001          ADD      r0,r0,#1              ;4656
000b98  4955              LDR      r1,|L33.3312|
000b9a  f8c1014c          STR      r0,[r1,#0x14c]        ;4656
000b9e  eb020082          ADD      r0,r2,r2,LSL #2       ;4656
000ba2  4955              LDR      r1,|L33.3320|
000ba4  eb011000          ADD      r0,r1,r0,LSL #4       ;4656
000ba8  4952              LDR      r1,|L33.3316|
000baa  9014              STR      r0,[sp,#0x50]         ;4656
000bac  f7fffffe          BL       strcpy
000bb0  f04f0100          MOV      r1,#0                 ;4656
000bb4  484e              LDR      r0,|L33.3312|
000bb6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4656
000bba  eb000080          ADD      r0,r0,r0,LSL #2       ;4656
000bbe  4a4e              LDR      r2,|L33.3320|
000bc0  eb021000          ADD      r0,r2,r0,LSL #4       ;4656
000bc4  7001              STRB     r1,[r0,#0]            ;4656
000bc6  f04f005a          MOV      r0,#0x5a              ;4656
000bca  e436              B        |L33.1082|
                  |L33.3020|
000bcc  9831              LDR      r0,[sp,#0xc4]         ;4657
000bce  f8d00168          LDR      r0,[r0,#0x168]        ;4657
000bd2  bb20              CBNZ     r0,|L33.3102|
000bd4  f04f0100          MOV      r1,#0                 ;4657
000bd8  4845              LDR      r0,|L33.3312|
000bda  f8c0114c          STR      r1,[r0,#0x14c]        ;4657
000bde  f8d0214c          LDR      r2,[r0,#0x14c]        ;4657
000be2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4657
000be6  f1000001          ADD      r0,r0,#1              ;4657
000bea  4941              LDR      r1,|L33.3312|
000bec  f8c1014c          STR      r0,[r1,#0x14c]        ;4657
000bf0  eb020082          ADD      r0,r2,r2,LSL #2       ;4657
000bf4  4940              LDR      r1,|L33.3320|
000bf6  eb011000          ADD      r0,r1,r0,LSL #4       ;4657
000bfa  493e              LDR      r1,|L33.3316|
000bfc  9014              STR      r0,[sp,#0x50]         ;4657
000bfe  f7fffffe          BL       strcpy
000c02  f04f0100          MOV      r1,#0                 ;4657
000c06  483a              LDR      r0,|L33.3312|
000c08  f8d0014c          LDR      r0,[r0,#0x14c]        ;4657
000c0c  eb000080          ADD      r0,r0,r0,LSL #2       ;4657
000c10  4a39              LDR      r2,|L33.3320|
000c12  eb021000          ADD      r0,r2,r0,LSL #4       ;4657
000c16  7001              STRB     r1,[r0,#0]            ;4657
000c18  f04f005d          MOV      r0,#0x5d              ;4657
000c1c  e40d              B        |L33.1082|
                  |L33.3102|
000c1e  e7ff              B        |L33.3104|
                  |L33.3104|
000c20  9831              LDR      r0,[sp,#0xc4]         ;4659
000c22  f8d0014c          LDR      r0,[r0,#0x14c]        ;4659
000c26  2801              CMP      r0,#1                 ;4659
000c28  d104              BNE      |L33.3124|
000c2a  9931              LDR      r1,[sp,#0xc4]         ;4659
000c2c  f50171a8          ADD      r1,r1,#0x150          ;4659
000c30  c903              LDM      r1,{r0,r1}            ;4659
000c32  e003              B        |L33.3132|
                  |L33.3124|
000c34  9932              LDR      r1,[sp,#0xc8]         ;4659
000c36  f5017170          ADD      r1,r1,#0x3c0          ;4659
000c3a  c903              LDM      r1,{r0,r1}            ;4659
                  |L33.3132|
000c3c  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4659
000c40  9831              LDR      r0,[sp,#0xc4]         ;4660
000c42  f8d00158          LDR      r0,[r0,#0x158]        ;4660
000c46  2801              CMP      r0,#1                 ;4660
000c48  d104              BNE      |L33.3156|
000c4a  9931              LDR      r1,[sp,#0xc4]         ;4660
000c4c  f50171b0          ADD      r1,r1,#0x160          ;4660
000c50  c903              LDM      r1,{r0,r1}            ;4660
000c52  e003              B        |L33.3164|
                  |L33.3156|
000c54  9932              LDR      r1,[sp,#0xc8]         ;4660
000c56  f5017172          ADD      r1,r1,#0x3c8          ;4660
000c5a  c903              LDM      r1,{r0,r1}            ;4660
                  |L33.3164|
000c5c  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4660
000c60  9831              LDR      r0,[sp,#0xc4]         ;4661
000c62  f8d00168          LDR      r0,[r0,#0x168]        ;4661
000c66  2801              CMP      r0,#1                 ;4661
000c68  d104              BNE      |L33.3188|
000c6a  9931              LDR      r1,[sp,#0xc4]         ;4661
000c6c  f50171b8          ADD      r1,r1,#0x170          ;4661
000c70  c903              LDM      r1,{r0,r1}            ;4661
000c72  e003              B        |L33.3196|
                  |L33.3188|
000c74  9932              LDR      r1,[sp,#0xc8]         ;4661
000c76  f5017174          ADD      r1,r1,#0x3d0          ;4661
000c7a  c903              LDM      r1,{r0,r1}            ;4661
                  |L33.3196|
000c7c  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4661
000c80  9a32              LDR      r2,[sp,#0xc8]         ;4662
000c82  e9dd1022          LDRD     r1,r0,[sp,#0x88]      ;4662
000c86  f8c213c0          STR      r1,[r2,#0x3c0]        ;4662
000c8a  f8c203c4          STR      r0,[r2,#0x3c4]        ;4662
000c8e  9a32              LDR      r2,[sp,#0xc8]         ;4663
000c90  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4663
000c94  f5027272          ADD      r2,r2,#0x3c8          ;4663
000c98  c203              STM      r2!,{r0,r1}           ;4663
000c9a  9a32              LDR      r2,[sp,#0xc8]         ;4664
000c9c  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4664
000ca0  f5027274          ADD      r2,r2,#0x3d0          ;4664
000ca4  c203              STM      r2!,{r0,r1}           ;4664
000ca6  9832              LDR      r0,[sp,#0xc8]         ;4665
000ca8  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4665
000cac  2801              CMP      r0,#1                 ;4665
000cae  d107              BNE      |L33.3264|
000cb0  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;4667
000cb4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4667
000cb8  f7fffffe          BL       __aeabi_dadd
000cbc  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4667
                  |L33.3264|
000cc0  9831              LDR      r0,[sp,#0xc4]         ;4669
000cc2  f8d00178          LDR      r0,[r0,#0x178]        ;4669
000cc6  9017              STR      r0,[sp,#0x5c]         ;4669
000cc8  e0a1              B        |L33.3598|
                  |L33.3274|
000cca  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4669
000cce  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4669
000cd2  f7fffffe          BL       __aeabi_dadd
000cd6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4669
000cda  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4669
000cde  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4669
000ce2  f7fffffe          BL       __aeabi_dadd
000ce6  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4669
000cea  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4669
000cee  e007              B        |L33.3328|
                  |L33.3312|
                          DCD      _setup+0xc000
                  |L33.3316|
                          DCD      |symbol_number.470|
                  |L33.3320|
                          DCD      _setup+0xb1ac
                  |L33.3324|
                          DCD      0xbff00000
                  |L33.3328|
000d00  e9cd0102          STRD     r0,r1,[sp,#8]         ;4669
000d04  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4669
000d08  e9cd0100          STRD     r0,r1,[sp,#0]         ;4669
000d0c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4669
000d10  981b              LDR      r0,[sp,#0x6c]         ;4669
000d12  f7fffffe          BL       cycle_traverse
000d16  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4669
000d1a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4669
000d1e  f7fffffe          BL       __aeabi_cdcmpeq
000d22  d00c              BEQ      |L33.3390|
000d24  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4669
000d28  e9cd0102          STRD     r0,r1,[sp,#8]         ;4669
000d2c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4669
000d30  e9cd0100          STRD     r0,r1,[sp,#0]         ;4669
000d34  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4669
000d38  981b              LDR      r0,[sp,#0x6c]         ;4669
000d3a  f7fffffe          BL       cycle_traverse
                  |L33.3390|
000d3e  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;4669
000d42  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4669
000d46  f7fffffe          BL       __aeabi_dadd
000d4a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4669
000d4e  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;4669
000d52  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4669
000d56  f7fffffe          BL       __aeabi_dadd
000d5a  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4669
000d5e  9832              LDR      r0,[sp,#0xc8]         ;4669
000d60  f5004030          ADD      r0,r0,#0xb000         ;4669
000d64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4669
000d68  900e              STR      r0,[sp,#0x38]         ;4669
000d6a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4669
000d6e  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;4669
000d72  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4669
000d76  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;4669
000d7a  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4669
000d7e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4669
000d82  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4669
000d86  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4669
000d8a  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;4669
000d8e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4669
000d92  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4669
000d96  e9cd0102          STRD     r0,r1,[sp,#8]         ;4669
000d9a  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;4669
000d9e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4669
000da2  2003              MOVS     r0,#3                 ;4669
000da4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4669
000da8  f7fffffe          BL       convert_cycle_g87
000dac  9015              STR      r0,[sp,#0x54]         ;4669
000dae  b330              CBZ      r0,|L33.3582|
000db0  48ff              LDR      r0,|L33.4528|
000db2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4669
000db6  2831              CMP      r0,#0x31              ;4669
000db8  da1f              BGE      |L33.3578|
000dba  48fd              LDR      r0,|L33.4528|
000dbc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4669
000dc0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4669
000dc4  1c40              ADDS     r0,r0,#1              ;4669
000dc6  49fa              LDR      r1,|L33.4528|
000dc8  f8c1014c          STR      r0,[r1,#0x14c]        ;4669
000dcc  eb020082          ADD      r0,r2,r2,LSL #2       ;4669
000dd0  f6a16154          SUB      r1,r1,#0xe54          ;4669
000dd4  eb011000          ADD      r0,r1,r0,LSL #4       ;4669
000dd8  49f6              LDR      r1,|L33.4532|
000dda  9014              STR      r0,[sp,#0x50]         ;4669
000ddc  f7fffffe          BL       strcpy
000de0  f04f0100          MOV      r1,#0                 ;4669
000de4  48f2              LDR      r0,|L33.4528|
000de6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4669
000dea  eb000080          ADD      r0,r0,r0,LSL #2       ;4669
000dee  4af2              LDR      r2,|L33.4536|
000df0  eb021000          ADD      r0,r2,r0,LSL #4       ;4669
000df4  7001              STRB     r1,[r0,#0]            ;4669
000df6  9815              LDR      r0,[sp,#0x54]         ;4669
000df8  e487              B        |L33.1802|
                  |L33.3578|
000dfa  9815              LDR      r0,[sp,#0x54]         ;4669
000dfc  e485              B        |L33.1802|
                  |L33.3582|
000dfe  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4669
000e02  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4669
000e06  9817              LDR      r0,[sp,#0x5c]         ;4669
000e08  f1a00001          SUB      r0,r0,#1              ;4669
000e0c  9017              STR      r0,[sp,#0x5c]         ;4669
                  |L33.3598|
000e0e  9817              LDR      r0,[sp,#0x5c]         ;4669
000e10  2800              CMP      r0,#0                 ;4669
000e12  f73faf5a          BGT      |L33.3274|
000e16  e1df              B        |L33.4568|
                  |L33.3608|
000e18  9832              LDR      r0,[sp,#0xc8]         ;4673
000e1a  f8d00628          LDR      r0,[r0,#0x628]        ;4673
000e1e  f5b07f5c          CMP      r0,#0x370             ;4673
000e22  d02f              BEQ      |L33.3716|
000e24  9931              LDR      r1,[sp,#0xc4]         ;4673
000e26  f50171d8          ADD      r1,r1,#0x1b0          ;4673
000e2a  c903              LDM      r1,{r0,r1}            ;4673
000e2c  2200              MOVS     r2,#0                 ;4673
000e2e  4be3              LDR      r3,|L33.4540|
000e30  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4673
000e34  f7fffffe          BL       __aeabi_cdcmpeq
000e38  d124              BNE      |L33.3716|
000e3a  f04f0100          MOV      r1,#0                 ;4673
000e3e  48dc              LDR      r0,|L33.4528|
000e40  f8c0114c          STR      r1,[r0,#0x14c]        ;4673
000e44  f8d0214c          LDR      r2,[r0,#0x14c]        ;4673
000e48  f8d0014c          LDR      r0,[r0,#0x14c]        ;4673
000e4c  f1000001          ADD      r0,r0,#1              ;4673
000e50  49d7              LDR      r1,|L33.4528|
000e52  f8c1014c          STR      r0,[r1,#0x14c]        ;4673
000e56  eb020082          ADD      r0,r2,r2,LSL #2       ;4673
000e5a  49d7              LDR      r1,|L33.4536|
000e5c  eb011000          ADD      r0,r1,r0,LSL #4       ;4673
000e60  49d4              LDR      r1,|L33.4532|
000e62  9014              STR      r0,[sp,#0x50]         ;4673
000e64  f7fffffe          BL       strcpy
000e68  f04f0100          MOV      r1,#0                 ;4673
000e6c  48d0              LDR      r0,|L33.4528|
000e6e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4673
000e72  eb000080          ADD      r0,r0,r0,LSL #2       ;4673
000e76  4ad0              LDR      r2,|L33.4536|
000e78  eb021000          ADD      r0,r2,r0,LSL #4       ;4673
000e7c  7001              STRB     r1,[r0,#0]            ;4673
000e7e  f04f004b          MOV      r0,#0x4b              ;4673
000e82  e442              B        |L33.1802|
                  |L33.3716|
000e84  9931              LDR      r1,[sp,#0xc4]         ;4675
000e86  f50171d8          ADD      r1,r1,#0x1b0          ;4675
000e8a  c903              LDM      r1,{r0,r1}            ;4675
000e8c  2200              MOVS     r2,#0                 ;4675
000e8e  4bcb              LDR      r3,|L33.4540|
000e90  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4675
000e94  f7fffffe          BL       __aeabi_cdcmpeq
000e98  d104              BNE      |L33.3748|
000e9a  9932              LDR      r1,[sp,#0xc8]         ;4676
000e9c  f5017178          ADD      r1,r1,#0x3e0          ;4676
000ea0  c903              LDM      r1,{r0,r1}            ;4676
000ea2  e003              B        |L33.3756|
                  |L33.3748|
000ea4  9931              LDR      r1,[sp,#0xc4]         ;4676
000ea6  f50171d8          ADD      r1,r1,#0x1b0          ;4676
000eaa  c903              LDM      r1,{r0,r1}            ;4676
                  |L33.3756|
000eac  9a31              LDR      r2,[sp,#0xc4]         ;4676
000eae  f50272d8          ADD      r2,r2,#0x1b0          ;4676
000eb2  c203              STM      r2!,{r0,r1}           ;4676
000eb4  9831              LDR      r0,[sp,#0xc4]         ;4677
000eb6  f8d00178          LDR      r0,[r0,#0x178]        ;4677
000eba  9017              STR      r0,[sp,#0x5c]         ;4677
000ebc  e079              B        |L33.4018|
                  |L33.3774|
000ebe  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4677
000ec2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4677
000ec6  f7fffffe          BL       __aeabi_dadd
000eca  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4677
000ece  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4677
000ed2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4677
000ed6  f7fffffe          BL       __aeabi_dadd
000eda  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4677
000ede  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4677
000ee2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4677
000ee6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4677
000eea  e9cd0100          STRD     r0,r1,[sp,#0]         ;4677
000eee  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4677
000ef2  981b              LDR      r0,[sp,#0x6c]         ;4677
000ef4  f7fffffe          BL       cycle_traverse
000ef8  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4677
000efc  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4677
000f00  f7fffffe          BL       __aeabi_cdcmpeq
000f04  d00c              BEQ      |L33.3872|
000f06  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4677
000f0a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4677
000f0e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4677
000f12  e9cd0100          STRD     r0,r1,[sp,#0]         ;4677
000f16  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4677
000f1a  981b              LDR      r0,[sp,#0x6c]         ;4677
000f1c  f7fffffe          BL       cycle_traverse
                  |L33.3872|
000f20  9832              LDR      r0,[sp,#0xc8]         ;4677
000f22  f5004030          ADD      r0,r0,#0xb000         ;4677
000f26  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4677
000f2a  9006              STR      r0,[sp,#0x18]         ;4677
000f2c  9831              LDR      r0,[sp,#0xc4]         ;4677
000f2e  f50070d8          ADD      r0,r0,#0x1b0          ;4677
000f32  c803              LDM      r0,{r0,r1}            ;4677
000f34  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4677
000f38  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4677
000f3c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4677
000f40  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4677
000f44  e9cd0100          STRD     r0,r1,[sp,#0]         ;4677
000f48  2003              MOVS     r0,#3                 ;4677
000f4a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4677
000f4e  f7fffffe          BL       convert_cycle_g88
000f52  9015              STR      r0,[sp,#0x54]         ;4677
000f54  b328              CBZ      r0,|L33.4002|
000f56  4896              LDR      r0,|L33.4528|
000f58  f8d0014c          LDR      r0,[r0,#0x14c]        ;4677
000f5c  2831              CMP      r0,#0x31              ;4677
000f5e  da1e              BGE      |L33.3998|
000f60  4893              LDR      r0,|L33.4528|
000f62  f8d0214c          LDR      r2,[r0,#0x14c]        ;4677
000f66  f8d0014c          LDR      r0,[r0,#0x14c]        ;4677
000f6a  1c40              ADDS     r0,r0,#1              ;4677
000f6c  4990              LDR      r1,|L33.4528|
000f6e  f8c1014c          STR      r0,[r1,#0x14c]        ;4677
000f72  eb020082          ADD      r0,r2,r2,LSL #2       ;4677
000f76  4990              LDR      r1,|L33.4536|
000f78  eb011000          ADD      r0,r1,r0,LSL #4       ;4677
000f7c  498d              LDR      r1,|L33.4532|
000f7e  9014              STR      r0,[sp,#0x50]         ;4677
000f80  f7fffffe          BL       strcpy
000f84  f04f0100          MOV      r1,#0                 ;4677
000f88  4889              LDR      r0,|L33.4528|
000f8a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4677
000f8e  eb000080          ADD      r0,r0,r0,LSL #2       ;4677
000f92  4a89              LDR      r2,|L33.4536|
000f94  eb021000          ADD      r0,r2,r0,LSL #4       ;4677
000f98  7001              STRB     r1,[r0,#0]            ;4677
000f9a  9815              LDR      r0,[sp,#0x54]         ;4677
000f9c  e446              B        |L33.2092|
                  |L33.3998|
000f9e  9815              LDR      r0,[sp,#0x54]         ;4677
000fa0  e444              B        |L33.2092|
                  |L33.4002|
000fa2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4677
000fa6  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4677
000faa  9817              LDR      r0,[sp,#0x5c]         ;4677
000fac  f1a00001          SUB      r0,r0,#1              ;4677
000fb0  9017              STR      r0,[sp,#0x5c]         ;4677
                  |L33.4018|
000fb2  9817              LDR      r0,[sp,#0x5c]         ;4677
000fb4  2800              CMP      r0,#0                 ;4677
000fb6  dc82              BGT      |L33.3774|
000fb8  9831              LDR      r0,[sp,#0xc4]         ;4679
000fba  f8d021b0          LDR      r2,[r0,#0x1b0]        ;4679
000fbe  f8d011b4          LDR      r1,[r0,#0x1b4]        ;4679
000fc2  9832              LDR      r0,[sp,#0xc8]         ;4679
000fc4  f8c023e0          STR      r2,[r0,#0x3e0]        ;4679
000fc8  f8c013e4          STR      r1,[r0,#0x3e4]        ;4679
000fcc  e104              B        |L33.4568|
                  |L33.4046|
000fce  9832              LDR      r0,[sp,#0xc8]         ;4682
000fd0  f8d00628          LDR      r0,[r0,#0x628]        ;4682
000fd4  f5a07140          SUB      r1,r0,#0x300          ;4682
000fd8  397a              SUBS     r1,r1,#0x7a           ;4682
000fda  d02f              BEQ      |L33.4156|
000fdc  9931              LDR      r1,[sp,#0xc4]         ;4682
000fde  f50171d8          ADD      r1,r1,#0x1b0          ;4682
000fe2  c903              LDM      r1,{r0,r1}            ;4682
000fe4  2200              MOVS     r2,#0                 ;4682
000fe6  4b75              LDR      r3,|L33.4540|
000fe8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4682
000fec  f7fffffe          BL       __aeabi_cdcmpeq
000ff0  d124              BNE      |L33.4156|
000ff2  f04f0100          MOV      r1,#0                 ;4682
000ff6  486e              LDR      r0,|L33.4528|
000ff8  f8c0114c          STR      r1,[r0,#0x14c]        ;4682
000ffc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4682
001000  f8d0014c          LDR      r0,[r0,#0x14c]        ;4682
001004  f1000001          ADD      r0,r0,#1              ;4682
001008  4969              LDR      r1,|L33.4528|
00100a  f8c1014c          STR      r0,[r1,#0x14c]        ;4682
00100e  eb020082          ADD      r0,r2,r2,LSL #2       ;4682
001012  4969              LDR      r1,|L33.4536|
001014  eb011000          ADD      r0,r1,r0,LSL #4       ;4682
001018  4966              LDR      r1,|L33.4532|
00101a  9014              STR      r0,[sp,#0x50]         ;4682
00101c  f7fffffe          BL       strcpy
001020  f04f0100          MOV      r1,#0                 ;4682
001024  4862              LDR      r0,|L33.4528|
001026  f8d0014c          LDR      r0,[r0,#0x14c]        ;4682
00102a  eb000080          ADD      r0,r0,r0,LSL #2       ;4682
00102e  4a62              LDR      r2,|L33.4536|
001030  eb021000          ADD      r0,r2,r0,LSL #4       ;4682
001034  7001              STRB     r1,[r0,#0]            ;4682
001036  f04f004c          MOV      r0,#0x4c              ;4682
00103a  e47d              B        |L33.2360|
                  |L33.4156|
00103c  9931              LDR      r1,[sp,#0xc4]         ;4684
00103e  f50171d8          ADD      r1,r1,#0x1b0          ;4684
001042  c903              LDM      r1,{r0,r1}            ;4684
001044  2200              MOVS     r2,#0                 ;4684
001046  4b5d              LDR      r3,|L33.4540|
001048  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4684
00104c  f7fffffe          BL       __aeabi_cdcmpeq
001050  d104              BNE      |L33.4188|
001052  9932              LDR      r1,[sp,#0xc8]         ;4685
001054  f5017178          ADD      r1,r1,#0x3e0          ;4685
001058  c903              LDM      r1,{r0,r1}            ;4685
00105a  e003              B        |L33.4196|
                  |L33.4188|
00105c  9931              LDR      r1,[sp,#0xc4]         ;4685
00105e  f50171d8          ADD      r1,r1,#0x1b0          ;4685
001062  c903              LDM      r1,{r0,r1}            ;4685
                  |L33.4196|
001064  9a31              LDR      r2,[sp,#0xc4]         ;4685
001066  f50272d8          ADD      r2,r2,#0x1b0          ;4685
00106a  c203              STM      r2!,{r0,r1}           ;4685
00106c  9831              LDR      r0,[sp,#0xc4]         ;4686
00106e  f8d00178          LDR      r0,[r0,#0x178]        ;4686
001072  9017              STR      r0,[sp,#0x5c]         ;4686
001074  e076              B        |L33.4452|
                  |L33.4214|
001076  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4686
00107a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4686
00107e  f7fffffe          BL       __aeabi_dadd
001082  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4686
001086  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4686
00108a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4686
00108e  f7fffffe          BL       __aeabi_dadd
001092  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4686
001096  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4686
00109a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4686
00109e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4686
0010a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4686
0010a6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4686
0010aa  981b              LDR      r0,[sp,#0x6c]         ;4686
0010ac  f7fffffe          BL       cycle_traverse
0010b0  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4686
0010b4  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4686
0010b8  f7fffffe          BL       __aeabi_cdcmpeq
0010bc  d00c              BEQ      |L33.4312|
0010be  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4686
0010c2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4686
0010c6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4686
0010ca  e9cd0100          STRD     r0,r1,[sp,#0]         ;4686
0010ce  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4686
0010d2  981b              LDR      r0,[sp,#0x6c]         ;4686
0010d4  f7fffffe          BL       cycle_traverse
                  |L33.4312|
0010d8  9931              LDR      r1,[sp,#0xc4]         ;4686
0010da  f50171d8          ADD      r1,r1,#0x1b0          ;4686
0010de  c903              LDM      r1,{r0,r1}            ;4686
0010e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4686
0010e4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4686
0010e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4686
0010ec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4686
0010f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4686
0010f4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4686
0010f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4686
0010fc  2003              MOVS     r0,#3                 ;4686
0010fe  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4686
001102  f7fffffe          BL       convert_cycle_g89
001106  9015              STR      r0,[sp,#0x54]         ;4686
001108  b320              CBZ      r0,|L33.4436|
00110a  4829              LDR      r0,|L33.4528|
00110c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4686
001110  2831              CMP      r0,#0x31              ;4686
001112  da1d              BGE      |L33.4432|
001114  4826              LDR      r0,|L33.4528|
001116  f8d0214c          LDR      r2,[r0,#0x14c]        ;4686
00111a  f8d0114c          LDR      r1,[r0,#0x14c]        ;4686
00111e  1c49              ADDS     r1,r1,#1              ;4686
001120  f8c0114c          STR      r1,[r0,#0x14c]        ;4686
001124  eb020082          ADD      r0,r2,r2,LSL #2       ;4686
001128  4923              LDR      r1,|L33.4536|
00112a  eb011000          ADD      r0,r1,r0,LSL #4       ;4686
00112e  4921              LDR      r1,|L33.4532|
001130  9014              STR      r0,[sp,#0x50]         ;4686
001132  f7fffffe          BL       strcpy
001136  f04f0100          MOV      r1,#0                 ;4686
00113a  481d              LDR      r0,|L33.4528|
00113c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4686
001140  eb000080          ADD      r0,r0,r0,LSL #2       ;4686
001144  4a1c              LDR      r2,|L33.4536|
001146  eb021000          ADD      r0,r2,r0,LSL #4       ;4686
00114a  7001              STRB     r1,[r0,#0]            ;4686
00114c  9815              LDR      r0,[sp,#0x54]         ;4686
00114e  e437              B        |L33.2496|
                  |L33.4432|
001150  9815              LDR      r0,[sp,#0x54]         ;4686
001152  e435              B        |L33.2496|
                  |L33.4436|
001154  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4686
001158  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4686
00115c  9817              LDR      r0,[sp,#0x5c]         ;4686
00115e  f1a00001          SUB      r0,r0,#1              ;4686
001162  9017              STR      r0,[sp,#0x5c]         ;4686
                  |L33.4452|
001164  9817              LDR      r0,[sp,#0x5c]         ;4686
001166  2800              CMP      r0,#0                 ;4686
001168  dc85              BGT      |L33.4214|
00116a  9831              LDR      r0,[sp,#0xc4]         ;4688
00116c  f50070d8          ADD      r0,r0,#0x1b0          ;4688
001170  c806              LDM      r0!,{r1,r2}           ;4688
001172  9832              LDR      r0,[sp,#0xc8]         ;4688
001174  f5007078          ADD      r0,r0,#0x3e0          ;4688
001178  c006              STM      r0!,{r1,r2}           ;4688
00117a  e02d              B        |L33.4568|
                  |L33.4476|
00117c  f04f0100          MOV      r1,#0                 ;4691
001180  480b              LDR      r0,|L33.4528|
001182  f8c0114c          STR      r1,[r0,#0x14c]        ;4691
001186  f8d0214c          LDR      r2,[r0,#0x14c]        ;4691
00118a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4691
00118e  f1000001          ADD      r0,r0,#1              ;4691
001192  4907              LDR      r1,|L33.4528|
001194  f8c1014c          STR      r0,[r1,#0x14c]        ;4691
001198  eb020082          ADD      r0,r2,r2,LSL #2       ;4691
00119c  4906              LDR      r1,|L33.4536|
00119e  eb011000          ADD      r0,r1,r0,LSL #4       ;4691
0011a2  4904              LDR      r1,|L33.4532|
0011a4  9014              STR      r0,[sp,#0x50]         ;4691
0011a6  f7fffffe          BL       strcpy
0011aa  f04f0100          MOV      r1,#0                 ;4691
0011ae  e007              B        |L33.4544|
                  |L33.4528|
                          DCD      _setup+0xc000
                  |L33.4532|
                          DCD      |symbol_number.470|
                  |L33.4536|
                          DCD      _setup+0xb1ac
                  |L33.4540|
                          DCD      0xbff00000
                  |L33.4544|
0011c0  4818              LDR      r0,|L33.4644|
0011c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4691
0011c6  eb000080          ADD      r0,r0,r0,LSL #2       ;4691
0011ca  4a17              LDR      r2,|L33.4648|
0011cc  eb021000          ADD      r0,r2,r0,LSL #4       ;4691
0011d0  7001              STRB     r1,[r0,#0]            ;4691
0011d2  f04f0020          MOV      r0,#0x20              ;4691
0011d6  e486              B        |L33.2790|
                  |L33.4568|
0011d8  bf00              NOP                            ;4617
0011da  9a32              LDR      r2,[sp,#0xc8]         ;4693
0011dc  e9dd102e          LDRD     r1,r0,[sp,#0xb8]      ;4693
0011e0  f8c213a0          STR      r1,[r2,#0x3a0]        ;4693
0011e4  f8c203a4          STR      r0,[r2,#0x3a4]        ;4693
0011e8  9a32              LDR      r2,[sp,#0xc8]         ;4694
0011ea  e9dd102a          LDRD     r1,r0,[sp,#0xa8]      ;4694
0011ee  f8c21390          STR      r1,[r2,#0x390]        ;4694
0011f2  f8c20394          STR      r0,[r2,#0x394]        ;4694
0011f6  9a32              LDR      r2,[sp,#0xc8]         ;4695
0011f8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4695
0011fc  f5027266          ADD      r2,r2,#0x398          ;4695
001200  c203              STM      r2!,{r0,r1}           ;4695
001202  9931              LDR      r1,[sp,#0xc4]         ;4696
001204  f50171f8          ADD      r1,r1,#0x1f0          ;4696
001208  c905              LDM      r1!,{r0,r2}           ;4696
00120a  9932              LDR      r1,[sp,#0xc8]         ;4696
00120c  f501716e          ADD      r1,r1,#0x3b8          ;4696
001210  c105              STM      r1!,{r0,r2}           ;4696
001212  9816              LDR      r0,[sp,#0x58]         ;4698
001214  2802              CMP      r0,#2                 ;4698
001216  d002              BEQ      |L33.4638|
001218  9816              LDR      r0,[sp,#0x58]         ;4699
00121a  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L33.4638|
00121e  2000              MOVS     r0,#0                 ;4701
001220  e461              B        |L33.2790|
;;;4703   
                          ENDP

001222  0000              DCW      0x0000
                  |L33.4644|
                          DCD      _setup+0xc000
                  |L33.4648|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_distance_mode||, CODE, READONLY, ALIGN=2

                  convert_distance_mode PROC
;;;4725   
;;;4726       static int convert_distance_mode(             /* ARGUMENTS                             */
000000  b570              PUSH     {r4-r6,lr}
;;;4727       int g_code,                                   /* g_code being executed (must be G_90 or G_91) */
;;;4728       setup_pointer settings)                       /* pointer to machine settings                  */
;;;4729       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;4730           static char name[] SET_TO "convert_distance_mode";
;;;4731           if (g_code IS G_90)
000006  f5b57f61          CMP      r5,#0x384
00000a  d10b              BNE      |L34.36|
;;;4732           {
;;;4733               if (settings->distance_mode ISNT MODE_ABSOLUTE)
00000c  f89403f8          LDRB     r0,[r4,#0x3f8]
000010  2800              CMP      r0,#0
000012  d03e              BEQ      |L34.146|
;;;4734               {
;;;4735   #ifdef DEBUG_EMC
;;;4736                   COMMENT("interpreter: distance mode changed to absolute");
000014  a020              ADR      r0,|L34.152|
000016  f7fffffe          BL       COMMENT
;;;4737   #endif
;;;4738                   settings->distance_mode SET_TO MODE_ABSOLUTE;
00001a  f04f0000          MOV      r0,#0
00001e  f88403f8          STRB     r0,[r4,#0x3f8]
000022  e036              B        |L34.146|
                  |L34.36|
;;;4739               }
;;;4740           }
;;;4741           else if (g_code IS G_91)
000024  f5a57040          SUB      r0,r5,#0x300
000028  388e              SUBS     r0,r0,#0x8e
00002a  d10b              BNE      |L34.68|
;;;4742           {
;;;4743               if (settings->distance_mode ISNT MODE_INCREMENTAL)
00002c  f89403f8          LDRB     r0,[r4,#0x3f8]
000030  2801              CMP      r0,#1
000032  d02e              BEQ      |L34.146|
;;;4744               {
;;;4745   #ifdef DEBUG_EMC
;;;4746                   COMMENT("interpreter: distance mode changed to incremental");
000034  a024              ADR      r0,|L34.200|
000036  f7fffffe          BL       COMMENT
;;;4747   #endif
;;;4748                   settings->distance_mode SET_TO MODE_INCREMENTAL;
00003a  f04f0001          MOV      r0,#1
00003e  f88403f8          STRB     r0,[r4,#0x3f8]
000042  e026              B        |L34.146|
                  |L34.68|
;;;4749               }
;;;4750           }
;;;4751           else
;;;4752               ERM(NCE_BUG_CODE_NOT_G90_OR_G91);
000044  f04f0100          MOV      r1,#0
000048  482c              LDR      r0,|L34.252|
00004a  f8c0114c          STR      r1,[r0,#0x14c]
00004e  4601              MOV      r1,r0
000050  f8d1314c          LDR      r3,[r1,#0x14c]
000054  f8d1114c          LDR      r1,[r1,#0x14c]
000058  f1010101          ADD      r1,r1,#1
00005c  4602              MOV      r2,r0
00005e  f8c2114c          STR      r1,[r2,#0x14c]
000062  eb030183          ADD      r1,r3,r3,LSL #2
000066  f6a06254          SUB      r2,r0,#0xe54
00006a  eb021101          ADD      r1,r2,r1,LSL #4
00006e  4608              MOV      r0,r1
000070  4923              LDR      r1,|L34.256|
000072  f7fffffe          BL       strcpy
000076  f04f0100          MOV      r1,#0
00007a  4820              LDR      r0,|L34.252|
00007c  f8d0014c          LDR      r0,[r0,#0x14c]
000080  eb000080          ADD      r0,r0,r0,LSL #2
000084  4a1f              LDR      r2,|L34.260|
000086  eb021000          ADD      r0,r2,r0,LSL #4
00008a  7001              STRB     r1,[r0,#0]
00008c  f04f0019          MOV      r0,#0x19
                  |L34.144|
;;;4753           return RS274NGC_OK;
;;;4754       }
000090  bd70              POP      {r4-r6,pc}
                  |L34.146|
000092  2000              MOVS     r0,#0                 ;4753
000094  e7fc              B        |L34.144|
;;;4755   
                          ENDP

000096  0000              DCW      0x0000
                  |L34.152|
000098  696e7465          DCB      "interpreter: distance mode changed to absolute",0
00009c  72707265
0000a0  7465723a
0000a4  20646973
0000a8  74616e63
0000ac  65206d6f
0000b0  64652063
0000b4  68616e67
0000b8  65642074
0000bc  6f206162
0000c0  736f6c75
0000c4  746500  
0000c7  00                DCB      0
                  |L34.200|
0000c8  696e7465          DCB      "interpreter: distance mode changed to incremental",0
0000cc  72707265
0000d0  7465723a
0000d4  20646973
0000d8  74616e63
0000dc  65206d6f
0000e0  64652063
0000e4  68616e67
0000e8  65642074
0000ec  6f20696e
0000f0  6372656d
0000f4  656e7461
0000f8  6c00    
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L34.252|
                          DCD      _setup+0xc000
                  |L34.256|
                          DCD      |symbol_number.471|
                  |L34.260|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_dwell||, CODE, READONLY, ALIGN=1

                  convert_dwell PROC
;;;4768   
;;;4769       static int convert_dwell(                     /* ARGUMENTS                 */
000000  b570              PUSH     {r4-r6,lr}
;;;4770       double time)                                  /* time in seconds to dwell  */
;;;4771       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4772           DWELL(time);
000006  4620              MOV      r0,r4
000008  4629              MOV      r1,r5
00000a  f7fffffe          BL       DWELL
;;;4773           return RS274NGC_OK;
00000e  2000              MOVS     r0,#0
;;;4774       }
000010  bd70              POP      {r4-r6,pc}
;;;4775   
                          ENDP


                          AREA ||i.convert_feed_mode||, CODE, READONLY, ALIGN=2

                  convert_feed_mode PROC
;;;4797   
;;;4798       static int convert_feed_mode(                 /* ARGUMENTS                                 */
000000  b570              PUSH     {r4-r6,lr}
;;;4799       int g_code,                                   /* g_code being executed (must be G_93 or G_94) */
;;;4800       setup_pointer settings)                       /* pointer to machine settings                  */
;;;4801       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4802           static char name[] SET_TO "convert_feed_mode";
;;;4803           if (g_code IS G_93)
000006  f5a47040          SUB      r0,r4,#0x300
00000a  38a2              SUBS     r0,r0,#0xa2
00000c  d107              BNE      |L36.30|
;;;4804           {
;;;4805   #ifdef DEBUG_EMC
;;;4806               COMMENT("interpreter: feed mode set to inverse time");
00000e  a01e              ADR      r0,|L36.136|
000010  f7fffffe          BL       COMMENT
;;;4807   #endif
;;;4808               settings->feed_mode SET_TO INVERSE_TIME;
000014  f04f0001          MOV      r0,#1
000018  f8c503fc          STR      r0,[r5,#0x3fc]
00001c  e031              B        |L36.130|
                  |L36.30|
;;;4809           }
;;;4810           else if (g_code IS G_94)
00001e  f5b47f6b          CMP      r4,#0x3ac
000022  d107              BNE      |L36.52|
;;;4811           {
;;;4812   #ifdef DEBUG_EMC
;;;4813               COMMENT("interpreter: feed mode set to units per minute");
000024  a023              ADR      r0,|L36.180|
000026  f7fffffe          BL       COMMENT
;;;4814   #endif
;;;4815               settings->feed_mode SET_TO UNITS_PER_MINUTE;
00002a  f04f0000          MOV      r0,#0
00002e  f8c503fc          STR      r0,[r5,#0x3fc]
000032  e026              B        |L36.130|
                  |L36.52|
;;;4816           }
;;;4817           else
;;;4818               ERM(NCE_BUG_CODE_NOT_G93_OR_G94);
000034  f04f0100          MOV      r1,#0
000038  482a              LDR      r0,|L36.228|
00003a  f8c0114c          STR      r1,[r0,#0x14c]
00003e  4601              MOV      r1,r0
000040  f8d1314c          LDR      r3,[r1,#0x14c]
000044  f8d1114c          LDR      r1,[r1,#0x14c]
000048  f1010101          ADD      r1,r1,#1
00004c  4602              MOV      r2,r0
00004e  f8c2114c          STR      r1,[r2,#0x14c]
000052  eb030183          ADD      r1,r3,r3,LSL #2
000056  f6a06254          SUB      r2,r0,#0xe54
00005a  eb021101          ADD      r1,r2,r1,LSL #4
00005e  4608              MOV      r0,r1
000060  4921              LDR      r1,|L36.232|
000062  f7fffffe          BL       strcpy
000066  f04f0100          MOV      r1,#0
00006a  481e              LDR      r0,|L36.228|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]
000070  eb000080          ADD      r0,r0,r0,LSL #2
000074  4a1d              LDR      r2,|L36.236|
000076  eb021000          ADD      r0,r2,r0,LSL #4
00007a  7001              STRB     r1,[r0,#0]
00007c  f04f001a          MOV      r0,#0x1a
                  |L36.128|
;;;4819           return RS274NGC_OK;
;;;4820       }
000080  bd70              POP      {r4-r6,pc}
                  |L36.130|
000082  2000              MOVS     r0,#0                 ;4819
000084  e7fc              B        |L36.128|
;;;4821   
                          ENDP

000086  0000              DCW      0x0000
                  |L36.136|
000088  696e7465          DCB      "interpreter: feed mode set to inverse time",0
00008c  72707265
000090  7465723a
000094  20666565
000098  64206d6f
00009c  64652073
0000a0  65742074
0000a4  6f20696e
0000a8  76657273
0000ac  65207469
0000b0  6d6500  
0000b3  00                DCB      0
                  |L36.180|
0000b4  696e7465          DCB      "interpreter: feed mode set to units per minute",0
0000b8  72707265
0000bc  7465723a
0000c0  20666565
0000c4  64206d6f
0000c8  64652073
0000cc  65742074
0000d0  6f20756e
0000d4  69747320
0000d8  70657220
0000dc  6d696e75
0000e0  746500  
0000e3  00                DCB      0
                  |L36.228|
                          DCD      _setup+0xc000
                  |L36.232|
                          DCD      |symbol_number.472|
                  |L36.236|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_feed_rate||, CODE, READONLY, ALIGN=1

                  convert_feed_rate PROC
;;;4838   
;;;4839       static int convert_feed_rate(                 /* ARGUMENTS                                */
000000  b570              PUSH     {r4-r6,lr}
;;;4840       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;4841       setup_pointer settings)                       /* pointer to machine settings              */
;;;4842       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4843           SET_FEED_RATE(block->f_number);
000006  f8d41108          LDR      r1,[r4,#0x108]
00000a  460a              MOV      r2,r1
00000c  f8d4010c          LDR      r0,[r4,#0x10c]
000010  4603              MOV      r3,r0
000012  4610              MOV      r0,r2
000014  4619              MOV      r1,r3
000016  f7fffffe          BL       SET_FEED_RATE
;;;4844           settings->feed_rate SET_TO block->f_number;
00001a  f5047084          ADD      r0,r4,#0x108
00001e  c803              LDM      r0,{r0,r1}
000020  f5056281          ADD      r2,r5,#0x408
000024  c203              STM      r2!,{r0,r1}
;;;4845           return RS274NGC_OK;
000026  2000              MOVS     r0,#0
;;;4846       }
000028  bd70              POP      {r4-r6,pc}
;;;4847   
                          ENDP


                          AREA ||i.convert_g||, CODE, READONLY, ALIGN=2

                  convert_g PROC
;;;4903   
;;;4904       static int convert_g(                         /* ARGUMENTS                                    */
000000  b570              PUSH     {r4-r6,lr}
;;;4905       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;4906       setup_pointer settings)                       /* pointer to machine settings                  */
;;;4907       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4908           static char name[] SET_TO "convert_g";
;;;4909           int status;
;;;4910   
;;;4911           if (block->g_modes[0] IS G_4)
000006  f8d40110          LDR      r0,[r4,#0x110]
00000a  2828              CMP      r0,#0x28
00000c  d132              BNE      |L38.116|
;;;4912           {
;;;4913               CHP(convert_dwell(block->p_number));
00000e  f8d411b0          LDR      r1,[r4,#0x1b0]
000012  460a              MOV      r2,r1
000014  f8d401b4          LDR      r0,[r4,#0x1b4]
000018  4603              MOV      r3,r0
00001a  4610              MOV      r0,r2
00001c  4619              MOV      r1,r3
00001e  f7fffffe          BL       convert_dwell
000022  0006              MOVS     r6,r0
000024  d026              BEQ      |L38.116|
000026  48fd              LDR      r0,|L38.1052|
000028  f8d0014c          LDR      r0,[r0,#0x14c]
00002c  2831              CMP      r0,#0x31
00002e  da1f              BGE      |L38.112|
000030  49fa              LDR      r1,|L38.1052|
000032  f8d1314c          LDR      r3,[r1,#0x14c]
000036  f8d1114c          LDR      r1,[r1,#0x14c]
00003a  1c49              ADDS     r1,r1,#1
00003c  4af7              LDR      r2,|L38.1052|
00003e  f8c2114c          STR      r1,[r2,#0x14c]
000042  eb030183          ADD      r1,r3,r3,LSL #2
000046  f6a26254          SUB      r2,r2,#0xe54
00004a  eb021101          ADD      r1,r2,r1,LSL #4
00004e  4608              MOV      r0,r1
000050  49f3              LDR      r1,|L38.1056|
000052  f7fffffe          BL       strcpy
000056  f04f0100          MOV      r1,#0
00005a  48f0              LDR      r0,|L38.1052|
00005c  f8d0014c          LDR      r0,[r0,#0x14c]
000060  eb000080          ADD      r0,r0,r0,LSL #2
000064  4aef              LDR      r2,|L38.1060|
000066  eb021000          ADD      r0,r2,r0,LSL #4
00006a  7001              STRB     r1,[r0,#0]
00006c  4630              MOV      r0,r6
                  |L38.110|
;;;4914           }
;;;4915           if (block->g_modes[2] ISNT -1)
;;;4916           {
;;;4917               CHP(convert_set_plane(block->g_modes[2], settings));
;;;4918           }
;;;4919           if (block->g_modes[6] ISNT -1)
;;;4920           {
;;;4921               CHP(convert_length_units(block->g_modes[6], settings));
;;;4922           }
;;;4923           if (block->g_modes[7] ISNT -1)
;;;4924           {
;;;4925               CHP(convert_cutter_compensation(block->g_modes[7], block, settings));
;;;4926           }
;;;4927           if (block->g_modes[8] ISNT -1)
;;;4928           {
;;;4929               CHP(convert_tool_length_offset(block->g_modes[8], block, settings));
;;;4930           }
;;;4931           if (block->g_modes[12] ISNT -1)
;;;4932           {
;;;4933               CHP(convert_coordinate_system(block->g_modes[12], settings));
;;;4934           }
;;;4935           if (block->g_modes[13] ISNT -1)
;;;4936           {
;;;4937               CHP(convert_control_mode(block->g_modes[13], settings));
;;;4938           }
;;;4939           if (block->g_modes[3] ISNT -1)
;;;4940           {
;;;4941               CHP(convert_distance_mode(block->g_modes[3], settings));
;;;4942           }
;;;4943           if (block->g_modes[10] ISNT -1)
;;;4944           {
;;;4945               CHP(convert_retract_mode(block->g_modes[10], settings));
;;;4946           }
;;;4947           if (block->g_modes[0] ISNT -1)
;;;4948           {
;;;4949               CHP(convert_modal_0(block->g_modes[0], block, settings));
;;;4950           }
;;;4951           if (block->motion_to_be ISNT -1)
;;;4952           {
;;;4953               CHP(convert_motion(block->motion_to_be, block, settings));
;;;4954           }
;;;4955           return RS274NGC_OK;
;;;4956       }
00006e  bd70              POP      {r4-r6,pc}
                  |L38.112|
000070  4630              MOV      r0,r6                 ;4913
000072  e7fc              B        |L38.110|
                  |L38.116|
000074  f44f708c          MOV      r0,#0x118             ;4915
000078  5900              LDR      r0,[r0,r4]            ;4915
00007a  1c40              ADDS     r0,r0,#1              ;4915
00007c  d02e              BEQ      |L38.220|
00007e  f44f718c          MOV      r1,#0x118             ;4917
000082  5909              LDR      r1,[r1,r4]            ;4917
000084  4608              MOV      r0,r1                 ;4917
000086  4629              MOV      r1,r5                 ;4917
000088  f7fffffe          BL       convert_set_plane
00008c  0006              MOVS     r6,r0                 ;4917
00008e  d025              BEQ      |L38.220|
000090  48e2              LDR      r0,|L38.1052|
000092  f8d0014c          LDR      r0,[r0,#0x14c]        ;4917
000096  2831              CMP      r0,#0x31              ;4917
000098  da1e              BGE      |L38.216|
00009a  49e0              LDR      r1,|L38.1052|
00009c  f8d1314c          LDR      r3,[r1,#0x14c]        ;4917
0000a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;4917
0000a4  1c49              ADDS     r1,r1,#1              ;4917
0000a6  4add              LDR      r2,|L38.1052|
0000a8  f8c2114c          STR      r1,[r2,#0x14c]        ;4917
0000ac  eb030183          ADD      r1,r3,r3,LSL #2       ;4917
0000b0  4adc              LDR      r2,|L38.1060|
0000b2  eb021101          ADD      r1,r2,r1,LSL #4       ;4917
0000b6  4608              MOV      r0,r1                 ;4917
0000b8  49d9              LDR      r1,|L38.1056|
0000ba  f7fffffe          BL       strcpy
0000be  f04f0100          MOV      r1,#0                 ;4917
0000c2  48d6              LDR      r0,|L38.1052|
0000c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4917
0000c8  eb000080          ADD      r0,r0,r0,LSL #2       ;4917
0000cc  4ad5              LDR      r2,|L38.1060|
0000ce  eb021000          ADD      r0,r2,r0,LSL #4       ;4917
0000d2  7001              STRB     r1,[r0,#0]            ;4917
0000d4  4630              MOV      r0,r6                 ;4917
0000d6  e7ca              B        |L38.110|
                  |L38.216|
0000d8  4630              MOV      r0,r6                 ;4917
0000da  e7c8              B        |L38.110|
                  |L38.220|
0000dc  f44f7094          MOV      r0,#0x128             ;4919
0000e0  5900              LDR      r0,[r0,r4]            ;4919
0000e2  1c40              ADDS     r0,r0,#1              ;4919
0000e4  d02e              BEQ      |L38.324|
0000e6  f44f7194          MOV      r1,#0x128             ;4921
0000ea  5909              LDR      r1,[r1,r4]            ;4921
0000ec  4608              MOV      r0,r1                 ;4921
0000ee  4629              MOV      r1,r5                 ;4921
0000f0  f7fffffe          BL       convert_length_units
0000f4  0006              MOVS     r6,r0                 ;4921
0000f6  d025              BEQ      |L38.324|
0000f8  48c8              LDR      r0,|L38.1052|
0000fa  f8d0014c          LDR      r0,[r0,#0x14c]        ;4921
0000fe  2831              CMP      r0,#0x31              ;4921
000100  da1e              BGE      |L38.320|
000102  49c6              LDR      r1,|L38.1052|
000104  f8d1314c          LDR      r3,[r1,#0x14c]        ;4921
000108  f8d1114c          LDR      r1,[r1,#0x14c]        ;4921
00010c  1c49              ADDS     r1,r1,#1              ;4921
00010e  4ac3              LDR      r2,|L38.1052|
000110  f8c2114c          STR      r1,[r2,#0x14c]        ;4921
000114  eb030183          ADD      r1,r3,r3,LSL #2       ;4921
000118  4ac2              LDR      r2,|L38.1060|
00011a  eb021101          ADD      r1,r2,r1,LSL #4       ;4921
00011e  4608              MOV      r0,r1                 ;4921
000120  49bf              LDR      r1,|L38.1056|
000122  f7fffffe          BL       strcpy
000126  f04f0100          MOV      r1,#0                 ;4921
00012a  48bc              LDR      r0,|L38.1052|
00012c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4921
000130  eb000080          ADD      r0,r0,r0,LSL #2       ;4921
000134  4abb              LDR      r2,|L38.1060|
000136  eb021000          ADD      r0,r2,r0,LSL #4       ;4921
00013a  7001              STRB     r1,[r0,#0]            ;4921
00013c  4630              MOV      r0,r6                 ;4921
00013e  e796              B        |L38.110|
                  |L38.320|
000140  4630              MOV      r0,r6                 ;4921
000142  e794              B        |L38.110|
                  |L38.324|
000144  f44f7096          MOV      r0,#0x12c             ;4923
000148  5900              LDR      r0,[r0,r4]            ;4923
00014a  1c40              ADDS     r0,r0,#1              ;4923
00014c  d02f              BEQ      |L38.430|
00014e  f44f7196          MOV      r1,#0x12c             ;4925
000152  5909              LDR      r1,[r1,r4]            ;4925
000154  4608              MOV      r0,r1                 ;4925
000156  462a              MOV      r2,r5                 ;4925
000158  4621              MOV      r1,r4                 ;4925
00015a  f7fffffe          BL       convert_cutter_compensation
00015e  0006              MOVS     r6,r0                 ;4925
000160  d025              BEQ      |L38.430|
000162  48ae              LDR      r0,|L38.1052|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;4925
000168  2831              CMP      r0,#0x31              ;4925
00016a  da1e              BGE      |L38.426|
00016c  49ab              LDR      r1,|L38.1052|
00016e  f8d1314c          LDR      r3,[r1,#0x14c]        ;4925
000172  f8d1114c          LDR      r1,[r1,#0x14c]        ;4925
000176  1c49              ADDS     r1,r1,#1              ;4925
000178  4aa8              LDR      r2,|L38.1052|
00017a  f8c2114c          STR      r1,[r2,#0x14c]        ;4925
00017e  eb030183          ADD      r1,r3,r3,LSL #2       ;4925
000182  4aa8              LDR      r2,|L38.1060|
000184  eb021101          ADD      r1,r2,r1,LSL #4       ;4925
000188  4608              MOV      r0,r1                 ;4925
00018a  49a5              LDR      r1,|L38.1056|
00018c  f7fffffe          BL       strcpy
000190  f04f0100          MOV      r1,#0                 ;4925
000194  48a1              LDR      r0,|L38.1052|
000196  f8d0014c          LDR      r0,[r0,#0x14c]        ;4925
00019a  eb000080          ADD      r0,r0,r0,LSL #2       ;4925
00019e  4aa1              LDR      r2,|L38.1060|
0001a0  eb021000          ADD      r0,r2,r0,LSL #4       ;4925
0001a4  7001              STRB     r1,[r0,#0]            ;4925
0001a6  4630              MOV      r0,r6                 ;4925
0001a8  e761              B        |L38.110|
                  |L38.426|
0001aa  4630              MOV      r0,r6                 ;4925
0001ac  e75f              B        |L38.110|
                  |L38.430|
0001ae  f44f7098          MOV      r0,#0x130             ;4927
0001b2  5900              LDR      r0,[r0,r4]            ;4927
0001b4  1c40              ADDS     r0,r0,#1              ;4927
0001b6  d02f              BEQ      |L38.536|
0001b8  f44f7198          MOV      r1,#0x130             ;4929
0001bc  5909              LDR      r1,[r1,r4]            ;4929
0001be  4608              MOV      r0,r1                 ;4929
0001c0  462a              MOV      r2,r5                 ;4929
0001c2  4621              MOV      r1,r4                 ;4929
0001c4  f7fffffe          BL       convert_tool_length_offset
0001c8  0006              MOVS     r6,r0                 ;4929
0001ca  d025              BEQ      |L38.536|
0001cc  4893              LDR      r0,|L38.1052|
0001ce  f8d0014c          LDR      r0,[r0,#0x14c]        ;4929
0001d2  2831              CMP      r0,#0x31              ;4929
0001d4  da1e              BGE      |L38.532|
0001d6  4991              LDR      r1,|L38.1052|
0001d8  f8d1314c          LDR      r3,[r1,#0x14c]        ;4929
0001dc  f8d1114c          LDR      r1,[r1,#0x14c]        ;4929
0001e0  1c49              ADDS     r1,r1,#1              ;4929
0001e2  4a8e              LDR      r2,|L38.1052|
0001e4  f8c2114c          STR      r1,[r2,#0x14c]        ;4929
0001e8  eb030183          ADD      r1,r3,r3,LSL #2       ;4929
0001ec  4a8d              LDR      r2,|L38.1060|
0001ee  eb021101          ADD      r1,r2,r1,LSL #4       ;4929
0001f2  4608              MOV      r0,r1                 ;4929
0001f4  498a              LDR      r1,|L38.1056|
0001f6  f7fffffe          BL       strcpy
0001fa  f04f0100          MOV      r1,#0                 ;4929
0001fe  4887              LDR      r0,|L38.1052|
000200  f8d0014c          LDR      r0,[r0,#0x14c]        ;4929
000204  eb000080          ADD      r0,r0,r0,LSL #2       ;4929
000208  4a86              LDR      r2,|L38.1060|
00020a  eb021000          ADD      r0,r2,r0,LSL #4       ;4929
00020e  7001              STRB     r1,[r0,#0]            ;4929
000210  4630              MOV      r0,r6                 ;4929
000212  e72c              B        |L38.110|
                  |L38.532|
000214  4630              MOV      r0,r6                 ;4929
000216  e72a              B        |L38.110|
                  |L38.536|
000218  f44f70a0          MOV      r0,#0x140             ;4931
00021c  5900              LDR      r0,[r0,r4]            ;4931
00021e  1c40              ADDS     r0,r0,#1              ;4931
000220  d02e              BEQ      |L38.640|
000222  f44f71a0          MOV      r1,#0x140             ;4933
000226  5909              LDR      r1,[r1,r4]            ;4933
000228  4608              MOV      r0,r1                 ;4933
00022a  4629              MOV      r1,r5                 ;4933
00022c  f7fffffe          BL       convert_coordinate_system
000230  0006              MOVS     r6,r0                 ;4933
000232  d025              BEQ      |L38.640|
000234  4879              LDR      r0,|L38.1052|
000236  f8d0014c          LDR      r0,[r0,#0x14c]        ;4933
00023a  2831              CMP      r0,#0x31              ;4933
00023c  da1e              BGE      |L38.636|
00023e  4977              LDR      r1,|L38.1052|
000240  f8d1314c          LDR      r3,[r1,#0x14c]        ;4933
000244  f8d1114c          LDR      r1,[r1,#0x14c]        ;4933
000248  1c49              ADDS     r1,r1,#1              ;4933
00024a  4a74              LDR      r2,|L38.1052|
00024c  f8c2114c          STR      r1,[r2,#0x14c]        ;4933
000250  eb030183          ADD      r1,r3,r3,LSL #2       ;4933
000254  4a73              LDR      r2,|L38.1060|
000256  eb021101          ADD      r1,r2,r1,LSL #4       ;4933
00025a  4608              MOV      r0,r1                 ;4933
00025c  4970              LDR      r1,|L38.1056|
00025e  f7fffffe          BL       strcpy
000262  f04f0100          MOV      r1,#0                 ;4933
000266  486d              LDR      r0,|L38.1052|
000268  f8d0014c          LDR      r0,[r0,#0x14c]        ;4933
00026c  eb000080          ADD      r0,r0,r0,LSL #2       ;4933
000270  4a6c              LDR      r2,|L38.1060|
000272  eb021000          ADD      r0,r2,r0,LSL #4       ;4933
000276  7001              STRB     r1,[r0,#0]            ;4933
000278  4630              MOV      r0,r6                 ;4933
00027a  e6f8              B        |L38.110|
                  |L38.636|
00027c  4630              MOV      r0,r6                 ;4933
00027e  e6f6              B        |L38.110|
                  |L38.640|
000280  f44f70a2          MOV      r0,#0x144             ;4935
000284  5900              LDR      r0,[r0,r4]            ;4935
000286  1c40              ADDS     r0,r0,#1              ;4935
000288  d02e              BEQ      |L38.744|
00028a  f44f71a2          MOV      r1,#0x144             ;4937
00028e  5909              LDR      r1,[r1,r4]            ;4937
000290  4608              MOV      r0,r1                 ;4937
000292  4629              MOV      r1,r5                 ;4937
000294  f7fffffe          BL       convert_control_mode
000298  0006              MOVS     r6,r0                 ;4937
00029a  d025              BEQ      |L38.744|
00029c  485f              LDR      r0,|L38.1052|
00029e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4937
0002a2  2831              CMP      r0,#0x31              ;4937
0002a4  da1e              BGE      |L38.740|
0002a6  495d              LDR      r1,|L38.1052|
0002a8  f8d1314c          LDR      r3,[r1,#0x14c]        ;4937
0002ac  f8d1114c          LDR      r1,[r1,#0x14c]        ;4937
0002b0  1c49              ADDS     r1,r1,#1              ;4937
0002b2  4a5a              LDR      r2,|L38.1052|
0002b4  f8c2114c          STR      r1,[r2,#0x14c]        ;4937
0002b8  eb030183          ADD      r1,r3,r3,LSL #2       ;4937
0002bc  4a59              LDR      r2,|L38.1060|
0002be  eb021101          ADD      r1,r2,r1,LSL #4       ;4937
0002c2  4608              MOV      r0,r1                 ;4937
0002c4  4956              LDR      r1,|L38.1056|
0002c6  f7fffffe          BL       strcpy
0002ca  f04f0100          MOV      r1,#0                 ;4937
0002ce  4853              LDR      r0,|L38.1052|
0002d0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4937
0002d4  eb000080          ADD      r0,r0,r0,LSL #2       ;4937
0002d8  4a52              LDR      r2,|L38.1060|
0002da  eb021000          ADD      r0,r2,r0,LSL #4       ;4937
0002de  7001              STRB     r1,[r0,#0]            ;4937
0002e0  4630              MOV      r0,r6                 ;4937
0002e2  e6c4              B        |L38.110|
                  |L38.740|
0002e4  4630              MOV      r0,r6                 ;4937
0002e6  e6c2              B        |L38.110|
                  |L38.744|
0002e8  f44f708e          MOV      r0,#0x11c             ;4939
0002ec  5900              LDR      r0,[r0,r4]            ;4939
0002ee  1c40              ADDS     r0,r0,#1              ;4939
0002f0  d02e              BEQ      |L38.848|
0002f2  f44f718e          MOV      r1,#0x11c             ;4941
0002f6  5909              LDR      r1,[r1,r4]            ;4941
0002f8  4608              MOV      r0,r1                 ;4941
0002fa  4629              MOV      r1,r5                 ;4941
0002fc  f7fffffe          BL       convert_distance_mode
000300  0006              MOVS     r6,r0                 ;4941
000302  d025              BEQ      |L38.848|
000304  4845              LDR      r0,|L38.1052|
000306  f8d0014c          LDR      r0,[r0,#0x14c]        ;4941
00030a  2831              CMP      r0,#0x31              ;4941
00030c  da1e              BGE      |L38.844|
00030e  4943              LDR      r1,|L38.1052|
000310  f8d1314c          LDR      r3,[r1,#0x14c]        ;4941
000314  f8d1114c          LDR      r1,[r1,#0x14c]        ;4941
000318  1c49              ADDS     r1,r1,#1              ;4941
00031a  4a40              LDR      r2,|L38.1052|
00031c  f8c2114c          STR      r1,[r2,#0x14c]        ;4941
000320  eb030183          ADD      r1,r3,r3,LSL #2       ;4941
000324  4a3f              LDR      r2,|L38.1060|
000326  eb021101          ADD      r1,r2,r1,LSL #4       ;4941
00032a  4608              MOV      r0,r1                 ;4941
00032c  493c              LDR      r1,|L38.1056|
00032e  f7fffffe          BL       strcpy
000332  f04f0100          MOV      r1,#0                 ;4941
000336  4839              LDR      r0,|L38.1052|
000338  f8d0014c          LDR      r0,[r0,#0x14c]        ;4941
00033c  eb000080          ADD      r0,r0,r0,LSL #2       ;4941
000340  4a38              LDR      r2,|L38.1060|
000342  eb021000          ADD      r0,r2,r0,LSL #4       ;4941
000346  7001              STRB     r1,[r0,#0]            ;4941
000348  4630              MOV      r0,r6                 ;4941
00034a  e690              B        |L38.110|
                  |L38.844|
00034c  4630              MOV      r0,r6                 ;4941
00034e  e68e              B        |L38.110|
                  |L38.848|
000350  f44f709c          MOV      r0,#0x138             ;4943
000354  5900              LDR      r0,[r0,r4]            ;4943
000356  1c40              ADDS     r0,r0,#1              ;4943
000358  d02e              BEQ      |L38.952|
00035a  f44f719c          MOV      r1,#0x138             ;4945
00035e  5909              LDR      r1,[r1,r4]            ;4945
000360  4608              MOV      r0,r1                 ;4945
000362  4629              MOV      r1,r5                 ;4945
000364  f7fffffe          BL       convert_retract_mode
000368  0006              MOVS     r6,r0                 ;4945
00036a  d025              BEQ      |L38.952|
00036c  482b              LDR      r0,|L38.1052|
00036e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4945
000372  2831              CMP      r0,#0x31              ;4945
000374  da1e              BGE      |L38.948|
000376  4929              LDR      r1,|L38.1052|
000378  f8d1314c          LDR      r3,[r1,#0x14c]        ;4945
00037c  f8d1114c          LDR      r1,[r1,#0x14c]        ;4945
000380  1c49              ADDS     r1,r1,#1              ;4945
000382  4a26              LDR      r2,|L38.1052|
000384  f8c2114c          STR      r1,[r2,#0x14c]        ;4945
000388  eb030183          ADD      r1,r3,r3,LSL #2       ;4945
00038c  4a25              LDR      r2,|L38.1060|
00038e  eb021101          ADD      r1,r2,r1,LSL #4       ;4945
000392  4608              MOV      r0,r1                 ;4945
000394  4922              LDR      r1,|L38.1056|
000396  f7fffffe          BL       strcpy
00039a  f04f0100          MOV      r1,#0                 ;4945
00039e  481f              LDR      r0,|L38.1052|
0003a0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4945
0003a4  eb000080          ADD      r0,r0,r0,LSL #2       ;4945
0003a8  4a1e              LDR      r2,|L38.1060|
0003aa  eb021000          ADD      r0,r2,r0,LSL #4       ;4945
0003ae  7001              STRB     r1,[r0,#0]            ;4945
0003b0  4630              MOV      r0,r6                 ;4945
0003b2  e65c              B        |L38.110|
                  |L38.948|
0003b4  4630              MOV      r0,r6                 ;4945
0003b6  e65a              B        |L38.110|
                  |L38.952|
0003b8  f8d40110          LDR      r0,[r4,#0x110]        ;4947
0003bc  1c40              ADDS     r0,r0,#1              ;4947
0003be  d035              BEQ      |L38.1068|
0003c0  f8d41110          LDR      r1,[r4,#0x110]        ;4949
0003c4  4608              MOV      r0,r1                 ;4949
0003c6  462a              MOV      r2,r5                 ;4949
0003c8  4621              MOV      r1,r4                 ;4949
0003ca  f7fffffe          BL       convert_modal_0
0003ce  0006              MOVS     r6,r0                 ;4949
0003d0  d02c              BEQ      |L38.1068|
0003d2  4812              LDR      r0,|L38.1052|
0003d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4949
0003d8  2831              CMP      r0,#0x31              ;4949
0003da  da25              BGE      |L38.1064|
0003dc  490f              LDR      r1,|L38.1052|
0003de  f8d1314c          LDR      r3,[r1,#0x14c]        ;4949
0003e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;4949
0003e6  1c49              ADDS     r1,r1,#1              ;4949
0003e8  4a0c              LDR      r2,|L38.1052|
0003ea  f8c2114c          STR      r1,[r2,#0x14c]        ;4949
0003ee  eb030183          ADD      r1,r3,r3,LSL #2       ;4949
0003f2  4a0c              LDR      r2,|L38.1060|
0003f4  eb021101          ADD      r1,r2,r1,LSL #4       ;4949
0003f8  4608              MOV      r0,r1                 ;4949
0003fa  4909              LDR      r1,|L38.1056|
0003fc  f7fffffe          BL       strcpy
000400  f04f0100          MOV      r1,#0                 ;4949
000404  4805              LDR      r0,|L38.1052|
000406  f8d0014c          LDR      r0,[r0,#0x14c]        ;4949
00040a  eb000080          ADD      r0,r0,r0,LSL #2       ;4949
00040e  4a05              LDR      r2,|L38.1060|
000410  eb021000          ADD      r0,r2,r0,LSL #4       ;4949
000414  7001              STRB     r1,[r0,#0]            ;4949
000416  4630              MOV      r0,r6                 ;4949
000418  e629              B        |L38.110|
00041a  0000              DCW      0x0000
                  |L38.1052|
                          DCD      _setup+0xc000
                  |L38.1056|
                          DCD      |symbol_number.473|
                  |L38.1060|
                          DCD      _setup+0xb1ac
                  |L38.1064|
000428  4630              MOV      r0,r6                 ;4949
00042a  e620              B        |L38.110|
                  |L38.1068|
00042c  f8d40180          LDR      r0,[r4,#0x180]        ;4951
000430  1c40              ADDS     r0,r0,#1              ;4951
000432  d02f              BEQ      |L38.1172|
000434  f8d41180          LDR      r1,[r4,#0x180]        ;4953
000438  4608              MOV      r0,r1                 ;4953
00043a  462a              MOV      r2,r5                 ;4953
00043c  4621              MOV      r1,r4                 ;4953
00043e  f7fffffe          BL       convert_motion
000442  0006              MOVS     r6,r0                 ;4953
000444  d026              BEQ      |L38.1172|
000446  4814              LDR      r0,|L38.1176|
000448  f8d0014c          LDR      r0,[r0,#0x14c]        ;4953
00044c  2831              CMP      r0,#0x31              ;4953
00044e  da1f              BGE      |L38.1168|
000450  4911              LDR      r1,|L38.1176|
000452  f8d1314c          LDR      r3,[r1,#0x14c]        ;4953
000456  f8d1114c          LDR      r1,[r1,#0x14c]        ;4953
00045a  1c49              ADDS     r1,r1,#1              ;4953
00045c  4a0e              LDR      r2,|L38.1176|
00045e  f8c2114c          STR      r1,[r2,#0x14c]        ;4953
000462  eb030183          ADD      r1,r3,r3,LSL #2       ;4953
000466  f6a26254          SUB      r2,r2,#0xe54          ;4953
00046a  eb021101          ADD      r1,r2,r1,LSL #4       ;4953
00046e  4608              MOV      r0,r1                 ;4953
000470  490a              LDR      r1,|L38.1180|
000472  f7fffffe          BL       strcpy
000476  f04f0100          MOV      r1,#0                 ;4953
00047a  4807              LDR      r0,|L38.1176|
00047c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4953
000480  eb000080          ADD      r0,r0,r0,LSL #2       ;4953
000484  4a06              LDR      r2,|L38.1184|
000486  eb021000          ADD      r0,r2,r0,LSL #4       ;4953
00048a  7001              STRB     r1,[r0,#0]            ;4953
00048c  4630              MOV      r0,r6                 ;4953
00048e  e5ee              B        |L38.110|
                  |L38.1168|
000490  4630              MOV      r0,r6                 ;4953
000492  e5ec              B        |L38.110|
                  |L38.1172|
000494  2000              MOVS     r0,#0                 ;4955
000496  e5ea              B        |L38.110|
;;;4957   
                          ENDP

                  |L38.1176|
                          DCD      _setup+0xc000
                  |L38.1180|
                          DCD      |symbol_number.473|
                  |L38.1184|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_home||, CODE, READONLY, ALIGN=2

                  convert_home PROC
;;;4987   
;;;4988       static int convert_home(                      /* ARGUMENTS                                */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;4989       int move,                                     /* G code, must be G_28 or G_30             */
;;;4990       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;4991       setup_pointer settings)                       /* pointer to machine settings              */
;;;4992       {
000004  b08d              SUB      sp,sp,#0x34
000006  4682              MOV      r10,r0
000008  468b              MOV      r11,r1
00000a  4690              MOV      r8,r2
;;;4993           static char name[] SET_TO "convert_home";
;;;4994           double end_x;
;;;4995           double end_y;
;;;4996           double end_z;
;;;4997   #ifdef AA
;;;4998           double AA_end;                            /*AA*/
;;;4999   #endif
;;;5000   #ifdef AA
;;;5001           double AA_end2;                           /*AA*/
;;;5002   #endif
;;;5003   #ifdef BB
;;;5004           double BB_end;                            /*BB*/
;;;5005   #endif
;;;5006   #ifdef BB
;;;5007           double BB_end2;                           /*BB*/
;;;5008   #endif
;;;5009   #ifdef CC
;;;5010           double CC_end;                            /*CC*/
;;;5011   #endif
;;;5012   #ifdef CC
;;;5013           double CC_end2;                           /*CC*/
;;;5014   #endif
;;;5015           double * parameters;
;;;5016   
;;;5017           parameters SET_TO settings->parameters;
00000c  f50860c9          ADD      r0,r8,#0x648
000010  4681              MOV      r9,r0
;;;5018           find_ends(block, settings, &end_x, &end_y,
000012  a806              ADD      r0,sp,#0x18
000014  ab08              ADD      r3,sp,#0x20
000016  aa0a              ADD      r2,sp,#0x28
000018  4641              MOV      r1,r8
00001a  9000              STR      r0,[sp,#0]
00001c  4658              MOV      r0,r11
00001e  f7fffffe          BL       find_ends
;;;5019               &end_z
;;;5020       #ifdef AA
;;;5021               , &AA_end
;;;5022       #endif
;;;5023   
;;;5024       #ifdef BB
;;;5025               , &BB_end
;;;5026       #endif
;;;5027   
;;;5028       #ifdef CC
;;;5029               , &CC_end
;;;5030       #endif
;;;5031               );
;;;5032   
;;;5033           CHK((settings->cutter_comp_side ISNT OFF),
000022  f8d803b0          LDR      r0,[r8,#0x3b0]
000026  b340              CBZ      r0,|L39.122|
000028  f04f0100          MOV      r1,#0
00002c  485c              LDR      r0,|L39.416|
00002e  f8c0114c          STR      r1,[r0,#0x14c]
000032  4601              MOV      r1,r0
000034  f8d1314c          LDR      r3,[r1,#0x14c]
000038  f8d1114c          LDR      r1,[r1,#0x14c]
00003c  f1010101          ADD      r1,r1,#1
000040  4602              MOV      r2,r0
000042  f8c2114c          STR      r1,[r2,#0x14c]
000046  eb030183          ADD      r1,r3,r3,LSL #2
00004a  f6a06254          SUB      r2,r0,#0xe54
00004e  eb021101          ADD      r1,r2,r1,LSL #4
000052  4608              MOV      r0,r1
000054  4953              LDR      r1,|L39.420|
000056  f7fffffe          BL       strcpy
00005a  f04f0100          MOV      r1,#0
00005e  4850              LDR      r0,|L39.416|
000060  f8d0014c          LDR      r0,[r0,#0x14c]
000064  eb000080          ADD      r0,r0,r0,LSL #2
000068  4a4f              LDR      r2,|L39.424|
00006a  eb021000          ADD      r0,r2,r0,LSL #4
00006e  7001              STRB     r1,[r0,#0]
000070  f04f003c          MOV      r0,#0x3c
                  |L39.116|
;;;5034               NCE_CANNOT_USE_G28_OR_G30_WITH_CUTTER_RADIUS_COMP);
;;;5035           STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;5036       #ifdef AA
;;;5037               ,           AA_end
;;;5038       #else
;;;5039       #ifdef ALL_AXES
;;;5040               , 0
;;;5041       #endif
;;;5042       #endif
;;;5043       #ifdef BB
;;;5044               ,  BB_end
;;;5045       #else
;;;5046       #ifdef ALL_AXES
;;;5047               , 0
;;;5048       #endif
;;;5049       #endif
;;;5050       #ifdef CC
;;;5051               ,  CC_end
;;;5052       #else
;;;5053       #ifdef ALL_AXES
;;;5054               , 0
;;;5055       #endif
;;;5056       #endif
;;;5057               );
;;;5058           if (move IS G_28)
;;;5059           {
;;;5060               find_relative
;;;5061                   (parameters[5161], parameters[5162], parameters[5163],
;;;5062       #ifdef AA
;;;5063                   parameters[5164],                 /*AA*/
;;;5064       #endif
;;;5065       #ifdef BB
;;;5066                   parameters[5165],                 /*BB*/
;;;5067       #endif
;;;5068       #ifdef CC
;;;5069                   parameters[5166],                 /*CC*/
;;;5070       #endif
;;;5071                   &end_x, &end_y, &end_z
;;;5072       #ifdef AA
;;;5073                   , &AA_end2
;;;5074       #endif
;;;5075   
;;;5076       #ifdef BB
;;;5077                   , &BB_end2
;;;5078       #endif
;;;5079   
;;;5080       #ifdef CC
;;;5081                   , &CC_end2
;;;5082       #endif
;;;5083                   , settings);
;;;5084           }
;;;5085           else if (move IS G_30)
;;;5086           {
;;;5087               find_relative
;;;5088                   (parameters[5181], parameters[5182], parameters[5183],
;;;5089       #ifdef AA
;;;5090                   parameters[5184],                 /*AA*/
;;;5091       #endif
;;;5092       #ifdef BB
;;;5093                   parameters[5185],                 /*BB*/
;;;5094       #endif
;;;5095       #ifdef CC
;;;5096                   parameters[5186],                 /*CC*/
;;;5097       #endif
;;;5098                   &end_x, &end_y, &end_z
;;;5099       #ifdef AA
;;;5100                   , &AA_end2
;;;5101       #endif
;;;5102   
;;;5103       #ifdef BB
;;;5104                   , &BB_end2
;;;5105       #endif
;;;5106   
;;;5107       #ifdef CC
;;;5108                   , &CC_end2
;;;5109       #endif
;;;5110                   , settings);
;;;5111           }
;;;5112           else
;;;5113               ERM(NCE_BUG_CODE_NOT_G28_OR_G30);
;;;5114           STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;5115       #ifdef AA
;;;5116               ,           AA_end
;;;5117       #else
;;;5118       #ifdef ALL_AXES
;;;5119               , 0
;;;5120       #endif
;;;5121       #endif
;;;5122       #ifdef BB
;;;5123               ,  BB_end
;;;5124       #else
;;;5125       #ifdef ALL_AXES
;;;5126               , 0
;;;5127       #endif
;;;5128       #endif
;;;5129       #ifdef CC
;;;5130               ,  CC_end
;;;5131       #else
;;;5132       #ifdef ALL_AXES
;;;5133               , 0
;;;5134       #endif
;;;5135       #endif
;;;5136               );
;;;5137           settings->current_x SET_TO end_x;
;;;5138           settings->current_y SET_TO end_y;
;;;5139           settings->current_z SET_TO end_z;
;;;5140   #ifdef AA
;;;5141           settings->AA_current SET_TO AA_end2;      /*AA*/
;;;5142   #endif
;;;5143   #ifdef BB
;;;5144           settings->BB_current SET_TO BB_end2;      /*BB*/
;;;5145   #endif
;;;5146   #ifdef CC
;;;5147           settings->CC_current SET_TO CC_end2;      /*CC*/
;;;5148   #endif
;;;5149           return RS274NGC_OK;
;;;5150       }
000074  b00d              ADD      sp,sp,#0x34
000076  e8bd8ff0          POP      {r4-r11,pc}
                  |L39.122|
00007a  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;5035
00007e  e9cd0100          STRD     r0,r1,[sp,#0]         ;5035
000082  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;5035
000086  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5035
00008a  f7fffffe          BL       STRAIGHT_TRAVERSE
00008e  f5ba7f8c          CMP      r10,#0x118            ;5058
000092  d11f              BNE      |L39.212|
000094  a806              ADD      r0,sp,#0x18           ;5060
000096  a908              ADD      r1,sp,#0x20           ;5060
000098  aa0a              ADD      r2,sp,#0x28           ;5060
00009a  e9cd0804          STRD     r0,r8,[sp,#0x10]      ;5060
00009e  e9cd2102          STRD     r2,r1,[sp,#8]         ;5060
0000a2  f5094020          ADD      r0,r9,#0xa000         ;5060
0000a6  f50070ac          ADD      r0,r0,#0x158          ;5060
0000aa  c803              LDM      r0,{r0,r1}            ;5060
0000ac  e9cd0100          STRD     r0,r1,[sp,#0]         ;5060
0000b0  f5094120          ADD      r1,r9,#0xa000         ;5060
0000b4  f50171a8          ADD      r1,r1,#0x150          ;5060
0000b8  c903              LDM      r1,{r0,r1}            ;5060
0000ba  4604              MOV      r4,r0                 ;5060
0000bc  460d              MOV      r5,r1                 ;5060
0000be  f5094120          ADD      r1,r9,#0xa000         ;5060
0000c2  f50171a4          ADD      r1,r1,#0x148          ;5060
0000c6  c903              LDM      r1,{r0,r1}            ;5060
0000c8  4606              MOV      r6,r0                 ;5060
0000ca  4622              MOV      r2,r4                 ;5060
0000cc  462b              MOV      r3,r5                 ;5060
0000ce  f7fffffe          BL       find_relative
0000d2  e049              B        |L39.360|
                  |L39.212|
0000d4  f5ba7f96          CMP      r10,#0x12c            ;5085
0000d8  d120              BNE      |L39.284|
0000da  a806              ADD      r0,sp,#0x18           ;5087
0000dc  a908              ADD      r1,sp,#0x20           ;5087
0000de  aa0a              ADD      r2,sp,#0x28           ;5087
0000e0  e9cd0804          STRD     r0,r8,[sp,#0x10]      ;5087
0000e4  e9cd2102          STRD     r2,r1,[sp,#8]         ;5087
0000e8  f5094120          ADD      r1,r9,#0xa000         ;5087
0000ec  f50171fc          ADD      r1,r1,#0x1f8          ;5087
0000f0  c903              LDM      r1,{r0,r1}            ;5087
0000f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;5087
0000f6  f5094020          ADD      r0,r9,#0xa000         ;5087
0000fa  f8d011f0          LDR      r1,[r0,#0x1f0]        ;5087
0000fe  f8d001f4          LDR      r0,[r0,#0x1f4]        ;5087
000102  460c              MOV      r4,r1                 ;5087
000104  4605              MOV      r5,r0                 ;5087
000106  f5094120          ADD      r1,r9,#0xa000         ;5087
00010a  f50171f4          ADD      r1,r1,#0x1e8          ;5087
00010e  c903              LDM      r1,{r0,r1}            ;5087
000110  4606              MOV      r6,r0                 ;5087
000112  4622              MOV      r2,r4                 ;5087
000114  462b              MOV      r3,r5                 ;5087
000116  f7fffffe          BL       find_relative
00011a  e025              B        |L39.360|
                  |L39.284|
00011c  f04f0100          MOV      r1,#0                 ;5113
000120  481f              LDR      r0,|L39.416|
000122  f8c0114c          STR      r1,[r0,#0x14c]        ;5113
000126  4601              MOV      r1,r0                 ;5113
000128  f8d1314c          LDR      r3,[r1,#0x14c]        ;5113
00012c  f8d1114c          LDR      r1,[r1,#0x14c]        ;5113
000130  f1010101          ADD      r1,r1,#1              ;5113
000134  4602              MOV      r2,r0                 ;5113
000136  f8c2114c          STR      r1,[r2,#0x14c]        ;5113
00013a  eb030183          ADD      r1,r3,r3,LSL #2       ;5113
00013e  4a1a              LDR      r2,|L39.424|
000140  eb021101          ADD      r1,r2,r1,LSL #4       ;5113
000144  4608              MOV      r0,r1                 ;5113
000146  4917              LDR      r1,|L39.420|
000148  f7fffffe          BL       strcpy
00014c  f04f0100          MOV      r1,#0                 ;5113
000150  4813              LDR      r0,|L39.416|
000152  f8d0014c          LDR      r0,[r0,#0x14c]        ;5113
000156  eb000080          ADD      r0,r0,r0,LSL #2       ;5113
00015a  4a13              LDR      r2,|L39.424|
00015c  eb021000          ADD      r0,r2,r0,LSL #4       ;5113
000160  7001              STRB     r1,[r0,#0]            ;5113
000162  f04f0013          MOV      r0,#0x13              ;5113
000166  e785              B        |L39.116|
                  |L39.360|
000168  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;5114
00016c  e9cd0100          STRD     r0,r1,[sp,#0]         ;5114
000170  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;5114
000174  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5114
000178  f7fffffe          BL       STRAIGHT_TRAVERSE
00017c  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5137
000180  f5087264          ADD      r2,r8,#0x390          ;5137
000184  c203              STM      r2!,{r0,r1}           ;5137
000186  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;5138
00018a  f5087266          ADD      r2,r8,#0x398          ;5138
00018e  c203              STM      r2!,{r0,r1}           ;5138
000190  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;5139
000194  f5087268          ADD      r2,r8,#0x3a0          ;5139
000198  c203              STM      r2!,{r0,r1}           ;5139
00019a  2000              MOVS     r0,#0                 ;5149
00019c  e76a              B        |L39.116|
;;;5151   
                          ENDP

00019e  0000              DCW      0x0000
                  |L39.416|
                          DCD      _setup+0xc000
                  |L39.420|
                          DCD      |symbol_number.474|
                  |L39.424|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_length_units||, CODE, READONLY, ALIGN=2

                  convert_length_units PROC
;;;5193   
;;;5194       static int convert_length_units(              /* ARGUMENTS                             */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;5195       int g_code,                                   /* g_code being executed (must be G_20 or G_21) */
;;;5196       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5197       {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;5198           static char name[] SET_TO "convert_length_units";
;;;5199           CHK((settings->cutter_comp_side ISNT OFF),
000008  f8d403b0          LDR      r0,[r4,#0x3b0]
00000c  b338              CBZ      r0,|L40.94|
00000e  f04f0100          MOV      r1,#0
000012  48b2              LDR      r0,|L40.732|
000014  f8c0114c          STR      r1,[r0,#0x14c]
000018  4601              MOV      r1,r0
00001a  f8d1314c          LDR      r3,[r1,#0x14c]
00001e  f8d1114c          LDR      r1,[r1,#0x14c]
000022  f1010101          ADD      r1,r1,#1
000026  4602              MOV      r2,r0
000028  f8c2114c          STR      r1,[r2,#0x14c]
00002c  eb030183          ADD      r1,r3,r3,LSL #2
000030  f6a06254          SUB      r2,r0,#0xe54
000034  eb021101          ADD      r1,r2,r1,LSL #4
000038  4608              MOV      r0,r1
00003a  49a9              LDR      r1,|L40.736|
00003c  f7fffffe          BL       strcpy
000040  f04f0100          MOV      r1,#0
000044  48a5              LDR      r0,|L40.732|
000046  f8d0014c          LDR      r0,[r0,#0x14c]
00004a  eb000080          ADD      r0,r0,r0,LSL #2
00004e  4aa5              LDR      r2,|L40.740|
000050  eb021000          ADD      r0,r2,r0,LSL #4
000054  7001              STRB     r1,[r0,#0]
000056  f04f0027          MOV      r0,#0x27
                  |L40.90|
;;;5200               NCE_CANNOT_CHANGE_UNITS_WITH_CUTTER_RADIUS_COMP);
;;;5201           if (g_code IS G_20)
;;;5202           {
;;;5203               USE_LENGTH_UNITS(CANON_UNITS_INCHES);
;;;5204               if (settings->length_units ISNT CANON_UNITS_INCHES)
;;;5205               {
;;;5206                   settings->length_units SET_TO CANON_UNITS_INCHES;
;;;5207                   settings->current_x SET_TO (settings->current_x * INCH_PER_MM);
;;;5208                   settings->current_y SET_TO (settings->current_y * INCH_PER_MM);
;;;5209                   settings->current_z SET_TO (settings->current_z * INCH_PER_MM);
;;;5210                   settings->axis_offset_x SET_TO
;;;5211                       (settings->axis_offset_x * INCH_PER_MM);
;;;5212                   settings->axis_offset_y SET_TO
;;;5213                       (settings->axis_offset_y * INCH_PER_MM);
;;;5214                   settings->axis_offset_z SET_TO
;;;5215                       (settings->axis_offset_z * INCH_PER_MM);
;;;5216                   settings->origin_offset_x SET_TO
;;;5217                       (settings->origin_offset_x * INCH_PER_MM);
;;;5218                   settings->origin_offset_y SET_TO
;;;5219                       (settings->origin_offset_y * INCH_PER_MM);
;;;5220                   settings->origin_offset_z SET_TO
;;;5221                       (settings->origin_offset_z * INCH_PER_MM);
;;;5222               }
;;;5223           }
;;;5224           else if (g_code IS G_21)
;;;5225           {
;;;5226               USE_LENGTH_UNITS(CANON_UNITS_MM);
;;;5227               if (settings->length_units ISNT CANON_UNITS_MM)
;;;5228               {
;;;5229                   settings->length_units SET_TO CANON_UNITS_MM;
;;;5230                   settings->current_x SET_TO (settings->current_x * MM_PER_INCH);
;;;5231                   settings->current_y SET_TO (settings->current_y * MM_PER_INCH);
;;;5232                   settings->current_z SET_TO (settings->current_z * MM_PER_INCH);
;;;5233                   settings->axis_offset_x SET_TO
;;;5234                       (settings->axis_offset_x * MM_PER_INCH);
;;;5235                   settings->axis_offset_y SET_TO
;;;5236                       (settings->axis_offset_y * MM_PER_INCH);
;;;5237                   settings->axis_offset_z SET_TO
;;;5238                       (settings->axis_offset_z * MM_PER_INCH);
;;;5239                   settings->origin_offset_x SET_TO
;;;5240                       (settings->origin_offset_x * MM_PER_INCH);
;;;5241                   settings->origin_offset_y SET_TO
;;;5242                       (settings->origin_offset_y * MM_PER_INCH);
;;;5243                   settings->origin_offset_z SET_TO
;;;5244                       (settings->origin_offset_z * MM_PER_INCH);
;;;5245               }
;;;5246           }
;;;5247           else
;;;5248               ERM(NCE_BUG_CODE_NOT_G20_OR_G21);
;;;5249           return RS274NGC_OK;
;;;5250       }
00005a  e8bd81f0          POP      {r4-r8,pc}
                  |L40.94|
00005e  2fc8              CMP      r7,#0xc8              ;5201
000060  d17e              BNE      |L40.352|
000062  2001              MOVS     r0,#1                 ;5203
000064  f7fffffe          BL       USE_LENGTH_UNITS
000068  f8d4051c          LDR      r0,[r4,#0x51c]        ;5204
00006c  2801              CMP      r0,#1                 ;5204
00006e  d078              BEQ      |L40.354|
000070  f04f0001          MOV      r0,#1                 ;5206
000074  f8c4051c          STR      r0,[r4,#0x51c]        ;5206
000078  f8d41390          LDR      r1,[r4,#0x390]        ;5207
00007c  460d              MOV      r5,r1                 ;5207
00007e  f8d40394          LDR      r0,[r4,#0x394]        ;5207
000082  4606              MOV      r6,r0                 ;5207
000084  4a98              LDR      r2,|L40.744|
000086  4b99              LDR      r3,|L40.748|
000088  4628              MOV      r0,r5                 ;5207
00008a  4631              MOV      r1,r6                 ;5207
00008c  f7fffffe          BL       __aeabi_dmul
000090  f5047264          ADD      r2,r4,#0x390          ;5207
000094  c203              STM      r2!,{r0,r1}           ;5207
000096  f8d41398          LDR      r1,[r4,#0x398]        ;5208
00009a  460d              MOV      r5,r1                 ;5208
00009c  f8d4039c          LDR      r0,[r4,#0x39c]        ;5208
0000a0  4606              MOV      r6,r0                 ;5208
0000a2  4a91              LDR      r2,|L40.744|
0000a4  4b91              LDR      r3,|L40.748|
0000a6  4628              MOV      r0,r5                 ;5208
0000a8  4631              MOV      r1,r6                 ;5208
0000aa  f7fffffe          BL       __aeabi_dmul
0000ae  f5047266          ADD      r2,r4,#0x398          ;5208
0000b2  c203              STM      r2!,{r0,r1}           ;5208
0000b4  f5047068          ADD      r0,r4,#0x3a0          ;5209
0000b8  c803              LDM      r0,{r0,r1}            ;5209
0000ba  4605              MOV      r5,r0                 ;5209
0000bc  4a8a              LDR      r2,|L40.744|
0000be  4b8b              LDR      r3,|L40.748|
0000c0  f7fffffe          BL       __aeabi_dmul
0000c4  f5047268          ADD      r2,r4,#0x3a0          ;5209
0000c8  c203              STM      r2!,{r0,r1}           ;5209
0000ca  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;5210
0000ce  460d              MOV      r5,r1                 ;5210
0000d0  4606              MOV      r6,r0                 ;5210
0000d2  4a85              LDR      r2,|L40.744|
0000d4  4b85              LDR      r3,|L40.748|
0000d6  4628              MOV      r0,r5                 ;5210
0000d8  4631              MOV      r1,r6                 ;5210
0000da  f7fffffe          BL       __aeabi_dmul
0000de  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;5210
0000e2  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;5212
0000e6  460d              MOV      r5,r1                 ;5212
0000e8  4606              MOV      r6,r0                 ;5212
0000ea  4a7f              LDR      r2,|L40.744|
0000ec  4b7f              LDR      r3,|L40.748|
0000ee  4628              MOV      r0,r5                 ;5212
0000f0  4631              MOV      r1,r6                 ;5212
0000f2  f7fffffe          BL       __aeabi_dmul
0000f6  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;5212
0000fa  e9d4101e          LDRD     r1,r0,[r4,#0x78]      ;5214
0000fe  460d              MOV      r5,r1                 ;5214
000100  4606              MOV      r6,r0                 ;5214
000102  4a79              LDR      r2,|L40.744|
000104  4b79              LDR      r3,|L40.748|
000106  4628              MOV      r0,r5                 ;5214
000108  4631              MOV      r1,r6                 ;5214
00010a  f7fffffe          BL       __aeabi_dmul
00010e  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;5214
000112  f50460c6          ADD      r0,r4,#0x630          ;5216
000116  c803              LDM      r0,{r0,r1}            ;5216
000118  4605              MOV      r5,r0                 ;5216
00011a  4a73              LDR      r2,|L40.744|
00011c  4b73              LDR      r3,|L40.748|
00011e  f7fffffe          BL       __aeabi_dmul
000122  f50462c6          ADD      r2,r4,#0x630          ;5216
000126  c203              STM      r2!,{r0,r1}           ;5216
000128  f8d41638          LDR      r1,[r4,#0x638]        ;5218
00012c  460d              MOV      r5,r1                 ;5218
00012e  f8d4063c          LDR      r0,[r4,#0x63c]        ;5218
000132  4606              MOV      r6,r0                 ;5218
000134  4a6c              LDR      r2,|L40.744|
000136  4b6d              LDR      r3,|L40.748|
000138  4628              MOV      r0,r5                 ;5218
00013a  4631              MOV      r1,r6                 ;5218
00013c  f7fffffe          BL       __aeabi_dmul
000140  f50462c7          ADD      r2,r4,#0x638          ;5218
000144  c203              STM      r2!,{r0,r1}           ;5218
000146  f8d41640          LDR      r1,[r4,#0x640]        ;5220
00014a  460d              MOV      r5,r1                 ;5220
00014c  f8d40644          LDR      r0,[r4,#0x644]        ;5220
000150  4606              MOV      r6,r0                 ;5220
000152  4a65              LDR      r2,|L40.744|
000154  4b65              LDR      r3,|L40.748|
000156  4628              MOV      r0,r5                 ;5220
000158  4631              MOV      r1,r6                 ;5220
00015a  f7fffffe          BL       __aeabi_dmul
00015e  e001              B        |L40.356|
                  |L40.352|
000160  e004              B        |L40.364|
                  |L40.354|
000162  e0b9              B        |L40.728|
                  |L40.356|
000164  f50462c8          ADD      r2,r4,#0x640          ;5220
000168  c203              STM      r2!,{r0,r1}           ;5220
                  |L40.362|
00016a  e0b5              B        |L40.728|
                  |L40.364|
00016c  2fd2              CMP      r7,#0xd2              ;5224
00016e  d17e              BNE      |L40.622|
000170  2002              MOVS     r0,#2                 ;5226
000172  f7fffffe          BL       USE_LENGTH_UNITS
000176  f8d4051c          LDR      r0,[r4,#0x51c]        ;5227
00017a  2802              CMP      r0,#2                 ;5227
00017c  d0f5              BEQ      |L40.362|
00017e  f04f0002          MOV      r0,#2                 ;5229
000182  f8c4051c          STR      r0,[r4,#0x51c]        ;5229
000186  f8d41390          LDR      r1,[r4,#0x390]        ;5230
00018a  460d              MOV      r5,r1                 ;5230
00018c  f8d40394          LDR      r0,[r4,#0x394]        ;5230
000190  4606              MOV      r6,r0                 ;5230
000192  f04f3266          MOV      r2,#0x66666666        ;5230
000196  4b56              LDR      r3,|L40.752|
000198  4628              MOV      r0,r5                 ;5230
00019a  4631              MOV      r1,r6                 ;5230
00019c  f7fffffe          BL       __aeabi_dmul
0001a0  f5047264          ADD      r2,r4,#0x390          ;5230
0001a4  c203              STM      r2!,{r0,r1}           ;5230
0001a6  f8d41398          LDR      r1,[r4,#0x398]        ;5231
0001aa  460d              MOV      r5,r1                 ;5231
0001ac  f8d4039c          LDR      r0,[r4,#0x39c]        ;5231
0001b0  4606              MOV      r6,r0                 ;5231
0001b2  f04f3266          MOV      r2,#0x66666666        ;5231
0001b6  4b4e              LDR      r3,|L40.752|
0001b8  4628              MOV      r0,r5                 ;5231
0001ba  4631              MOV      r1,r6                 ;5231
0001bc  f7fffffe          BL       __aeabi_dmul
0001c0  f5047266          ADD      r2,r4,#0x398          ;5231
0001c4  c203              STM      r2!,{r0,r1}           ;5231
0001c6  f5047068          ADD      r0,r4,#0x3a0          ;5232
0001ca  c803              LDM      r0,{r0,r1}            ;5232
0001cc  4605              MOV      r5,r0                 ;5232
0001ce  f04f3266          MOV      r2,#0x66666666        ;5232
0001d2  4b47              LDR      r3,|L40.752|
0001d4  f7fffffe          BL       __aeabi_dmul
0001d8  f5047268          ADD      r2,r4,#0x3a0          ;5232
0001dc  c203              STM      r2!,{r0,r1}           ;5232
0001de  e9d4011a          LDRD     r0,r1,[r4,#0x68]      ;5233
0001e2  4605              MOV      r5,r0                 ;5233
0001e4  f04f3266          MOV      r2,#0x66666666        ;5233
0001e8  4b41              LDR      r3,|L40.752|
0001ea  f7fffffe          BL       __aeabi_dmul
0001ee  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;5233
0001f2  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;5235
0001f6  460d              MOV      r5,r1                 ;5235
0001f8  4606              MOV      r6,r0                 ;5235
0001fa  f04f3266          MOV      r2,#0x66666666        ;5235
0001fe  4b3c              LDR      r3,|L40.752|
000200  4628              MOV      r0,r5                 ;5235
000202  4631              MOV      r1,r6                 ;5235
000204  f7fffffe          BL       __aeabi_dmul
000208  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;5235
00020c  e9d4101e          LDRD     r1,r0,[r4,#0x78]      ;5237
000210  460d              MOV      r5,r1                 ;5237
000212  4606              MOV      r6,r0                 ;5237
000214  f04f3266          MOV      r2,#0x66666666        ;5237
000218  4b35              LDR      r3,|L40.752|
00021a  4628              MOV      r0,r5                 ;5237
00021c  4631              MOV      r1,r6                 ;5237
00021e  f7fffffe          BL       __aeabi_dmul
000222  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;5237
000226  f8d41630          LDR      r1,[r4,#0x630]        ;5239
00022a  460d              MOV      r5,r1                 ;5239
00022c  f8d40634          LDR      r0,[r4,#0x634]        ;5239
000230  4606              MOV      r6,r0                 ;5239
000232  f04f3266          MOV      r2,#0x66666666        ;5239
000236  4b2e              LDR      r3,|L40.752|
000238  4628              MOV      r0,r5                 ;5239
00023a  4631              MOV      r1,r6                 ;5239
00023c  f7fffffe          BL       __aeabi_dmul
000240  f50462c6          ADD      r2,r4,#0x630          ;5239
000244  c203              STM      r2!,{r0,r1}           ;5239
000246  f8d41638          LDR      r1,[r4,#0x638]        ;5241
00024a  460d              MOV      r5,r1                 ;5241
00024c  f8d4063c          LDR      r0,[r4,#0x63c]        ;5241
000250  4606              MOV      r6,r0                 ;5241
000252  f04f3266          MOV      r2,#0x66666666        ;5241
000256  4b26              LDR      r3,|L40.752|
000258  4628              MOV      r0,r5                 ;5241
00025a  4631              MOV      r1,r6                 ;5241
00025c  f7fffffe          BL       __aeabi_dmul
000260  f50462c7          ADD      r2,r4,#0x638          ;5241
000264  c203              STM      r2!,{r0,r1}           ;5241
000266  f8d41640          LDR      r1,[r4,#0x640]        ;5243
00026a  460d              MOV      r5,r1                 ;5243
00026c  e000              B        |L40.624|
                  |L40.622|
00026e  e00d              B        |L40.652|
                  |L40.624|
000270  f8d40644          LDR      r0,[r4,#0x644]        ;5243
000274  4606              MOV      r6,r0                 ;5243
000276  f04f3266          MOV      r2,#0x66666666        ;5243
00027a  4b1d              LDR      r3,|L40.752|
00027c  4628              MOV      r0,r5                 ;5243
00027e  4631              MOV      r1,r6                 ;5243
000280  f7fffffe          BL       __aeabi_dmul
000284  f50462c8          ADD      r2,r4,#0x640          ;5243
000288  c203              STM      r2!,{r0,r1}           ;5243
00028a  e025              B        |L40.728|
                  |L40.652|
00028c  f04f0100          MOV      r1,#0                 ;5248
000290  4812              LDR      r0,|L40.732|
000292  f8c0114c          STR      r1,[r0,#0x14c]        ;5248
000296  4601              MOV      r1,r0                 ;5248
000298  f8d1314c          LDR      r3,[r1,#0x14c]        ;5248
00029c  f8d1114c          LDR      r1,[r1,#0x14c]        ;5248
0002a0  f1010101          ADD      r1,r1,#1              ;5248
0002a4  4602              MOV      r2,r0                 ;5248
0002a6  f8c2114c          STR      r1,[r2,#0x14c]        ;5248
0002aa  eb030183          ADD      r1,r3,r3,LSL #2       ;5248
0002ae  4a0d              LDR      r2,|L40.740|
0002b0  eb021101          ADD      r1,r2,r1,LSL #4       ;5248
0002b4  4608              MOV      r0,r1                 ;5248
0002b6  490a              LDR      r1,|L40.736|
0002b8  f7fffffe          BL       strcpy
0002bc  f04f0100          MOV      r1,#0                 ;5248
0002c0  4806              LDR      r0,|L40.732|
0002c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;5248
0002c6  eb000080          ADD      r0,r0,r0,LSL #2       ;5248
0002ca  4a06              LDR      r2,|L40.740|
0002cc  eb021000          ADD      r0,r2,r0,LSL #4       ;5248
0002d0  7001              STRB     r1,[r0,#0]            ;5248
0002d2  f04f0012          MOV      r0,#0x12              ;5248
0002d6  e6c0              B        |L40.90|
                  |L40.728|
0002d8  2000              MOVS     r0,#0                 ;5249
0002da  e6be              B        |L40.90|
;;;5251   
                          ENDP

                  |L40.732|
                          DCD      _setup+0xc000
                  |L40.736|
                          DCD      |symbol_number.475|
                  |L40.740|
                          DCD      _setup+0xb1ac
                  |L40.744|
                          DCD      0xa142850a
                  |L40.748|
                          DCD      0x3fa42850
                  |L40.752|
                          DCD      0x40396666

                          AREA ||i.convert_m||, CODE, READONLY, ALIGN=2

                  convert_m PROC
;;;5279   
;;;5280       static int convert_m(                         /* ARGUMENTS                                    */
000000  b570              PUSH     {r4-r6,lr}
;;;5281       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5282       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5283       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;5284           static char name[] SET_TO "convert_m";
;;;5285           int status;
;;;5286   
;;;5287           if (block->m_modes[6] ISNT -1)
000006  f44f70d0          MOV      r0,#0x1a0
00000a  5940              LDR      r0,[r0,r5]
00000c  1c40              ADDS     r0,r0,#1
00000e  d02b              BEQ      |L41.104|
;;;5288           {
;;;5289               CHP(convert_tool_change(settings));
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       convert_tool_change
000016  0006              MOVS     r6,r0
000018  d026              BEQ      |L41.104|
00001a  484d              LDR      r0,|L41.336|
00001c  f8d0014c          LDR      r0,[r0,#0x14c]
000020  2831              CMP      r0,#0x31
000022  da1f              BGE      |L41.100|
000024  494a              LDR      r1,|L41.336|
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  1c49              ADDS     r1,r1,#1
000030  4a47              LDR      r2,|L41.336|
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a26254          SUB      r2,r2,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  4943              LDR      r1,|L41.340|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  4840              LDR      r0,|L41.336|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4a3f              LDR      r2,|L41.344|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  4630              MOV      r0,r6
                  |L41.98|
;;;5290           }
;;;5291   
;;;5292           if (block->m_modes[7] IS 3)
;;;5293           {
;;;5294               START_SPINDLE_CLOCKWISE();
;;;5295               settings->spindle_turning SET_TO CANON_CLOCKWISE;
;;;5296           }
;;;5297           else if (block->m_modes[7] IS 4)
;;;5298           {
;;;5299               START_SPINDLE_COUNTERCLOCKWISE();
;;;5300               settings->spindle_turning SET_TO CANON_COUNTERCLOCKWISE;
;;;5301           }
;;;5302           else if (block->m_modes[7] IS 5)
;;;5303           {
;;;5304               STOP_SPINDLE_TURNING();
;;;5305               settings->spindle_turning SET_TO CANON_STOPPED;
;;;5306           }
;;;5307   
;;;5308           if (block->m_modes[8] IS 7)
;;;5309           {
;;;5310               MIST_ON();
;;;5311               settings->mist SET_TO ON;
;;;5312           }
;;;5313           else if (block->m_modes[8] IS 8)
;;;5314           {
;;;5315               FLOOD_ON();
;;;5316               settings->flood SET_TO ON;
;;;5317           }
;;;5318           else if (block->m_modes[8] IS 9)
;;;5319           {
;;;5320               MIST_OFF();
;;;5321               settings->mist SET_TO OFF;
;;;5322               FLOOD_OFF();
;;;5323               settings->flood SET_TO OFF;
;;;5324           }
;;;5325   
;;;5326      /* No axis clamps in this version
;;;5327        if (block->m_modes[2] IS 26)
;;;5328          {
;;;5329      #ifdef DEBUG_EMC
;;;5330      COMMENT("interpreter: automatic A-axis clamping turned on");
;;;5331      #endif
;;;5332      settings->a_axis_clamping SET_TO ON;
;;;5333      }
;;;5334      else if (block->m_modes[2] IS 27)
;;;5335      {
;;;5336      #ifdef DEBUG_EMC
;;;5337      COMMENT("interpreter: automatic A-axis clamping turned off");
;;;5338      #endif
;;;5339      settings->a_axis_clamping SET_TO OFF;
;;;5340      }
;;;5341      */
;;;5342   
;;;5343           if (block->m_modes[9] IS 48)
;;;5344           {
;;;5345               ENABLE_FEED_OVERRIDE();
;;;5346               ENABLE_SPEED_OVERRIDE();
;;;5347               settings->feed_override SET_TO ON;
;;;5348               settings->speed_override SET_TO ON;
;;;5349           }
;;;5350           else if (block->m_modes[9] IS 49)
;;;5351           {
;;;5352               DISABLE_FEED_OVERRIDE();
;;;5353               DISABLE_SPEED_OVERRIDE();
;;;5354               settings->feed_override SET_TO OFF;
;;;5355               settings->speed_override SET_TO OFF;
;;;5356           }
;;;5357   
;;;5358           return RS274NGC_OK;
;;;5359       }
000062  bd70              POP      {r4-r6,pc}
                  |L41.100|
000064  4630              MOV      r0,r6                 ;5289
000066  e7fc              B        |L41.98|
                  |L41.104|
000068  f44f70d2          MOV      r0,#0x1a4             ;5292
00006c  5940              LDR      r0,[r0,r5]            ;5292
00006e  2803              CMP      r0,#3                 ;5292
000070  d107              BNE      |L41.130|
000072  f7fffffe          BL       START_SPINDLE_CLOCKWISE
000076  f04f0102          MOV      r1,#2                 ;5295
00007a  f24b10a8          MOV      r0,#0xb1a8            ;5295
00007e  5101              STR      r1,[r0,r4]            ;5295
000080  e018              B        |L41.180|
                  |L41.130|
000082  f44f70d2          MOV      r0,#0x1a4             ;5297
000086  5940              LDR      r0,[r0,r5]            ;5297
000088  2804              CMP      r0,#4                 ;5297
00008a  d107              BNE      |L41.156|
00008c  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
000090  f04f0103          MOV      r1,#3                 ;5300
000094  f24b10a8          MOV      r0,#0xb1a8            ;5300
000098  5101              STR      r1,[r0,r4]            ;5300
00009a  e00b              B        |L41.180|
                  |L41.156|
00009c  f44f70d2          MOV      r0,#0x1a4             ;5302
0000a0  5940              LDR      r0,[r0,r5]            ;5302
0000a2  2805              CMP      r0,#5                 ;5302
0000a4  d106              BNE      |L41.180|
0000a6  f7fffffe          BL       STOP_SPINDLE_TURNING
0000aa  f04f0101          MOV      r1,#1                 ;5305
0000ae  f24b10a8          MOV      r0,#0xb1a8            ;5305
0000b2  5101              STR      r1,[r0,r4]            ;5305
                  |L41.180|
0000b4  f44f70d4          MOV      r0,#0x1a8             ;5308
0000b8  5940              LDR      r0,[r0,r5]            ;5308
0000ba  2807              CMP      r0,#7                 ;5308
0000bc  d106              BNE      |L41.204|
0000be  f7fffffe          BL       MIST_ON
0000c2  f04f0001          MOV      r0,#1                 ;5311
0000c6  f8c40624          STR      r0,[r4,#0x624]        ;5311
0000ca  e01c              B        |L41.262|
                  |L41.204|
0000cc  f44f70d4          MOV      r0,#0x1a8             ;5313
0000d0  5940              LDR      r0,[r0,r5]            ;5313
0000d2  2808              CMP      r0,#8                 ;5313
0000d4  d106              BNE      |L41.228|
0000d6  f7fffffe          BL       FLOOD_ON
0000da  f04f0001          MOV      r0,#1                 ;5316
0000de  f8c40514          STR      r0,[r4,#0x514]        ;5316
0000e2  e010              B        |L41.262|
                  |L41.228|
0000e4  f44f70d4          MOV      r0,#0x1a8             ;5318
0000e8  5940              LDR      r0,[r0,r5]            ;5318
0000ea  2809              CMP      r0,#9                 ;5318
0000ec  d10b              BNE      |L41.262|
0000ee  f7fffffe          BL       MIST_OFF
0000f2  f04f0000          MOV      r0,#0                 ;5321
0000f6  f8c40624          STR      r0,[r4,#0x624]        ;5321
0000fa  f7fffffe          BL       FLOOD_OFF
0000fe  f04f0000          MOV      r0,#0                 ;5323
000102  f8c40514          STR      r0,[r4,#0x514]        ;5323
                  |L41.262|
000106  f44f70d6          MOV      r0,#0x1ac             ;5343
00010a  5940              LDR      r0,[r0,r5]            ;5343
00010c  2830              CMP      r0,#0x30              ;5343
00010e  d10c              BNE      |L41.298|
000110  f7fffffe          BL       ENABLE_FEED_OVERRIDE
000114  f7fffffe          BL       ENABLE_SPEED_OVERRIDE
000118  f04f0001          MOV      r0,#1                 ;5347
00011c  f8c40400          STR      r0,[r4,#0x400]        ;5347
000120  4601              MOV      r1,r0                 ;5348
000122  f24b10a4          MOV      r0,#0xb1a4            ;5348
000126  5101              STR      r1,[r0,r4]            ;5348
000128  e010              B        |L41.332|
                  |L41.298|
00012a  f44f70d6          MOV      r0,#0x1ac             ;5350
00012e  5940              LDR      r0,[r0,r5]            ;5350
000130  2831              CMP      r0,#0x31              ;5350
000132  d10b              BNE      |L41.332|
000134  f7fffffe          BL       DISABLE_FEED_OVERRIDE
000138  f7fffffe          BL       DISABLE_SPEED_OVERRIDE
00013c  f04f0000          MOV      r0,#0                 ;5354
000140  f8c40400          STR      r0,[r4,#0x400]        ;5354
000144  4601              MOV      r1,r0                 ;5355
000146  f24b10a4          MOV      r0,#0xb1a4            ;5355
00014a  5101              STR      r1,[r0,r4]            ;5355
                  |L41.332|
00014c  2000              MOVS     r0,#0                 ;5358
00014e  e788              B        |L41.98|
;;;5360   
                          ENDP

                  |L41.336|
                          DCD      _setup+0xc000
                  |L41.340|
                          DCD      |symbol_number.476|
                  |L41.344|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_modal_0||, CODE, READONLY, ALIGN=2

                  convert_modal_0 PROC
;;;5385   
;;;5386       static int convert_modal_0(                   /* ARGUMENTS                                    */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;5387       int code,                                     /* G code, must be from group 0                 */
;;;5388       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5389       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5390       {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;5391           static char name[] SET_TO "convert_modal_0";
;;;5392           int status;
;;;5393   
;;;5394           if (code IS G_10)
00000a  2c64              CMP      r4,#0x64
00000c  d12d              BNE      |L42.106|
;;;5395           {
;;;5396               CHP(convert_setup(block, settings));
00000e  4639              MOV      r1,r7
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       convert_setup
000016  0005              MOVS     r5,r0
                  |L42.24|
000018  d07e              BEQ      |L42.280|
00001a  4861              LDR      r0,|L42.416|
00001c  f8d0014c          LDR      r0,[r0,#0x14c]
000020  2831              CMP      r0,#0x31
000022  da20              BGE      |L42.102|
000024  495e              LDR      r1,|L42.416|
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  1c49              ADDS     r1,r1,#1
000030  4a5b              LDR      r2,|L42.416|
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a26254          SUB      r2,r2,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  4957              LDR      r1,|L42.420|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  4854              LDR      r0,|L42.416|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4a53              LDR      r2,|L42.424|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  4628              MOV      r0,r5
                  |L42.98|
;;;5397           }
;;;5398           else if ((code IS G_28) OR (code IS G_30))
;;;5399           {
;;;5400               CHP(convert_home(code, block, settings));
;;;5401           }
;;;5402           else if ((code IS G_92)   OR (code IS G_92_1) OR
;;;5403               (code IS G_92_2) OR (code IS G_92_3))
;;;5404           {
;;;5405               CHP(convert_axis_offsets(code, block, settings));
;;;5406           }
;;;5407           else if ((code IS G_4) OR (code IS G_53));/* handled elsewhere */
;;;5408           else
;;;5409               ERM(NCE_BUG_CODE_NOT_G4_G10_G28_G30_G53_OR_G92_SERIES);
;;;5410           return RS274NGC_OK;
;;;5411       }
000062  e8bd81f0          POP      {r4-r8,pc}
                  |L42.102|
000066  4628              MOV      r0,r5                 ;5396
000068  e7fb              B        |L42.98|
                  |L42.106|
00006a  f5b47f8c          CMP      r4,#0x118             ;5398
00006e  d002              BEQ      |L42.118|
000070  f5b47f96          CMP      r4,#0x12c             ;5398
000074  d12c              BNE      |L42.208|
                  |L42.118|
000076  463a              MOV      r2,r7                 ;5400
000078  4631              MOV      r1,r6                 ;5400
00007a  4620              MOV      r0,r4                 ;5400
00007c  f7fffffe          BL       convert_home
000080  0005              MOVS     r5,r0                 ;5400
000082  d0c9              BEQ      |L42.24|
000084  4846              LDR      r0,|L42.416|
000086  f8d0014c          LDR      r0,[r0,#0x14c]        ;5400
00008a  2831              CMP      r0,#0x31              ;5400
00008c  da1e              BGE      |L42.204|
00008e  4944              LDR      r1,|L42.416|
000090  f8d1314c          LDR      r3,[r1,#0x14c]        ;5400
000094  f8d1114c          LDR      r1,[r1,#0x14c]        ;5400
000098  1c49              ADDS     r1,r1,#1              ;5400
00009a  4a41              LDR      r2,|L42.416|
00009c  f8c2114c          STR      r1,[r2,#0x14c]        ;5400
0000a0  eb030183          ADD      r1,r3,r3,LSL #2       ;5400
0000a4  4a40              LDR      r2,|L42.424|
0000a6  eb021101          ADD      r1,r2,r1,LSL #4       ;5400
0000aa  4608              MOV      r0,r1                 ;5400
0000ac  493d              LDR      r1,|L42.420|
0000ae  f7fffffe          BL       strcpy
0000b2  f04f0100          MOV      r1,#0                 ;5400
0000b6  483a              LDR      r0,|L42.416|
0000b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;5400
0000bc  eb000080          ADD      r0,r0,r0,LSL #2       ;5400
0000c0  4a39              LDR      r2,|L42.424|
0000c2  eb021000          ADD      r0,r2,r0,LSL #4       ;5400
0000c6  7001              STRB     r1,[r0,#0]            ;5400
0000c8  4628              MOV      r0,r5                 ;5400
0000ca  e7ca              B        |L42.98|
                  |L42.204|
0000cc  4628              MOV      r0,r5                 ;5400
0000ce  e7c8              B        |L42.98|
                  |L42.208|
0000d0  f5b47f66          CMP      r4,#0x398             ;5402
0000d4  d007              BEQ      |L42.230|
0000d6  f5a47040          SUB      r0,r4,#0x300          ;5402
0000da  3899              SUBS     r0,r0,#0x99           ;5402
0000dc  d003              BEQ      |L42.230|
0000de  1e40              SUBS     r0,r0,#1              ;5403
0000e0  d001              BEQ      |L42.230|
0000e2  1e40              SUBS     r0,r0,#1              ;5403
0000e4  d12e              BNE      |L42.324|
                  |L42.230|
0000e6  463a              MOV      r2,r7                 ;5405
0000e8  4631              MOV      r1,r6                 ;5405
0000ea  4620              MOV      r0,r4                 ;5405
0000ec  f7fffffe          BL       convert_axis_offsets
0000f0  0005              MOVS     r5,r0                 ;5405
0000f2  d053              BEQ      |L42.412|
0000f4  482a              LDR      r0,|L42.416|
0000f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;5405
0000fa  2831              CMP      r0,#0x31              ;5405
0000fc  da20              BGE      |L42.320|
0000fe  4928              LDR      r1,|L42.416|
000100  f8d1314c          LDR      r3,[r1,#0x14c]        ;5405
000104  f8d1114c          LDR      r1,[r1,#0x14c]        ;5405
000108  1c49              ADDS     r1,r1,#1              ;5405
00010a  4a25              LDR      r2,|L42.416|
00010c  f8c2114c          STR      r1,[r2,#0x14c]        ;5405
000110  eb030183          ADD      r1,r3,r3,LSL #2       ;5405
000114  4a24              LDR      r2,|L42.424|
000116  e000              B        |L42.282|
                  |L42.280|
000118  e040              B        |L42.412|
                  |L42.282|
00011a  eb021101          ADD      r1,r2,r1,LSL #4       ;5405
00011e  4608              MOV      r0,r1                 ;5405
000120  4920              LDR      r1,|L42.420|
000122  f7fffffe          BL       strcpy
000126  f04f0100          MOV      r1,#0                 ;5405
00012a  481d              LDR      r0,|L42.416|
00012c  f8d0014c          LDR      r0,[r0,#0x14c]        ;5405
000130  eb000080          ADD      r0,r0,r0,LSL #2       ;5405
000134  4a1c              LDR      r2,|L42.424|
000136  eb021000          ADD      r0,r2,r0,LSL #4       ;5405
00013a  7001              STRB     r1,[r0,#0]            ;5405
00013c  4628              MOV      r0,r5                 ;5405
00013e  e790              B        |L42.98|
                  |L42.320|
000140  4628              MOV      r0,r5                 ;5405
000142  e78e              B        |L42.98|
                  |L42.324|
000144  2c28              CMP      r4,#0x28              ;5407
000146  d029              BEQ      |L42.412|
000148  f5a47000          SUB      r0,r4,#0x200          ;5407
00014c  3812              SUBS     r0,r0,#0x12           ;5407
00014e  d025              BEQ      |L42.412|
000150  f04f0100          MOV      r1,#0                 ;5409
000154  4812              LDR      r0,|L42.416|
000156  f8c0114c          STR      r1,[r0,#0x14c]        ;5409
00015a  4601              MOV      r1,r0                 ;5409
00015c  f8d1314c          LDR      r3,[r1,#0x14c]        ;5409
000160  f8d1114c          LDR      r1,[r1,#0x14c]        ;5409
000164  f1010101          ADD      r1,r1,#1              ;5409
000168  4602              MOV      r2,r0                 ;5409
00016a  f8c2114c          STR      r1,[r2,#0x14c]        ;5409
00016e  eb030183          ADD      r1,r3,r3,LSL #2       ;5409
000172  4a0d              LDR      r2,|L42.424|
000174  eb021101          ADD      r1,r2,r1,LSL #4       ;5409
000178  4608              MOV      r0,r1                 ;5409
00017a  490a              LDR      r1,|L42.420|
00017c  f7fffffe          BL       strcpy
000180  f04f0100          MOV      r1,#0                 ;5409
000184  4806              LDR      r0,|L42.416|
000186  f8d0014c          LDR      r0,[r0,#0x14c]        ;5409
00018a  eb000080          ADD      r0,r0,r0,LSL #2       ;5409
00018e  4a06              LDR      r2,|L42.424|
000190  eb021000          ADD      r0,r2,r0,LSL #4       ;5409
000194  7001              STRB     r1,[r0,#0]            ;5409
000196  f04f0017          MOV      r0,#0x17              ;5409
00019a  e762              B        |L42.98|
                  |L42.412|
00019c  2000              MOVS     r0,#0                 ;5410
00019e  e760              B        |L42.98|
;;;5412   
                          ENDP

                  |L42.416|
                          DCD      _setup+0xc000
                  |L42.420|
                          DCD      |symbol_number.477|
                  |L42.424|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_motion||, CODE, READONLY, ALIGN=2

                  convert_motion PROC
;;;5435   
;;;5436       static int convert_motion(                    /* ARGUMENTS                                 */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;5437       int motion,                                   /* g_code for a line, arc, canned cycle      */
;;;5438       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;5439       setup_pointer settings)                       /* pointer to machine settings               */
;;;5440       {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
;;;5441           static char name[] SET_TO "convert_motion";
;;;5442           int status;
;;;5443   
;;;5444           if ((motion IS G_0) OR (motion IS G_1))
00000a  b10c              CBZ      r4,|L43.16|
00000c  2c0a              CMP      r4,#0xa
00000e  d12e              BNE      |L43.110|
                  |L43.16|
;;;5445           {
;;;5446               CHP(convert_straight(motion, block, settings));
000010  4632              MOV      r2,r6
000012  4639              MOV      r1,r7
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       convert_straight
00001a  0005              MOVS     r5,r0
                  |L43.28|
00001c  d07e              BEQ      |L43.284|
00001e  4878              LDR      r0,|L43.512|
000020  f8d0014c          LDR      r0,[r0,#0x14c]
000024  2831              CMP      r0,#0x31
000026  da20              BGE      |L43.106|
000028  4975              LDR      r1,|L43.512|
00002a  f8d1314c          LDR      r3,[r1,#0x14c]
00002e  f8d1114c          LDR      r1,[r1,#0x14c]
000032  1c49              ADDS     r1,r1,#1
000034  4a72              LDR      r2,|L43.512|
000036  f8c2114c          STR      r1,[r2,#0x14c]
00003a  eb030183          ADD      r1,r3,r3,LSL #2
00003e  f6a26254          SUB      r2,r2,#0xe54
000042  eb021101          ADD      r1,r2,r1,LSL #4
000046  4608              MOV      r0,r1
000048  496e              LDR      r1,|L43.516|
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  486b              LDR      r0,|L43.512|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4a6a              LDR      r2,|L43.520|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  4628              MOV      r0,r5
                  |L43.102|
;;;5447           }
;;;5448           else if ((motion IS G_3) OR (motion IS G_2))
;;;5449           {
;;;5450               CHP(convert_arc(motion, block, settings));
;;;5451           }
;;;5452           else if (motion IS G_38_2)
;;;5453           {
;;;5454               CHP(convert_probe(block, settings));
;;;5455           }
;;;5456           else if (motion IS G_80)
;;;5457           {
;;;5458   #ifdef DEBUG_EMC
;;;5459               COMMENT("interpreter: motion mode set to none");
;;;5460   #endif
;;;5461               settings->motion_mode SET_TO G_80;
;;;5462           }
;;;5463           else if ((motion > G_80) AND (motion < G_90))
;;;5464           {
;;;5465               CHP(convert_cycle(motion, block, settings));
;;;5466           }
;;;5467           else
;;;5468               ERM(NCE_BUG_UNKNOWN_MOTION_CODE);
;;;5469   
;;;5470           return RS274NGC_OK;
;;;5471       }
000066  e8bd81f0          POP      {r4-r8,pc}
                  |L43.106|
00006a  4628              MOV      r0,r5                 ;5446
00006c  e7fb              B        |L43.102|
                  |L43.110|
00006e  2c1e              CMP      r4,#0x1e              ;5448
000070  d001              BEQ      |L43.118|
000072  2c14              CMP      r4,#0x14              ;5448
000074  d12c              BNE      |L43.208|
                  |L43.118|
000076  4632              MOV      r2,r6                 ;5450
000078  4639              MOV      r1,r7                 ;5450
00007a  4620              MOV      r0,r4                 ;5450
00007c  f7fffffe          BL       convert_arc
000080  0005              MOVS     r5,r0                 ;5450
000082  d0cb              BEQ      |L43.28|
000084  485e              LDR      r0,|L43.512|
000086  f8d0014c          LDR      r0,[r0,#0x14c]        ;5450
00008a  2831              CMP      r0,#0x31              ;5450
00008c  da1e              BGE      |L43.204|
00008e  495c              LDR      r1,|L43.512|
000090  f8d1314c          LDR      r3,[r1,#0x14c]        ;5450
000094  f8d1114c          LDR      r1,[r1,#0x14c]        ;5450
000098  1c49              ADDS     r1,r1,#1              ;5450
00009a  4a59              LDR      r2,|L43.512|
00009c  f8c2114c          STR      r1,[r2,#0x14c]        ;5450
0000a0  eb030183          ADD      r1,r3,r3,LSL #2       ;5450
0000a4  4a58              LDR      r2,|L43.520|
0000a6  eb021101          ADD      r1,r2,r1,LSL #4       ;5450
0000aa  4608              MOV      r0,r1                 ;5450
0000ac  4955              LDR      r1,|L43.516|
0000ae  f7fffffe          BL       strcpy
0000b2  f04f0100          MOV      r1,#0                 ;5450
0000b6  4852              LDR      r0,|L43.512|
0000b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;5450
0000bc  eb000080          ADD      r0,r0,r0,LSL #2       ;5450
0000c0  4a51              LDR      r2,|L43.520|
0000c2  eb021000          ADD      r0,r2,r0,LSL #4       ;5450
0000c6  7001              STRB     r1,[r0,#0]            ;5450
0000c8  4628              MOV      r0,r5                 ;5450
0000ca  e7cc              B        |L43.102|
                  |L43.204|
0000cc  4628              MOV      r0,r5                 ;5450
0000ce  e7ca              B        |L43.102|
                  |L43.208|
0000d0  f5b47fbf          CMP      r4,#0x17e             ;5452
0000d4  d12d              BNE      |L43.306|
0000d6  4631              MOV      r1,r6                 ;5454
0000d8  4638              MOV      r0,r7                 ;5454
0000da  f7fffffe          BL       convert_probe
0000de  0005              MOVS     r5,r0                 ;5454
0000e0  d09c              BEQ      |L43.28|
0000e2  4847              LDR      r0,|L43.512|
0000e4  f8d0014c          LDR      r0,[r0,#0x14c]        ;5454
0000e8  2831              CMP      r0,#0x31              ;5454
0000ea  da20              BGE      |L43.302|
0000ec  4944              LDR      r1,|L43.512|
0000ee  f8d1314c          LDR      r3,[r1,#0x14c]        ;5454
0000f2  f8d1114c          LDR      r1,[r1,#0x14c]        ;5454
0000f6  1c49              ADDS     r1,r1,#1              ;5454
0000f8  4a41              LDR      r2,|L43.512|
0000fa  f8c2114c          STR      r1,[r2,#0x14c]        ;5454
0000fe  eb030183          ADD      r1,r3,r3,LSL #2       ;5454
000102  4a41              LDR      r2,|L43.520|
000104  eb021101          ADD      r1,r2,r1,LSL #4       ;5454
000108  4608              MOV      r0,r1                 ;5454
00010a  493e              LDR      r1,|L43.516|
00010c  f7fffffe          BL       strcpy
000110  f04f0100          MOV      r1,#0                 ;5454
000114  483a              LDR      r0,|L43.512|
000116  f8d0014c          LDR      r0,[r0,#0x14c]        ;5454
00011a  e000              B        |L43.286|
                  |L43.284|
00011c  e06d              B        |L43.506|
                  |L43.286|
00011e  eb000080          ADD      r0,r0,r0,LSL #2       ;5454
000122  4a39              LDR      r2,|L43.520|
000124  eb021000          ADD      r0,r2,r0,LSL #4       ;5454
000128  7001              STRB     r1,[r0,#0]            ;5454
00012a  4628              MOV      r0,r5                 ;5454
00012c  e79b              B        |L43.102|
                  |L43.302|
00012e  4628              MOV      r0,r5                 ;5454
000130  e799              B        |L43.102|
                  |L43.306|
000132  f5b47f48          CMP      r4,#0x320             ;5456
000136  d107              BNE      |L43.328|
000138  a034              ADR      r0,|L43.524|
00013a  f7fffffe          BL       COMMENT
00013e  f44f7048          MOV      r0,#0x320             ;5461
000142  f8c60628          STR      r0,[r6,#0x628]        ;5461
000146  e058              B        |L43.506|
                  |L43.328|
000148  f5b47f48          CMP      r4,#0x320             ;5463
00014c  dd2f              BLE      |L43.430|
00014e  f5b47f61          CMP      r4,#0x384             ;5463
000152  da2c              BGE      |L43.430|
000154  4632              MOV      r2,r6                 ;5465
000156  4639              MOV      r1,r7                 ;5465
000158  4620              MOV      r0,r4                 ;5465
00015a  f7fffffe          BL       convert_cycle
00015e  0005              MOVS     r5,r0                 ;5465
000160  d04b              BEQ      |L43.506|
000162  4827              LDR      r0,|L43.512|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;5465
000168  2831              CMP      r0,#0x31              ;5465
00016a  da1e              BGE      |L43.426|
00016c  4924              LDR      r1,|L43.512|
00016e  f8d1314c          LDR      r3,[r1,#0x14c]        ;5465
000172  f8d1114c          LDR      r1,[r1,#0x14c]        ;5465
000176  1c49              ADDS     r1,r1,#1              ;5465
000178  4a21              LDR      r2,|L43.512|
00017a  f8c2114c          STR      r1,[r2,#0x14c]        ;5465
00017e  eb030183          ADD      r1,r3,r3,LSL #2       ;5465
000182  4a21              LDR      r2,|L43.520|
000184  eb021101          ADD      r1,r2,r1,LSL #4       ;5465
000188  4608              MOV      r0,r1                 ;5465
00018a  491e              LDR      r1,|L43.516|
00018c  f7fffffe          BL       strcpy
000190  f04f0100          MOV      r1,#0                 ;5465
000194  481a              LDR      r0,|L43.512|
000196  f8d0014c          LDR      r0,[r0,#0x14c]        ;5465
00019a  eb000080          ADD      r0,r0,r0,LSL #2       ;5465
00019e  4a1a              LDR      r2,|L43.520|
0001a0  eb021000          ADD      r0,r2,r0,LSL #4       ;5465
0001a4  7001              STRB     r1,[r0,#0]            ;5465
0001a6  4628              MOV      r0,r5                 ;5465
0001a8  e75d              B        |L43.102|
                  |L43.426|
0001aa  4628              MOV      r0,r5                 ;5465
0001ac  e75b              B        |L43.102|
                  |L43.430|
0001ae  f04f0100          MOV      r1,#0                 ;5468
0001b2  4813              LDR      r0,|L43.512|
0001b4  f8c0114c          STR      r1,[r0,#0x14c]        ;5468
0001b8  4601              MOV      r1,r0                 ;5468
0001ba  f8d1314c          LDR      r3,[r1,#0x14c]        ;5468
0001be  f8d1114c          LDR      r1,[r1,#0x14c]        ;5468
0001c2  f1010101          ADD      r1,r1,#1              ;5468
0001c6  4602              MOV      r2,r0                 ;5468
0001c8  f8c2114c          STR      r1,[r2,#0x14c]        ;5468
0001cc  eb030183          ADD      r1,r3,r3,LSL #2       ;5468
0001d0  4a0d              LDR      r2,|L43.520|
0001d2  eb021101          ADD      r1,r2,r1,LSL #4       ;5468
0001d6  4608              MOV      r0,r1                 ;5468
0001d8  490a              LDR      r1,|L43.516|
0001da  f7fffffe          BL       strcpy
0001de  f04f0100          MOV      r1,#0                 ;5468
0001e2  4807              LDR      r0,|L43.512|
0001e4  f8d0014c          LDR      r0,[r0,#0x14c]        ;5468
0001e8  eb000080          ADD      r0,r0,r0,LSL #2       ;5468
0001ec  4a06              LDR      r2,|L43.520|
0001ee  eb021000          ADD      r0,r2,r0,LSL #4       ;5468
0001f2  7001              STRB     r1,[r0,#0]            ;5468
0001f4  f04f0024          MOV      r0,#0x24              ;5468
0001f8  e735              B        |L43.102|
                  |L43.506|
0001fa  2000              MOVS     r0,#0                 ;5470
0001fc  e733              B        |L43.102|
;;;5472   
                          ENDP

0001fe  0000              DCW      0x0000
                  |L43.512|
                          DCD      _setup+0xc000
                  |L43.516|
                          DCD      |symbol_number.478|
                  |L43.520|
                          DCD      _setup+0xb1ac
                  |L43.524|
00020c  696e7465          DCB      "interpreter: motion mode set to none",0
000210  72707265
000214  7465723a
000218  206d6f74
00021c  696f6e20
000220  6d6f6465
000224  20736574
000228  20746f20
00022c  6e6f6e65
000230  00      
000231  00                DCB      0
000232  00                DCB      0
000233  00                DCB      0

                          AREA ||i.convert_probe||, CODE, READONLY, ALIGN=2

                  convert_probe PROC
;;;5509   
;;;5510       static int convert_probe(                     /* ARGUMENTS                                */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;5511       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;5512       setup_pointer settings)                       /* pointer to machine settings              */
;;;5513       {
000004  b091              SUB      sp,sp,#0x44
000006  4681              MOV      r9,r0
000008  4688              MOV      r8,r1
;;;5514           static char name[] SET_TO "convert_probe";
;;;5515           double distance;
;;;5516           double end_x;
;;;5517           double end_y;
;;;5518           double end_z;
;;;5519   #ifdef AA
;;;5520           double AA_end;                            /*AA*/
;;;5521   #endif
;;;5522   #ifdef BB
;;;5523           double BB_end;                            /*BB*/
;;;5524   #endif
;;;5525   #ifdef CC
;;;5526           double CC_end;                            /*CC*/
;;;5527   #endif
;;;5528   
;;;5529           CHK((((block->x_flag IS OFF) AND (block->y_flag IS OFF)) AND
00000a  f8d901dc          LDR      r0,[r9,#0x1dc]
00000e  bb70              CBNZ     r0,|L44.110|
000010  f8d901e8          LDR      r0,[r9,#0x1e8]
000014  bb58              CBNZ     r0,|L44.110|
000016  f8d901f8          LDR      r0,[r9,#0x1f8]
00001a  bb40              CBNZ     r0,|L44.110|
00001c  f04f0100          MOV      r1,#0
000020  48a9              LDR      r0,|L44.712|
000022  f8c0114c          STR      r1,[r0,#0x14c]
000026  4601              MOV      r1,r0
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  f1010101          ADD      r1,r1,#1
000034  4602              MOV      r2,r0
000036  f8c2114c          STR      r1,[r2,#0x14c]
00003a  eb030183          ADD      r1,r3,r3,LSL #2
00003e  f6a06254          SUB      r2,r0,#0xe54
000042  eb021101          ADD      r1,r2,r1,LSL #4
000046  4608              MOV      r0,r1
000048  49a0              LDR      r1,|L44.716|
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  489d              LDR      r0,|L44.712|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4a9c              LDR      r2,|L44.720|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00c0          MOV      r0,#0xc0
                  |L44.104|
;;;5530               (block->z_flag IS OFF)), NCE_X_Y_AND_Z_WORDS_ALL_MISSING_WITH_G38_2);
;;;5531           CHK((settings->feed_mode IS INVERSE_TIME),
;;;5532               NCE_CANNOT_PROBE_IN_INVERSE_TIME_FEED_MODE);
;;;5533           CHK((settings->cutter_comp_side ISNT OFF),
;;;5534               NCE_CANNOT_PROBE_WITH_CUTTER_RADIUS_COMP_ON);
;;;5535           CHK((settings->feed_rate IS 0.0), NCE_CANNOT_PROBE_WITH_ZERO_FEED_RATE);
;;;5536           find_ends(block, settings, &end_x, &end_y,
;;;5537               &end_z
;;;5538       #ifdef AA
;;;5539               , &AA_end
;;;5540       #endif
;;;5541   
;;;5542       #ifdef BB
;;;5543               , &BB_end
;;;5544       #endif
;;;5545   
;;;5546       #ifdef CC
;;;5547               , &CC_end
;;;5548       #endif
;;;5549               );
;;;5550           if (0
;;;5551       #ifdef AA
;;;5552               OR (AA_end ISNT settings->AA_current) /*AA*/
;;;5553       #endif
;;;5554       #ifdef BB
;;;5555               OR (BB_end ISNT settings->BB_current) /*BB*/
;;;5556       #endif
;;;5557       #ifdef CC
;;;5558               OR (CC_end ISNT settings->CC_current) /*CC*/
;;;5559       #endif
;;;5560               )
;;;5561               ERM(NCE_CANNOT_MOVE_ROTARY_AXES_DURING_PROBING);
;;;5562           distance SET_TO sqrt(pow((settings->current_x - end_x), 2) +
;;;5563               pow((settings->current_y - end_y), 2) +
;;;5564               pow((settings->current_z - end_z), 2));
;;;5565           CHK((distance < ((settings->length_units IS CANON_UNITS_MM) ? 0.254 : 0.01)),
;;;5566               NCE_START_POINT_TOO_CLOSE_TO_PROBE_POINT);
;;;5567           TURN_PROBE_ON();
;;;5568           STRAIGHT_PROBE(end_x, end_y, end_z
;;;5569       #ifdef AA
;;;5570               ,        AA_end
;;;5571       #else
;;;5572       #ifdef ALL_AXES
;;;5573               , 0
;;;5574       #endif
;;;5575       #endif
;;;5576       #ifdef BB
;;;5577               ,  BB_end
;;;5578       #else
;;;5579       #ifdef ALL_AXES
;;;5580               , 0
;;;5581       #endif
;;;5582       #endif
;;;5583       #ifdef CC
;;;5584               ,  CC_end
;;;5585       #else
;;;5586       #ifdef ALL_AXES
;;;5587               , 0
;;;5588       #endif
;;;5589       #endif
;;;5590               );
;;;5591           TURN_PROBE_OFF();
;;;5592           settings->motion_mode SET_TO G_38_2;
;;;5593           settings->probe_flag SET_TO ON;
;;;5594           return RS274NGC_OK;
;;;5595       }
000068  b011              ADD      sp,sp,#0x44
00006a  e8bd8ff0          POP      {r4-r11,pc}
                  |L44.110|
00006e  f8d803fc          LDR      r0,[r8,#0x3fc]        ;5531
000072  2801              CMP      r0,#1                 ;5531
000074  d125              BNE      |L44.194|
000076  f04f0100          MOV      r1,#0                 ;5531
00007a  4893              LDR      r0,|L44.712|
00007c  f8c0114c          STR      r1,[r0,#0x14c]        ;5531
000080  4601              MOV      r1,r0                 ;5531
000082  f8d1314c          LDR      r3,[r1,#0x14c]        ;5531
000086  f8d1114c          LDR      r1,[r1,#0x14c]        ;5531
00008a  f1010101          ADD      r1,r1,#1              ;5531
00008e  4602              MOV      r2,r0                 ;5531
000090  f8c2114c          STR      r1,[r2,#0x14c]        ;5531
000094  eb030183          ADD      r1,r3,r3,LSL #2       ;5531
000098  4a8d              LDR      r2,|L44.720|
00009a  eb021101          ADD      r1,r2,r1,LSL #4       ;5531
00009e  4608              MOV      r0,r1                 ;5531
0000a0  498a              LDR      r1,|L44.716|
0000a2  f7fffffe          BL       strcpy
0000a6  f04f0100          MOV      r1,#0                 ;5531
0000aa  4887              LDR      r0,|L44.712|
0000ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;5531
0000b0  eb000080          ADD      r0,r0,r0,LSL #2       ;5531
0000b4  4a86              LDR      r2,|L44.720|
0000b6  eb021000          ADD      r0,r2,r0,LSL #4       ;5531
0000ba  7001              STRB     r1,[r0,#0]            ;5531
0000bc  f04f002f          MOV      r0,#0x2f              ;5531
0000c0  e7d2              B        |L44.104|
                  |L44.194|
0000c2  f8d803b0          LDR      r0,[r8,#0x3b0]        ;5533
0000c6  b328              CBZ      r0,|L44.276|
0000c8  f04f0100          MOV      r1,#0                 ;5533
0000cc  487e              LDR      r0,|L44.712|
0000ce  f8c0114c          STR      r1,[r0,#0x14c]        ;5533
0000d2  4601              MOV      r1,r0                 ;5533
0000d4  f8d1314c          LDR      r3,[r1,#0x14c]        ;5533
0000d8  f8d1114c          LDR      r1,[r1,#0x14c]        ;5533
0000dc  f1010101          ADD      r1,r1,#1              ;5533
0000e0  4602              MOV      r2,r0                 ;5533
0000e2  f8c2114c          STR      r1,[r2,#0x14c]        ;5533
0000e6  eb030183          ADD      r1,r3,r3,LSL #2       ;5533
0000ea  4a79              LDR      r2,|L44.720|
0000ec  eb021101          ADD      r1,r2,r1,LSL #4       ;5533
0000f0  4608              MOV      r0,r1                 ;5533
0000f2  4976              LDR      r1,|L44.716|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0                 ;5533
0000fc  4872              LDR      r0,|L44.712|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;5533
000102  eb000080          ADD      r0,r0,r0,LSL #2       ;5533
000106  4a72              LDR      r2,|L44.720|
000108  eb021000          ADD      r0,r2,r0,LSL #4       ;5533
00010c  7001              STRB     r1,[r0,#0]            ;5533
00010e  f04f0030          MOV      r0,#0x30              ;5533
000112  e7a9              B        |L44.104|
                  |L44.276|
000114  f8d81408          LDR      r1,[r8,#0x408]        ;5535
000118  460e              MOV      r6,r1                 ;5535
00011a  f8d8040c          LDR      r0,[r8,#0x40c]        ;5535
00011e  4607              MOV      r7,r0                 ;5535
000120  2200              MOVS     r2,#0                 ;5535
000122  4613              MOV      r3,r2                 ;5535
000124  4630              MOV      r0,r6                 ;5535
000126  4639              MOV      r1,r7                 ;5535
000128  f7fffffe          BL       __aeabi_cdcmpeq
00012c  d125              BNE      |L44.378|
00012e  f04f0100          MOV      r1,#0                 ;5535
000132  4865              LDR      r0,|L44.712|
000134  f8c0114c          STR      r1,[r0,#0x14c]        ;5535
000138  4601              MOV      r1,r0                 ;5535
00013a  f8d1314c          LDR      r3,[r1,#0x14c]        ;5535
00013e  f8d1114c          LDR      r1,[r1,#0x14c]        ;5535
000142  f1010101          ADD      r1,r1,#1              ;5535
000146  4602              MOV      r2,r0                 ;5535
000148  f8c2114c          STR      r1,[r2,#0x14c]        ;5535
00014c  eb030183          ADD      r1,r3,r3,LSL #2       ;5535
000150  4a5f              LDR      r2,|L44.720|
000152  eb021101          ADD      r1,r2,r1,LSL #4       ;5535
000156  4608              MOV      r0,r1                 ;5535
000158  495c              LDR      r1,|L44.716|
00015a  f7fffffe          BL       strcpy
00015e  f04f0100          MOV      r1,#0                 ;5535
000162  4859              LDR      r0,|L44.712|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;5535
000168  eb000080          ADD      r0,r0,r0,LSL #2       ;5535
00016c  4a58              LDR      r2,|L44.720|
00016e  eb021000          ADD      r0,r2,r0,LSL #4       ;5535
000172  7001              STRB     r1,[r0,#0]            ;5535
000174  f04f0031          MOV      r0,#0x31              ;5535
000178  e776              B        |L44.104|
                  |L44.378|
00017a  a80a              ADD      r0,sp,#0x28           ;5536
00017c  ab0c              ADD      r3,sp,#0x30           ;5536
00017e  aa0e              ADD      r2,sp,#0x38           ;5536
000180  4641              MOV      r1,r8                 ;5536
000182  9000              STR      r0,[sp,#0]            ;5536
000184  4648              MOV      r0,r9                 ;5536
000186  f7fffffe          BL       find_ends
00018a  f8d813a0          LDR      r1,[r8,#0x3a0]        ;5562
00018e  460e              MOV      r6,r1                 ;5562
000190  f8d803a4          LDR      r0,[r8,#0x3a4]        ;5562
000194  4607              MOV      r7,r0                 ;5562
000196  4630              MOV      r0,r6                 ;5562
000198  4639              MOV      r1,r7                 ;5562
00019a  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;5562
00019e  f7fffffe          BL       __aeabi_dsub
0001a2  4682              MOV      r10,r0                ;5562
0001a4  2200              MOVS     r2,#0                 ;5562
0001a6  f04f4380          MOV      r3,#0x40000000        ;5562
0001aa  f7fffffe          BL       pow
0001ae  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;5562
0001b2  f8d81398          LDR      r1,[r8,#0x398]        ;5562
0001b6  460e              MOV      r6,r1                 ;5562
0001b8  f8d8039c          LDR      r0,[r8,#0x39c]        ;5562
0001bc  4607              MOV      r7,r0                 ;5562
0001be  4630              MOV      r0,r6                 ;5562
0001c0  4639              MOV      r1,r7                 ;5562
0001c2  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;5562
0001c6  f7fffffe          BL       __aeabi_dsub
0001ca  4682              MOV      r10,r0                ;5562
0001cc  2200              MOVS     r2,#0                 ;5562
0001ce  f04f4380          MOV      r3,#0x40000000        ;5562
0001d2  f7fffffe          BL       pow
0001d6  e9cd0102          STRD     r0,r1,[sp,#8]         ;5562
0001da  f8d81390          LDR      r1,[r8,#0x390]        ;5562
0001de  460e              MOV      r6,r1                 ;5562
0001e0  f8d80394          LDR      r0,[r8,#0x394]        ;5562
0001e4  4607              MOV      r7,r0                 ;5562
0001e6  4630              MOV      r0,r6                 ;5562
0001e8  4639              MOV      r1,r7                 ;5562
0001ea  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;5562
0001ee  f7fffffe          BL       __aeabi_dsub
0001f2  4682              MOV      r10,r0                ;5562
0001f4  2200              MOVS     r2,#0                 ;5562
0001f6  f04f4380          MOV      r3,#0x40000000        ;5562
0001fa  f7fffffe          BL       pow
0001fe  e9cd0100          STRD     r0,r1,[sp,#0]         ;5562
000202  e9dd2302          LDRD     r2,r3,[sp,#8]         ;5562
000206  f7fffffe          BL       __aeabi_dadd
00020a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;5562
00020e  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;5562
000212  f7fffffe          BL       __aeabi_dadd
000216  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;5562
00021a  f7fffffe          BL       sqrt
00021e  4604              MOV      r4,r0                 ;5562
000220  460d              MOV      r5,r1                 ;5562
000222  f8d8051c          LDR      r0,[r8,#0x51c]        ;5565
000226  2802              CMP      r0,#2                 ;5565
000228  d102              BNE      |L44.560|
00022a  492a              LDR      r1,|L44.724|
00022c  482a              LDR      r0,|L44.728|
00022e  e001              B        |L44.564|
                  |L44.560|
000230  492a              LDR      r1,|L44.732|
000232  482b              LDR      r0,|L44.736|
                  |L44.564|
000234  460e              MOV      r6,r1                 ;5565
000236  4632              MOV      r2,r6                 ;5565
000238  4603              MOV      r3,r0                 ;5565
00023a  4620              MOV      r0,r4                 ;5565
00023c  4629              MOV      r1,r5                 ;5565
00023e  f7fffffe          BL       __aeabi_cdcmple
000242  d225              BCS      |L44.656|
000244  f04f0100          MOV      r1,#0                 ;5565
000248  481f              LDR      r0,|L44.712|
00024a  f8c0114c          STR      r1,[r0,#0x14c]        ;5565
00024e  4601              MOV      r1,r0                 ;5565
000250  f8d1314c          LDR      r3,[r1,#0x14c]        ;5565
000254  f8d1114c          LDR      r1,[r1,#0x14c]        ;5565
000258  f1010101          ADD      r1,r1,#1              ;5565
00025c  4602              MOV      r2,r0                 ;5565
00025e  f8c2114c          STR      r1,[r2,#0x14c]        ;5565
000262  eb030183          ADD      r1,r3,r3,LSL #2       ;5565
000266  4a1a              LDR      r2,|L44.720|
000268  eb021101          ADD      r1,r2,r1,LSL #4       ;5565
00026c  4608              MOV      r0,r1                 ;5565
00026e  4917              LDR      r1,|L44.716|
000270  f7fffffe          BL       strcpy
000274  f04f0100          MOV      r1,#0                 ;5565
000278  4813              LDR      r0,|L44.712|
00027a  f8d0014c          LDR      r0,[r0,#0x14c]        ;5565
00027e  eb000080          ADD      r0,r0,r0,LSL #2       ;5565
000282  4a13              LDR      r2,|L44.720|
000284  eb021000          ADD      r0,r2,r0,LSL #4       ;5565
000288  7001              STRB     r1,[r0,#0]            ;5565
00028a  f04f00a2          MOV      r0,#0xa2              ;5565
00028e  e6eb              B        |L44.104|
                  |L44.656|
000290  f7fffffe          BL       TURN_PROBE_ON
000294  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5568
000298  e9cd0100          STRD     r0,r1,[sp,#0]         ;5568
00029c  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;5568
0002a0  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;5568
0002a4  f7fffffe          BL       STRAIGHT_PROBE
0002a8  f7fffffe          BL       TURN_PROBE_OFF
0002ac  f44f70bf          MOV      r0,#0x17e             ;5592
0002b0  f8c80628          STR      r0,[r8,#0x628]        ;5592
0002b4  f04f0101          MOV      r1,#1                 ;5593
0002b8  f24b1070          MOV      r0,#0xb170            ;5593
0002bc  f8401008          STR      r1,[r0,r8]            ;5593
0002c0  f04f0000          MOV      r0,#0                 ;5594
0002c4  e6d0              B        |L44.104|
;;;5596   
                          ENDP

0002c6  0000              DCW      0x0000
                  |L44.712|
                          DCD      _setup+0xc000
                  |L44.716|
                          DCD      |symbol_number.479|
                  |L44.720|
                          DCD      _setup+0xb1ac
                  |L44.724|
                          DCD      0x374bc6a8
                  |L44.728|
                          DCD      0x3fd04189
                  |L44.732|
                          DCD      0x47ae147b
                  |L44.736|
                          DCD      0x3f847ae1

                          AREA ||i.convert_retract_mode||, CODE, READONLY, ALIGN=2

                  convert_retract_mode PROC
;;;5617   
;;;5618       static int convert_retract_mode(              /* ARGUMENTS                             */
000000  b570              PUSH     {r4-r6,lr}
;;;5619       int g_code,                                   /* g_code being executed (must be G_98 or G_99) */
;;;5620       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5621       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;5622           static char name[] SET_TO "convert_retract_mode";
;;;5623           if (g_code IS G_98)
000006  f5b47f75          CMP      r4,#0x3d4
00000a  d108              BNE      |L45.30|
;;;5624           {
;;;5625   #ifdef DEBUG_EMC
;;;5626               COMMENT("interpreter: retract mode set to old_z");
00000c  a01f              ADR      r0,|L45.140|
00000e  f7fffffe          BL       COMMENT
;;;5627   #endif
;;;5628               settings->retract_mode SET_TO OLD_Z;
000012  f04f0101          MOV      r1,#1
000016  f24b1088          MOV      r0,#0xb188
00001a  5541              STRB     r1,[r0,r5]
00001c  e033              B        |L45.134|
                  |L45.30|
;;;5629           }
;;;5630           else if (g_code IS G_99)
00001e  f5a47040          SUB      r0,r4,#0x300
000022  38de              SUBS     r0,r0,#0xde
000024  d108              BNE      |L45.56|
;;;5631           {
;;;5632   #ifdef DEBUG_EMC
;;;5633               COMMENT("interpreter: retract mode set to r_plane");
000026  a023              ADR      r0,|L45.180|
000028  f7fffffe          BL       COMMENT
;;;5634   #endif
;;;5635               settings->retract_mode SET_TO R_PLANE;
00002c  f04f0100          MOV      r1,#0
000030  f24b1088          MOV      r0,#0xb188
000034  5541              STRB     r1,[r0,r5]
000036  e026              B        |L45.134|
                  |L45.56|
;;;5636           }
;;;5637           else
;;;5638               ERM(NCE_BUG_CODE_NOT_G98_OR_G99);
000038  f04f0100          MOV      r1,#0
00003c  4828              LDR      r0,|L45.224|
00003e  f8c0114c          STR      r1,[r0,#0x14c]
000042  4601              MOV      r1,r0
000044  f8d1314c          LDR      r3,[r1,#0x14c]
000048  f8d1114c          LDR      r1,[r1,#0x14c]
00004c  f1010101          ADD      r1,r1,#1
000050  4602              MOV      r2,r0
000052  f8c2114c          STR      r1,[r2,#0x14c]
000056  eb030183          ADD      r1,r3,r3,LSL #2
00005a  f6a06254          SUB      r2,r0,#0xe54
00005e  eb021101          ADD      r1,r2,r1,LSL #4
000062  4608              MOV      r0,r1
000064  491f              LDR      r1,|L45.228|
000066  f7fffffe          BL       strcpy
00006a  f04f0100          MOV      r1,#0
00006e  481c              LDR      r0,|L45.224|
000070  f8d0014c          LDR      r0,[r0,#0x14c]
000074  eb000080          ADD      r0,r0,r0,LSL #2
000078  4a1b              LDR      r2,|L45.232|
00007a  eb021000          ADD      r0,r2,r0,LSL #4
00007e  7001              STRB     r1,[r0,#0]
000080  f04f001b          MOV      r0,#0x1b
                  |L45.132|
;;;5639           return RS274NGC_OK;
;;;5640       }
000084  bd70              POP      {r4-r6,pc}
                  |L45.134|
000086  2000              MOVS     r0,#0                 ;5639
000088  e7fc              B        |L45.132|
;;;5641   
                          ENDP

00008a  0000              DCW      0x0000
                  |L45.140|
00008c  696e7465          DCB      "interpreter: retract mode set to old_z",0
000090  72707265
000094  7465723a
000098  20726574
00009c  72616374
0000a0  206d6f64
0000a4  65207365
0000a8  7420746f
0000ac  206f6c64
0000b0  5f7a00  
0000b3  00                DCB      0
                  |L45.180|
0000b4  696e7465          DCB      "interpreter: retract mode set to r_plane",0
0000b8  72707265
0000bc  7465723a
0000c0  20726574
0000c4  72616374
0000c8  206d6f64
0000cc  65207365
0000d0  7420746f
0000d4  20725f70
0000d8  6c616e65
0000dc  00      
0000dd  00                DCB      0
0000de  00                DCB      0
0000df  00                DCB      0
                  |L45.224|
                          DCD      _setup+0xc000
                  |L45.228|
                          DCD      |symbol_number.480|
                  |L45.232|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_set_plane||, CODE, READONLY, ALIGN=2

                  convert_set_plane PROC
;;;5860   
;;;5861       static int convert_set_plane(                 /* ARGUMENTS                    */
000000  b570              PUSH     {r4-r6,lr}
;;;5862       int g_code,                                   /* must be G_17, G_18, or G_19  */
;;;5863       setup_pointer settings)                       /* pointer to machine settings  */
;;;5864       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;5865           static char name[] SET_TO "convert_set_plane";
;;;5866           if (g_code IS G_17)
000006  2daa              CMP      r5,#0xaa
000008  d108              BNE      |L46.28|
;;;5867           {
;;;5868               SELECT_PLANE(CANON_PLANE_XY);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       SELECT_PLANE
;;;5869               settings->plane SET_TO CANON_PLANE_XY;
000010  f04f0101          MOV      r1,#1
000014  f24b106c          MOV      r0,#0xb16c
000018  5101              STR      r1,[r0,r4]
00001a  e08e              B        |L46.314|
                  |L46.28|
;;;5870           }
;;;5871           else if (g_code IS G_18)
00001c  2db4              CMP      r5,#0xb4
00001e  d132              BNE      |L46.134|
;;;5872           {
;;;5873               CHK((settings->cutter_comp_side ISNT OFF),
000020  f8d403b0          LDR      r0,[r4,#0x3b0]
000024  b330              CBZ      r0,|L46.116|
000026  f04f0100          MOV      r1,#0
00002a  4845              LDR      r0,|L46.320|
00002c  f8c0114c          STR      r1,[r0,#0x14c]
000030  4601              MOV      r1,r0
000032  f8d1314c          LDR      r3,[r1,#0x14c]
000036  f8d1114c          LDR      r1,[r1,#0x14c]
00003a  f1010101          ADD      r1,r1,#1
00003e  4602              MOV      r2,r0
000040  f8c2114c          STR      r1,[r2,#0x14c]
000044  eb030183          ADD      r1,r3,r3,LSL #2
000048  f6a06254          SUB      r2,r0,#0xe54
00004c  eb021101          ADD      r1,r2,r1,LSL #4
000050  4608              MOV      r0,r1
000052  493c              LDR      r1,|L46.324|
000054  f7fffffe          BL       strcpy
000058  f04f0100          MOV      r1,#0
00005c  4838              LDR      r0,|L46.320|
00005e  f8d0014c          LDR      r0,[r0,#0x14c]
000062  eb000080          ADD      r0,r0,r0,LSL #2
000066  4a38              LDR      r2,|L46.328|
000068  eb021000          ADD      r0,r2,r0,LSL #4
00006c  7001              STRB     r1,[r0,#0]
00006e  f04f0040          MOV      r0,#0x40
                  |L46.114|
;;;5874                   NCE_CANNOT_USE_XZ_PLANE_WITH_CUTTER_RADIUS_COMP);
;;;5875               SELECT_PLANE(CANON_PLANE_XZ);
;;;5876               settings->plane SET_TO CANON_PLANE_XZ;
;;;5877           }
;;;5878           else if (g_code IS G_19)
;;;5879           {
;;;5880               CHK((settings->cutter_comp_side ISNT OFF),
;;;5881                   NCE_CANNOT_USE_YZ_PLANE_WITH_CUTTER_RADIUS_COMP);
;;;5882               SELECT_PLANE(CANON_PLANE_YZ);
;;;5883               settings->plane SET_TO CANON_PLANE_YZ;
;;;5884           }
;;;5885           else
;;;5886               ERM(NCE_BUG_CODE_NOT_G17_G18_OR_G19);
;;;5887           return RS274NGC_OK;
;;;5888       }
000072  bd70              POP      {r4-r6,pc}
                  |L46.116|
000074  2003              MOVS     r0,#3                 ;5875
000076  f7fffffe          BL       SELECT_PLANE
00007a  f04f0103          MOV      r1,#3                 ;5876
00007e  f24b106c          MOV      r0,#0xb16c            ;5876
000082  5101              STR      r1,[r0,r4]            ;5876
000084  e059              B        |L46.314|
                  |L46.134|
000086  2dbe              CMP      r5,#0xbe              ;5878
000088  d131              BNE      |L46.238|
00008a  f8d403b0          LDR      r0,[r4,#0x3b0]        ;5880
00008e  b328              CBZ      r0,|L46.220|
000090  f04f0100          MOV      r1,#0                 ;5880
000094  482a              LDR      r0,|L46.320|
000096  f8c0114c          STR      r1,[r0,#0x14c]        ;5880
00009a  4601              MOV      r1,r0                 ;5880
00009c  f8d1314c          LDR      r3,[r1,#0x14c]        ;5880
0000a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;5880
0000a4  f1010101          ADD      r1,r1,#1              ;5880
0000a8  4602              MOV      r2,r0                 ;5880
0000aa  f8c2114c          STR      r1,[r2,#0x14c]        ;5880
0000ae  eb030183          ADD      r1,r3,r3,LSL #2       ;5880
0000b2  4a25              LDR      r2,|L46.328|
0000b4  eb021101          ADD      r1,r2,r1,LSL #4       ;5880
0000b8  4608              MOV      r0,r1                 ;5880
0000ba  4922              LDR      r1,|L46.324|
0000bc  f7fffffe          BL       strcpy
0000c0  f04f0100          MOV      r1,#0                 ;5880
0000c4  481e              LDR      r0,|L46.320|
0000c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;5880
0000ca  eb000080          ADD      r0,r0,r0,LSL #2       ;5880
0000ce  4a1e              LDR      r2,|L46.328|
0000d0  eb021000          ADD      r0,r2,r0,LSL #4       ;5880
0000d4  7001              STRB     r1,[r0,#0]            ;5880
0000d6  f04f0041          MOV      r0,#0x41              ;5880
0000da  e7ca              B        |L46.114|
                  |L46.220|
0000dc  2002              MOVS     r0,#2                 ;5882
0000de  f7fffffe          BL       SELECT_PLANE
0000e2  f04f0102          MOV      r1,#2                 ;5883
0000e6  f24b106c          MOV      r0,#0xb16c            ;5883
0000ea  5101              STR      r1,[r0,r4]            ;5883
0000ec  e025              B        |L46.314|
                  |L46.238|
0000ee  f04f0100          MOV      r1,#0                 ;5886
0000f2  4813              LDR      r0,|L46.320|
0000f4  f8c0114c          STR      r1,[r0,#0x14c]        ;5886
0000f8  4601              MOV      r1,r0                 ;5886
0000fa  f8d1314c          LDR      r3,[r1,#0x14c]        ;5886
0000fe  f8d1114c          LDR      r1,[r1,#0x14c]        ;5886
000102  f1010101          ADD      r1,r1,#1              ;5886
000106  4602              MOV      r2,r0                 ;5886
000108  f8c2114c          STR      r1,[r2,#0x14c]        ;5886
00010c  eb030183          ADD      r1,r3,r3,LSL #2       ;5886
000110  4a0d              LDR      r2,|L46.328|
000112  eb021101          ADD      r1,r2,r1,LSL #4       ;5886
000116  4608              MOV      r0,r1                 ;5886
000118  490a              LDR      r1,|L46.324|
00011a  f7fffffe          BL       strcpy
00011e  f04f0100          MOV      r1,#0                 ;5886
000122  4807              LDR      r0,|L46.320|
000124  f8d0014c          LDR      r0,[r0,#0x14c]        ;5886
000128  eb000080          ADD      r0,r0,r0,LSL #2       ;5886
00012c  4a06              LDR      r2,|L46.328|
00012e  eb021000          ADD      r0,r2,r0,LSL #4       ;5886
000132  7001              STRB     r1,[r0,#0]            ;5886
000134  f04f0011          MOV      r0,#0x11              ;5886
000138  e79b              B        |L46.114|
                  |L46.314|
00013a  2000              MOVS     r0,#0                 ;5887
00013c  e799              B        |L46.114|
;;;5889   
                          ENDP

00013e  0000              DCW      0x0000
                  |L46.320|
                          DCD      _setup+0xc000
                  |L46.324|
                          DCD      |symbol_number.482|
                  |L46.328|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_setup||, CODE, READONLY, ALIGN=2

                  convert_setup PROC
;;;5669   
;;;5670       static int convert_setup(                     /* ARGUMENTS                                    */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;5671       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5672       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5673       {
000004  b08b              SUB      sp,sp,#0x2c
000006  4683              MOV      r11,r0
000008  468a              MOV      r10,r1
;;;5674           static char name[] SET_TO "convert_setup";
;;;5675           double x;
;;;5676           double y;
;;;5677           double z;
;;;5678   #ifdef AA
;;;5679           double a;                                 /*AA*/
;;;5680   #endif
;;;5681   #ifdef BB
;;;5682           double b;                                 /*BB*/
;;;5683   #endif
;;;5684   #ifdef CC
;;;5685           double c;                                 /*CC*/
;;;5686   #endif
;;;5687           double * parameters;
;;;5688           int p_int;
;;;5689   
;;;5690           parameters SET_TO settings->parameters;
00000a  f50a60c9          ADD      r0,r10,#0x648
00000e  9009              STR      r0,[sp,#0x24]
;;;5691           p_int SET_TO (int)(block->p_number + 0.0001);
000010  f50b70d8          ADD      r0,r11,#0x1b0
000014  c803              LDM      r0,{r0,r1}
000016  4a7f              LDR      r2,|L47.532|
000018  4b7f              LDR      r3,|L47.536|
00001a  e9cd0104          STRD     r0,r1,[sp,#0x10]
00001e  f7fffffe          BL       __aeabi_dadd
000022  e9cd0106          STRD     r0,r1,[sp,#0x18]
000026  f7fffffe          BL       __aeabi_d2iz
00002a  9008              STR      r0,[sp,#0x20]
;;;5692   
;;;5693           if (block->x_flag IS ON)
00002c  f8db01dc          LDR      r0,[r11,#0x1dc]
000030  2801              CMP      r0,#1
000032  d10e              BNE      |L47.82|
;;;5694           {
;;;5695               x SET_TO block->x_number;
000034  f50b74f0          ADD      r4,r11,#0x1e0
000038  cc30              LDM      r4,{r4,r5}
;;;5696               parameters[5201 + (p_int * 20)] SET_TO x;
00003a  9808              LDR      r0,[sp,#0x20]
00003c  eb000080          ADD      r0,r0,r0,LSL #2
000040  f2414151          MOV      r1,#0x1451
000044  eb010180          ADD      r1,r1,r0,LSL #2
000048  9809              LDR      r0,[sp,#0x24]
00004a  eb0000c1          ADD      r0,r0,r1,LSL #3
00004e  c030              STM      r0!,{r4,r5}
000050  e00a              B        |L47.104|
                  |L47.82|
;;;5697           }
;;;5698           else
;;;5699               x SET_TO parameters[5201 + (p_int * 20)];
000052  9808              LDR      r0,[sp,#0x20]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  f2414151          MOV      r1,#0x1451
00005c  eb010180          ADD      r1,r1,r0,LSL #2
000060  9809              LDR      r0,[sp,#0x24]
000062  eb0000c1          ADD      r0,r0,r1,LSL #3
000066  c830              LDM      r0!,{r4,r5}
                  |L47.104|
;;;5700   
;;;5701           if (block->y_flag IS ON)
000068  f8db01e8          LDR      r0,[r11,#0x1e8]
00006c  2801              CMP      r0,#1
00006e  d10e              BNE      |L47.142|
;;;5702           {
;;;5703               y SET_TO block->y_number;
000070  f50b76f8          ADD      r6,r11,#0x1f0
000074  cec0              LDM      r6,{r6,r7}
;;;5704               parameters[5202 + (p_int * 20)] SET_TO y;
000076  9808              LDR      r0,[sp,#0x20]
000078  eb000080          ADD      r0,r0,r0,LSL #2
00007c  f2414152          MOV      r1,#0x1452
000080  eb010180          ADD      r1,r1,r0,LSL #2
000084  9809              LDR      r0,[sp,#0x24]
000086  eb0000c1          ADD      r0,r0,r1,LSL #3
00008a  c0c0              STM      r0!,{r6,r7}
00008c  e00a              B        |L47.164|
                  |L47.142|
;;;5705           }
;;;5706           else
;;;5707               y SET_TO parameters[5202 + (p_int * 20)];
00008e  9808              LDR      r0,[sp,#0x20]
000090  eb000080          ADD      r0,r0,r0,LSL #2
000094  f2414152          MOV      r1,#0x1452
000098  eb010180          ADD      r1,r1,r0,LSL #2
00009c  9809              LDR      r0,[sp,#0x24]
00009e  eb0000c1          ADD      r0,r0,r1,LSL #3
0000a2  c8c0              LDM      r0!,{r6,r7}
                  |L47.164|
;;;5708           if (block->z_flag IS ON)
0000a4  f8db01f8          LDR      r0,[r11,#0x1f8]
0000a8  2801              CMP      r0,#1
0000aa  d110              BNE      |L47.206|
;;;5709           {
;;;5710               z SET_TO block->z_number;
0000ac  f8db9204          LDR      r9,[r11,#0x204]
0000b0  f8db8200          LDR      r8,[r11,#0x200]
;;;5711               parameters[5203 + (p_int * 20)] SET_TO z;
0000b4  9808              LDR      r0,[sp,#0x20]
0000b6  eb000080          ADD      r0,r0,r0,LSL #2
0000ba  f2414153          MOV      r1,#0x1453
0000be  eb010180          ADD      r1,r1,r0,LSL #2
0000c2  9809              LDR      r0,[sp,#0x24]
0000c4  eb0000c1          ADD      r0,r0,r1,LSL #3
0000c8  e9c08900          STRD     r8,r9,[r0,#0]
0000cc  e00b              B        |L47.230|
                  |L47.206|
;;;5712           }
;;;5713           else
;;;5714               z SET_TO parameters[5203 + (p_int * 20)];
0000ce  9808              LDR      r0,[sp,#0x20]
0000d0  eb000080          ADD      r0,r0,r0,LSL #2
0000d4  f2414153          MOV      r1,#0x1453
0000d8  eb010180          ADD      r1,r1,r0,LSL #2
0000dc  9809              LDR      r0,[sp,#0x24]
0000de  eb0000c1          ADD      r0,r0,r1,LSL #3
0000e2  e9d08900          LDRD     r8,r9,[r0,#0]
                  |L47.230|
;;;5715   
;;;5716   #ifdef AA
;;;5717           if (block->a_flag IS ON)
;;;5718           {
;;;5719               a SET_TO block->a_number;
;;;5720               parameters[5204 + (p_int * 20)] SET_TO a;
;;;5721           }
;;;5722           else
;;;5723               a SET_TO parameters[5204 + (p_int * 20)];
;;;5724   #endif
;;;5725   
;;;5726   #ifdef BB
;;;5727           if (block->b_flag IS ON)
;;;5728           {
;;;5729               b SET_TO block->b_number;
;;;5730               parameters[5205 + (p_int * 20)] SET_TO b;
;;;5731           }
;;;5732           else
;;;5733               b SET_TO parameters[5205 + (p_int * 20)];
;;;5734   #endif
;;;5735   
;;;5736   #ifdef CC
;;;5737           if (block->c_flag IS ON)
;;;5738           {
;;;5739               c SET_TO block->c_number;
;;;5740               parameters[5206 + (p_int * 20)] SET_TO c;
;;;5741           }
;;;5742           else
;;;5743               c SET_TO parameters[5206 + (p_int * 20)];
;;;5744   #endif
;;;5745   
;;;5746      /* axis offsets could be included in the two sets of calculations for
;;;5747         current_x, current_y, etc., but do not need to be because the results
;;;5748         would be the same. They would be added in then subtracted out. */
;;;5749           if (p_int IS settings->origin_index)      /* system is currently used */
0000e6  f8da162c          LDR      r1,[r10,#0x62c]
0000ea  9808              LDR      r0,[sp,#0x20]
0000ec  4281              CMP      r1,r0
0000ee  d17d              BNE      |L47.492|
;;;5750           {
;;;5751               settings->current_x SET_TO
0000f0  f50a60c6          ADD      r0,r10,#0x630
0000f4  c803              LDM      r0,{r0,r1}
0000f6  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000fa  f50a7064          ADD      r0,r10,#0x390
0000fe  c803              LDM      r0,{r0,r1}
000100  e9cd0104          STRD     r0,r1,[sp,#0x10]
000104  e9dd2306          LDRD     r2,r3,[sp,#0x18]
000108  f7fffffe          BL       __aeabi_dadd
00010c  f50a7264          ADD      r2,r10,#0x390
000110  c203              STM      r2!,{r0,r1}
;;;5752                   (settings->current_x + settings->origin_offset_x);
;;;5753               settings->current_y SET_TO
000112  f50a60c7          ADD      r0,r10,#0x638
000116  c803              LDM      r0,{r0,r1}
000118  e9cd0106          STRD     r0,r1,[sp,#0x18]
00011c  f50a7066          ADD      r0,r10,#0x398
000120  c803              LDM      r0,{r0,r1}
000122  e9cd0104          STRD     r0,r1,[sp,#0x10]
000126  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00012a  f7fffffe          BL       __aeabi_dadd
00012e  f50a7266          ADD      r2,r10,#0x398
000132  c203              STM      r2!,{r0,r1}
;;;5754                   (settings->current_y + settings->origin_offset_y);
;;;5755               settings->current_z SET_TO
000134  f50a60c8          ADD      r0,r10,#0x640
000138  c803              LDM      r0,{r0,r1}
00013a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00013e  f50a7068          ADD      r0,r10,#0x3a0
000142  c803              LDM      r0,{r0,r1}
000144  e9cd0104          STRD     r0,r1,[sp,#0x10]
000148  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00014c  f7fffffe          BL       __aeabi_dadd
000150  f50a7268          ADD      r2,r10,#0x3a0
000154  c203              STM      r2!,{r0,r1}
;;;5756                   (settings->current_z + settings->origin_offset_z);
;;;5757   #ifdef AA
;;;5758               settings->AA_current SET_TO           /*AA*/
;;;5759       #endif
;;;5760       #ifdef AA
;;;5761      /*AA*/
;;;5762                   (settings->AA_current + settings->AA_origin_offset);
;;;5763   #endif
;;;5764   #ifdef BB
;;;5765               settings->BB_current SET_TO           /*BB*/
;;;5766       #endif
;;;5767       #ifdef BB
;;;5768      /*BB*/
;;;5769                   (settings->BB_current + settings->BB_origin_offset);
;;;5770   #endif
;;;5771   #ifdef CC
;;;5772               settings->CC_current SET_TO           /*CC*/
;;;5773       #endif
;;;5774       #ifdef CC
;;;5775      /*CC*/
;;;5776                   (settings->CC_current + settings->CC_origin_offset);
;;;5777   #endif
;;;5778   
;;;5779               settings->origin_offset_x SET_TO x;
000156  f50a60c6          ADD      r0,r10,#0x630
00015a  c030              STM      r0!,{r4,r5}
;;;5780               settings->origin_offset_y SET_TO y;
00015c  f50a60c7          ADD      r0,r10,#0x638
000160  c0c0              STM      r0!,{r6,r7}
;;;5781               settings->origin_offset_z SET_TO z;
000162  f8ca9644          STR      r9,[r10,#0x644]
000166  f8ca8640          STR      r8,[r10,#0x640]
;;;5782   #ifdef AA
;;;5783               settings->AA_origin_offset SET_TO a;  /*AA*/
;;;5784   #endif
;;;5785   #ifdef BB
;;;5786               settings->BB_origin_offset SET_TO b;  /*BB*/
;;;5787   #endif
;;;5788   #ifdef CC
;;;5789               settings->CC_origin_offset SET_TO c;  /*CC*/
;;;5790   #endif
;;;5791   
;;;5792               settings->current_x SET_TO (settings->current_x - x);
00016a  f50a7064          ADD      r0,r10,#0x390
00016e  c803              LDM      r0,{r0,r1}
000170  4622              MOV      r2,r4
000172  462b              MOV      r3,r5
000174  e9cd0106          STRD     r0,r1,[sp,#0x18]
000178  f7fffffe          BL       __aeabi_dsub
00017c  f50a7264          ADD      r2,r10,#0x390
000180  c203              STM      r2!,{r0,r1}
;;;5793               settings->current_y SET_TO (settings->current_y - y);
000182  f50a7066          ADD      r0,r10,#0x398
000186  c803              LDM      r0,{r0,r1}
000188  4632              MOV      r2,r6
00018a  463b              MOV      r3,r7
00018c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000190  f7fffffe          BL       __aeabi_dsub
000194  f50a7266          ADD      r2,r10,#0x398
000198  c203              STM      r2!,{r0,r1}
;;;5794               settings->current_z SET_TO (settings->current_z - z);
00019a  f50a7068          ADD      r0,r10,#0x3a0
00019e  c803              LDM      r0,{r0,r1}
0001a0  4642              MOV      r2,r8
0001a2  464b              MOV      r3,r9
0001a4  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001a8  f7fffffe          BL       __aeabi_dsub
0001ac  f50a7268          ADD      r2,r10,#0x3a0
0001b0  c203              STM      r2!,{r0,r1}
;;;5795   #ifdef AA
;;;5796      /*AA*/
;;;5797               settings->AA_current SET_TO (settings->AA_current - a);
;;;5798   #endif
;;;5799   #ifdef BB
;;;5800      /*BB*/
;;;5801               settings->BB_current SET_TO (settings->BB_current - b);
;;;5802   #endif
;;;5803   #ifdef CC
;;;5804      /*CC*/
;;;5805               settings->CC_current SET_TO (settings->CC_current - c);
;;;5806   #endif
;;;5807   
;;;5808               SET_ORIGIN_OFFSETS(x + settings->axis_offset_x,
0001b2  e9da011e          LDRD     r0,r1,[r10,#0x78]
0001b6  4642              MOV      r2,r8
0001b8  464b              MOV      r3,r9
0001ba  e9cd0100          STRD     r0,r1,[sp,#0]
0001be  f7fffffe          BL       __aeabi_dadd
0001c2  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001c6  e9da011c          LDRD     r0,r1,[r10,#0x70]
0001ca  4632              MOV      r2,r6
0001cc  463b              MOV      r3,r7
0001ce  e9cd0100          STRD     r0,r1,[sp,#0]
0001d2  f7fffffe          BL       __aeabi_dadd
0001d6  e9cd0104          STRD     r0,r1,[sp,#0x10]
0001da  e9da011a          LDRD     r0,r1,[r10,#0x68]
0001de  4622              MOV      r2,r4
0001e0  462b              MOV      r3,r5
0001e2  e9cd0100          STRD     r0,r1,[sp,#0]
0001e6  f7fffffe          BL       __aeabi_dadd
0001ea  e000              B        |L47.494|
                  |L47.492|
0001ec  e00a              B        |L47.516|
                  |L47.494|
0001ee  e9cd0102          STRD     r0,r1,[sp,#8]
0001f2  e9dd0106          LDRD     r0,r1,[sp,#0x18]
0001f6  e9cd0100          STRD     r0,r1,[sp,#0]
0001fa  a802              ADD      r0,sp,#8
0001fc  c80f              LDM      r0,{r0-r3}
0001fe  f7fffffe          BL       SET_ORIGIN_OFFSETS
000202  e002              B        |L47.522|
                  |L47.516|
;;;5809                   y + settings->axis_offset_y,
;;;5810                   z + settings->axis_offset_z
;;;5811       #ifdef AA
;;;5812                   ,            a + settings->AA_axis_offset
;;;5813       #else
;;;5814       #ifdef ALL_AXES
;;;5815                   , 0
;;;5816       #endif
;;;5817       #endif
;;;5818       #ifdef BB
;;;5819                   ,            b + settings->BB_axis_offset
;;;5820       #else
;;;5821       #ifdef ALL_AXES
;;;5822                   , 0
;;;5823       #endif
;;;5824       #endif
;;;5825       #ifdef CC
;;;5826                   ,            c + settings->CC_axis_offset
;;;5827       #else
;;;5828       #ifdef ALL_AXES
;;;5829                   , 0
;;;5830       #endif
;;;5831       #endif
;;;5832                   );
;;;5833           }
;;;5834   #ifdef DEBUG_EMC
;;;5835           else
;;;5836               COMMENT("interpreter: setting coordinate system origin");
000204  a005              ADR      r0,|L47.540|
000206  f7fffffe          BL       COMMENT
                  |L47.522|
;;;5837   #endif
;;;5838           return RS274NGC_OK;
00020a  2000              MOVS     r0,#0
;;;5839       }
00020c  b00b              ADD      sp,sp,#0x2c
00020e  e8bd8ff0          POP      {r4-r11,pc}
;;;5840   
                          ENDP

000212  0000              DCW      0x0000
                  |L47.532|
                          DCD      0xeb1c432d
                  |L47.536|
                          DCD      0x3f1a36e2
                  |L47.540|
00021c  696e7465          DCB      "interpreter: setting coordinate system origin",0
000220  72707265
000224  7465723a
000228  20736574
00022c  74696e67
000230  20636f6f
000234  7264696e
000238  61746520
00023c  73797374
000240  656d206f
000244  72696769
000248  6e00    
00024a  00                DCB      0
00024b  00                DCB      0

                          AREA ||i.convert_speed||, CODE, READONLY, ALIGN=1

                  convert_speed PROC
;;;5904   
;;;5905       static int convert_speed(                     /* ARGUMENTS                                */
000000  b570              PUSH     {r4-r6,lr}
;;;5906       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;5907       setup_pointer settings)                       /* pointer to machine settings              */
;;;5908       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;5909           SET_SPINDLE_SPEED(block->s_number);
000006  f8d411d0          LDR      r1,[r4,#0x1d0]
00000a  460a              MOV      r2,r1
00000c  f8d401d4          LDR      r0,[r4,#0x1d4]
000010  4603              MOV      r3,r0
000012  4610              MOV      r0,r2
000014  4619              MOV      r1,r3
000016  f7fffffe          BL       SET_SPINDLE_SPEED
;;;5910           settings->speed SET_TO block->s_number;
00001a  f5054030          ADD      r0,r5,#0xb000
00001e  f8d421d0          LDR      r2,[r4,#0x1d0]
000022  f8d411d4          LDR      r1,[r4,#0x1d4]
000026  f8c02198          STR      r2,[r0,#0x198]
00002a  f8c0119c          STR      r1,[r0,#0x19c]
;;;5911           return RS274NGC_OK;
00002e  f04f0000          MOV      r0,#0
;;;5912       }
000032  bd70              POP      {r4-r6,pc}
;;;5913   
                          ENDP


                          AREA ||i.convert_stop||, CODE, READONLY, ALIGN=2

                  convert_stop PROC
;;;5976   
;;;5977       static int convert_stop(                      /* ARGUMENTS                                    */
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;5978       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5979       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5980       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
;;;5981           static char name[] SET_TO "convert_stop";
;;;5982           int index;
;;;5983           char * line;
;;;5984           int length;
;;;5985   
;;;5986           if (block->m_modes[4] IS 0)
000008  f44f70cc          MOV      r0,#0x198
00000c  f8500008          LDR      r0,[r0,r8]
000010  b910              CBNZ     r0,|L49.24|
;;;5987           {
;;;5988               PROGRAM_STOP();
000012  f7fffffe          BL       PROGRAM_STOP
000016  e201              B        |L49.1052|
                  |L49.24|
;;;5989           }
;;;5990           else if (block->m_modes[4] IS 60)
000018  f44f70cc          MOV      r0,#0x198
00001c  f8500008          LDR      r0,[r0,r8]
000020  283c              CMP      r0,#0x3c
000022  d104              BNE      |L49.46|
;;;5991           {
;;;5992               PALLET_SHUTTLE();
000024  f7fffffe          BL       PALLET_SHUTTLE
;;;5993               PROGRAM_STOP();
000028  f7fffffe          BL       PROGRAM_STOP
00002c  e1f6              B        |L49.1052|
                  |L49.46|
;;;5994           }
;;;5995           else if (block->m_modes[4] IS 1)
00002e  f44f70cc          MOV      r0,#0x198
000032  f8500008          LDR      r0,[r0,r8]
000036  2801              CMP      r0,#1
000038  d102              BNE      |L49.64|
;;;5996           {
;;;5997               OPTIONAL_PROGRAM_STOP();
00003a  f7fffffe          BL       OPTIONAL_PROGRAM_STOP
00003e  e1ed              B        |L49.1052|
                  |L49.64|
;;;5998           }
;;;5999           else if ((block->m_modes[4] IS 2) OR (block->m_modes[4] IS 30))
000040  f44f70cc          MOV      r0,#0x198
000044  f8500008          LDR      r0,[r0,r8]
000048  2802              CMP      r0,#2
00004a  d005              BEQ      |L49.88|
00004c  f44f70cc          MOV      r0,#0x198
000050  f8500008          LDR      r0,[r0,r8]
000054  281e              CMP      r0,#0x1e
000056  d17d              BNE      |L49.340|
                  |L49.88|
;;;6000           {                                         /* reset stuff here */
;;;6001      /*1*/
;;;6002               settings->current_x SET_TO settings->current_x
000058  f8d41630          LDR      r1,[r4,#0x630]
00005c  460e              MOV      r6,r1
00005e  f8d40634          LDR      r0,[r4,#0x634]
000062  4607              MOV      r7,r0
000064  f5047064          ADD      r0,r4,#0x390
000068  c803              LDM      r0,{r0,r1}
00006a  4683              MOV      r11,r0
00006c  4632              MOV      r2,r6
00006e  463b              MOV      r3,r7
000070  f7fffffe          BL       __aeabi_dadd
000074  e9cd0100          STRD     r0,r1,[sp,#0]
000078  e9d4101a          LDRD     r1,r0,[r4,#0x68]
00007c  460e              MOV      r6,r1
00007e  4632              MOV      r2,r6
000080  4603              MOV      r3,r0
000082  e9dd0100          LDRD     r0,r1,[sp,#0]
000086  f7fffffe          BL       __aeabi_dadd
00008a  f5047264          ADD      r2,r4,#0x390
00008e  c203              STM      r2!,{r0,r1}
;;;6003                   + settings->origin_offset_x + settings->axis_offset_x;
;;;6004               settings->current_y SET_TO settings->current_y
000090  f8d41638          LDR      r1,[r4,#0x638]
000094  460e              MOV      r6,r1
000096  f8d4063c          LDR      r0,[r4,#0x63c]
00009a  4607              MOV      r7,r0
00009c  f8d41398          LDR      r1,[r4,#0x398]
0000a0  468b              MOV      r11,r1
0000a2  f8d4039c          LDR      r0,[r4,#0x39c]
0000a6  4684              MOV      r12,r0
0000a8  4632              MOV      r2,r6
0000aa  463b              MOV      r3,r7
0000ac  4658              MOV      r0,r11
0000ae  4661              MOV      r1,r12
0000b0  f7fffffe          BL       __aeabi_dadd
0000b4  e9cd0100          STRD     r0,r1,[sp,#0]
0000b8  e9d4011c          LDRD     r0,r1,[r4,#0x70]
0000bc  4606              MOV      r6,r0
0000be  4632              MOV      r2,r6
0000c0  460b              MOV      r3,r1
0000c2  e9dd0100          LDRD     r0,r1,[sp,#0]
0000c6  f7fffffe          BL       __aeabi_dadd
0000ca  f5047266          ADD      r2,r4,#0x398
0000ce  c203              STM      r2!,{r0,r1}
;;;6005                   + settings->origin_offset_y + settings->axis_offset_y;
;;;6006               settings->current_z SET_TO settings->current_z
0000d0  f8d41640          LDR      r1,[r4,#0x640]
0000d4  468b              MOV      r11,r1
0000d6  f8d40644          LDR      r0,[r4,#0x644]
0000da  4684              MOV      r12,r0
0000dc  f5047068          ADD      r0,r4,#0x3a0
0000e0  c803              LDM      r0,{r0,r1}
0000e2  4606              MOV      r6,r0
0000e4  465a              MOV      r2,r11
0000e6  4663              MOV      r3,r12
0000e8  f7fffffe          BL       __aeabi_dadd
0000ec  e9cd0100          STRD     r0,r1,[sp,#0]
0000f0  e9d4101e          LDRD     r1,r0,[r4,#0x78]
0000f4  460e              MOV      r6,r1
0000f6  4632              MOV      r2,r6
0000f8  4603              MOV      r3,r0
0000fa  e9dd0100          LDRD     r0,r1,[sp,#0]
0000fe  f7fffffe          BL       __aeabi_dadd
000102  f5047268          ADD      r2,r4,#0x3a0
000106  c203              STM      r2!,{r0,r1}
;;;6007                   + settings->origin_offset_z + settings->axis_offset_z;
;;;6008   #ifdef AA
;;;6009      /*AA*/
;;;6010               settings->AA_current SET_TO settings->AA_current
;;;6011       #endif
;;;6012       #ifdef AA
;;;6013      /*AA*/
;;;6014                   + settings->AA_origin_offset + settings->AA_axis_offset;
;;;6015   #endif
;;;6016   #ifdef BB
;;;6017      /*BB*/
;;;6018               settings->BB_current SET_TO settings->BB_current
;;;6019       #endif
;;;6020       #ifdef BB
;;;6021      /*BB*/
;;;6022                   + settings->BB_origin_offset + settings->BB_axis_offset;
;;;6023   #endif
;;;6024   #ifdef CC
;;;6025      /*CC*/
;;;6026               settings->CC_current SET_TO settings->CC_current
;;;6027       #endif
;;;6028       #ifdef CC
;;;6029      /*CC*/
;;;6030                   + settings->CC_origin_offset + settings->CC_axis_offset;
;;;6031   #endif
;;;6032   
;;;6033               settings->origin_index SET_TO 1;
000108  f04f0001          MOV      r0,#1
00010c  f8c4062c          STR      r0,[r4,#0x62c]
;;;6034               settings->parameters[5220] SET_TO 1.0;
000110  f04f0200          MOV      r2,#0
000114  49c2              LDR      r1,|L49.1056|
000116  f50460c9          ADD      r0,r4,#0x648
00011a  f5004020          ADD      r0,r0,#0xa000
00011e  f8c02320          STR      r2,[r0,#0x320]
000122  f8c01324          STR      r1,[r0,#0x324]
;;;6035               settings->origin_offset_x SET_TO settings->parameters[5221];
000126  f50460c9          ADD      r0,r4,#0x648
00012a  f5004020          ADD      r0,r0,#0xa000
00012e  f500704a          ADD      r0,r0,#0x328
000132  c803              LDM      r0,{r0,r1}
000134  f50462c6          ADD      r2,r4,#0x630
000138  c203              STM      r2!,{r0,r1}
;;;6036               settings->origin_offset_y SET_TO settings->parameters[5222];
00013a  f50460c9          ADD      r0,r4,#0x648
00013e  f5004020          ADD      r0,r0,#0xa000
000142  f500704c          ADD      r0,r0,#0x330
000146  c803              LDM      r0,{r0,r1}
000148  f50462c7          ADD      r2,r4,#0x638
00014c  c203              STM      r2!,{r0,r1}
;;;6037               settings->origin_offset_z SET_TO settings->parameters[5223];
00014e  f50460c9          ADD      r0,r4,#0x648
000152  e000              B        |L49.342|
                  |L49.340|
000154  e13c              B        |L49.976|
                  |L49.342|
000156  f5004020          ADD      r0,r0,#0xa000
00015a  f500704e          ADD      r0,r0,#0x338
00015e  c803              LDM      r0,{r0,r1}
000160  f50462c8          ADD      r2,r4,#0x640
000164  c203              STM      r2!,{r0,r1}
;;;6038   #ifdef AA
;;;6039      /*AA*/
;;;6040               settings->AA_origin_offset SET_TO settings->parameters[5224];
;;;6041   #endif
;;;6042   #ifdef BB
;;;6043      /*BB*/
;;;6044               settings->BB_origin_offset SET_TO settings->parameters[5225];
;;;6045   #endif
;;;6046   #ifdef CC
;;;6047      /*CC*/
;;;6048               settings->CC_origin_offset SET_TO settings->parameters[5226];
;;;6049   #endif
;;;6050   
;;;6051               settings->axis_offset_x SET_TO 0;
000166  f04f0100          MOV      r1,#0
00016a  66a1              STR      r1,[r4,#0x68]
00016c  66e1              STR      r1,[r4,#0x6c]
;;;6052               settings->axis_offset_x SET_TO 0;
00016e  66a1              STR      r1,[r4,#0x68]
000170  66e1              STR      r1,[r4,#0x6c]
;;;6053               settings->axis_offset_x SET_TO 0;
000172  66a1              STR      r1,[r4,#0x68]
000174  66e1              STR      r1,[r4,#0x6c]
;;;6054   #ifdef AA
;;;6055               settings->AA_axis_offset SET_TO 0;    /*AA*/
;;;6056   #endif
;;;6057   #ifdef BB
;;;6058               settings->BB_axis_offset SET_TO 0;    /*BB*/
;;;6059   #endif
;;;6060   #ifdef CC
;;;6061               settings->CC_axis_offset SET_TO 0;    /*CC*/
;;;6062   #endif
;;;6063   
;;;6064               settings->current_x SET_TO settings->current_x -
000176  f8d41630          LDR      r1,[r4,#0x630]
00017a  468b              MOV      r11,r1
00017c  f8d40634          LDR      r0,[r4,#0x634]
000180  4684              MOV      r12,r0
000182  f8d41390          LDR      r1,[r4,#0x390]
000186  460e              MOV      r6,r1
000188  f8d40394          LDR      r0,[r4,#0x394]
00018c  4607              MOV      r7,r0
00018e  465a              MOV      r2,r11
000190  4663              MOV      r3,r12
000192  4630              MOV      r0,r6
000194  4639              MOV      r1,r7
000196  f7fffffe          BL       __aeabi_dsub
00019a  f5047264          ADD      r2,r4,#0x390
00019e  c203              STM      r2!,{r0,r1}
;;;6065                   settings->origin_offset_x;
;;;6066               settings->current_y SET_TO settings->current_y -
0001a0  f50460c7          ADD      r0,r4,#0x638
0001a4  c803              LDM      r0,{r0,r1}
0001a6  4683              MOV      r11,r0
0001a8  468c              MOV      r12,r1
0001aa  f5047066          ADD      r0,r4,#0x398
0001ae  c803              LDM      r0,{r0,r1}
0001b0  4606              MOV      r6,r0
0001b2  465a              MOV      r2,r11
0001b4  4663              MOV      r3,r12
0001b6  f7fffffe          BL       __aeabi_dsub
0001ba  f5047266          ADD      r2,r4,#0x398
0001be  c203              STM      r2!,{r0,r1}
;;;6067                   settings->origin_offset_y;
;;;6068               settings->current_z SET_TO settings->current_z -
0001c0  f8d41640          LDR      r1,[r4,#0x640]
0001c4  468b              MOV      r11,r1
0001c6  f8d40644          LDR      r0,[r4,#0x644]
0001ca  4684              MOV      r12,r0
0001cc  f8d413a0          LDR      r1,[r4,#0x3a0]
0001d0  460e              MOV      r6,r1
0001d2  f8d403a4          LDR      r0,[r4,#0x3a4]
0001d6  4607              MOV      r7,r0
0001d8  465a              MOV      r2,r11
0001da  4663              MOV      r3,r12
0001dc  4630              MOV      r0,r6
0001de  4639              MOV      r1,r7
0001e0  f7fffffe          BL       __aeabi_dsub
0001e4  f5047268          ADD      r2,r4,#0x3a0
0001e8  c203              STM      r2!,{r0,r1}
;;;6069                   settings->origin_offset_z;
;;;6070   #ifdef AA
;;;6071      /*AA*/
;;;6072               settings->AA_current SET_TO settings->AA_current -
;;;6073       #endif
;;;6074       #ifdef AA
;;;6075                   settings->AA_origin_offset;       /*AA*/
;;;6076   #endif
;;;6077   #ifdef BB
;;;6078      /*BB*/
;;;6079               settings->BB_current SET_TO settings->BB_current -
;;;6080       #endif
;;;6081       #ifdef BB
;;;6082                   settings->BB_origin_offset;       /*BB*/
;;;6083   #endif
;;;6084   #ifdef CC
;;;6085      /*CC*/
;;;6086               settings->CC_current SET_TO settings->CC_current -
;;;6087       #endif
;;;6088       #ifdef CC
;;;6089                   settings->CC_origin_offset;       /*CC*/
;;;6090   #endif
;;;6091   
;;;6092               SET_ORIGIN_OFFSETS(settings->origin_offset_x,
0001ea  f50460c8          ADD      r0,r4,#0x640
0001ee  c803              LDM      r0,{r0,r1}
0001f0  e9cd0100          STRD     r0,r1,[sp,#0]
0001f4  f8d41638          LDR      r1,[r4,#0x638]
0001f8  468b              MOV      r11,r1
0001fa  f8d4063c          LDR      r0,[r4,#0x63c]
0001fe  4684              MOV      r12,r0
000200  f50460c6          ADD      r0,r4,#0x630
000204  c803              LDM      r0,{r0,r1}
000206  4606              MOV      r6,r0
000208  465a              MOV      r2,r11
00020a  4663              MOV      r3,r12
00020c  f7fffffe          BL       SET_ORIGIN_OFFSETS
;;;6093                   settings->origin_offset_y,
;;;6094                   settings->origin_offset_z
;;;6095       #ifdef AA
;;;6096                   ,            settings->AA_origin_offset
;;;6097       #else
;;;6098       #ifdef ALL_AXES
;;;6099                   , 0
;;;6100       #endif
;;;6101       #endif
;;;6102       #ifdef BB
;;;6103                   ,            settings->BB_origin_offset
;;;6104       #else
;;;6105       #ifdef ALL_AXES
;;;6106                   , 0
;;;6107       #endif
;;;6108       #endif
;;;6109       #ifdef CC
;;;6110                   ,            settings->CC_origin_offset
;;;6111       #else
;;;6112       #ifdef ALL_AXES
;;;6113                   , 0
;;;6114       #endif
;;;6115       #endif
;;;6116                   );
;;;6117   
;;;6118               /*2*/ if (settings->plane ISNT CANON_PLANE_XY)
000210  f24b106c          MOV      r0,#0xb16c
000214  5900              LDR      r0,[r0,r4]
000216  2801              CMP      r0,#1
000218  d007              BEQ      |L49.554|
;;;6119               {
;;;6120                   SELECT_PLANE(CANON_PLANE_XY);
00021a  2001              MOVS     r0,#1
00021c  f7fffffe          BL       SELECT_PLANE
;;;6121                   settings->plane SET_TO CANON_PLANE_XY;
000220  f04f0101          MOV      r1,#1
000224  f24b106c          MOV      r0,#0xb16c
000228  5101              STR      r1,[r0,r4]
                  |L49.554|
;;;6122               }
;;;6123   
;;;6124               /*3*/ settings->distance_mode SET_TO MODE_ABSOLUTE;
00022a  f04f0000          MOV      r0,#0
00022e  f88403f8          STRB     r0,[r4,#0x3f8]
;;;6125   
;;;6126               /*4*/ settings->feed_mode SET_TO UNITS_PER_MINUTE;
000232  f8c403fc          STR      r0,[r4,#0x3fc]
;;;6127   
;;;6128               /*5*/ if (settings->feed_override ISNT ON)
000236  f8d40400          LDR      r0,[r4,#0x400]
00023a  2801              CMP      r0,#1
00023c  d005              BEQ      |L49.586|
;;;6129               {
;;;6130                   ENABLE_FEED_OVERRIDE();
00023e  f7fffffe          BL       ENABLE_FEED_OVERRIDE
;;;6131                   settings->feed_override SET_TO ON;
000242  f04f0001          MOV      r0,#1
000246  f8c40400          STR      r0,[r4,#0x400]
                  |L49.586|
;;;6132               }
;;;6133               if (settings->speed_override ISNT ON)
00024a  f24b10a4          MOV      r0,#0xb1a4
00024e  5900              LDR      r0,[r0,r4]
000250  2801              CMP      r0,#1
000252  d006              BEQ      |L49.610|
;;;6134               {
;;;6135                   ENABLE_SPEED_OVERRIDE();
000254  f7fffffe          BL       ENABLE_SPEED_OVERRIDE
;;;6136                   settings->speed_override SET_TO ON;
000258  f04f0101          MOV      r1,#1
00025c  f24b10a4          MOV      r0,#0xb1a4
000260  5101              STR      r1,[r0,r4]
                  |L49.610|
;;;6137               }
;;;6138   
;;;6139               /*6*/ settings->cutter_comp_side SET_TO OFF;
000262  f04f0000          MOV      r0,#0
000266  f8c403b0          STR      r0,[r4,#0x3b0]
;;;6140               settings->program_x SET_TO UNKNOWN;
00026a  486e              LDR      r0,|L49.1060|
00026c  496e              LDR      r1,|L49.1064|
00026e  f5044230          ADD      r2,r4,#0xb000
000272  f50272bc          ADD      r2,r2,#0x178
000276  c203              STM      r2!,{r0,r1}
;;;6141   
;;;6142               /*7*/ STOP_SPINDLE_TURNING();
000278  f7fffffe          BL       STOP_SPINDLE_TURNING
;;;6143               settings->spindle_turning SET_TO CANON_STOPPED;
00027c  f04f0101          MOV      r1,#1
000280  f24b10a8          MOV      r0,#0xb1a8
000284  5101              STR      r1,[r0,r4]
;;;6144   
;;;6145               /*8*/ settings->motion_mode SET_TO G_1;
000286  f04f000a          MOV      r0,#0xa
00028a  f8c40628          STR      r0,[r4,#0x628]
;;;6146   
;;;6147               /*9*/ if (settings->mist IS ON)
00028e  f8d40624          LDR      r0,[r4,#0x624]
000292  2801              CMP      r0,#1
000294  d105              BNE      |L49.674|
;;;6148               {
;;;6149                   MIST_OFF();
000296  f7fffffe          BL       MIST_OFF
;;;6150                   settings->mist SET_TO OFF;
00029a  f04f0000          MOV      r0,#0
00029e  f8c40624          STR      r0,[r4,#0x624]
                  |L49.674|
;;;6151               }
;;;6152               if (settings->flood IS ON)
0002a2  f8d40514          LDR      r0,[r4,#0x514]
0002a6  2801              CMP      r0,#1
0002a8  d105              BNE      |L49.694|
;;;6153               {
;;;6154                   FLOOD_OFF();
0002aa  f7fffffe          BL       FLOOD_OFF
;;;6155                   settings->flood SET_TO OFF;
0002ae  f04f0000          MOV      r0,#0
0002b2  f8c40514          STR      r0,[r4,#0x514]
                  |L49.694|
;;;6156               }
;;;6157   
;;;6158               if (block->m_modes[4] IS 30)
0002b6  f44f70cc          MOV      r0,#0x198
0002ba  f8500008          LDR      r0,[r0,r8]
0002be  281e              CMP      r0,#0x1e
0002c0  d101              BNE      |L49.710|
;;;6159                   PALLET_SHUTTLE();
0002c2  f7fffffe          BL       PALLET_SHUTTLE
                  |L49.710|
;;;6160               PROGRAM_END();
0002c6  f7fffffe          BL       PROGRAM_END
;;;6161               if (_setup.percent_flag IS ON)
0002ca  4858              LDR      r0,|L49.1068|
0002cc  f8d00168          LDR      r0,[r0,#0x168]
0002d0  2801              CMP      r0,#1
0002d2  d17b              BNE      |L49.972|
;;;6162               {
;;;6163                   CHK((_setup.file_pointer IS NULL), NCE_UNABLE_TO_OPEN_FILE);
0002d4  4856              LDR      r0,|L49.1072|
0002d6  f8d00510          LDR      r0,[r0,#0x510]  ; _setup
0002da  bb38              CBNZ     r0,|L49.812|
0002dc  f04f0100          MOV      r1,#0
0002e0  4854              LDR      r0,|L49.1076|
0002e2  f8c0114c          STR      r1,[r0,#0x14c]
0002e6  4601              MOV      r1,r0
0002e8  f8d1314c          LDR      r3,[r1,#0x14c]
0002ec  f8d1114c          LDR      r1,[r1,#0x14c]
0002f0  f1010101          ADD      r1,r1,#1
0002f4  4602              MOV      r2,r0
0002f6  f8c2114c          STR      r1,[r2,#0x14c]
0002fa  eb030183          ADD      r1,r3,r3,LSL #2
0002fe  f6a06254          SUB      r2,r0,#0xe54
000302  eb021101          ADD      r1,r2,r1,LSL #4
000306  4608              MOV      r0,r1
000308  494b              LDR      r1,|L49.1080|
00030a  f7fffffe          BL       strcpy
00030e  f04f0100          MOV      r1,#0
000312  4848              LDR      r0,|L49.1076|
000314  f8d0014c          LDR      r0,[r0,#0x14c]
000318  eb000080          ADD      r0,r0,r0,LSL #2
00031c  4a47              LDR      r2,|L49.1084|
00031e  eb021000          ADD      r0,r2,r0,LSL #4
000322  7001              STRB     r1,[r0,#0]
000324  f04f00aa          MOV      r0,#0xaa
                  |L49.808|
;;;6164                   line SET_TO _setup.linetext;
;;;6165                   for(; ;)                          /* check for ending percent sign and comment if missing */
;;;6166                   {
;;;6167                       if (fgets(line, RS274NGC_TEXT_SIZE, _setup.file_pointer) IS NULL)
;;;6168                       {
;;;6169                           COMMENT
;;;6170                               ("interpreter: percent sign missing from end of file");
;;;6171                           break;
;;;6172                       }
;;;6173                       length SET_TO strlen(line);
;;;6174                       if (length IS (RS274NGC_TEXT_SIZE - 1))
;;;6175                       {                             // line is too long. need to finish reading the line
;;;6176                           for(;fgetc(_setup.file_pointer) ISNT '\n';);
;;;6177                           continue;
;;;6178                       }
;;;6179                       for(index SET_TO (length -1); // index set on last char
;;;6180                           (index >= 0) AND (isspace(line[index]));
;;;6181                           index--);
;;;6182                       if (line[index] IS '%')       // found line with % at end
;;;6183                       {
;;;6184                           for(index--; (index >= 0)AND(isspace(line[index])); index--);
;;;6185                           if (index IS -1)          // found line with only percent sign
;;;6186                               break;
;;;6187                       }
;;;6188                   }
;;;6189               }
;;;6190               return RS274NGC_EXIT;
;;;6191           }
;;;6192           else
;;;6193               ERM(NCE_BUG_CODE_NOT_M0_M1_M2_M30_M60);
;;;6194           return RS274NGC_OK;
;;;6195       }
000328  e8bd9ffc          POP      {r2-r12,pc}
                  |L49.812|
00032c  f8df9110          LDR      r9,|L49.1088|
000330  bf00              NOP                            ;6165
                  |L49.818|
000332  483f              LDR      r0,|L49.1072|
000334  f8d00510          LDR      r0,[r0,#0x510]        ;6167  ; _setup
000338  4602              MOV      r2,r0                 ;6167
00033a  f44f7180          MOV      r1,#0x100             ;6167
00033e  4648              MOV      r0,r9                 ;6167
000340  f7fffffe          BL       fgets
000344  b918              CBNZ     r0,|L49.846|
000346  a03f              ADR      r0,|L49.1092|
000348  f7fffffe          BL       COMMENT
00034c  e03d              B        |L49.970|
                  |L49.846|
00034e  4648              MOV      r0,r9                 ;6173
000350  f7fffffe          BL       strlen
000354  4682              MOV      r10,r0                ;6173
000356  f1ba0fff          CMP      r10,#0xff             ;6174
00035a  d109              BNE      |L49.880|
00035c  bf00              NOP                            ;6176
                  |L49.862|
00035e  4934              LDR      r1,|L49.1072|
000360  f8d11510          LDR      r1,[r1,#0x510]        ;6176  ; _setup
000364  4608              MOV      r0,r1                 ;6176
000366  f7fffffe          BL       fgetc
00036a  280a              CMP      r0,#0xa               ;6176
00036c  d1f7              BNE      |L49.862|
00036e  e7e0              B        |L49.818|
                  |L49.880|
000370  f1aa0001          SUB      r0,r10,#1             ;6179
000374  4605              MOV      r5,r0                 ;6179
000376  e002              B        |L49.894|
                  |L49.888|
000378  f1a50001          SUB      r0,r5,#1              ;6181
00037c  4605              MOV      r5,r0                 ;6181
                  |L49.894|
00037e  2d00              CMP      r5,#0                 ;6180
000380  db08              BLT      |L49.916|
000382  f7fffffe          BL       __rt_ctype_table
000386  6800              LDR      r0,[r0,#0]            ;6180
000388  f8191005          LDRB     r1,[r9,r5]            ;6180
00038c  5c40              LDRB     r0,[r0,r1]            ;6180
00038e  f0100f01          TST      r0,#1                 ;6180
000392  d1f1              BNE      |L49.888|
                  |L49.916|
000394  f8190005          LDRB     r0,[r9,r5]            ;6182
000398  2825              CMP      r0,#0x25              ;6182
00039a  d115              BNE      |L49.968|
00039c  f1a50001          SUB      r0,r5,#1              ;6184
0003a0  4605              MOV      r5,r0                 ;6184
0003a2  e002              B        |L49.938|
                  |L49.932|
0003a4  f1a50001          SUB      r0,r5,#1              ;6184
0003a8  4605              MOV      r5,r0                 ;6184
                  |L49.938|
0003aa  2d00              CMP      r5,#0                 ;6184
0003ac  db08              BLT      |L49.960|
0003ae  f7fffffe          BL       __rt_ctype_table
0003b2  6800              LDR      r0,[r0,#0]            ;6184
0003b4  f8191005          LDRB     r1,[r9,r5]            ;6184
0003b8  5c40              LDRB     r0,[r0,r1]            ;6184
0003ba  f0100f01          TST      r0,#1                 ;6184
0003be  d1f1              BNE      |L49.932|
                  |L49.960|
0003c0  1c68              ADDS     r0,r5,#1              ;6185
0003c2  d101              BNE      |L49.968|
0003c4  e001              B        |L49.970|
0003c6  e001              B        |L49.972|
                  |L49.968|
0003c8  e7b3              B        |L49.818|
                  |L49.970|
0003ca  bf00              NOP                            ;6171
                  |L49.972|
0003cc  2001              MOVS     r0,#1                 ;6190
0003ce  e7ab              B        |L49.808|
                  |L49.976|
0003d0  f04f0100          MOV      r1,#0                 ;6193
0003d4  4817              LDR      r0,|L49.1076|
0003d6  f8c0114c          STR      r1,[r0,#0x14c]        ;6193
0003da  4601              MOV      r1,r0                 ;6193
0003dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;6193
0003e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;6193
0003e4  f1010101          ADD      r1,r1,#1              ;6193
0003e8  4602              MOV      r2,r0                 ;6193
0003ea  f8c2114c          STR      r1,[r2,#0x14c]        ;6193
0003ee  eb030183          ADD      r1,r3,r3,LSL #2       ;6193
0003f2  4a12              LDR      r2,|L49.1084|
0003f4  eb021101          ADD      r1,r2,r1,LSL #4       ;6193
0003f8  4608              MOV      r0,r1                 ;6193
0003fa  490f              LDR      r1,|L49.1080|
0003fc  f7fffffe          BL       strcpy
000400  f04f0100          MOV      r1,#0                 ;6193
000404  480b              LDR      r0,|L49.1076|
000406  f8d0014c          LDR      r0,[r0,#0x14c]        ;6193
00040a  eb000080          ADD      r0,r0,r0,LSL #2       ;6193
00040e  4a0b              LDR      r2,|L49.1084|
000410  eb021000          ADD      r0,r2,r0,LSL #4       ;6193
000414  7001              STRB     r1,[r0,#0]            ;6193
000416  f04f001e          MOV      r0,#0x1e              ;6193
00041a  e785              B        |L49.808|
                  |L49.1052|
00041c  2000              MOVS     r0,#0                 ;6194
00041e  e783              B        |L49.808|
;;;6196   
                          ENDP

                  |L49.1056|
                          DCD      0x3ff00000
                  |L49.1060|
                          DCD      0x0c924223
                  |L49.1064|
                          DCD      0x3bc79ca1
                  |L49.1068|
                          DCD      _setup+0xb000
                  |L49.1072|
                          DCD      _setup
                  |L49.1076|
                          DCD      _setup+0xc000
                  |L49.1080|
                          DCD      |symbol_number.483|
                  |L49.1084|
                          DCD      _setup+0xb1ac
                  |L49.1088|
                          DCD      _setup+0x524
                  |L49.1092|
000444  696e7465          DCB      "interpreter: percent sign missing from end of file",0
000448  72707265
00044c  7465723a
000450  20706572
000454  63656e74
000458  20736967
00045c  6e206d69
000460  7373696e
000464  67206672
000468  6f6d2065
00046c  6e64206f
000470  66206669
000474  6c6500  
000477  00                DCB      0

                          AREA ||i.convert_straight||, CODE, READONLY, ALIGN=2

                  convert_straight PROC
;;;6238   
;;;6239       static int convert_straight(                  /* ARGUMENTS                                */
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;6240       int move,                                     /* either G_0 or G_1                        */
;;;6241       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;6242       setup_pointer settings)                       /* pointer to machine settings              */
;;;6243       {
000004  b08d              SUB      sp,sp,#0x34
000006  4605              MOV      r5,r0
000008  4688              MOV      r8,r1
00000a  4614              MOV      r4,r2
;;;6244           static char name[] SET_TO "convert_straight";
;;;6245           double end_x;
;;;6246           double end_y;
;;;6247           double end_z;
;;;6248   #ifdef AA
;;;6249           double AA_end;                            /*AA*/
;;;6250   #endif
;;;6251   #ifdef BB
;;;6252           double BB_end;                            /*BB*/
;;;6253   #endif
;;;6254   #ifdef CC
;;;6255           double CC_end;                            /*CC*/
;;;6256   #endif
;;;6257           int status;
;;;6258   
;;;6259           if (move IS G_1)
00000c  2d0a              CMP      r5,#0xa
00000e  d171              BNE      |L50.244|
;;;6260           {
;;;6261               if (settings->feed_mode IS UNITS_PER_MINUTE)
000010  f8d403fc          LDR      r0,[r4,#0x3fc]
000014  bba8              CBNZ     r0,|L50.130|
;;;6262               {
;;;6263                   CHK((settings->feed_rate IS 0.0),
000016  f8d41408          LDR      r1,[r4,#0x408]
00001a  460e              MOV      r6,r1
00001c  f8d4040c          LDR      r0,[r4,#0x40c]
000020  4607              MOV      r7,r0
000022  2200              MOVS     r2,#0
000024  4613              MOV      r3,r2
000026  4630              MOV      r0,r6
000028  4639              MOV      r1,r7
00002a  f7fffffe          BL       __aeabi_cdcmpeq
00002e  d161              BNE      |L50.244|
000030  f04f0100          MOV      r1,#0
000034  48c8              LDR      r0,|L50.856|
000036  f8c0114c          STR      r1,[r0,#0x14c]
00003a  4601              MOV      r1,r0
00003c  f8d1314c          LDR      r3,[r1,#0x14c]
000040  f8d1114c          LDR      r1,[r1,#0x14c]
000044  f1010101          ADD      r1,r1,#1
000048  4602              MOV      r2,r0
00004a  f8c2114c          STR      r1,[r2,#0x14c]
00004e  eb030183          ADD      r1,r3,r3,LSL #2
000052  f6a06254          SUB      r2,r0,#0xe54
000056  eb021101          ADD      r1,r2,r1,LSL #4
00005a  4608              MOV      r0,r1
00005c  49bf              LDR      r1,|L50.860|
00005e  f7fffffe          BL       strcpy
000062  f04f0100          MOV      r1,#0
000066  48bc              LDR      r0,|L50.856|
000068  f8d0014c          LDR      r0,[r0,#0x14c]
00006c  eb000080          ADD      r0,r0,r0,LSL #2
000070  4abb              LDR      r2,|L50.864|
000072  eb021000          ADD      r0,r2,r0,LSL #4
000076  7001              STRB     r1,[r0,#0]
000078  f04f0029          MOV      r0,#0x29
                  |L50.124|
;;;6264                       NCE_CANNOT_DO_G1_WITH_ZERO_FEED_RATE);
;;;6265               }
;;;6266               else if (settings->feed_mode IS INVERSE_TIME)
;;;6267               {
;;;6268                   CHK((block->f_number IS -1.0),
;;;6269                       NCE_F_WORD_MISSING_WITH_INVERSE_TIME_G1_MOVE);
;;;6270               }
;;;6271           }
;;;6272   
;;;6273           settings->motion_mode SET_TO move;
;;;6274           find_ends(block, settings, &end_x, &end_y,
;;;6275               &end_z
;;;6276       #ifdef AA
;;;6277               , &AA_end
;;;6278       #endif
;;;6279   
;;;6280       #ifdef BB
;;;6281               , &BB_end
;;;6282       #endif
;;;6283   
;;;6284       #ifdef CC
;;;6285               , &CC_end
;;;6286       #endif
;;;6287               );
;;;6288      /* NOT "IS ON" */
;;;6289           if ((settings->cutter_comp_side ISNT OFF) AND
;;;6290               (settings->cutter_comp_radius > 0.0)) /* radius always is >= 0 */
;;;6291           {
;;;6292               CHK((block->g_modes[0] IS G_53),
;;;6293                   NCE_CANNOT_USE_G53_WITH_CUTTER_RADIUS_COMP);
;;;6294               if (settings->program_x IS UNKNOWN)
;;;6295               {
;;;6296                   status SET_TO
;;;6297                       convert_straight_comp1(move, block, settings, end_x, end_y,
;;;6298                       end_z
;;;6299       #ifdef AA
;;;6300                       , AA_end
;;;6301       #endif
;;;6302   
;;;6303       #ifdef BB
;;;6304                       , BB_end
;;;6305       #endif
;;;6306   
;;;6307       #ifdef CC
;;;6308                       , CC_end
;;;6309       #endif
;;;6310                       );
;;;6311                   CHP(status);
;;;6312               }
;;;6313               else
;;;6314               {
;;;6315                   status SET_TO
;;;6316                       convert_straight_comp2 (move, block, settings, end_x, end_y,
;;;6317                       end_z
;;;6318       #ifdef AA
;;;6319                       , AA_end
;;;6320       #endif
;;;6321   
;;;6322       #ifdef BB
;;;6323                       , BB_end
;;;6324       #endif
;;;6325   
;;;6326       #ifdef CC
;;;6327                       , CC_end
;;;6328       #endif
;;;6329                       );
;;;6330                   CHP(status);
;;;6331               }
;;;6332           }
;;;6333           else if (move IS G_0)
;;;6334           {
;;;6335               STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;6336       #ifdef AA
;;;6337                   ,           AA_end
;;;6338       #else
;;;6339       #ifdef ALL_AXES
;;;6340                   , 0
;;;6341       #endif
;;;6342       #endif
;;;6343       #ifdef BB
;;;6344                   ,  BB_end
;;;6345       #else
;;;6346       #ifdef ALL_AXES
;;;6347                   , 0
;;;6348       #endif
;;;6349       #endif
;;;6350       #ifdef CC
;;;6351                   ,  CC_end
;;;6352       #else
;;;6353       #ifdef ALL_AXES
;;;6354                   , 0
;;;6355       #endif
;;;6356       #endif
;;;6357                   );
;;;6358               settings->current_x SET_TO end_x;
;;;6359               settings->current_y SET_TO end_y;
;;;6360           }
;;;6361           else if (move IS G_1)
;;;6362           {
;;;6363               if (settings->feed_mode IS INVERSE_TIME)
;;;6364                   inverse_time_rate_straight
;;;6365                       (end_x, end_y, end_z
;;;6366           #ifdef AA
;;;6367                       , AA_end
;;;6368           #endif
;;;6369   
;;;6370           #ifdef BB
;;;6371                       , BB_end
;;;6372           #endif
;;;6373   
;;;6374           #ifdef CC
;;;6375                       , CC_end
;;;6376           #endif
;;;6377                       , block, settings);
;;;6378               STRAIGHT_FEED(end_x, end_y, end_z
;;;6379       #ifdef AA
;;;6380                   ,           AA_end
;;;6381       #else
;;;6382       #ifdef ALL_AXES
;;;6383                   , 0
;;;6384       #endif
;;;6385       #endif
;;;6386       #ifdef BB
;;;6387                   ,  BB_end
;;;6388       #else
;;;6389       #ifdef ALL_AXES
;;;6390                   , 0
;;;6391       #endif
;;;6392       #endif
;;;6393       #ifdef CC
;;;6394                   ,  CC_end
;;;6395       #else
;;;6396       #ifdef ALL_AXES
;;;6397                   , 0
;;;6398       #endif
;;;6399       #endif
;;;6400                   );
;;;6401               settings->current_x SET_TO end_x;
;;;6402               settings->current_y SET_TO end_y;
;;;6403           }
;;;6404           else
;;;6405               ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
;;;6406   
;;;6407           settings->current_z SET_TO end_z;
;;;6408   #ifdef AA
;;;6409           settings->AA_current SET_TO AA_end;       /*AA*/
;;;6410   #endif
;;;6411   #ifdef BB
;;;6412           settings->BB_current SET_TO BB_end;       /*BB*/
;;;6413   #endif
;;;6414   #ifdef CC
;;;6415           settings->CC_current SET_TO CC_end;       /*CC*/
;;;6416   #endif
;;;6417           return RS274NGC_OK;
;;;6418       }
00007c  b00d              ADD      sp,sp,#0x34
00007e  e8bd83f0          POP      {r4-r9,pc}
                  |L50.130|
000082  e7ff              B        |L50.132|
                  |L50.132|
000084  f8d403fc          LDR      r0,[r4,#0x3fc]        ;6266
000088  2801              CMP      r0,#1                 ;6266
00008a  d133              BNE      |L50.244|
00008c  f8d81108          LDR      r1,[r8,#0x108]        ;6268
000090  460e              MOV      r6,r1                 ;6268
000092  f8d8010c          LDR      r0,[r8,#0x10c]        ;6268
000096  4607              MOV      r7,r0                 ;6268
000098  2200              MOVS     r2,#0                 ;6268
00009a  4bb2              LDR      r3,|L50.868|
00009c  4630              MOV      r0,r6                 ;6268
00009e  4639              MOV      r1,r7                 ;6268
0000a0  f7fffffe          BL       __aeabi_cdcmpeq
0000a4  d126              BNE      |L50.244|
0000a6  f04f0100          MOV      r1,#0                 ;6268
0000aa  48ab              LDR      r0,|L50.856|
0000ac  f8c0114c          STR      r1,[r0,#0x14c]        ;6268
0000b0  4601              MOV      r1,r0                 ;6268
0000b2  f8d1314c          LDR      r3,[r1,#0x14c]        ;6268
0000b6  f8d1114c          LDR      r1,[r1,#0x14c]        ;6268
0000ba  f1010101          ADD      r1,r1,#1              ;6268
0000be  4602              MOV      r2,r0                 ;6268
0000c0  f8c2114c          STR      r1,[r2,#0x14c]        ;6268
0000c4  eb030183          ADD      r1,r3,r3,LSL #2       ;6268
0000c8  4aa5              LDR      r2,|L50.864|
0000ca  eb021101          ADD      r1,r2,r1,LSL #4       ;6268
0000ce  4608              MOV      r0,r1                 ;6268
0000d0  49a2              LDR      r1,|L50.860|
0000d2  f7fffffe          BL       strcpy
0000d6  f04f0100          MOV      r1,#0                 ;6268
0000da  489f              LDR      r0,|L50.856|
0000dc  f8d0014c          LDR      r0,[r0,#0x14c]        ;6268
0000e0  eb000080          ADD      r0,r0,r0,LSL #2       ;6268
0000e4  4a9e              LDR      r2,|L50.864|
0000e6  eb021000          ADD      r0,r2,r0,LSL #4       ;6268
0000ea  7001              STRB     r1,[r0,#0]            ;6268
0000ec  f04f004f          MOV      r0,#0x4f              ;6268
0000f0  e7c4              B        |L50.124|
0000f2  e7ff              B        |L50.244|
                  |L50.244|
0000f4  f8c45628          STR      r5,[r4,#0x628]        ;6273
0000f8  a806              ADD      r0,sp,#0x18           ;6274
0000fa  ab08              ADD      r3,sp,#0x20           ;6274
0000fc  aa0a              ADD      r2,sp,#0x28           ;6274
0000fe  4621              MOV      r1,r4                 ;6274
000100  9000              STR      r0,[sp,#0]            ;6274
000102  4640              MOV      r0,r8                 ;6274
000104  f7fffffe          BL       find_ends
000108  f8d403b0          LDR      r0,[r4,#0x3b0]        ;6289
00010c  2800              CMP      r0,#0                 ;6289
00010e  d07a              BEQ      |L50.518|
000110  f504706a          ADD      r0,r4,#0x3a8          ;6290
000114  c803              LDM      r0,{r0,r1}            ;6290
000116  4606              MOV      r6,r0                 ;6290
000118  2200              MOVS     r2,#0                 ;6290
00011a  4613              MOV      r3,r2                 ;6290
00011c  f7fffffe          BL       __aeabi_cdrcmple
000120  d271              BCS      |L50.518|
000122  f8d80110          LDR      r0,[r8,#0x110]        ;6292
000126  f5a07100          SUB      r1,r0,#0x200          ;6292
00012a  3912              SUBS     r1,r1,#0x12           ;6292
00012c  d123              BNE      |L50.374|
00012e  488a              LDR      r0,|L50.856|
000130  f8c0114c          STR      r1,[r0,#0x14c]        ;6292
000134  4601              MOV      r1,r0                 ;6292
000136  f8d1314c          LDR      r3,[r1,#0x14c]        ;6292
00013a  f8d1114c          LDR      r1,[r1,#0x14c]        ;6292
00013e  f1010101          ADD      r1,r1,#1              ;6292
000142  4602              MOV      r2,r0                 ;6292
000144  f8c2114c          STR      r1,[r2,#0x14c]        ;6292
000148  eb030183          ADD      r1,r3,r3,LSL #2       ;6292
00014c  4a84              LDR      r2,|L50.864|
00014e  eb021101          ADD      r1,r2,r1,LSL #4       ;6292
000152  4608              MOV      r0,r1                 ;6292
000154  4981              LDR      r1,|L50.860|
000156  f7fffffe          BL       strcpy
00015a  f04f0100          MOV      r1,#0                 ;6292
00015e  487e              LDR      r0,|L50.856|
000160  f8d0014c          LDR      r0,[r0,#0x14c]        ;6292
000164  eb000080          ADD      r0,r0,r0,LSL #2       ;6292
000168  4a7d              LDR      r2,|L50.864|
00016a  eb021000          ADD      r0,r2,r0,LSL #4       ;6292
00016e  7001              STRB     r1,[r0,#0]            ;6292
000170  f04f003e          MOV      r0,#0x3e              ;6292
000174  e782              B        |L50.124|
                  |L50.374|
000176  f5044030          ADD      r0,r4,#0xb000         ;6294
00017a  f8d01178          LDR      r1,[r0,#0x178]        ;6294
00017e  f8d0017c          LDR      r0,[r0,#0x17c]        ;6294
000182  460e              MOV      r6,r1                 ;6294
000184  4607              MOV      r7,r0                 ;6294
000186  4a78              LDR      r2,|L50.872|
000188  4b78              LDR      r3,|L50.876|
00018a  4630              MOV      r0,r6                 ;6294
00018c  4639              MOV      r1,r7                 ;6294
00018e  f7fffffe          BL       __aeabi_cdcmpeq
000192  d13b              BNE      |L50.524|
000194  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6296
000198  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6296
00019c  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6296
0001a0  e9cd0102          STRD     r0,r1,[sp,#8]         ;6296
0001a4  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6296
0001a8  4622              MOV      r2,r4                 ;6296
0001aa  e9cd0100          STRD     r0,r1,[sp,#0]         ;6296
0001ae  4641              MOV      r1,r8                 ;6296
0001b0  4628              MOV      r0,r5                 ;6296
0001b2  f7fffffe          BL       convert_straight_comp1
0001b6  4681              MOV      r9,r0                 ;6296
0001b8  f1b90f00          CMP      r9,#0                 ;6311
0001bc  d076              BEQ      |L50.684|
0001be  4866              LDR      r0,|L50.856|
0001c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;6311
0001c4  2831              CMP      r0,#0x31              ;6311
0001c6  da1f              BGE      |L50.520|
0001c8  4963              LDR      r1,|L50.856|
0001ca  f8d1314c          LDR      r3,[r1,#0x14c]        ;6311
0001ce  f8d1114c          LDR      r1,[r1,#0x14c]        ;6311
0001d2  1c49              ADDS     r1,r1,#1              ;6311
0001d4  4a60              LDR      r2,|L50.856|
0001d6  f8c2114c          STR      r1,[r2,#0x14c]        ;6311
0001da  eb030183          ADD      r1,r3,r3,LSL #2       ;6311
0001de  4a60              LDR      r2,|L50.864|
0001e0  eb021101          ADD      r1,r2,r1,LSL #4       ;6311
0001e4  4608              MOV      r0,r1                 ;6311
0001e6  495d              LDR      r1,|L50.860|
0001e8  f7fffffe          BL       strcpy
0001ec  f04f0100          MOV      r1,#0                 ;6311
0001f0  4859              LDR      r0,|L50.856|
0001f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;6311
0001f6  eb000080          ADD      r0,r0,r0,LSL #2       ;6311
0001fa  4a59              LDR      r2,|L50.864|
0001fc  eb021000          ADD      r0,r2,r0,LSL #4       ;6311
000200  7001              STRB     r1,[r0,#0]            ;6311
000202  4648              MOV      r0,r9                 ;6311
000204  e73a              B        |L50.124|
                  |L50.518|
000206  e03c              B        |L50.642|
                  |L50.520|
000208  4648              MOV      r0,r9                 ;6311
00020a  e737              B        |L50.124|
                  |L50.524|
00020c  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6315
000210  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6315
000214  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6315
000218  e9cd0102          STRD     r0,r1,[sp,#8]         ;6315
00021c  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6315
000220  4622              MOV      r2,r4                 ;6315
000222  e9cd0100          STRD     r0,r1,[sp,#0]         ;6315
000226  4641              MOV      r1,r8                 ;6315
000228  4628              MOV      r0,r5                 ;6315
00022a  f7fffffe          BL       convert_straight_comp2
00022e  4681              MOV      r9,r0                 ;6315
000230  f1b90f00          CMP      r9,#0                 ;6330
000234  d03a              BEQ      |L50.684|
000236  4848              LDR      r0,|L50.856|
000238  f8d0014c          LDR      r0,[r0,#0x14c]        ;6330
00023c  2831              CMP      r0,#0x31              ;6330
00023e  da1e              BGE      |L50.638|
000240  4945              LDR      r1,|L50.856|
000242  f8d1314c          LDR      r3,[r1,#0x14c]        ;6330
000246  f8d1114c          LDR      r1,[r1,#0x14c]        ;6330
00024a  1c49              ADDS     r1,r1,#1              ;6330
00024c  4a42              LDR      r2,|L50.856|
00024e  f8c2114c          STR      r1,[r2,#0x14c]        ;6330
000252  eb030183          ADD      r1,r3,r3,LSL #2       ;6330
000256  4a42              LDR      r2,|L50.864|
000258  eb021101          ADD      r1,r2,r1,LSL #4       ;6330
00025c  4608              MOV      r0,r1                 ;6330
00025e  493f              LDR      r1,|L50.860|
000260  f7fffffe          BL       strcpy
000264  f04f0100          MOV      r1,#0                 ;6330
000268  483b              LDR      r0,|L50.856|
00026a  f8d0014c          LDR      r0,[r0,#0x14c]        ;6330
00026e  eb000080          ADD      r0,r0,r0,LSL #2       ;6330
000272  4a3b              LDR      r2,|L50.864|
000274  eb021000          ADD      r0,r2,r0,LSL #4       ;6330
000278  7001              STRB     r1,[r0,#0]            ;6330
00027a  4648              MOV      r0,r9                 ;6330
00027c  e6fe              B        |L50.124|
                  |L50.638|
00027e  4648              MOV      r0,r9                 ;6330
000280  e6fc              B        |L50.124|
                  |L50.642|
000282  b9a5              CBNZ     r5,|L50.686|
000284  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6335
000288  e9cd0100          STRD     r0,r1,[sp,#0]         ;6335
00028c  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6335
000290  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6335
000294  f7fffffe          BL       STRAIGHT_TRAVERSE
000298  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6358
00029c  f5047264          ADD      r2,r4,#0x390          ;6358
0002a0  c203              STM      r2!,{r0,r1}           ;6358
0002a2  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6359
0002a6  f5047266          ADD      r2,r4,#0x398          ;6359
0002aa  c203              STM      r2!,{r0,r1}           ;6359
                  |L50.684|
0002ac  e04c              B        |L50.840|
                  |L50.686|
0002ae  2d0a              CMP      r5,#0xa               ;6361
0002b0  d124              BNE      |L50.764|
0002b2  f8d403fc          LDR      r0,[r4,#0x3fc]        ;6363
0002b6  2801              CMP      r0,#1                 ;6363
0002b8  d10b              BNE      |L50.722|
0002ba  e9cd8402          STRD     r8,r4,[sp,#8]         ;6364
0002be  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6364
0002c2  e9cd0100          STRD     r0,r1,[sp,#0]         ;6364
0002c6  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6364
0002ca  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6364
0002ce  f7fffffe          BL       inverse_time_rate_straight
                  |L50.722|
0002d2  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6378
0002d6  e9cd0100          STRD     r0,r1,[sp,#0]         ;6378
0002da  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6378
0002de  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6378
0002e2  f7fffffe          BL       STRAIGHT_FEED
0002e6  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6401
0002ea  f5047264          ADD      r2,r4,#0x390          ;6401
0002ee  c203              STM      r2!,{r0,r1}           ;6401
0002f0  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6402
0002f4  f5047266          ADD      r2,r4,#0x398          ;6402
0002f8  c203              STM      r2!,{r0,r1}           ;6402
0002fa  e025              B        |L50.840|
                  |L50.764|
0002fc  f04f0100          MOV      r1,#0                 ;6405
000300  4815              LDR      r0,|L50.856|
000302  f8c0114c          STR      r1,[r0,#0x14c]        ;6405
000306  4601              MOV      r1,r0                 ;6405
000308  f8d1314c          LDR      r3,[r1,#0x14c]        ;6405
00030c  f8d1114c          LDR      r1,[r1,#0x14c]        ;6405
000310  f1010101          ADD      r1,r1,#1              ;6405
000314  4602              MOV      r2,r0                 ;6405
000316  f8c2114c          STR      r1,[r2,#0x14c]        ;6405
00031a  eb030183          ADD      r1,r3,r3,LSL #2       ;6405
00031e  4a10              LDR      r2,|L50.864|
000320  eb021101          ADD      r1,r2,r1,LSL #4       ;6405
000324  4608              MOV      r0,r1                 ;6405
000326  490d              LDR      r1,|L50.860|
000328  f7fffffe          BL       strcpy
00032c  f04f0100          MOV      r1,#0                 ;6405
000330  4809              LDR      r0,|L50.856|
000332  f8d0014c          LDR      r0,[r0,#0x14c]        ;6405
000336  eb000080          ADD      r0,r0,r0,LSL #2       ;6405
00033a  4a09              LDR      r2,|L50.864|
00033c  eb021000          ADD      r0,r2,r0,LSL #4       ;6405
000340  7001              STRB     r1,[r0,#0]            ;6405
000342  f04f0010          MOV      r0,#0x10              ;6405
000346  e699              B        |L50.124|
                  |L50.840|
000348  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6407
00034c  f5047268          ADD      r2,r4,#0x3a0          ;6407
000350  c203              STM      r2!,{r0,r1}           ;6407
000352  2000              MOVS     r0,#0                 ;6417
000354  e692              B        |L50.124|
;;;6419   
                          ENDP

000356  0000              DCW      0x0000
                  |L50.856|
                          DCD      _setup+0xc000
                  |L50.860|
                          DCD      |symbol_number.484|
                  |L50.864|
                          DCD      _setup+0xb1ac
                  |L50.868|
                          DCD      0xbff00000
                  |L50.872|
                          DCD      0x0c924223
                  |L50.876|
                          DCD      0x3bc79ca1

                          AREA ||i.convert_straight_comp1||, CODE, READONLY, ALIGN=2

                  convert_straight_comp1 PROC
;;;6455   
;;;6456       static int convert_straight_comp1(            /* ARGUMENTS                       */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;6457       int move,                                     /* either G_0 or G_1                         */
;;;6458       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;6459       setup_pointer settings,                       /* pointer to machine settings               */
;;;6460       double px,                                    /* X coordinate of end point                 */
;;;6461       double py,                                    /* Y coordinate of end point                 */
;;;6462       double end_z                                  /* Z coordinate of end point                 */
;;;6463   #ifdef AA
;;;6464       , double AA_end                               /* A coordinate of end point           *//*AA*/
;;;6465   #endif
;;;6466   #ifdef BB
;;;6467       , double BB_end                               /* B coordinate of end point           *//*BB*/
;;;6468   #endif
;;;6469   #ifdef CC
;;;6470       , double CC_end                               /* C coordinate of end point           *//*CC*/
;;;6471   #endif
;;;6472       )
;;;6473       {
000004  b08f              SUB      sp,sp,#0x3c
000006  4692              MOV      r10,r2
000008  e9dd891c          LDRD     r8,r9,[sp,#0x70]
;;;6474           static char name[] SET_TO "convert_straight_comp1";
;;;6475           double alpha;
;;;6476           double cx;                                /* first current point x then end point x */
;;;6477           double cy;                                /* first current point y then end point y */
;;;6478           double distance;
;;;6479           double radius;
;;;6480           int side;
;;;6481           double theta;
;;;6482   
;;;6483           side SET_TO settings->cutter_comp_side;
00000c  f8da03b0          LDR      r0,[r10,#0x3b0]
000010  4683              MOV      r11,r0
;;;6484           cx SET_TO settings->current_x;
000012  f8da1390          LDR      r1,[r10,#0x390]
000016  460e              MOV      r6,r1
000018  f8da0394          LDR      r0,[r10,#0x394]
00001c  4607              MOV      r7,r0
;;;6485           cy SET_TO settings->current_y;
00001e  f50a7066          ADD      r0,r10,#0x398
000022  c803              LDM      r0,{r0,r1}
000024  4604              MOV      r4,r0
000026  460d              MOV      r5,r1
;;;6486   
;;;6487      /* always will be positive */
;;;6488           radius SET_TO settings->cutter_comp_radius;
000028  f50a706a          ADD      r0,r10,#0x3a8
00002c  c803              LDM      r0,{r0,r1}
00002e  e9cd0108          STRD     r0,r1,[sp,#0x20]
;;;6489           distance SET_TO hypot((px - cx), (py -cy));
000032  4622              MOV      r2,r4
000034  462b              MOV      r3,r5
000036  e9dd011e          LDRD     r0,r1,[sp,#0x78]
00003a  f7fffffe          BL       __aeabi_dsub
00003e  4632              MOV      r2,r6
000040  463b              MOV      r3,r7
000042  e9cd0104          STRD     r0,r1,[sp,#0x10]
000046  4640              MOV      r0,r8
000048  4649              MOV      r1,r9
00004a  f7fffffe          BL       __aeabi_dsub
00004e  e9cd0102          STRD     r0,r1,[sp,#8]
000052  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000056  f7fffffe          BL       hypot
00005a  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;6490   
;;;6491           CHK(((side ISNT LEFT) AND (side ISNT RIGHT)),NCE_BUG_SIDE_NOT_RIGHT_OR_LEFT);
00005e  f1bb0f02          CMP      r11,#2
000062  d02b              BEQ      |L51.188|
000064  f1bb0f01          CMP      r11,#1
000068  d028              BEQ      |L51.188|
00006a  f04f0100          MOV      r1,#0
00006e  4892              LDR      r0,|L51.696|
000070  f8c0114c          STR      r1,[r0,#0x14c]
000074  4601              MOV      r1,r0
000076  f8d1314c          LDR      r3,[r1,#0x14c]
00007a  f8d1114c          LDR      r1,[r1,#0x14c]
00007e  f1010101          ADD      r1,r1,#1
000082  4602              MOV      r2,r0
000084  f8c2114c          STR      r1,[r2,#0x14c]
000088  eb030183          ADD      r1,r3,r3,LSL #2
00008c  f6a06254          SUB      r2,r0,#0xe54
000090  eb021101          ADD      r1,r2,r1,LSL #4
000094  4608              MOV      r0,r1
000096  4989              LDR      r1,|L51.700|
000098  f7fffffe          BL       strcpy
00009c  f04f0100          MOV      r1,#0
0000a0  4885              LDR      r0,|L51.696|
0000a2  f8d0014c          LDR      r0,[r0,#0x14c]
0000a6  eb000080          ADD      r0,r0,r0,LSL #2
0000aa  4a85              LDR      r2,|L51.704|
0000ac  eb021000          ADD      r0,r2,r0,LSL #4
0000b0  7001              STRB     r1,[r0,#0]
0000b2  f04f0023          MOV      r0,#0x23
                  |L51.182|
;;;6492           CHK((distance <= radius), NCE_CUTTER_GOUGING_WITH_CUTTER_RADIUS_COMP);
;;;6493   
;;;6494           theta SET_TO acos(radius/distance);
;;;6495           alpha SET_TO (side IS LEFT) ? (atan2((cy - py), (cx - px)) - theta) :
;;;6496           (atan2((cy - py), (cx - px)) + theta);
;;;6497           cx SET_TO (px + (radius * cos(alpha)));   /* reset to end location */
;;;6498           cy SET_TO (py + (radius * sin(alpha)));
;;;6499           if (move IS G_0)
;;;6500               STRAIGHT_TRAVERSE(cx, cy, end_z
;;;6501           #ifdef AA
;;;6502                   ,             AA_end
;;;6503           #else
;;;6504           #ifdef ALL_AXES
;;;6505                   , 0
;;;6506           #endif
;;;6507           #endif
;;;6508           #ifdef BB
;;;6509                   ,  BB_end
;;;6510           #else
;;;6511           #ifdef ALL_AXES
;;;6512                   , 0
;;;6513           #endif
;;;6514           #endif
;;;6515           #ifdef CC
;;;6516                   ,  CC_end
;;;6517           #else
;;;6518           #ifdef ALL_AXES
;;;6519                   , 0
;;;6520           #endif
;;;6521           #endif
;;;6522                   );
;;;6523           else if (move IS G_1)
;;;6524           {
;;;6525               if (settings->feed_mode IS INVERSE_TIME)
;;;6526                   inverse_time_rate_straight
;;;6527                       (cx, cy, end_z
;;;6528           #ifdef AA
;;;6529                       , AA_end
;;;6530           #endif
;;;6531   
;;;6532           #ifdef BB
;;;6533                       , BB_end
;;;6534           #endif
;;;6535   
;;;6536           #ifdef CC
;;;6537                       , CC_end
;;;6538           #endif
;;;6539                       , block, settings);
;;;6540               STRAIGHT_FEED(cx, cy, end_z
;;;6541       #ifdef AA
;;;6542                   ,           AA_end
;;;6543       #else
;;;6544       #ifdef ALL_AXES
;;;6545                   , 0
;;;6546       #endif
;;;6547       #endif
;;;6548       #ifdef BB
;;;6549                   ,  BB_end
;;;6550       #else
;;;6551       #ifdef ALL_AXES
;;;6552                   , 0
;;;6553       #endif
;;;6554       #endif
;;;6555       #ifdef CC
;;;6556                   ,  CC_end
;;;6557       #else
;;;6558       #ifdef ALL_AXES
;;;6559                   , 0
;;;6560       #endif
;;;6561       #endif
;;;6562                   );
;;;6563           }
;;;6564           else
;;;6565               ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
;;;6566   
;;;6567           settings->current_x SET_TO cx;
;;;6568           settings->current_y SET_TO cy;
;;;6569           settings->program_x SET_TO px;
;;;6570           settings->program_y SET_TO py;
;;;6571           return RS274NGC_OK;
;;;6572       }
0000b6  b013              ADD      sp,sp,#0x4c
0000b8  e8bd8ff0          POP      {r4-r11,pc}
                  |L51.188|
0000bc  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6492
0000c0  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6492
0000c4  f7fffffe          BL       __aeabi_cdcmple
0000c8  d824              BHI      |L51.276|
0000ca  f04f0100          MOV      r1,#0                 ;6492
0000ce  487a              LDR      r0,|L51.696|
0000d0  f8c0114c          STR      r1,[r0,#0x14c]        ;6492
0000d4  4601              MOV      r1,r0                 ;6492
0000d6  f8d1314c          LDR      r3,[r1,#0x14c]        ;6492
0000da  f8d1214c          LDR      r2,[r1,#0x14c]        ;6492
0000de  f1020201          ADD      r2,r2,#1              ;6492
0000e2  f8c1214c          STR      r2,[r1,#0x14c]        ;6492
0000e6  eb030183          ADD      r1,r3,r3,LSL #2       ;6492
0000ea  4a75              LDR      r2,|L51.704|
0000ec  eb021101          ADD      r1,r2,r1,LSL #4       ;6492
0000f0  4608              MOV      r0,r1                 ;6492
0000f2  4972              LDR      r1,|L51.700|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0                 ;6492
0000fc  486e              LDR      r0,|L51.696|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;6492
000102  eb000080          ADD      r0,r0,r0,LSL #2       ;6492
000106  4a6e              LDR      r2,|L51.704|
000108  eb021000          ADD      r0,r2,r0,LSL #4       ;6492
00010c  7001              STRB     r1,[r0,#0]            ;6492
00010e  f04f0046          MOV      r0,#0x46              ;6492
000112  e7d0              B        |L51.182|
                  |L51.276|
000114  a808              ADD      r0,sp,#0x20           ;6494
000116  c80f              LDM      r0,{r0-r3}            ;6494
000118  f7fffffe          BL       __aeabi_ddiv
00011c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6494
000120  f7fffffe          BL       acos
000124  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;6494
000128  f1bb0f02          CMP      r11,#2                ;6495
00012c  d11a              BNE      |L51.356|
00012e  4642              MOV      r2,r8                 ;6495
000130  464b              MOV      r3,r9                 ;6495
000132  4630              MOV      r0,r6                 ;6495
000134  4639              MOV      r1,r7                 ;6495
000136  f7fffffe          BL       __aeabi_dsub
00013a  e9cd0102          STRD     r0,r1,[sp,#8]         ;6495
00013e  4620              MOV      r0,r4                 ;6495
000140  4629              MOV      r1,r5                 ;6495
000142  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6495
000146  f7fffffe          BL       __aeabi_dsub
00014a  e9cd0100          STRD     r0,r1,[sp,#0]         ;6495
00014e  e9dd2302          LDRD     r2,r3,[sp,#8]         ;6495
000152  f7fffffe          BL       atan2
000156  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6495
00015a  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;6495
00015e  f7fffffe          BL       __aeabi_dsub
000162  e019              B        |L51.408|
                  |L51.356|
000164  4642              MOV      r2,r8                 ;6496
000166  464b              MOV      r3,r9                 ;6496
000168  4630              MOV      r0,r6                 ;6496
00016a  4639              MOV      r1,r7                 ;6496
00016c  f7fffffe          BL       __aeabi_dsub
000170  e9cd0102          STRD     r0,r1,[sp,#8]         ;6496
000174  4620              MOV      r0,r4                 ;6496
000176  4629              MOV      r1,r5                 ;6496
000178  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6496
00017c  f7fffffe          BL       __aeabi_dsub
000180  e9cd0100          STRD     r0,r1,[sp,#0]         ;6496
000184  e9dd2302          LDRD     r2,r3,[sp,#8]         ;6496
000188  f7fffffe          BL       atan2
00018c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6496
000190  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;6496
000194  f7fffffe          BL       __aeabi_dadd
                  |L51.408|
000198  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6496
00019c  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;6497
0001a0  f7fffffe          BL       ||cos||
0001a4  e9cd0102          STRD     r0,r1,[sp,#8]         ;6497
0001a8  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6497
0001ac  f7fffffe          BL       __aeabi_dmul
0001b0  4642              MOV      r2,r8                 ;6497
0001b2  464b              MOV      r3,r9                 ;6497
0001b4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6497
0001b8  f7fffffe          BL       __aeabi_dadd
0001bc  4606              MOV      r6,r0                 ;6497
0001be  460f              MOV      r7,r1                 ;6497
0001c0  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;6498
0001c4  f7fffffe          BL       ||sin||
0001c8  e9cd0102          STRD     r0,r1,[sp,#8]         ;6498
0001cc  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6498
0001d0  f7fffffe          BL       __aeabi_dmul
0001d4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6498
0001d8  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6498
0001dc  f7fffffe          BL       __aeabi_dadd
0001e0  4604              MOV      r4,r0                 ;6498
0001e2  460d              MOV      r5,r1                 ;6498
0001e4  980f              LDR      r0,[sp,#0x3c]         ;6499
0001e6  b950              CBNZ     r0,|L51.510|
0001e8  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6500
0001ec  4622              MOV      r2,r4                 ;6500
0001ee  462b              MOV      r3,r5                 ;6500
0001f0  e9cd0100          STRD     r0,r1,[sp,#0]         ;6500
0001f4  4630              MOV      r0,r6                 ;6500
0001f6  4639              MOV      r1,r7                 ;6500
0001f8  f7fffffe          BL       STRAIGHT_TRAVERSE
0001fc  e044              B        |L51.648|
                  |L51.510|
0001fe  980f              LDR      r0,[sp,#0x3c]         ;6523
000200  280a              CMP      r0,#0xa               ;6523
000202  d11b              BNE      |L51.572|
000204  f8da03fc          LDR      r0,[r10,#0x3fc]       ;6525
000208  2801              CMP      r0,#1                 ;6525
00020a  d10c              BNE      |L51.550|
00020c  9810              LDR      r0,[sp,#0x40]         ;6526
00020e  e9cd0a02          STRD     r0,r10,[sp,#8]        ;6526
000212  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6526
000216  4622              MOV      r2,r4                 ;6526
000218  462b              MOV      r3,r5                 ;6526
00021a  e9cd0100          STRD     r0,r1,[sp,#0]         ;6526
00021e  4630              MOV      r0,r6                 ;6526
000220  4639              MOV      r1,r7                 ;6526
000222  f7fffffe          BL       inverse_time_rate_straight
                  |L51.550|
000226  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6540
00022a  4622              MOV      r2,r4                 ;6540
00022c  462b              MOV      r3,r5                 ;6540
00022e  e9cd0100          STRD     r0,r1,[sp,#0]         ;6540
000232  4630              MOV      r0,r6                 ;6540
000234  4639              MOV      r1,r7                 ;6540
000236  f7fffffe          BL       STRAIGHT_FEED
00023a  e025              B        |L51.648|
                  |L51.572|
00023c  f04f0100          MOV      r1,#0                 ;6565
000240  481d              LDR      r0,|L51.696|
000242  f8c0114c          STR      r1,[r0,#0x14c]        ;6565
000246  4601              MOV      r1,r0                 ;6565
000248  f8d1314c          LDR      r3,[r1,#0x14c]        ;6565
00024c  f8d1114c          LDR      r1,[r1,#0x14c]        ;6565
000250  f1010101          ADD      r1,r1,#1              ;6565
000254  4602              MOV      r2,r0                 ;6565
000256  f8c2114c          STR      r1,[r2,#0x14c]        ;6565
00025a  eb030183          ADD      r1,r3,r3,LSL #2       ;6565
00025e  4a18              LDR      r2,|L51.704|
000260  eb021101          ADD      r1,r2,r1,LSL #4       ;6565
000264  4608              MOV      r0,r1                 ;6565
000266  4915              LDR      r1,|L51.700|
000268  f7fffffe          BL       strcpy
00026c  f04f0100          MOV      r1,#0                 ;6565
000270  4811              LDR      r0,|L51.696|
000272  f8d0014c          LDR      r0,[r0,#0x14c]        ;6565
000276  eb000080          ADD      r0,r0,r0,LSL #2       ;6565
00027a  4a11              LDR      r2,|L51.704|
00027c  eb021000          ADD      r0,r2,r0,LSL #4       ;6565
000280  7001              STRB     r1,[r0,#0]            ;6565
000282  f04f0010          MOV      r0,#0x10              ;6565
000286  e716              B        |L51.182|
                  |L51.648|
000288  f50a7064          ADD      r0,r10,#0x390         ;6567
00028c  c0c0              STM      r0!,{r6,r7}           ;6567
00028e  f50a7066          ADD      r0,r10,#0x398         ;6568
000292  c030              STM      r0!,{r4,r5}           ;6568
000294  f50a4030          ADD      r0,r10,#0xb000        ;6569
000298  f8c0917c          STR      r9,[r0,#0x17c]        ;6569
00029c  f8c08178          STR      r8,[r0,#0x178]        ;6569
0002a0  f50a4230          ADD      r2,r10,#0xb000        ;6570
0002a4  e9dd101e          LDRD     r1,r0,[sp,#0x78]      ;6570
0002a8  f8c21180          STR      r1,[r2,#0x180]        ;6570
0002ac  f8c20184          STR      r0,[r2,#0x184]        ;6570
0002b0  f04f0000          MOV      r0,#0                 ;6571
0002b4  e6ff              B        |L51.182|
;;;6573   
                          ENDP

0002b6  0000              DCW      0x0000
                  |L51.696|
                          DCD      _setup+0xc000
                  |L51.700|
                          DCD      |symbol_number.485|
                  |L51.704|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_straight_comp2||, CODE, READONLY, ALIGN=2

                  convert_straight_comp2 PROC
;;;6645   
;;;6646       static int convert_straight_comp2(            /* ARGUMENTS                       */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;6647       int move,                                     /* either G_0 or G_1                         */
;;;6648       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;6649       setup_pointer settings,                       /* pointer to machine settings               */
;;;6650       double px,                                    /* X coordinate of programmed end point      */
;;;6651       double py,                                    /* Y coordinate of programmed end point      */
;;;6652       double end_z                                  /* Z coordinate of end point                 */
;;;6653   #ifdef AA
;;;6654       , double AA_end                               /* A coordinate of end point           *//*AA*/
;;;6655   #endif
;;;6656   #ifdef BB
;;;6657       , double BB_end                               /* B coordinate of end point           *//*BB*/
;;;6658   #endif
;;;6659   #ifdef CC
;;;6660       , double CC_end                               /* C coordinate of end point           *//*CC*/
;;;6661   #endif
;;;6662       )
;;;6663       {
000004  b0a3              SUB      sp,sp,#0x8c
000006  4692              MOV      r10,r2
000008  e9dd4534          LDRD     r4,r5,[sp,#0xd0]
;;;6664           static char name[] SET_TO "convert_straight_comp2";
;;;6665           double alpha;
;;;6666           double beta;
;;;6667           double end_x;                             /* x-coordinate of actual end point */
;;;6668           double end_y;                             /* y-coordinate of actual end point */
;;;6669           double gamma;
;;;6670           double mid_x;                             /* x-coordinate of end of added arc, if needed */
;;;6671           double mid_y;                             /* y-coordinate of end of added arc, if needed */
;;;6672           double radius;
;;;6673           int side;
;;;6674      /* radians, testing corners */
;;;6675           double small SET_TO TOLERANCE_CONCAVE_CORNER;
00000c  49fe              LDR      r1,|L52.1032|
00000e  48ff              LDR      r0,|L52.1036|
000010  e9cd1014          STRD     r1,r0,[sp,#0x50]
;;;6676           double start_x, start_y;                  /* programmed beginning point */
;;;6677           double theta;
;;;6678   
;;;6679           start_x SET_TO settings->program_x;
000014  f50a4130          ADD      r1,r10,#0xb000
000018  f50171bc          ADD      r1,r1,#0x178
00001c  c903              LDM      r1,{r0,r1}
00001e  e9cd0112          STRD     r0,r1,[sp,#0x48]
;;;6680           start_y SET_TO settings->program_y;
000022  f50a4030          ADD      r0,r10,#0xb000
000026  f50070c0          ADD      r0,r0,#0x180
00002a  c803              LDM      r0,{r0,r1}
00002c  e9cd0110          STRD     r0,r1,[sp,#0x40]
;;;6681           if ((py IS start_y) AND (px IS start_x))  /* no XY motion */
000030  e9dd2310          LDRD     r2,r3,[sp,#0x40]
000034  e9dd0132          LDRD     r0,r1,[sp,#0xc8]
000038  f7fffffe          BL       __aeabi_cdcmpeq
00003c  d15c              BNE      |L52.248|
00003e  e9dd2312          LDRD     r2,r3,[sp,#0x48]
000042  e9dd0130          LDRD     r0,r1,[sp,#0xc0]
000046  f7fffffe          BL       __aeabi_cdcmpeq
00004a  d155              BNE      |L52.248|
;;;6682           {
;;;6683               end_x SET_TO settings->current_x;
00004c  f50a7664          ADD      r6,r10,#0x390
000050  cec0              LDM      r6,{r6,r7}
;;;6684               end_y SET_TO settings->current_y;
000052  f8da939c          LDR      r9,[r10,#0x39c]
000056  f8da8398          LDR      r8,[r10,#0x398]
;;;6685               if (move IS G_0)
00005a  9823              LDR      r0,[sp,#0x8c]
00005c  b940              CBNZ     r0,|L52.112|
;;;6686                   STRAIGHT_TRAVERSE(end_x, end_y, end_z
00005e  4642              MOV      r2,r8
000060  464b              MOV      r3,r9
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  e9cd4500          STRD     r4,r5,[sp,#0]
00006a  f7fffffe          BL       STRAIGHT_TRAVERSE
00006e  e238              B        |L52.1250|
                  |L52.112|
;;;6687           #ifdef AA
;;;6688                       ,             AA_end
;;;6689           #else
;;;6690           #ifdef ALL_AXES
;;;6691                       , 0
;;;6692           #endif
;;;6693           #endif
;;;6694           #ifdef BB
;;;6695                       ,  BB_end
;;;6696           #else
;;;6697           #ifdef ALL_AXES
;;;6698                       , 0
;;;6699           #endif
;;;6700           #endif
;;;6701           #ifdef CC
;;;6702                       ,  CC_end
;;;6703           #else
;;;6704           #ifdef ALL_AXES
;;;6705                       , 0
;;;6706           #endif
;;;6707           #endif
;;;6708                       );
;;;6709               else if (move IS G_1)
000070  9823              LDR      r0,[sp,#0x8c]
000072  280a              CMP      r0,#0xa
000074  d117              BNE      |L52.166|
;;;6710               {
;;;6711                   if (settings->feed_mode IS INVERSE_TIME)
000076  f8da03fc          LDR      r0,[r10,#0x3fc]
00007a  2801              CMP      r0,#1
00007c  d10a              BNE      |L52.148|
;;;6712                       inverse_time_rate_straight
00007e  9824              LDR      r0,[sp,#0x90]
000080  4642              MOV      r2,r8
000082  464b              MOV      r3,r9
000084  e9cd0a02          STRD     r0,r10,[sp,#8]
000088  e9cd4500          STRD     r4,r5,[sp,#0]
00008c  4630              MOV      r0,r6
00008e  4639              MOV      r1,r7
000090  f7fffffe          BL       inverse_time_rate_straight
                  |L52.148|
;;;6713                           (end_x, end_y, end_z
;;;6714           #ifdef AA
;;;6715                           , AA_end
;;;6716           #endif
;;;6717   
;;;6718           #ifdef BB
;;;6719                           , BB_end
;;;6720           #endif
;;;6721   
;;;6722           #ifdef CC
;;;6723                           , CC_end
;;;6724           #endif
;;;6725                           , block, settings);
;;;6726                   STRAIGHT_FEED(end_x, end_y, end_z
000094  4642              MOV      r2,r8
000096  464b              MOV      r3,r9
000098  4630              MOV      r0,r6
00009a  4639              MOV      r1,r7
00009c  e9cd4500          STRD     r4,r5,[sp,#0]
0000a0  f7fffffe          BL       STRAIGHT_FEED
0000a4  e21d              B        |L52.1250|
                  |L52.166|
;;;6727       #ifdef AA
;;;6728                       ,           AA_end
;;;6729       #else
;;;6730       #ifdef ALL_AXES
;;;6731                       , 0
;;;6732       #endif
;;;6733       #endif
;;;6734       #ifdef BB
;;;6735                       ,  BB_end
;;;6736       #else
;;;6737       #ifdef ALL_AXES
;;;6738                       , 0
;;;6739       #endif
;;;6740       #endif
;;;6741       #ifdef CC
;;;6742                       ,  CC_end
;;;6743       #else
;;;6744       #ifdef ALL_AXES
;;;6745                       , 0
;;;6746       #endif
;;;6747       #endif
;;;6748                       );
;;;6749               }
;;;6750               else
;;;6751                   ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
0000a6  f04f0100          MOV      r1,#0
0000aa  48d9              LDR      r0,|L52.1040|
0000ac  f8c0114c          STR      r1,[r0,#0x14c]
0000b0  4601              MOV      r1,r0
0000b2  f8d1314c          LDR      r3,[r1,#0x14c]
0000b6  f8d1114c          LDR      r1,[r1,#0x14c]
0000ba  f1010101          ADD      r1,r1,#1
0000be  4602              MOV      r2,r0
0000c0  f8c2114c          STR      r1,[r2,#0x14c]
0000c4  eb030183          ADD      r1,r3,r3,LSL #2
0000c8  f6a06254          SUB      r2,r0,#0xe54
0000cc  eb021101          ADD      r1,r2,r1,LSL #4
0000d0  4608              MOV      r0,r1
0000d2  49d0              LDR      r1,|L52.1044|
0000d4  f7fffffe          BL       strcpy
0000d8  f04f0100          MOV      r1,#0
0000dc  48cc              LDR      r0,|L52.1040|
0000de  f8d0014c          LDR      r0,[r0,#0x14c]
0000e2  eb000080          ADD      r0,r0,r0,LSL #2
0000e6  4acc              LDR      r2,|L52.1048|
0000e8  eb021000          ADD      r0,r2,r0,LSL #4
0000ec  7001              STRB     r1,[r0,#0]
0000ee  f04f0010          MOV      r0,#0x10
                  |L52.242|
;;;6752           }
;;;6753           else
;;;6754           {
;;;6755               side SET_TO settings->cutter_comp_side;
;;;6756      /* will always be positive */
;;;6757               radius SET_TO settings->cutter_comp_radius;
;;;6758               theta SET_TO atan2(settings->current_y - start_y,
;;;6759                   settings->current_x - start_x);
;;;6760               alpha SET_TO atan2(py - start_y, px - start_x);
;;;6761   
;;;6762               if (side IS LEFT)
;;;6763               {
;;;6764                   if (theta < alpha)
;;;6765                       theta SET_TO (theta + TWO_PI);
;;;6766                   beta SET_TO ((theta - alpha) - PI2);
;;;6767                   gamma SET_TO PI2;
;;;6768               }
;;;6769               else if (side IS RIGHT)
;;;6770               {
;;;6771                   if (alpha < theta)
;;;6772                       alpha SET_TO (alpha + TWO_PI);
;;;6773                   beta SET_TO ((alpha - theta) - PI2);
;;;6774                   gamma SET_TO -PI2;
;;;6775               }
;;;6776               else
;;;6777                   ERM(NCE_BUG_SIDE_NOT_RIGHT_OR_LEFT);
;;;6778               end_x SET_TO (px + (radius * cos(alpha + gamma)));
;;;6779               end_y SET_TO (py + (radius * sin(alpha + gamma)));
;;;6780               mid_x SET_TO (start_x + (radius * cos(alpha + gamma)));
;;;6781               mid_y SET_TO (start_y + (radius * sin(alpha + gamma)));
;;;6782   
;;;6783               CHK(((beta < -small) OR (beta > (PI + small))),
;;;6784                   NCE_CONCAVE_CORNER_WITH_CUTTER_RADIUS_COMP);
;;;6785               if (move IS G_0)
;;;6786                   STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;6787           #ifdef AA
;;;6788                       ,             AA_end
;;;6789           #else
;;;6790           #ifdef ALL_AXES
;;;6791                       , 0
;;;6792           #endif
;;;6793           #endif
;;;6794           #ifdef BB
;;;6795                       ,  BB_end
;;;6796           #else
;;;6797           #ifdef ALL_AXES
;;;6798                       , 0
;;;6799           #endif
;;;6800           #endif
;;;6801           #ifdef CC
;;;6802                       ,  CC_end
;;;6803           #else
;;;6804           #ifdef ALL_AXES
;;;6805                       , 0
;;;6806           #endif
;;;6807           #endif
;;;6808                       );
;;;6809               else if (move IS G_1)
;;;6810               {
;;;6811                   if (beta > small)                 /* ARC NEEDED */
;;;6812                   {
;;;6813                       if (settings->feed_mode IS INVERSE_TIME)
;;;6814                           inverse_time_rate_as(start_x, start_y, (side IS LEFT) ? -1 : 1,
;;;6815                           mid_x, mid_y, end_x, end_y,
;;;6816                           end_z
;;;6817       #ifdef AA
;;;6818                           , AA_end
;;;6819       #endif
;;;6820   
;;;6821       #ifdef BB
;;;6822                           , BB_end
;;;6823       #endif
;;;6824   
;;;6825       #ifdef CC
;;;6826                           , CC_end
;;;6827       #endif
;;;6828                           ,
;;;6829                           block, settings);
;;;6830                       ARC_FEED(mid_x,mid_y,start_x, start_y,((side IS LEFT) ? -1 : 1),
;;;6831                           settings->current_z
;;;6832       #ifdef AA
;;;6833                           , AA_end
;;;6834       #else
;;;6835       #ifdef ALL_AXES
;;;6836                           , 0
;;;6837       #endif
;;;6838       #endif
;;;6839       #ifdef BB
;;;6840                           , BB_end
;;;6841       #else
;;;6842       #ifdef ALL_AXES
;;;6843                           , 0
;;;6844       #endif
;;;6845       #endif
;;;6846       #ifdef CC
;;;6847                           , CC_end
;;;6848       #else
;;;6849       #ifdef ALL_AXES
;;;6850                           , 0
;;;6851       #endif
;;;6852       #endif
;;;6853                           );
;;;6854                       STRAIGHT_FEED(end_x, end_y, end_z
;;;6855       #ifdef AA
;;;6856                           ,               AA_end
;;;6857       #else
;;;6858       #ifdef ALL_AXES
;;;6859                           , 0
;;;6860       #endif
;;;6861       #endif
;;;6862       #ifdef BB
;;;6863                           ,  BB_end
;;;6864       #else
;;;6865       #ifdef ALL_AXES
;;;6866                           , 0
;;;6867       #endif
;;;6868       #endif
;;;6869       #ifdef CC
;;;6870                           ,  CC_end
;;;6871       #else
;;;6872       #ifdef ALL_AXES
;;;6873                           , 0
;;;6874       #endif
;;;6875       #endif
;;;6876                           );
;;;6877                   }
;;;6878                   else
;;;6879                   {
;;;6880                       if (settings->feed_mode IS INVERSE_TIME)
;;;6881                           inverse_time_rate_straight
;;;6882                               (end_x,end_y,end_z
;;;6883           #ifdef AA
;;;6884                               , AA_end
;;;6885           #endif
;;;6886   
;;;6887           #ifdef BB
;;;6888                               , BB_end
;;;6889           #endif
;;;6890   
;;;6891           #ifdef CC
;;;6892                               , CC_end
;;;6893           #endif
;;;6894                               , block, settings);
;;;6895                       STRAIGHT_FEED(end_x, end_y, end_z
;;;6896       #ifdef AA
;;;6897                           ,               AA_end
;;;6898       #else
;;;6899       #ifdef ALL_AXES
;;;6900                           , 0
;;;6901       #endif
;;;6902       #endif
;;;6903       #ifdef BB
;;;6904                           ,  BB_end
;;;6905       #else
;;;6906       #ifdef ALL_AXES
;;;6907                           , 0
;;;6908       #endif
;;;6909       #endif
;;;6910       #ifdef CC
;;;6911                           ,  CC_end
;;;6912       #else
;;;6913       #ifdef ALL_AXES
;;;6914                           , 0
;;;6915       #endif
;;;6916       #endif
;;;6917                           );
;;;6918                   }
;;;6919               }
;;;6920               else
;;;6921                   ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
;;;6922           }
;;;6923   
;;;6924           settings->current_x SET_TO end_x;
;;;6925           settings->current_y SET_TO end_y;
;;;6926           settings->program_x SET_TO px;
;;;6927           settings->program_y SET_TO py;
;;;6928           return RS274NGC_OK;
;;;6929       }
0000f2  b027              ADD      sp,sp,#0x9c
0000f4  e8bd8ff0          POP      {r4-r11,pc}
                  |L52.248|
0000f8  f8dab3b0          LDR      r11,[r10,#0x3b0]      ;6755
0000fc  f50a706a          ADD      r0,r10,#0x3a8         ;6757
000100  c803              LDM      r0,{r0,r1}            ;6757
000102  e9cd0116          STRD     r0,r1,[sp,#0x58]      ;6757
000106  f50a7064          ADD      r0,r10,#0x390         ;6758
00010a  c803              LDM      r0,{r0,r1}            ;6758
00010c  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6758
000110  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;6758
000114  f7fffffe          BL       __aeabi_dsub
000118  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6758
00011c  f50a7066          ADD      r0,r10,#0x398         ;6758
000120  c803              LDM      r0,{r0,r1}            ;6758
000122  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6758
000126  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6758
00012a  f7fffffe          BL       __aeabi_dsub
00012e  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6758
000132  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;6758
000136  f7fffffe          BL       atan2
00013a  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;6758
00013e  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;6760
000142  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;6760
000146  f7fffffe          BL       __aeabi_dsub
00014a  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6760
00014e  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6760
000152  e9dd0132          LDRD     r0,r1,[sp,#0xc8]      ;6760
000156  f7fffffe          BL       __aeabi_dsub
00015a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6760
00015e  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;6760
000162  f7fffffe          BL       atan2
000166  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;6760
00016a  f1bb0f02          CMP      r11,#2                ;6762
00016e  d121              BNE      |L52.436|
000170  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;6764
000174  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;6764
000178  f7fffffe          BL       __aeabi_cdcmple
00017c  d207              BCS      |L52.398|
00017e  4aa7              LDR      r2,|L52.1052|
000180  4ba7              LDR      r3,|L52.1056|
000182  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;6765
000186  f7fffffe          BL       __aeabi_dadd
00018a  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;6765
                  |L52.398|
00018e  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;6766
000192  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;6766
000196  f7fffffe          BL       __aeabi_dsub
00019a  4aa0              LDR      r2,|L52.1052|
00019c  4ba1              LDR      r3,|L52.1060|
00019e  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6766
0001a2  f7fffffe          BL       __aeabi_dsub
0001a6  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;6766
0001aa  489c              LDR      r0,|L52.1052|
0001ac  499d              LDR      r1,|L52.1060|
0001ae  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;6767
0001b2  e049              B        |L52.584|
                  |L52.436|
0001b4  f1bb0f01          CMP      r11,#1                ;6769
0001b8  d121              BNE      |L52.510|
0001ba  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;6771
0001be  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6771
0001c2  f7fffffe          BL       __aeabi_cdcmple
0001c6  d207              BCS      |L52.472|
0001c8  4a94              LDR      r2,|L52.1052|
0001ca  4b95              LDR      r3,|L52.1056|
0001cc  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6772
0001d0  f7fffffe          BL       __aeabi_dadd
0001d4  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;6772
                  |L52.472|
0001d8  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;6773
0001dc  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6773
0001e0  f7fffffe          BL       __aeabi_dsub
0001e4  4a8d              LDR      r2,|L52.1052|
0001e6  4b8f              LDR      r3,|L52.1060|
0001e8  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6773
0001ec  f7fffffe          BL       __aeabi_dsub
0001f0  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;6773
0001f4  4989              LDR      r1,|L52.1052|
0001f6  488c              LDR      r0,|L52.1064|
0001f8  e9cd101c          STRD     r1,r0,[sp,#0x70]      ;6774
0001fc  e024              B        |L52.584|
                  |L52.510|
0001fe  f04f0100          MOV      r1,#0                 ;6777
000202  4883              LDR      r0,|L52.1040|
000204  f8c0114c          STR      r1,[r0,#0x14c]        ;6777
000208  4601              MOV      r1,r0                 ;6777
00020a  f8d1314c          LDR      r3,[r1,#0x14c]        ;6777
00020e  f8d1214c          LDR      r2,[r1,#0x14c]        ;6777
000212  f1020201          ADD      r2,r2,#1              ;6777
000216  f8c1214c          STR      r2,[r1,#0x14c]        ;6777
00021a  eb030183          ADD      r1,r3,r3,LSL #2       ;6777
00021e  4a7e              LDR      r2,|L52.1048|
000220  eb021101          ADD      r1,r2,r1,LSL #4       ;6777
000224  4608              MOV      r0,r1                 ;6777
000226  497b              LDR      r1,|L52.1044|
000228  f7fffffe          BL       strcpy
00022c  f04f0100          MOV      r1,#0                 ;6777
000230  4877              LDR      r0,|L52.1040|
000232  f8d0014c          LDR      r0,[r0,#0x14c]        ;6777
000236  eb000080          ADD      r0,r0,r0,LSL #2       ;6777
00023a  4a77              LDR      r2,|L52.1048|
00023c  eb021000          ADD      r0,r2,r0,LSL #4       ;6777
000240  7001              STRB     r1,[r0,#0]            ;6777
000242  f04f0023          MOV      r0,#0x23              ;6777
000246  e754              B        |L52.242|
                  |L52.584|
000248  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6778
00024c  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6778
000250  f7fffffe          BL       __aeabi_dadd
000254  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6778
000258  f7fffffe          BL       ||cos||
00025c  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6778
000260  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6778
000264  f7fffffe          BL       __aeabi_dmul
000268  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6778
00026c  e9dd2330          LDRD     r2,r3,[sp,#0xc0]      ;6778
000270  f7fffffe          BL       __aeabi_dadd
000274  4606              MOV      r6,r0                 ;6778
000276  460f              MOV      r7,r1                 ;6778
000278  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6779
00027c  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6779
000280  f7fffffe          BL       __aeabi_dadd
000284  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6779
000288  f7fffffe          BL       ||sin||
00028c  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6779
000290  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6779
000294  f7fffffe          BL       __aeabi_dmul
000298  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6779
00029c  e9dd2332          LDRD     r2,r3,[sp,#0xc8]      ;6779
0002a0  f7fffffe          BL       __aeabi_dadd
0002a4  4680              MOV      r8,r0                 ;6779
0002a6  4689              MOV      r9,r1                 ;6779
0002a8  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6780
0002ac  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6780
0002b0  f7fffffe          BL       __aeabi_dadd
0002b4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6780
0002b8  f7fffffe          BL       ||cos||
0002bc  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6780
0002c0  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6780
0002c4  f7fffffe          BL       __aeabi_dmul
0002c8  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6780
0002cc  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;6780
0002d0  f7fffffe          BL       __aeabi_dadd
0002d4  e9cd011a          STRD     r0,r1,[sp,#0x68]      ;6780
0002d8  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6781
0002dc  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6781
0002e0  f7fffffe          BL       __aeabi_dadd
0002e4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6781
0002e8  f7fffffe          BL       ||sin||
0002ec  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6781
0002f0  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6781
0002f4  f7fffffe          BL       __aeabi_dmul
0002f8  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6781
0002fc  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6781
000300  f7fffffe          BL       __aeabi_dadd
000304  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;6781
000308  e9dd0114          LDRD     r0,r1,[sp,#0x50]      ;6783
00030c  f0814100          EOR      r1,r1,#0x80000000     ;6783
000310  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6783
000314  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6783
000318  f7fffffe          BL       __aeabi_cdrcmple
00031c  d30c              BCC      |L52.824|
00031e  483f              LDR      r0,|L52.1052|
000320  4942              LDR      r1,|L52.1068|
000322  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;6783
000326  f7fffffe          BL       __aeabi_dadd
00032a  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6783
00032e  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6783
000332  f7fffffe          BL       __aeabi_cdcmple
000336  d225              BCS      |L52.900|
                  |L52.824|
000338  f04f0100          MOV      r1,#0                 ;6783
00033c  4834              LDR      r0,|L52.1040|
00033e  f8c0114c          STR      r1,[r0,#0x14c]        ;6783
000342  4601              MOV      r1,r0                 ;6783
000344  f8d1314c          LDR      r3,[r1,#0x14c]        ;6783
000348  f8d1114c          LDR      r1,[r1,#0x14c]        ;6783
00034c  f1010101          ADD      r1,r1,#1              ;6783
000350  4602              MOV      r2,r0                 ;6783
000352  f8c2114c          STR      r1,[r2,#0x14c]        ;6783
000356  eb030183          ADD      r1,r3,r3,LSL #2       ;6783
00035a  4a2f              LDR      r2,|L52.1048|
00035c  eb021101          ADD      r1,r2,r1,LSL #4       ;6783
000360  4608              MOV      r0,r1                 ;6783
000362  492c              LDR      r1,|L52.1044|
000364  f7fffffe          BL       strcpy
000368  f04f0100          MOV      r1,#0                 ;6783
00036c  4828              LDR      r0,|L52.1040|
00036e  f8d0014c          LDR      r0,[r0,#0x14c]        ;6783
000372  eb000080          ADD      r0,r0,r0,LSL #2       ;6783
000376  4a28              LDR      r2,|L52.1048|
000378  eb021000          ADD      r0,r2,r0,LSL #4       ;6783
00037c  7001              STRB     r1,[r0,#0]            ;6783
00037e  f04f0043          MOV      r0,#0x43              ;6783
000382  e6b6              B        |L52.242|
                  |L52.900|
000384  9823              LDR      r0,[sp,#0x8c]         ;6785
000386  b940              CBNZ     r0,|L52.922|
000388  4642              MOV      r2,r8                 ;6786
00038a  464b              MOV      r3,r9                 ;6786
00038c  4630              MOV      r0,r6                 ;6786
00038e  4639              MOV      r1,r7                 ;6786
000390  e9cd4500          STRD     r4,r5,[sp,#0]         ;6786
000394  f7fffffe          BL       STRAIGHT_TRAVERSE
000398  e0a3              B        |L52.1250|
                  |L52.922|
00039a  9823              LDR      r0,[sp,#0x8c]         ;6809
00039c  280a              CMP      r0,#0xa               ;6809
00039e  d179              BNE      |L52.1172|
0003a0  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;6811
0003a4  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;6811
0003a8  f7fffffe          BL       __aeabi_cdrcmple
0003ac  d259              BCS      |L52.1122|
0003ae  f8da03fc          LDR      r0,[r10,#0x3fc]       ;6813
0003b2  2801              CMP      r0,#1                 ;6813
0003b4  d11d              BNE      |L52.1010|
0003b6  9824              LDR      r0,[sp,#0x90]         ;6814
0003b8  e9cd0a0c          STRD     r0,r10,[sp,#0x30]     ;6814
0003bc  a806              ADD      r0,sp,#0x18           ;6814
0003be  e8a003c0          STM      r0!,{r6-r9}           ;6814
0003c2  e9cd450a          STRD     r4,r5,[sp,#0x28]      ;6814
0003c6  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;6814
0003ca  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6814
0003ce  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;6814
0003d2  e9cd0102          STRD     r0,r1,[sp,#8]         ;6814
0003d6  f1bb0f02          CMP      r11,#2                ;6814
0003da  d102              BNE      |L52.994|
0003dc  f04f30ff          MOV      r0,#0xffffffff        ;6814
0003e0  e000              B        |L52.996|
                  |L52.994|
0003e2  2001              MOVS     r0,#1                 ;6814
                  |L52.996|
0003e4  9000              STR      r0,[sp,#0]            ;6814
0003e6  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6814
0003ea  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;6814
0003ee  f7fffffe          BL       inverse_time_rate_as
                  |L52.1010|
0003f2  f50a7068          ADD      r0,r10,#0x3a0         ;6830
0003f6  c803              LDM      r0,{r0,r1}            ;6830
0003f8  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;6830
0003fc  f1bb0f02          CMP      r11,#2                ;6830
000400  d116              BNE      |L52.1072|
000402  f04f30ff          MOV      r0,#0xffffffff        ;6830
000406  e014              B        |L52.1074|
                  |L52.1032|
                          DCD      0x47ae147b
                  |L52.1036|
                          DCD      0x3f847ae1
                  |L52.1040|
                          DCD      _setup+0xc000
                  |L52.1044|
                          DCD      |symbol_number.486|
                  |L52.1048|
                          DCD      _setup+0xb1ac
                  |L52.1052|
                          DCD      0x54442d18
                  |L52.1056|
                          DCD      0x401921fb
                  |L52.1060|
                          DCD      0x3ff921fb
                  |L52.1064|
                          DCD      0xbff921fb
                  |L52.1068|
                          DCD      0x400921fb
                  |L52.1072|
000430  2001              MOVS     r0,#1                 ;6830
                  |L52.1074|
000432  9004              STR      r0,[sp,#0x10]         ;6830
000434  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;6830
000438  e9cd0102          STRD     r0,r1,[sp,#8]         ;6830
00043c  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;6830
000440  e9cd0100          STRD     r0,r1,[sp,#0]         ;6830
000444  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;6830
000448  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;6830
00044c  f7fffffe          BL       ARC_FEED
000450  4642              MOV      r2,r8                 ;6854
000452  464b              MOV      r3,r9                 ;6854
000454  4630              MOV      r0,r6                 ;6854
000456  4639              MOV      r1,r7                 ;6854
000458  e9cd4500          STRD     r4,r5,[sp,#0]         ;6854
00045c  f7fffffe          BL       STRAIGHT_FEED
000460  e03f              B        |L52.1250|
                  |L52.1122|
000462  f8da03fc          LDR      r0,[r10,#0x3fc]       ;6880
000466  2801              CMP      r0,#1                 ;6880
000468  d10a              BNE      |L52.1152|
00046a  9824              LDR      r0,[sp,#0x90]         ;6881
00046c  4642              MOV      r2,r8                 ;6881
00046e  464b              MOV      r3,r9                 ;6881
000470  e9cd0a02          STRD     r0,r10,[sp,#8]        ;6881
000474  e9cd4500          STRD     r4,r5,[sp,#0]         ;6881
000478  4630              MOV      r0,r6                 ;6881
00047a  4639              MOV      r1,r7                 ;6881
00047c  f7fffffe          BL       inverse_time_rate_straight
                  |L52.1152|
000480  4642              MOV      r2,r8                 ;6895
000482  464b              MOV      r3,r9                 ;6895
000484  4630              MOV      r0,r6                 ;6895
000486  4639              MOV      r1,r7                 ;6895
000488  e9cd4500          STRD     r4,r5,[sp,#0]         ;6895
00048c  f7fffffe          BL       STRAIGHT_FEED
000490  e027              B        |L52.1250|
000492  e7ff              B        |L52.1172|
                  |L52.1172|
000494  f04f0100          MOV      r1,#0                 ;6921
000498  481e              LDR      r0,|L52.1300|
00049a  f8c0114c          STR      r1,[r0,#0x14c]        ;6921
00049e  4601              MOV      r1,r0                 ;6921
0004a0  f8d1314c          LDR      r3,[r1,#0x14c]        ;6921
0004a4  f8d1114c          LDR      r1,[r1,#0x14c]        ;6921
0004a8  f1010101          ADD      r1,r1,#1              ;6921
0004ac  4602              MOV      r2,r0                 ;6921
0004ae  f8c2114c          STR      r1,[r2,#0x14c]        ;6921
0004b2  eb030183          ADD      r1,r3,r3,LSL #2       ;6921
0004b6  f6a06254          SUB      r2,r0,#0xe54          ;6921
0004ba  eb021101          ADD      r1,r2,r1,LSL #4       ;6921
0004be  4608              MOV      r0,r1                 ;6921
0004c0  4915              LDR      r1,|L52.1304|
0004c2  f7fffffe          BL       strcpy
0004c6  f04f0100          MOV      r1,#0                 ;6921
0004ca  4812              LDR      r0,|L52.1300|
0004cc  f8d0014c          LDR      r0,[r0,#0x14c]        ;6921
0004d0  eb000080          ADD      r0,r0,r0,LSL #2       ;6921
0004d4  4a11              LDR      r2,|L52.1308|
0004d6  eb021000          ADD      r0,r2,r0,LSL #4       ;6921
0004da  7001              STRB     r1,[r0,#0]            ;6921
0004dc  f04f0010          MOV      r0,#0x10              ;6921
0004e0  e607              B        |L52.242|
                  |L52.1250|
0004e2  f50a7064          ADD      r0,r10,#0x390         ;6924
0004e6  c0c0              STM      r0!,{r6,r7}           ;6924
0004e8  f8ca939c          STR      r9,[r10,#0x39c]       ;6925
0004ec  f8ca8398          STR      r8,[r10,#0x398]       ;6925
0004f0  f50a4230          ADD      r2,r10,#0xb000        ;6926
0004f4  e9dd1030          LDRD     r1,r0,[sp,#0xc0]      ;6926
0004f8  f8c21178          STR      r1,[r2,#0x178]        ;6926
0004fc  f8c2017c          STR      r0,[r2,#0x17c]        ;6926
000500  e9dd1032          LDRD     r1,r0,[sp,#0xc8]      ;6927
000504  f8c21180          STR      r1,[r2,#0x180]        ;6927
000508  f8c20184          STR      r0,[r2,#0x184]        ;6927
00050c  f04f0000          MOV      r0,#0                 ;6928
000510  e5ef              B        |L52.242|
;;;6930   
                          ENDP

000512  0000              DCW      0x0000
                  |L52.1300|
                          DCD      _setup+0xc000
                  |L52.1304|
                          DCD      |symbol_number.486|
                  |L52.1308|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_tool_change||, CODE, READONLY, ALIGN=1

                  convert_tool_change PROC
;;;6989   
;;;6990       static int convert_tool_change(               /* ARGUMENTS                   */
000000  b510              PUSH     {r4,lr}
;;;6991       setup_pointer settings)                       /* pointer to machine settings */
;;;6992       {
000002  4604              MOV      r4,r0
;;;6993           static char name[] SET_TO "convert_tool_change";
;;;6994   
;;;6995           CHANGE_TOOL(settings->selected_tool_slot);
000004  f24b118c          MOV      r1,#0xb18c
000008  5909              LDR      r1,[r1,r4]
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       CHANGE_TOOL
;;;6996           settings->current_slot SET_TO settings->selected_tool_slot;
000010  f24b108c          MOV      r0,#0xb18c
000014  5900              LDR      r0,[r0,r4]
000016  f8c4038c          STR      r0,[r4,#0x38c]
;;;6997           settings->spindle_turning SET_TO CANON_STOPPED;
00001a  f04f0101          MOV      r1,#1
00001e  f24b10a8          MOV      r0,#0xb1a8
000022  5101              STR      r1,[r0,r4]
;;;6998   
;;;6999           return RS274NGC_OK;
000024  f04f0000          MOV      r0,#0
;;;7000       }
000028  bd10              POP      {r4,pc}
;;;7001   
                          ENDP


                          AREA ||i.convert_tool_length_offset||, CODE, READONLY, ALIGN=2

                  convert_tool_length_offset PROC
;;;7032   
;;;7033       static int convert_tool_length_offset(        /* ARGUMENTS                      */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;7034       int g_code,                                   /* g_code being executed (must be G_43 or G_49) */
;;;7035       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;7036       setup_pointer settings)                       /* pointer to machine settings                  */
;;;7037       {
000004  4682              MOV      r10,r0
000006  468b              MOV      r11,r1
000008  4690              MOV      r8,r2
;;;7038           static char name[] SET_TO "convert_tool_length_offset";
;;;7039           int index;
;;;7040           double offset;
;;;7041   
;;;7042           if (g_code IS G_49)
00000a  f5ba7ff5          CMP      r10,#0x1ea
00000e  d122              BNE      |L54.86|
;;;7043           {
;;;7044               USE_TOOL_LENGTH_OFFSET(0.0);
000010  2000              MOVS     r0,#0
000012  4601              MOV      r1,r0
000014  f7fffffe          BL       USE_TOOL_LENGTH_OFFSET
;;;7045               settings->current_z SET_TO (settings->current_z +
000018  f5084140          ADD      r1,r8,#0xc000
00001c  f50171a8          ADD      r1,r1,#0x150
000020  c903              LDM      r1,{r0,r1}
000022  4606              MOV      r6,r0
000024  460f              MOV      r7,r1
000026  f5087068          ADD      r0,r8,#0x3a0
00002a  c803              LDM      r0,{r0,r1}
00002c  4632              MOV      r2,r6
00002e  463b              MOV      r3,r7
000030  e9cd0102          STRD     r0,r1,[sp,#8]
000034  f7fffffe          BL       __aeabi_dadd
000038  f5087268          ADD      r2,r8,#0x3a0
00003c  c203              STM      r2!,{r0,r1}
;;;7046                   settings->tool_length_offset);
;;;7047               settings->tool_length_offset SET_TO 0.0;
00003e  f04f0200          MOV      r2,#0
000042  f5084140          ADD      r1,r8,#0xc000
000046  f8c12150          STR      r2,[r1,#0x150]
00004a  f8c12154          STR      r2,[r1,#0x154]
;;;7048               settings->length_offset_index SET_TO 0;
00004e  4610              MOV      r0,r2
000050  f8c80518          STR      r0,[r8,#0x518]
000054  e084              B        |L54.352|
                  |L54.86|
;;;7049           }
;;;7050           else if (g_code IS G_43)
000056  f5ba7fd7          CMP      r10,#0x1ae
00005a  d15b              BNE      |L54.276|
;;;7051           {
;;;7052               index SET_TO block->h_number;
00005c  f8db9148          LDR      r9,[r11,#0x148]
;;;7053               CHK((index IS -1), NCE_OFFSET_INDEX_MISSING);
000060  f1190001          ADDS     r0,r9,#1
000064  d127              BNE      |L54.182|
000066  4601              MOV      r1,r0
000068  483e              LDR      r0,|L54.356|
00006a  f8c0114c          STR      r1,[r0,#0x14c]
00006e  4601              MOV      r1,r0
000070  f8d1314c          LDR      r3,[r1,#0x14c]
000074  f8d1114c          LDR      r1,[r1,#0x14c]
000078  f1010101          ADD      r1,r1,#1
00007c  4602              MOV      r2,r0
00007e  f8c2114c          STR      r1,[r2,#0x14c]
000082  eb030183          ADD      r1,r3,r3,LSL #2
000086  f6a06254          SUB      r2,r0,#0xe54
00008a  eb021101          ADD      r1,r2,r1,LSL #4
00008e  4608              MOV      r0,r1
000090  4935              LDR      r1,|L54.360|
000092  f7fffffe          BL       strcpy
000096  f04f0100          MOV      r1,#0
00009a  4832              LDR      r0,|L54.356|
00009c  f8d0014c          LDR      r0,[r0,#0x14c]
0000a0  eb000080          ADD      r0,r0,r0,LSL #2
0000a4  4a31              LDR      r2,|L54.364|
0000a6  eb021000          ADD      r0,r2,r0,LSL #4
0000aa  7001              STRB     r1,[r0,#0]
0000ac  f04f0089          MOV      r0,#0x89
                  |L54.176|
;;;7054               offset SET_TO settings->tool_table[index].length;
;;;7055               USE_TOOL_LENGTH_OFFSET(offset);
;;;7056               settings->current_z SET_TO
;;;7057                   (settings->current_z + settings->tool_length_offset - offset);
;;;7058               settings->tool_length_offset SET_TO offset;
;;;7059               settings->length_offset_index SET_TO index;
;;;7060           }
;;;7061           else
;;;7062               ERM(NCE_BUG_CODE_NOT_G43_OR_G49);
;;;7063           return RS274NGC_OK;
;;;7064       }
0000b0  b004              ADD      sp,sp,#0x10
0000b2  e8bd9ff0          POP      {r4-r12,pc}
                  |L54.182|
0000b6  eb090049          ADD      r0,r9,r9,LSL #1       ;7054
0000ba  f24c1160          MOV      r1,#0xc160            ;7054
0000be  4441              ADD      r1,r1,r8              ;7054
0000c0  eb0100c0          ADD      r0,r1,r0,LSL #3       ;7054
0000c4  e9d04502          LDRD     r4,r5,[r0,#8]         ;7054
0000c8  4620              MOV      r0,r4                 ;7055
0000ca  4629              MOV      r1,r5                 ;7055
0000cc  f7fffffe          BL       USE_TOOL_LENGTH_OFFSET
0000d0  f5084040          ADD      r0,r8,#0xc000         ;7056
0000d4  f8d01150          LDR      r1,[r0,#0x150]        ;7056
0000d8  f8d00154          LDR      r0,[r0,#0x154]        ;7056
0000dc  460e              MOV      r6,r1                 ;7056
0000de  4607              MOV      r7,r0                 ;7056
0000e0  f5087068          ADD      r0,r8,#0x3a0          ;7056
0000e4  c803              LDM      r0,{r0,r1}            ;7056
0000e6  4632              MOV      r2,r6                 ;7056
0000e8  463b              MOV      r3,r7                 ;7056
0000ea  e9cd0100          STRD     r0,r1,[sp,#0]         ;7056
0000ee  f7fffffe          BL       __aeabi_dadd
0000f2  4622              MOV      r2,r4                 ;7056
0000f4  462b              MOV      r3,r5                 ;7056
0000f6  e9cd0102          STRD     r0,r1,[sp,#8]         ;7056
0000fa  f7fffffe          BL       __aeabi_dsub
0000fe  f5087268          ADD      r2,r8,#0x3a0          ;7056
000102  c203              STM      r2!,{r0,r1}           ;7056
000104  f5084040          ADD      r0,r8,#0xc000         ;7058
000108  f50070a8          ADD      r0,r0,#0x150          ;7058
00010c  c030              STM      r0!,{r4,r5}           ;7058
00010e  f8c89518          STR      r9,[r8,#0x518]        ;7059
000112  e025              B        |L54.352|
                  |L54.276|
000114  f04f0100          MOV      r1,#0                 ;7062
000118  4812              LDR      r0,|L54.356|
00011a  f8c0114c          STR      r1,[r0,#0x14c]        ;7062
00011e  4601              MOV      r1,r0                 ;7062
000120  f8d1314c          LDR      r3,[r1,#0x14c]        ;7062
000124  f8d1114c          LDR      r1,[r1,#0x14c]        ;7062
000128  f1010101          ADD      r1,r1,#1              ;7062
00012c  4602              MOV      r2,r0                 ;7062
00012e  f8c2114c          STR      r1,[r2,#0x14c]        ;7062
000132  eb030183          ADD      r1,r3,r3,LSL #2       ;7062
000136  4a0d              LDR      r2,|L54.364|
000138  eb021101          ADD      r1,r2,r1,LSL #4       ;7062
00013c  4608              MOV      r0,r1                 ;7062
00013e  490a              LDR      r1,|L54.360|
000140  f7fffffe          BL       strcpy
000144  f04f0100          MOV      r1,#0                 ;7062
000148  4806              LDR      r0,|L54.356|
00014a  f8d0014c          LDR      r0,[r0,#0x14c]        ;7062
00014e  eb000080          ADD      r0,r0,r0,LSL #2       ;7062
000152  4a06              LDR      r2,|L54.364|
000154  eb021000          ADD      r0,r2,r0,LSL #4       ;7062
000158  7001              STRB     r1,[r0,#0]            ;7062
00015a  f04f0016          MOV      r0,#0x16              ;7062
00015e  e7a7              B        |L54.176|
                  |L54.352|
000160  2000              MOVS     r0,#0                 ;7063
000162  e7a5              B        |L54.176|
;;;7065   
                          ENDP

                  |L54.356|
                          DCD      _setup+0xc000
                  |L54.360|
                          DCD      |symbol_number.488|
                  |L54.364|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_tool_select||, CODE, READONLY, ALIGN=2

                  convert_tool_select PROC
;;;7091   
;;;7092       static int convert_tool_select(               /* ARGUMENTS                                */
000000  b570              PUSH     {r4-r6,lr}
;;;7093       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;7094       setup_pointer settings)                       /* pointer to machine settings              */
;;;7095       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;7096           static char name[] SET_TO "convert_tool_select";
;;;7097   
;;;7098           CHK((block->t_number > settings->tool_max),
000006  f24c1058          MOV      r0,#0xc158
00000a  5940              LDR      r0,[r0,r5]
00000c  f8d411d8          LDR      r1,[r4,#0x1d8]
000010  4281              CMP      r1,r0
000012  dd26              BLE      |L55.98|
000014  f04f0100          MOV      r1,#0
000018  4818              LDR      r0,|L55.124|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  490f              LDR      r1,|L55.128|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  480c              LDR      r0,|L55.124|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a0b              LDR      r2,|L55.132|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f009b          MOV      r0,#0x9b
                  |L55.96|
;;;7099               NCE_SELECTED_TOOL_SLOT_NUMBER_TOO_LARGE);
;;;7100           SELECT_TOOL(block->t_number);
;;;7101           settings->selected_tool_slot SET_TO block->t_number;
;;;7102           return RS274NGC_OK;
;;;7103       }
000060  bd70              POP      {r4-r6,pc}
                  |L55.98|
000062  f8d411d8          LDR      r1,[r4,#0x1d8]        ;7100
000066  4608              MOV      r0,r1                 ;7100
000068  f7fffffe          BL       SELECT_TOOL
00006c  f24b108c          MOV      r0,#0xb18c            ;7101
000070  f8d411d8          LDR      r1,[r4,#0x1d8]        ;7101
000074  5141              STR      r1,[r0,r5]            ;7101
000076  f04f0000          MOV      r0,#0                 ;7102
00007a  e7f1              B        |L55.96|
;;;7104   
                          ENDP

                  |L55.124|
                          DCD      _setup+0xc000
                  |L55.128|
                          DCD      |symbol_number.489|
                  |L55.132|
                          DCD      _setup+0xb1ac

                          AREA ||i.cycle_feed||, CODE, READONLY, ALIGN=1

                  cycle_feed PROC
;;;7129   
;;;7130       static int cycle_feed(                        /* ARGUMENTS                  */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;7131       CANON_PLANE plane,                            /* currently selected plane   */
;;;7132       double end1,                                  /* first coordinate value     */
;;;7133       double end2,                                  /* second coordinate value    */
;;;7134       double end3)                                  /* third coordinate value     */
;;;7135       {
000004  4682              MOV      r10,r0
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
00000a  ae0a              ADD      r6,sp,#0x28
00000c  e89603c0          LDM      r6,{r6-r9}
;;;7136           static char name[] SET_TO "cycle_feed";
;;;7137   
;;;7138           if (plane IS CANON_PLANE_XY)
000010  f1ba0f01          CMP      r10,#1
000014  d108              BNE      |L56.40|
;;;7139               STRAIGHT_FEED(end1, end2, end3
000016  4632              MOV      r2,r6
000018  463b              MOV      r3,r7
00001a  4620              MOV      r0,r4
00001c  4629              MOV      r1,r5
00001e  e9cd8900          STRD     r8,r9,[sp,#0]
000022  f7fffffe          BL       STRAIGHT_FEED
000026  e013              B        |L56.80|
                  |L56.40|
;;;7140           #ifdef AA
;;;7141                   ,         _setup.AA_current
;;;7142           #else
;;;7143           #ifdef ALL_AXES
;;;7144                   , 0
;;;7145           #endif
;;;7146           #endif
;;;7147           #ifdef BB
;;;7148                   ,  _setup.BB_current
;;;7149           #else
;;;7150           #ifdef ALL_AXES
;;;7151                   , 0
;;;7152           #endif
;;;7153           #endif
;;;7154           #ifdef CC
;;;7155                   ,  _setup.CC_current
;;;7156           #else
;;;7157           #ifdef ALL_AXES
;;;7158                   , 0
;;;7159           #endif
;;;7160           #endif
;;;7161                   );
;;;7162           else if (plane IS CANON_PLANE_YZ)
000028  f1ba0f02          CMP      r10,#2
00002c  d108              BNE      |L56.64|
;;;7163               STRAIGHT_FEED(end3, end1, end2
00002e  4622              MOV      r2,r4
000030  462b              MOV      r3,r5
000032  4640              MOV      r0,r8
000034  4649              MOV      r1,r9
000036  e9cd6700          STRD     r6,r7,[sp,#0]
00003a  f7fffffe          BL       STRAIGHT_FEED
00003e  e007              B        |L56.80|
                  |L56.64|
;;;7164               #ifdef AA
;;;7165                       ,         _setup.AA_current
;;;7166               #else
;;;7167               #ifdef ALL_AXES
;;;7168                       , 0
;;;7169               #endif
;;;7170               #endif
;;;7171               #ifdef BB
;;;7172                       ,  _setup.BB_current
;;;7173               #else
;;;7174               #ifdef ALL_AXES
;;;7175                       , 0
;;;7176               #endif
;;;7177               #endif
;;;7178               #ifdef CC
;;;7179                       ,  _setup.CC_current
;;;7180               #else
;;;7181               #ifdef ALL_AXES
;;;7182                       , 0
;;;7183               #endif
;;;7184               #endif
;;;7185                       );
;;;7186           else                                      /* if (plane IS CANON_PLANE_XZ) */
;;;7187               STRAIGHT_FEED(end2, end3, end1
000040  4642              MOV      r2,r8
000042  464b              MOV      r3,r9
000044  4630              MOV      r0,r6
000046  4639              MOV      r1,r7
000048  e9cd4500          STRD     r4,r5,[sp,#0]
00004c  f7fffffe          BL       STRAIGHT_FEED
                  |L56.80|
;;;7188           #ifdef AA
;;;7189                   ,         _setup.AA_current
;;;7190           #else
;;;7191           #ifdef ALL_AXES
;;;7192                   , 0
;;;7193           #endif
;;;7194           #endif
;;;7195           #ifdef BB
;;;7196                   ,  _setup.BB_current
;;;7197           #else
;;;7198           #ifdef ALL_AXES
;;;7199                   , 0
;;;7200           #endif
;;;7201           #endif
;;;7202           #ifdef CC
;;;7203                   ,  _setup.CC_current
;;;7204           #else
;;;7205           #ifdef ALL_AXES
;;;7206                   , 0
;;;7207           #endif
;;;7208           #endif
;;;7209                   );
;;;7210   
;;;7211           return RS274NGC_OK;
000050  2000              MOVS     r0,#0
;;;7212       }
000052  e8bd87fc          POP      {r2-r10,pc}
;;;7213   
                          ENDP


                          AREA ||i.cycle_traverse||, CODE, READONLY, ALIGN=1

                  cycle_traverse PROC
;;;7238   
;;;7239       static int cycle_traverse(                    /* ARGUMENTS                 */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;7240       CANON_PLANE plane,                            /* currently selected plane  */
;;;7241       double end1,                                  /* first coordinate value    */
;;;7242       double end2,                                  /* second coordinate value   */
;;;7243       double end3)                                  /* third coordinate value    */
;;;7244       {
000004  4682              MOV      r10,r0
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
00000a  ae0a              ADD      r6,sp,#0x28
00000c  e89603c0          LDM      r6,{r6-r9}
;;;7245           static char name[] SET_TO "cycle_traverse";
;;;7246           if (plane IS CANON_PLANE_XY)
000010  f1ba0f01          CMP      r10,#1
000014  d108              BNE      |L57.40|
;;;7247               STRAIGHT_TRAVERSE(end1, end2, end3
000016  4632              MOV      r2,r6
000018  463b              MOV      r3,r7
00001a  4620              MOV      r0,r4
00001c  4629              MOV      r1,r5
00001e  e9cd8900          STRD     r8,r9,[sp,#0]
000022  f7fffffe          BL       STRAIGHT_TRAVERSE
000026  e013              B        |L57.80|
                  |L57.40|
;;;7248           #ifdef AA
;;;7249                   ,             _setup.AA_current
;;;7250           #else
;;;7251           #ifdef ALL_AXES
;;;7252                   , 0
;;;7253           #endif
;;;7254           #endif
;;;7255           #ifdef BB
;;;7256                   ,  _setup.BB_current
;;;7257           #else
;;;7258           #ifdef ALL_AXES
;;;7259                   , 0
;;;7260           #endif
;;;7261           #endif
;;;7262           #ifdef CC
;;;7263                   ,  _setup.CC_current
;;;7264           #else
;;;7265           #ifdef ALL_AXES
;;;7266                   , 0
;;;7267           #endif
;;;7268           #endif
;;;7269                   );
;;;7270           else if (plane IS CANON_PLANE_YZ)
000028  f1ba0f02          CMP      r10,#2
00002c  d108              BNE      |L57.64|
;;;7271               STRAIGHT_TRAVERSE(end3, end1, end2
00002e  4622              MOV      r2,r4
000030  462b              MOV      r3,r5
000032  4640              MOV      r0,r8
000034  4649              MOV      r1,r9
000036  e9cd6700          STRD     r6,r7,[sp,#0]
00003a  f7fffffe          BL       STRAIGHT_TRAVERSE
00003e  e007              B        |L57.80|
                  |L57.64|
;;;7272               #ifdef AA
;;;7273                       ,             _setup.AA_current
;;;7274               #else
;;;7275               #ifdef ALL_AXES
;;;7276                       , 0
;;;7277               #endif
;;;7278               #endif
;;;7279               #ifdef BB
;;;7280                       ,  _setup.BB_current
;;;7281               #else
;;;7282               #ifdef ALL_AXES
;;;7283                       , 0
;;;7284               #endif
;;;7285               #endif
;;;7286               #ifdef CC
;;;7287                       ,  _setup.CC_current
;;;7288               #else
;;;7289               #ifdef ALL_AXES
;;;7290                       , 0
;;;7291               #endif
;;;7292               #endif
;;;7293                       );
;;;7294           else                                      /* if (plane IS CANON_PLANE_XZ) */
;;;7295               STRAIGHT_TRAVERSE(end2, end3, end1
000040  4642              MOV      r2,r8
000042  464b              MOV      r3,r9
000044  4630              MOV      r0,r6
000046  4639              MOV      r1,r7
000048  e9cd4500          STRD     r4,r5,[sp,#0]
00004c  f7fffffe          BL       STRAIGHT_TRAVERSE
                  |L57.80|
;;;7296           #ifdef AA
;;;7297                   ,             _setup.AA_current
;;;7298           #else
;;;7299           #ifdef ALL_AXES
;;;7300                   , 0
;;;7301           #endif
;;;7302           #endif
;;;7303           #ifdef BB
;;;7304                   ,  _setup.BB_current
;;;7305           #else
;;;7306           #ifdef ALL_AXES
;;;7307                   , 0
;;;7308           #endif
;;;7309           #endif
;;;7310           #ifdef CC
;;;7311                   ,  _setup.CC_current
;;;7312           #else
;;;7313           #ifdef ALL_AXES
;;;7314                   , 0
;;;7315           #endif
;;;7316           #endif
;;;7317                   );
;;;7318           return RS274NGC_OK;
000050  2000              MOVS     r0,#0
;;;7319       }
000052  e8bd87fc          POP      {r2-r10,pc}
;;;7320   
                          ENDP


                          AREA ||i.enhance_block||, CODE, READONLY, ALIGN=2

                  enhance_block PROC
;;;7356   
;;;7357       static int enhance_block(                     /* ARGUMENTS                         */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7358       block_pointer block,                          /* pointer to a block to be checked  */
;;;7359       setup_pointer settings)                       /* pointer to machine settings       */
;;;7360       {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;7361           static char name[] SET_TO "enhance_block";
;;;7362           int axis_flag;
;;;7363           int mode_zero_covets_axes;
;;;7364   
;;;7365           axis_flag SET_TO ((block->x_flag IS ON) OR
000008  f8d401dc          LDR      r0,[r4,#0x1dc]
00000c  2801              CMP      r0,#1
00000e  d007              BEQ      |L58.32|
;;;7366               (block->y_flag IS ON) OR
000010  f8d401e8          LDR      r0,[r4,#0x1e8]
000014  2801              CMP      r0,#1
000016  d003              BEQ      |L58.32|
;;;7367       #ifdef AA
;;;7368               (block->a_flag IS ON) OR              /*AA*/
;;;7369       #endif
;;;7370       #ifdef BB
;;;7371               (block->b_flag IS ON) OR              /*BB*/
;;;7372       #endif
;;;7373       #ifdef CC
;;;7374               (block->c_flag IS ON) OR              /*CC*/
;;;7375       #endif
;;;7376               (block->z_flag IS ON));
000018  f8d401f8          LDR      r0,[r4,#0x1f8]
00001c  2801              CMP      r0,#1
00001e  d102              BNE      |L58.38|
                  |L58.32|
000020  f04f0001          MOV      r0,#1
000024  e001              B        |L58.42|
                  |L58.38|
000026  f04f0000          MOV      r0,#0
                  |L58.42|
00002a  4605              MOV      r5,r0
;;;7377           mode_zero_covets_axes SET_TO ((block->g_modes[0] IS G_10) OR
00002c  f8d40110          LDR      r0,[r4,#0x110]
000030  2864              CMP      r0,#0x64
000032  d00e              BEQ      |L58.82|
;;;7378               (block->g_modes[0] IS G_28) OR
000034  f8d40110          LDR      r0,[r4,#0x110]
000038  f5b07f8c          CMP      r0,#0x118
00003c  d009              BEQ      |L58.82|
;;;7379               (block->g_modes[0] IS G_30) OR
00003e  f8d40110          LDR      r0,[r4,#0x110]
000042  f5b07f96          CMP      r0,#0x12c
000046  d004              BEQ      |L58.82|
;;;7380               (block->g_modes[0] IS G_92));
000048  f8d40110          LDR      r0,[r4,#0x110]
00004c  f5b07f66          CMP      r0,#0x398
000050  d102              BNE      |L58.88|
                  |L58.82|
000052  f04f0001          MOV      r0,#1
000056  e001              B        |L58.92|
                  |L58.88|
000058  f04f0000          MOV      r0,#0
                  |L58.92|
00005c  4607              MOV      r7,r0
;;;7381   
;;;7382           if (block->g_modes[1] ISNT -1)
00005e  f44f708a          MOV      r0,#0x114
000062  5900              LDR      r0,[r0,r4]
000064  1c40              ADDS     r0,r0,#1
000066  d07e              BEQ      |L58.358|
;;;7383           {
;;;7384               if (block->g_modes[1] IS G_80)
000068  f44f708a          MOV      r0,#0x114
00006c  5900              LDR      r0,[r0,r4]
00006e  f5b07f48          CMP      r0,#0x320
000072  d154              BNE      |L58.286|
;;;7385               {
;;;7386                   CHK((axis_flag AND (NOT mode_zero_covets_axes)),
000074  b345              CBZ      r5,|L58.200|
000076  bb3f              CBNZ     r7,|L58.200|
000078  f04f0100          MOV      r1,#0
00007c  4884              LDR      r0,|L58.656|
00007e  f8c0114c          STR      r1,[r0,#0x14c]
000082  4601              MOV      r1,r0
000084  f8d1314c          LDR      r3,[r1,#0x14c]
000088  f8d1114c          LDR      r1,[r1,#0x14c]
00008c  f1010101          ADD      r1,r1,#1
000090  4602              MOV      r2,r0
000092  f8c2114c          STR      r1,[r2,#0x14c]
000096  eb030183          ADD      r1,r3,r3,LSL #2
00009a  f6a06254          SUB      r2,r0,#0xe54
00009e  eb021101          ADD      r1,r2,r1,LSL #4
0000a2  4608              MOV      r0,r1
0000a4  497b              LDR      r1,|L58.660|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0
0000ae  4878              LDR      r0,|L58.656|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]
0000b4  eb000080          ADD      r0,r0,r0,LSL #2
0000b8  4a77              LDR      r2,|L58.664|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4
0000be  7001              STRB     r1,[r0,#0]
0000c0  f04f0038          MOV      r0,#0x38
                  |L58.196|
;;;7387                       NCE_CANNOT_USE_AXIS_VALUES_WITH_G80);
;;;7388                   CHK(((NOT axis_flag) AND (block->g_modes[0] IS G_92)),
;;;7389                       NCE_ALL_AXES_MISSING_WITH_G92);
;;;7390               }
;;;7391               else
;;;7392               {
;;;7393                   CHK(mode_zero_covets_axes,
;;;7394                       NCE_CANNOT_USE_TWO_G_CODES_THAT_BOTH_USE_AXIS_VALUES);
;;;7395                   CHK((NOT axis_flag), NCE_ALL_AXES_MISSING_WITH_MOTION_CODE);
;;;7396               }
;;;7397               block->motion_to_be SET_TO block->g_modes[1];
;;;7398           }
;;;7399           else if (mode_zero_covets_axes)
;;;7400           {                                         /* other 3 can get by without axes but not G92 */
;;;7401               CHK(((NOT axis_flag) AND (block->g_modes[0] IS G_92)),
;;;7402                   NCE_ALL_AXES_MISSING_WITH_G92);
;;;7403           }
;;;7404           else if (axis_flag)
;;;7405           {
;;;7406               CHK(((settings->motion_mode IS -1) OR (settings->motion_mode IS G_80)),
;;;7407                   NCE_CANNOT_USE_AXIS_VALUES_WITHOUT_A_G_CODE_THAT_USES_THEM);
;;;7408               block->motion_to_be SET_TO settings->motion_mode;
;;;7409           }
;;;7410           return RS274NGC_OK;
;;;7411       }
0000c4  e8bd81f0          POP      {r4-r8,pc}
                  |L58.200|
0000c8  2d00              CMP      r5,#0                 ;7388
0000ca  d179              BNE      |L58.448|
0000cc  f8d40110          LDR      r0,[r4,#0x110]        ;7388
0000d0  f5b07f66          CMP      r0,#0x398             ;7388
0000d4  d174              BNE      |L58.448|
0000d6  4629              MOV      r1,r5                 ;7388
0000d8  486d              LDR      r0,|L58.656|
0000da  f8c0114c          STR      r1,[r0,#0x14c]        ;7388
0000de  4601              MOV      r1,r0                 ;7388
0000e0  f8d1314c          LDR      r3,[r1,#0x14c]        ;7388
0000e4  f8d1114c          LDR      r1,[r1,#0x14c]        ;7388
0000e8  f1010101          ADD      r1,r1,#1              ;7388
0000ec  4602              MOV      r2,r0                 ;7388
0000ee  f8c2114c          STR      r1,[r2,#0x14c]        ;7388
0000f2  eb030183          ADD      r1,r3,r3,LSL #2       ;7388
0000f6  4a68              LDR      r2,|L58.664|
0000f8  eb021101          ADD      r1,r2,r1,LSL #4       ;7388
0000fc  4608              MOV      r0,r1                 ;7388
0000fe  4965              LDR      r1,|L58.660|
000100  f7fffffe          BL       strcpy
000104  4629              MOV      r1,r5                 ;7388
000106  4862              LDR      r0,|L58.656|
000108  f8d0014c          LDR      r0,[r0,#0x14c]        ;7388
00010c  eb000080          ADD      r0,r0,r0,LSL #2       ;7388
000110  4a61              LDR      r2,|L58.664|
000112  eb021000          ADD      r0,r2,r0,LSL #4       ;7388
000116  7001              STRB     r1,[r0,#0]            ;7388
000118  f04f0005          MOV      r0,#5                 ;7388
00011c  e7d2              B        |L58.196|
                  |L58.286|
00011e  b33f              CBZ      r7,|L58.368|
000120  f04f0100          MOV      r1,#0                 ;7393
000124  485a              LDR      r0,|L58.656|
000126  f8c0114c          STR      r1,[r0,#0x14c]        ;7393
00012a  4601              MOV      r1,r0                 ;7393
00012c  f8d1314c          LDR      r3,[r1,#0x14c]        ;7393
000130  f8d1114c          LDR      r1,[r1,#0x14c]        ;7393
000134  f1010101          ADD      r1,r1,#1              ;7393
000138  4602              MOV      r2,r0                 ;7393
00013a  f8c2114c          STR      r1,[r2,#0x14c]        ;7393
00013e  eb030183          ADD      r1,r3,r3,LSL #2       ;7393
000142  4a55              LDR      r2,|L58.664|
000144  eb021101          ADD      r1,r2,r1,LSL #4       ;7393
000148  4608              MOV      r0,r1                 ;7393
00014a  4952              LDR      r1,|L58.660|
00014c  f7fffffe          BL       strcpy
000150  f04f0100          MOV      r1,#0                 ;7393
000154  484e              LDR      r0,|L58.656|
000156  f8d0014c          LDR      r0,[r0,#0x14c]        ;7393
00015a  eb000080          ADD      r0,r0,r0,LSL #2       ;7393
00015e  4a4e              LDR      r2,|L58.664|
000160  eb021000          ADD      r0,r2,r0,LSL #4       ;7393
000164  e000              B        |L58.360|
                  |L58.358|
000166  e031              B        |L58.460|
                  |L58.360|
000168  7001              STRB     r1,[r0,#0]            ;7393
00016a  f04f003f          MOV      r0,#0x3f              ;7393
00016e  e7a9              B        |L58.196|
                  |L58.368|
000170  bb2d              CBNZ     r5,|L58.446|
000172  f04f0100          MOV      r1,#0                 ;7395
000176  4846              LDR      r0,|L58.656|
000178  f8c0114c          STR      r1,[r0,#0x14c]        ;7395
00017c  4601              MOV      r1,r0                 ;7395
00017e  f8d1314c          LDR      r3,[r1,#0x14c]        ;7395
000182  f8d1114c          LDR      r1,[r1,#0x14c]        ;7395
000186  f1010101          ADD      r1,r1,#1              ;7395
00018a  4602              MOV      r2,r0                 ;7395
00018c  f8c2114c          STR      r1,[r2,#0x14c]        ;7395
000190  eb030183          ADD      r1,r3,r3,LSL #2       ;7395
000194  4a40              LDR      r2,|L58.664|
000196  eb021101          ADD      r1,r2,r1,LSL #4       ;7395
00019a  4608              MOV      r0,r1                 ;7395
00019c  493d              LDR      r1,|L58.660|
00019e  f7fffffe          BL       strcpy
0001a2  f04f0100          MOV      r1,#0                 ;7395
0001a6  483a              LDR      r0,|L58.656|
0001a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;7395
0001ac  eb000080          ADD      r0,r0,r0,LSL #2       ;7395
0001b0  4a39              LDR      r2,|L58.664|
0001b2  eb021000          ADD      r0,r2,r0,LSL #4       ;7395
0001b6  7001              STRB     r1,[r0,#0]            ;7395
0001b8  f04f0006          MOV      r0,#6                 ;7395
0001bc  e782              B        |L58.196|
                  |L58.446|
0001be  e7ff              B        |L58.448|
                  |L58.448|
0001c0  f44f708a          MOV      r0,#0x114             ;7397
0001c4  5900              LDR      r0,[r0,r4]            ;7397
0001c6  f8c40180          STR      r0,[r4,#0x180]        ;7397
0001ca  e05f              B        |L58.652|
                  |L58.460|
0001cc  b357              CBZ      r7,|L58.548|
0001ce  2d00              CMP      r5,#0                 ;7401
0001d0  d15c              BNE      |L58.652|
0001d2  f8d40110          LDR      r0,[r4,#0x110]        ;7401
0001d6  f5b07f66          CMP      r0,#0x398             ;7401
0001da  d157              BNE      |L58.652|
0001dc  4629              MOV      r1,r5                 ;7401
0001de  482c              LDR      r0,|L58.656|
0001e0  f8c0114c          STR      r1,[r0,#0x14c]        ;7401
0001e4  4601              MOV      r1,r0                 ;7401
0001e6  f8d1314c          LDR      r3,[r1,#0x14c]        ;7401
0001ea  f8d1114c          LDR      r1,[r1,#0x14c]        ;7401
0001ee  f1010101          ADD      r1,r1,#1              ;7401
0001f2  4602              MOV      r2,r0                 ;7401
0001f4  f8c2114c          STR      r1,[r2,#0x14c]        ;7401
0001f8  eb030183          ADD      r1,r3,r3,LSL #2       ;7401
0001fc  4a26              LDR      r2,|L58.664|
0001fe  eb021101          ADD      r1,r2,r1,LSL #4       ;7401
000202  4608              MOV      r0,r1                 ;7401
000204  4923              LDR      r1,|L58.660|
000206  f7fffffe          BL       strcpy
00020a  4629              MOV      r1,r5                 ;7401
00020c  4820              LDR      r0,|L58.656|
00020e  f8d0014c          LDR      r0,[r0,#0x14c]        ;7401
000212  eb000080          ADD      r0,r0,r0,LSL #2       ;7401
000216  4a20              LDR      r2,|L58.664|
000218  eb021000          ADD      r0,r2,r0,LSL #4       ;7401
00021c  7001              STRB     r1,[r0,#0]            ;7401
00021e  f04f0005          MOV      r0,#5                 ;7401
000222  e74f              B        |L58.196|
                  |L58.548|
000224  b395              CBZ      r5,|L58.652|
000226  f8d60628          LDR      r0,[r6,#0x628]        ;7406
00022a  1c40              ADDS     r0,r0,#1              ;7406
00022c  d004              BEQ      |L58.568|
00022e  f8d60628          LDR      r0,[r6,#0x628]        ;7406
000232  f5b07f48          CMP      r0,#0x320             ;7406
000236  d125              BNE      |L58.644|
                  |L58.568|
000238  f04f0100          MOV      r1,#0                 ;7406
00023c  4814              LDR      r0,|L58.656|
00023e  f8c0114c          STR      r1,[r0,#0x14c]        ;7406
000242  4601              MOV      r1,r0                 ;7406
000244  f8d1314c          LDR      r3,[r1,#0x14c]        ;7406
000248  f8d1114c          LDR      r1,[r1,#0x14c]        ;7406
00024c  f1010101          ADD      r1,r1,#1              ;7406
000250  4602              MOV      r2,r0                 ;7406
000252  f8c2114c          STR      r1,[r2,#0x14c]        ;7406
000256  eb030183          ADD      r1,r3,r3,LSL #2       ;7406
00025a  4a0f              LDR      r2,|L58.664|
00025c  eb021101          ADD      r1,r2,r1,LSL #4       ;7406
000260  4608              MOV      r0,r1                 ;7406
000262  490c              LDR      r1,|L58.660|
000264  f7fffffe          BL       strcpy
000268  f04f0100          MOV      r1,#0                 ;7406
00026c  4808              LDR      r0,|L58.656|
00026e  f8d0014c          LDR      r0,[r0,#0x14c]        ;7406
000272  eb000080          ADD      r0,r0,r0,LSL #2       ;7406
000276  4a08              LDR      r2,|L58.664|
000278  eb021000          ADD      r0,r2,r0,LSL #4       ;7406
00027c  7001              STRB     r1,[r0,#0]            ;7406
00027e  f04f0039          MOV      r0,#0x39              ;7406
000282  e71f              B        |L58.196|
                  |L58.644|
000284  f8d60628          LDR      r0,[r6,#0x628]        ;7408
000288  f8c40180          STR      r0,[r4,#0x180]        ;7408
                  |L58.652|
00028c  2000              MOVS     r0,#0                 ;7410
00028e  e719              B        |L58.196|
;;;7412   
                          ENDP

                  |L58.656|
                          DCD      _setup+0xc000
                  |L58.660|
                          DCD      |symbol_number.492|
                  |L58.664|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_binary||, CODE, READONLY, ALIGN=2

                  execute_binary PROC
;;;7430   
;;;7431       static int execute_binary(
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7432       double * left,
;;;7433       int operation,
;;;7434       double * right)
;;;7435       {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;7436           static char name[] SET_TO "execute_binary";
;;;7437           int status;
;;;7438   
;;;7439           if (operation < AND2)
00000a  2d05              CMP      r5,#5
00000c  da2e              BGE      |L59.108|
;;;7440               CHP(execute_binary1(left, operation, right));
00000e  463a              MOV      r2,r7
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       execute_binary1
000018  0004              MOVS     r4,r0
00001a  d054              BEQ      |L59.198|
00001c  482b              LDR      r0,|L59.204|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da20              BGE      |L59.104|
000026  4929              LDR      r1,|L59.204|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a26              LDR      r2,|L59.204|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4922              LDR      r1,|L59.208|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  481e              LDR      r0,|L59.204|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a1e              LDR      r2,|L59.212|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  4620              MOV      r0,r4
                  |L59.100|
;;;7441           else
;;;7442               CHP(execute_binary2(left, operation, right));
;;;7443           return RS274NGC_OK;
;;;7444       }
000064  e8bd81f0          POP      {r4-r8,pc}
                  |L59.104|
000068  4620              MOV      r0,r4                 ;7440
00006a  e7fb              B        |L59.100|
                  |L59.108|
00006c  463a              MOV      r2,r7                 ;7442
00006e  4629              MOV      r1,r5                 ;7442
000070  4630              MOV      r0,r6                 ;7442
000072  f7fffffe          BL       execute_binary2
000076  0004              MOVS     r4,r0                 ;7442
000078  d025              BEQ      |L59.198|
00007a  4814              LDR      r0,|L59.204|
00007c  f8d0014c          LDR      r0,[r0,#0x14c]        ;7442
000080  2831              CMP      r0,#0x31              ;7442
000082  da1e              BGE      |L59.194|
000084  4911              LDR      r1,|L59.204|
000086  f8d1314c          LDR      r3,[r1,#0x14c]        ;7442
00008a  f8d1114c          LDR      r1,[r1,#0x14c]        ;7442
00008e  1c49              ADDS     r1,r1,#1              ;7442
000090  4a0e              LDR      r2,|L59.204|
000092  f8c2114c          STR      r1,[r2,#0x14c]        ;7442
000096  eb030183          ADD      r1,r3,r3,LSL #2       ;7442
00009a  4a0e              LDR      r2,|L59.212|
00009c  eb021101          ADD      r1,r2,r1,LSL #4       ;7442
0000a0  4608              MOV      r0,r1                 ;7442
0000a2  490b              LDR      r1,|L59.208|
0000a4  f7fffffe          BL       strcpy
0000a8  f04f0100          MOV      r1,#0                 ;7442
0000ac  4807              LDR      r0,|L59.204|
0000ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;7442
0000b2  eb000080          ADD      r0,r0,r0,LSL #2       ;7442
0000b6  4a07              LDR      r2,|L59.212|
0000b8  eb021000          ADD      r0,r2,r0,LSL #4       ;7442
0000bc  7001              STRB     r1,[r0,#0]            ;7442
0000be  4620              MOV      r0,r4                 ;7442
0000c0  e7d0              B        |L59.100|
                  |L59.194|
0000c2  4620              MOV      r0,r4                 ;7442
0000c4  e7ce              B        |L59.100|
                  |L59.198|
0000c6  2000              MOVS     r0,#0                 ;7443
0000c8  e7cc              B        |L59.100|
;;;7445   
                          ENDP

0000ca  0000              DCW      0x0000
                  |L59.204|
                          DCD      _setup+0xc000
                  |L59.208|
                          DCD      |symbol_number.493|
                  |L59.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_binary1||, CODE, READONLY, ALIGN=2

                  execute_binary1 PROC
;;;7466   
;;;7467       static int execute_binary1(                   /* ARGUMENTS                       */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;7468       double * left,                                /* pointer to the left operand     */
;;;7469       int operation,                                /* integer code for the operation  */
;;;7470       double * right)                               /* pointer to the right operand    */
;;;7471       {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
;;;7472           static char name[] SET_TO "execute_binary1";
;;;7473           switch (operation)
00000a  f1b80f01          CMP      r8,#1
00000e  d009              BEQ      |L60.36|
000010  f1b80f02          CMP      r8,#2
000014  d047              BEQ      |L60.166|
000016  f1b80f03          CMP      r8,#3
00001a  d06b              BEQ      |L60.244|
00001c  f1b80f04          CMP      r8,#4
000020  d17e              BNE      |L60.288|
000022  e0b9              B        |L60.408|
                  |L60.36|
;;;7474           {
;;;7475               case DIVIDED_BY:
;;;7476                   CHK((*right IS 0.0), NCE_ATTEMPT_TO_DIVIDE_BY_ZERO);
000024  e9d50100          LDRD     r0,r1,[r5,#0]
000028  4606              MOV      r6,r0
00002a  2200              MOVS     r2,#0
00002c  4613              MOV      r3,r2
00002e  f7fffffe          BL       __aeabi_cdcmpeq
000032  d127              BNE      |L60.132|
000034  f04f0100          MOV      r1,#0
000038  4874              LDR      r0,|L60.524|
00003a  f8c0114c          STR      r1,[r0,#0x14c]
00003e  4601              MOV      r1,r0
000040  f8d1314c          LDR      r3,[r1,#0x14c]
000044  f8d1114c          LDR      r1,[r1,#0x14c]
000048  f1010101          ADD      r1,r1,#1
00004c  4602              MOV      r2,r0
00004e  f8c2114c          STR      r1,[r2,#0x14c]
000052  eb030183          ADD      r1,r3,r3,LSL #2
000056  f6a06254          SUB      r2,r0,#0xe54
00005a  eb021101          ADD      r1,r2,r1,LSL #4
00005e  4608              MOV      r0,r1
000060  496b              LDR      r1,|L60.528|
000062  f7fffffe          BL       strcpy
000066  f04f0100          MOV      r1,#0
00006a  4868              LDR      r0,|L60.524|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]
000070  eb000080          ADD      r0,r0,r0,LSL #2
000074  4a67              LDR      r2,|L60.532|
000076  eb021000          ADD      r0,r2,r0,LSL #4
00007a  7001              STRB     r1,[r0,#0]
00007c  f04f000a          MOV      r0,#0xa
                  |L60.128|
;;;7477                   *left SET_TO (*left / *right);
;;;7478                   break;
;;;7479               case MODULO:                          /* always calculates a positive answer */
;;;7480                   *left SET_TO fmod(*left, *right);
;;;7481                   if (*left < 0.0)
;;;7482                   {
;;;7483                       *left SET_TO (*left + fabs(*right));
;;;7484                   }
;;;7485                   break;
;;;7486               case POWER:
;;;7487                   CHK(((*left < 0.0) AND (floor(*right) ISNT *right)),
;;;7488                       NCE_ATTEMPT_TO_RAISE_NEGATIVE_TO_NON_INTEGER_POWER);
;;;7489                   *left SET_TO pow(*left, *right);
;;;7490                   break;
;;;7491               case TIMES:
;;;7492                   *left SET_TO (*left * *right);
;;;7493                   break;
;;;7494               default:
;;;7495                   ERM(NCE_BUG_UNKNOWN_OPERATION);
;;;7496           }
;;;7497           return RS274NGC_OK;
;;;7498       }
000080  e8bd87f0          POP      {r4-r10,pc}
                  |L60.132|
000084  e9d51000          LDRD     r1,r0,[r5,#0]         ;7477
000088  460e              MOV      r6,r1                 ;7477
00008a  4607              MOV      r7,r0                 ;7477
00008c  e9d41000          LDRD     r1,r0,[r4,#0]         ;7477
000090  4689              MOV      r9,r1                 ;7477
000092  4682              MOV      r10,r0                ;7477
000094  4632              MOV      r2,r6                 ;7477
000096  463b              MOV      r3,r7                 ;7477
000098  4648              MOV      r0,r9                 ;7477
00009a  4651              MOV      r1,r10                ;7477
00009c  f7fffffe          BL       __aeabi_ddiv
0000a0  e9c40100          STRD     r0,r1,[r4,#0]         ;7477
0000a4  e0af              B        |L60.518|
                  |L60.166|
0000a6  e9d51000          LDRD     r1,r0,[r5,#0]         ;7480
0000aa  460e              MOV      r6,r1                 ;7480
0000ac  4607              MOV      r7,r0                 ;7480
0000ae  e9d40100          LDRD     r0,r1,[r4,#0]         ;7480
0000b2  4681              MOV      r9,r0                 ;7480
0000b4  4632              MOV      r2,r6                 ;7480
0000b6  463b              MOV      r3,r7                 ;7480
0000b8  f7fffffe          BL       fmod
0000bc  e9c40100          STRD     r0,r1,[r4,#0]         ;7480
0000c0  e9d40100          LDRD     r0,r1,[r4,#0]         ;7481
0000c4  4606              MOV      r6,r0                 ;7481
0000c6  2200              MOVS     r2,#0                 ;7481
0000c8  4613              MOV      r3,r2                 ;7481
0000ca  f7fffffe          BL       __aeabi_cdcmple
0000ce  d210              BCS      |L60.242|
0000d0  e9d50100          LDRD     r0,r1,[r5,#0]         ;7483
0000d4  f0214100          BIC      r1,r1,#0x80000000     ;7483
0000d8  4681              MOV      r9,r0                 ;7483
0000da  468a              MOV      r10,r1                ;7483
0000dc  e9d41000          LDRD     r1,r0,[r4,#0]         ;7483
0000e0  460e              MOV      r6,r1                 ;7483
0000e2  4632              MOV      r2,r6                 ;7483
0000e4  4603              MOV      r3,r0                 ;7483
0000e6  4648              MOV      r0,r9                 ;7483
0000e8  4651              MOV      r1,r10                ;7483
0000ea  f7fffffe          BL       __aeabi_dadd
0000ee  e9c40100          STRD     r0,r1,[r4,#0]         ;7483
                  |L60.242|
0000f2  e088              B        |L60.518|
                  |L60.244|
0000f4  e9d41000          LDRD     r1,r0,[r4,#0]         ;7487
0000f8  460e              MOV      r6,r1                 ;7487
0000fa  4607              MOV      r7,r0                 ;7487
0000fc  2200              MOVS     r2,#0                 ;7487
0000fe  4613              MOV      r3,r2                 ;7487
000100  4630              MOV      r0,r6                 ;7487
000102  4639              MOV      r1,r7                 ;7487
000104  f7fffffe          BL       __aeabi_cdcmple
000108  d238              BCS      |L60.380|
00010a  e9d50100          LDRD     r0,r1,[r5,#0]         ;7487
00010e  4602              MOV      r2,r0                 ;7487
000110  f7fffffe          BL       floor
000114  4681              MOV      r9,r0                 ;7487
000116  468a              MOV      r10,r1                ;7487
000118  e9d50100          LDRD     r0,r1,[r5,#0]         ;7487
00011c  4606              MOV      r6,r0                 ;7487
00011e  e000              B        |L60.290|
                  |L60.288|
000120  e04b              B        |L60.442|
                  |L60.290|
000122  4632              MOV      r2,r6                 ;7487
000124  460b              MOV      r3,r1                 ;7487
000126  4648              MOV      r0,r9                 ;7487
000128  4651              MOV      r1,r10                ;7487
00012a  f7fffffe          BL       __aeabi_cdcmpeq
00012e  d025              BEQ      |L60.380|
000130  f04f0100          MOV      r1,#0                 ;7487
000134  4835              LDR      r0,|L60.524|
000136  f8c0114c          STR      r1,[r0,#0x14c]        ;7487
00013a  4601              MOV      r1,r0                 ;7487
00013c  f8d1314c          LDR      r3,[r1,#0x14c]        ;7487
000140  f8d1114c          LDR      r1,[r1,#0x14c]        ;7487
000144  f1010101          ADD      r1,r1,#1              ;7487
000148  4602              MOV      r2,r0                 ;7487
00014a  f8c2114c          STR      r1,[r2,#0x14c]        ;7487
00014e  eb030183          ADD      r1,r3,r3,LSL #2       ;7487
000152  4a30              LDR      r2,|L60.532|
000154  eb021101          ADD      r1,r2,r1,LSL #4       ;7487
000158  4608              MOV      r0,r1                 ;7487
00015a  492d              LDR      r1,|L60.528|
00015c  f7fffffe          BL       strcpy
000160  f04f0100          MOV      r1,#0                 ;7487
000164  4829              LDR      r0,|L60.524|
000166  f8d0014c          LDR      r0,[r0,#0x14c]        ;7487
00016a  eb000080          ADD      r0,r0,r0,LSL #2       ;7487
00016e  4a29              LDR      r2,|L60.532|
000170  eb021000          ADD      r0,r2,r0,LSL #4       ;7487
000174  7001              STRB     r1,[r0,#0]            ;7487
000176  f04f000b          MOV      r0,#0xb               ;7487
00017a  e781              B        |L60.128|
                  |L60.380|
00017c  e9d50100          LDRD     r0,r1,[r5,#0]         ;7489
000180  4606              MOV      r6,r0                 ;7489
000182  460f              MOV      r7,r1                 ;7489
000184  e9d40100          LDRD     r0,r1,[r4,#0]         ;7489
000188  4681              MOV      r9,r0                 ;7489
00018a  4632              MOV      r2,r6                 ;7489
00018c  463b              MOV      r3,r7                 ;7489
00018e  f7fffffe          BL       pow
000192  e9c40100          STRD     r0,r1,[r4,#0]         ;7489
000196  e036              B        |L60.518|
                  |L60.408|
000198  e9d51000          LDRD     r1,r0,[r5,#0]         ;7492
00019c  460e              MOV      r6,r1                 ;7492
00019e  4607              MOV      r7,r0                 ;7492
0001a0  e9d41000          LDRD     r1,r0,[r4,#0]         ;7492
0001a4  4689              MOV      r9,r1                 ;7492
0001a6  4682              MOV      r10,r0                ;7492
0001a8  4632              MOV      r2,r6                 ;7492
0001aa  463b              MOV      r3,r7                 ;7492
0001ac  4648              MOV      r0,r9                 ;7492
0001ae  4651              MOV      r1,r10                ;7492
0001b0  f7fffffe          BL       __aeabi_dmul
0001b4  e9c40100          STRD     r0,r1,[r4,#0]         ;7492
0001b8  e025              B        |L60.518|
                  |L60.442|
0001ba  f04f0100          MOV      r1,#0                 ;7495
0001be  4813              LDR      r0,|L60.524|
0001c0  f8c0114c          STR      r1,[r0,#0x14c]        ;7495
0001c4  4601              MOV      r1,r0                 ;7495
0001c6  f8d1314c          LDR      r3,[r1,#0x14c]        ;7495
0001ca  f8d1114c          LDR      r1,[r1,#0x14c]        ;7495
0001ce  f1010101          ADD      r1,r1,#1              ;7495
0001d2  4602              MOV      r2,r0                 ;7495
0001d4  f8c2114c          STR      r1,[r2,#0x14c]        ;7495
0001d8  eb030183          ADD      r1,r3,r3,LSL #2       ;7495
0001dc  4a0d              LDR      r2,|L60.532|
0001de  eb021101          ADD      r1,r2,r1,LSL #4       ;7495
0001e2  4608              MOV      r0,r1                 ;7495
0001e4  490a              LDR      r1,|L60.528|
0001e6  f7fffffe          BL       strcpy
0001ea  f04f0100          MOV      r1,#0                 ;7495
0001ee  4807              LDR      r0,|L60.524|
0001f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;7495
0001f4  eb000080          ADD      r0,r0,r0,LSL #2       ;7495
0001f8  4a06              LDR      r2,|L60.532|
0001fa  eb021000          ADD      r0,r2,r0,LSL #4       ;7495
0001fe  7001              STRB     r1,[r0,#0]            ;7495
000200  f04f0025          MOV      r0,#0x25              ;7495
000204  e73c              B        |L60.128|
                  |L60.518|
000206  bf00              NOP                            ;7478
000208  2000              MOVS     r0,#0                 ;7497
00020a  e739              B        |L60.128|
;;;7499   
                          ENDP

                  |L60.524|
                          DCD      _setup+0xc000
                  |L60.528|
                          DCD      |symbol_number.494|
                  |L60.532|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_binary2||, CODE, READONLY, ALIGN=2

                  execute_binary2 PROC
;;;7522   
;;;7523       static int execute_binary2(                   /* ARGUMENTS                       */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;7524       double * left,                                /* pointer to the left operand     */
;;;7525       int operation,                                /* integer code for the operation  */
;;;7526       double * right)                               /* pointer to the right operand    */
;;;7527       {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
;;;7528           static char name[] SET_TO "execute_binary2";
;;;7529           switch (operation)
00000a  f1a80005          SUB      r0,r8,#5
00000e  2805              CMP      r0,#5
000010  d27e              BCS      |L61.272|
000012  e8dff000          TBB      [pc,r0]
000016  0320              DCB      0x03,0x20
000018  56648600          DCB      0x56,0x64,0x86,0x00
;;;7530           {
;;;7531               case AND2:
;;;7532                   *left SET_TO ((*left IS 0.0) OR (*right IS 0.0)) ? 0.0 : 1.0;
00001c  e9d41000          LDRD     r1,r0,[r4,#0]
000020  460e              MOV      r6,r1
000022  4607              MOV      r7,r0
000024  2200              MOVS     r2,#0
000026  4613              MOV      r3,r2
000028  4630              MOV      r0,r6
00002a  4639              MOV      r1,r7
00002c  f7fffffe          BL       __aeabi_cdcmpeq
000030  d007              BEQ      |L61.66|
000032  e9d50100          LDRD     r0,r1,[r5,#0]
000036  4606              MOV      r6,r0
000038  2200              MOVS     r2,#0
00003a  4613              MOV      r3,r2
00003c  f7fffffe          BL       __aeabi_cdcmpeq
000040  d103              BNE      |L61.74|
                  |L61.66|
000042  f04f0000          MOV      r0,#0
000046  4601              MOV      r1,r0
000048  e002              B        |L61.80|
                  |L61.74|
00004a  f04f0000          MOV      r0,#0
00004e  4953              LDR      r1,|L61.412|
                  |L61.80|
000050  e9c40100          STRD     r0,r1,[r4,#0]
;;;7533                   break;
000054  e09e              B        |L61.404|
;;;7534               case EXCLUSIVE_OR:
;;;7535                   *left SET_TO (((*left IS 0.0) AND (*right ISNT 0.0)) OR
000056  e9d41000          LDRD     r1,r0,[r4,#0]
00005a  460e              MOV      r6,r1
00005c  4607              MOV      r7,r0
00005e  2200              MOVS     r2,#0
000060  4613              MOV      r3,r2
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  f7fffffe          BL       __aeabi_cdcmpeq
00006a  d10a              BNE      |L61.130|
00006c  e9d51000          LDRD     r1,r0,[r5,#0]
000070  460e              MOV      r6,r1
000072  4607              MOV      r7,r0
000074  2200              MOVS     r2,#0
000076  4613              MOV      r3,r2
000078  4630              MOV      r0,r6
00007a  4639              MOV      r1,r7
00007c  f7fffffe          BL       __aeabi_cdcmpeq
000080  d115              BNE      |L61.174|
                  |L61.130|
;;;7536                       ((*left ISNT 0.0) AND (*right IS 0.0))) ? 1.0 : 0.0;
000082  e9d41000          LDRD     r1,r0,[r4,#0]
000086  460e              MOV      r6,r1
000088  4607              MOV      r7,r0
00008a  2200              MOVS     r2,#0
00008c  4613              MOV      r3,r2
00008e  4630              MOV      r0,r6
000090  4639              MOV      r1,r7
000092  f7fffffe          BL       __aeabi_cdcmpeq
000096  d00e              BEQ      |L61.182|
000098  e9d51000          LDRD     r1,r0,[r5,#0]
00009c  460e              MOV      r6,r1
00009e  4607              MOV      r7,r0
0000a0  2200              MOVS     r2,#0
0000a2  4613              MOV      r3,r2
0000a4  4630              MOV      r0,r6
0000a6  4639              MOV      r1,r7
0000a8  f7fffffe          BL       __aeabi_cdcmpeq
0000ac  d103              BNE      |L61.182|
                  |L61.174|
0000ae  f04f0000          MOV      r0,#0
0000b2  493a              LDR      r1,|L61.412|
0000b4  e002              B        |L61.188|
                  |L61.182|
0000b6  f04f0000          MOV      r0,#0
0000ba  4601              MOV      r1,r0
                  |L61.188|
0000bc  e9c40100          STRD     r0,r1,[r4,#0]
;;;7537                   break;
0000c0  e068              B        |L61.404|
;;;7538               case MINUS:
;;;7539                   *left SET_TO (*left - *right);
0000c2  e9d51000          LDRD     r1,r0,[r5,#0]
0000c6  460e              MOV      r6,r1
0000c8  4607              MOV      r7,r0
0000ca  e9d40100          LDRD     r0,r1,[r4,#0]
0000ce  4681              MOV      r9,r0
0000d0  4632              MOV      r2,r6
0000d2  463b              MOV      r3,r7
0000d4  f7fffffe          BL       __aeabi_dsub
0000d8  e9c40100          STRD     r0,r1,[r4,#0]
;;;7540                   break;
0000dc  e05a              B        |L61.404|
;;;7541               case NON_EXCLUSIVE_OR:
;;;7542                   *left SET_TO ((*left ISNT 0.0) OR (*right ISNT 0.0)) ? 1.0 : 0.0;
0000de  e9d41000          LDRD     r1,r0,[r4,#0]
0000e2  460e              MOV      r6,r1
0000e4  4607              MOV      r7,r0
0000e6  2200              MOVS     r2,#0
0000e8  4613              MOV      r3,r2
0000ea  4630              MOV      r0,r6
0000ec  4639              MOV      r1,r7
0000ee  f7fffffe          BL       __aeabi_cdcmpeq
0000f2  d10a              BNE      |L61.266|
0000f4  e9d51000          LDRD     r1,r0,[r5,#0]
0000f8  460e              MOV      r6,r1
0000fa  4607              MOV      r7,r0
0000fc  2200              MOVS     r2,#0
0000fe  4613              MOV      r3,r2
000100  4630              MOV      r0,r6
000102  4639              MOV      r1,r7
000104  f7fffffe          BL       __aeabi_cdcmpeq
000108  d005              BEQ      |L61.278|
                  |L61.266|
00010a  f04f0000          MOV      r0,#0
00010e  e000              B        |L61.274|
                  |L61.272|
000110  e018              B        |L61.324|
                  |L61.274|
000112  4922              LDR      r1,|L61.412|
000114  e002              B        |L61.284|
                  |L61.278|
000116  f04f0000          MOV      r0,#0
00011a  4601              MOV      r1,r0
                  |L61.284|
00011c  e9c40100          STRD     r0,r1,[r4,#0]
;;;7543                   break;
000120  e038              B        |L61.404|
;;;7544               case PLUS:
;;;7545                   *left SET_TO (*left + *right);
000122  e9d51000          LDRD     r1,r0,[r5,#0]
000126  460e              MOV      r6,r1
000128  4607              MOV      r7,r0
00012a  e9d41000          LDRD     r1,r0,[r4,#0]
00012e  4689              MOV      r9,r1
000130  4682              MOV      r10,r0
000132  4632              MOV      r2,r6
000134  463b              MOV      r3,r7
000136  4648              MOV      r0,r9
000138  4651              MOV      r1,r10
00013a  f7fffffe          BL       __aeabi_dadd
00013e  e9c40100          STRD     r0,r1,[r4,#0]
;;;7546                   break;
000142  e027              B        |L61.404|
                  |L61.324|
;;;7547               default:
;;;7548                   ERM(NCE_BUG_UNKNOWN_OPERATION);
000144  f04f0100          MOV      r1,#0
000148  4815              LDR      r0,|L61.416|
00014a  f8c0114c          STR      r1,[r0,#0x14c]
00014e  4601              MOV      r1,r0
000150  f8d1314c          LDR      r3,[r1,#0x14c]
000154  f8d1114c          LDR      r1,[r1,#0x14c]
000158  f1010101          ADD      r1,r1,#1
00015c  4602              MOV      r2,r0
00015e  f8c2114c          STR      r1,[r2,#0x14c]
000162  eb030183          ADD      r1,r3,r3,LSL #2
000166  f6a06254          SUB      r2,r0,#0xe54
00016a  eb021101          ADD      r1,r2,r1,LSL #4
00016e  4608              MOV      r0,r1
000170  490c              LDR      r1,|L61.420|
000172  f7fffffe          BL       strcpy
000176  f04f0100          MOV      r1,#0
00017a  4809              LDR      r0,|L61.416|
00017c  f8d0014c          LDR      r0,[r0,#0x14c]
000180  eb000080          ADD      r0,r0,r0,LSL #2
000184  4a08              LDR      r2,|L61.424|
000186  eb021000          ADD      r0,r2,r0,LSL #4
00018a  7001              STRB     r1,[r0,#0]
00018c  f04f0025          MOV      r0,#0x25
                  |L61.400|
;;;7549           }
;;;7550           return RS274NGC_OK;
;;;7551       }
000190  e8bd87f0          POP      {r4-r10,pc}
                  |L61.404|
000194  bf00              NOP                            ;7533
000196  2000              MOVS     r0,#0                 ;7550
000198  e7fa              B        |L61.400|
;;;7552   
                          ENDP

00019a  0000              DCW      0x0000
                  |L61.412|
                          DCD      0x3ff00000
                  |L61.416|
                          DCD      _setup+0xc000
                  |L61.420|
                          DCD      |symbol_number.495|
                  |L61.424|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_block||, CODE, READONLY, ALIGN=2

                  execute_block PROC
;;;7600   
;;;7601       static int execute_block(                     /* ARGUMENTS                                    */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7602       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;7603       setup_pointer settings)                       /* pointer to machine settings                  */
;;;7604       {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
;;;7605           static char name[] SET_TO "execute_block";
;;;7606           int status;
;;;7607   
;;;7608           if (block->comment[0] ISNT 0)
000008  7820              LDRB     r0,[r4,#0]
00000a  b360              CBZ      r0,|L62.102|
;;;7609           {
;;;7610               CHP(convert_comment(block->comment));
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       convert_comment
000012  0005              MOVS     r5,r0
000014  d027              BEQ      |L62.102|
000016  48ca              LDR      r0,|L62.832|
000018  f8d0014c          LDR      r0,[r0,#0x14c]
00001c  2831              CMP      r0,#0x31
00001e  da20              BGE      |L62.98|
000020  49c7              LDR      r1,|L62.832|
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  1c49              ADDS     r1,r1,#1
00002c  4ac4              LDR      r2,|L62.832|
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a26254          SUB      r2,r2,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  49c0              LDR      r1,|L62.836|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  48bd              LDR      r0,|L62.832|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4abc              LDR      r2,|L62.840|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  4628              MOV      r0,r5
                  |L62.94|
;;;7611           }
;;;7612           if (block->g_modes[5] ISNT -1)
;;;7613           {
;;;7614               CHP(convert_feed_mode(block->g_modes[5], settings));
;;;7615           }
;;;7616           if (block->f_number > -1.0)
;;;7617           {
;;;7618      /* handle elsewhere */
;;;7619               if (settings->feed_mode IS INVERSE_TIME);
;;;7620               else
;;;7621               {
;;;7622                   CHP(convert_feed_rate(block, settings));
;;;7623               }
;;;7624           }
;;;7625           if (block->s_number > -1.0)
;;;7626           {
;;;7627               CHP(convert_speed(block, settings));
;;;7628           }
;;;7629           if (block->t_number ISNT -1)
;;;7630           {
;;;7631               CHP(convert_tool_select(block, settings));
;;;7632           }
;;;7633           CHP(convert_m(block, settings));
;;;7634           CHP(convert_g(block, settings));
;;;7635           if (block->m_modes[4] ISNT -1)            /* converts m0, m1, m2, m30, or m60 */
;;;7636           {
;;;7637               status SET_TO convert_stop(block, settings);
;;;7638               if (status IS RS274NGC_EXIT)
;;;7639                   return RS274NGC_EXIT;
;;;7640               else if (status ISNT RS274NGC_OK)
;;;7641                   ERP(status);
;;;7642           }
;;;7643           return ((settings->probe_flag IS ON) ? RS274NGC_EXECUTE_FINISH: RS274NGC_OK);
;;;7644       }
00005e  e8bd81f0          POP      {r4-r8,pc}
                  |L62.98|
000062  4628              MOV      r0,r5                 ;7610
000064  e7fb              B        |L62.94|
                  |L62.102|
000066  f44f7092          MOV      r0,#0x124             ;7612
00006a  5900              LDR      r0,[r0,r4]            ;7612
00006c  1c40              ADDS     r0,r0,#1              ;7612
00006e  d02e              BEQ      |L62.206|
000070  f44f7192          MOV      r1,#0x124             ;7614
000074  5909              LDR      r1,[r1,r4]            ;7614
000076  4608              MOV      r0,r1                 ;7614
000078  4641              MOV      r1,r8                 ;7614
00007a  f7fffffe          BL       convert_feed_mode
00007e  0005              MOVS     r5,r0                 ;7614
000080  d025              BEQ      |L62.206|
000082  48af              LDR      r0,|L62.832|
000084  f8d0014c          LDR      r0,[r0,#0x14c]        ;7614
000088  2831              CMP      r0,#0x31              ;7614
00008a  da1e              BGE      |L62.202|
00008c  49ac              LDR      r1,|L62.832|
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;7614
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;7614
000096  1c49              ADDS     r1,r1,#1              ;7614
000098  4aa9              LDR      r2,|L62.832|
00009a  f8c2114c          STR      r1,[r2,#0x14c]        ;7614
00009e  eb030183          ADD      r1,r3,r3,LSL #2       ;7614
0000a2  4aa9              LDR      r2,|L62.840|
0000a4  eb021101          ADD      r1,r2,r1,LSL #4       ;7614
0000a8  4608              MOV      r0,r1                 ;7614
0000aa  49a6              LDR      r1,|L62.836|
0000ac  f7fffffe          BL       strcpy
0000b0  f04f0100          MOV      r1,#0                 ;7614
0000b4  48a2              LDR      r0,|L62.832|
0000b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;7614
0000ba  eb000080          ADD      r0,r0,r0,LSL #2       ;7614
0000be  4aa2              LDR      r2,|L62.840|
0000c0  eb021000          ADD      r0,r2,r0,LSL #4       ;7614
0000c4  7001              STRB     r1,[r0,#0]            ;7614
0000c6  4628              MOV      r0,r5                 ;7614
0000c8  e7c9              B        |L62.94|
                  |L62.202|
0000ca  4628              MOV      r0,r5                 ;7614
0000cc  e7c7              B        |L62.94|
                  |L62.206|
0000ce  f8d41108          LDR      r1,[r4,#0x108]        ;7616
0000d2  460e              MOV      r6,r1                 ;7616
0000d4  f8d4010c          LDR      r0,[r4,#0x10c]        ;7616
0000d8  4607              MOV      r7,r0                 ;7616
0000da  2200              MOVS     r2,#0                 ;7616
0000dc  4b9b              LDR      r3,|L62.844|
0000de  4630              MOV      r0,r6                 ;7616
0000e0  4639              MOV      r1,r7                 ;7616
0000e2  f7fffffe          BL       __aeabi_cdrcmple
0000e6  d22f              BCS      |L62.328|
0000e8  f8d803fc          LDR      r0,[r8,#0x3fc]        ;7619
0000ec  2801              CMP      r0,#1                 ;7619
0000ee  d02b              BEQ      |L62.328|
0000f0  4641              MOV      r1,r8                 ;7622
0000f2  4620              MOV      r0,r4                 ;7622
0000f4  f7fffffe          BL       convert_feed_rate
0000f8  0005              MOVS     r5,r0                 ;7622
0000fa  d025              BEQ      |L62.328|
0000fc  4890              LDR      r0,|L62.832|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;7622
000102  2831              CMP      r0,#0x31              ;7622
000104  da1e              BGE      |L62.324|
000106  498e              LDR      r1,|L62.832|
000108  f8d1314c          LDR      r3,[r1,#0x14c]        ;7622
00010c  f8d1114c          LDR      r1,[r1,#0x14c]        ;7622
000110  1c49              ADDS     r1,r1,#1              ;7622
000112  4a8b              LDR      r2,|L62.832|
000114  f8c2114c          STR      r1,[r2,#0x14c]        ;7622
000118  eb030183          ADD      r1,r3,r3,LSL #2       ;7622
00011c  4a8a              LDR      r2,|L62.840|
00011e  eb021101          ADD      r1,r2,r1,LSL #4       ;7622
000122  4608              MOV      r0,r1                 ;7622
000124  4987              LDR      r1,|L62.836|
000126  f7fffffe          BL       strcpy
00012a  f04f0100          MOV      r1,#0                 ;7622
00012e  4884              LDR      r0,|L62.832|
000130  f8d0014c          LDR      r0,[r0,#0x14c]        ;7622
000134  eb000080          ADD      r0,r0,r0,LSL #2       ;7622
000138  4a83              LDR      r2,|L62.840|
00013a  eb021000          ADD      r0,r2,r0,LSL #4       ;7622
00013e  7001              STRB     r1,[r0,#0]            ;7622
000140  4628              MOV      r0,r5                 ;7622
000142  e78c              B        |L62.94|
                  |L62.324|
000144  4628              MOV      r0,r5                 ;7622
000146  e78a              B        |L62.94|
                  |L62.328|
000148  f50470e8          ADD      r0,r4,#0x1d0          ;7625
00014c  c803              LDM      r0,{r0,r1}            ;7625
00014e  4606              MOV      r6,r0                 ;7625
000150  2200              MOVS     r2,#0                 ;7625
000152  4b7e              LDR      r3,|L62.844|
000154  f7fffffe          BL       __aeabi_cdrcmple
000158  d22b              BCS      |L62.434|
00015a  4641              MOV      r1,r8                 ;7627
00015c  4620              MOV      r0,r4                 ;7627
00015e  f7fffffe          BL       convert_speed
000162  0005              MOVS     r5,r0                 ;7627
000164  d025              BEQ      |L62.434|
000166  4876              LDR      r0,|L62.832|
000168  f8d0014c          LDR      r0,[r0,#0x14c]        ;7627
00016c  2831              CMP      r0,#0x31              ;7627
00016e  da1e              BGE      |L62.430|
000170  4973              LDR      r1,|L62.832|
000172  f8d1314c          LDR      r3,[r1,#0x14c]        ;7627
000176  f8d1114c          LDR      r1,[r1,#0x14c]        ;7627
00017a  1c49              ADDS     r1,r1,#1              ;7627
00017c  4a70              LDR      r2,|L62.832|
00017e  f8c2114c          STR      r1,[r2,#0x14c]        ;7627
000182  eb030183          ADD      r1,r3,r3,LSL #2       ;7627
000186  4a70              LDR      r2,|L62.840|
000188  eb021101          ADD      r1,r2,r1,LSL #4       ;7627
00018c  4608              MOV      r0,r1                 ;7627
00018e  496d              LDR      r1,|L62.836|
000190  f7fffffe          BL       strcpy
000194  f04f0100          MOV      r1,#0                 ;7627
000198  4869              LDR      r0,|L62.832|
00019a  f8d0014c          LDR      r0,[r0,#0x14c]        ;7627
00019e  eb000080          ADD      r0,r0,r0,LSL #2       ;7627
0001a2  4a69              LDR      r2,|L62.840|
0001a4  eb021000          ADD      r0,r2,r0,LSL #4       ;7627
0001a8  7001              STRB     r1,[r0,#0]            ;7627
0001aa  4628              MOV      r0,r5                 ;7627
0001ac  e757              B        |L62.94|
                  |L62.430|
0001ae  4628              MOV      r0,r5                 ;7627
0001b0  e755              B        |L62.94|
                  |L62.434|
0001b2  f8d401d8          LDR      r0,[r4,#0x1d8]        ;7629
0001b6  1c40              ADDS     r0,r0,#1              ;7629
0001b8  d02b              BEQ      |L62.530|
0001ba  4641              MOV      r1,r8                 ;7631
0001bc  4620              MOV      r0,r4                 ;7631
0001be  f7fffffe          BL       convert_tool_select
0001c2  0005              MOVS     r5,r0                 ;7631
0001c4  d025              BEQ      |L62.530|
0001c6  485e              LDR      r0,|L62.832|
0001c8  f8d0014c          LDR      r0,[r0,#0x14c]        ;7631
0001cc  2831              CMP      r0,#0x31              ;7631
0001ce  da1e              BGE      |L62.526|
0001d0  495b              LDR      r1,|L62.832|
0001d2  f8d1314c          LDR      r3,[r1,#0x14c]        ;7631
0001d6  f8d1114c          LDR      r1,[r1,#0x14c]        ;7631
0001da  1c49              ADDS     r1,r1,#1              ;7631
0001dc  4a58              LDR      r2,|L62.832|
0001de  f8c2114c          STR      r1,[r2,#0x14c]        ;7631
0001e2  eb030183          ADD      r1,r3,r3,LSL #2       ;7631
0001e6  4a58              LDR      r2,|L62.840|
0001e8  eb021101          ADD      r1,r2,r1,LSL #4       ;7631
0001ec  4608              MOV      r0,r1                 ;7631
0001ee  4955              LDR      r1,|L62.836|
0001f0  f7fffffe          BL       strcpy
0001f4  f04f0100          MOV      r1,#0                 ;7631
0001f8  4851              LDR      r0,|L62.832|
0001fa  f8d0014c          LDR      r0,[r0,#0x14c]        ;7631
0001fe  eb000080          ADD      r0,r0,r0,LSL #2       ;7631
000202  4a51              LDR      r2,|L62.840|
000204  eb021000          ADD      r0,r2,r0,LSL #4       ;7631
000208  7001              STRB     r1,[r0,#0]            ;7631
00020a  4628              MOV      r0,r5                 ;7631
00020c  e727              B        |L62.94|
                  |L62.526|
00020e  4628              MOV      r0,r5                 ;7631
000210  e725              B        |L62.94|
                  |L62.530|
000212  4641              MOV      r1,r8                 ;7633
000214  4620              MOV      r0,r4                 ;7633
000216  f7fffffe          BL       convert_m
00021a  0005              MOVS     r5,r0                 ;7633
00021c  d025              BEQ      |L62.618|
00021e  4848              LDR      r0,|L62.832|
000220  f8d0014c          LDR      r0,[r0,#0x14c]        ;7633
000224  2831              CMP      r0,#0x31              ;7633
000226  da1e              BGE      |L62.614|
000228  4945              LDR      r1,|L62.832|
00022a  f8d1314c          LDR      r3,[r1,#0x14c]        ;7633
00022e  f8d1114c          LDR      r1,[r1,#0x14c]        ;7633
000232  1c49              ADDS     r1,r1,#1              ;7633
000234  4a42              LDR      r2,|L62.832|
000236  f8c2114c          STR      r1,[r2,#0x14c]        ;7633
00023a  eb030183          ADD      r1,r3,r3,LSL #2       ;7633
00023e  4a42              LDR      r2,|L62.840|
000240  eb021101          ADD      r1,r2,r1,LSL #4       ;7633
000244  4608              MOV      r0,r1                 ;7633
000246  493f              LDR      r1,|L62.836|
000248  f7fffffe          BL       strcpy
00024c  f04f0100          MOV      r1,#0                 ;7633
000250  483b              LDR      r0,|L62.832|
000252  f8d0014c          LDR      r0,[r0,#0x14c]        ;7633
000256  eb000080          ADD      r0,r0,r0,LSL #2       ;7633
00025a  4a3b              LDR      r2,|L62.840|
00025c  eb021000          ADD      r0,r2,r0,LSL #4       ;7633
000260  7001              STRB     r1,[r0,#0]            ;7633
000262  4628              MOV      r0,r5                 ;7633
000264  e6fb              B        |L62.94|
                  |L62.614|
000266  4628              MOV      r0,r5                 ;7633
000268  e6f9              B        |L62.94|
                  |L62.618|
00026a  4641              MOV      r1,r8                 ;7634
00026c  4620              MOV      r0,r4                 ;7634
00026e  f7fffffe          BL       convert_g
000272  0005              MOVS     r5,r0                 ;7634
000274  d025              BEQ      |L62.706|
000276  4832              LDR      r0,|L62.832|
000278  f8d0014c          LDR      r0,[r0,#0x14c]        ;7634
00027c  2831              CMP      r0,#0x31              ;7634
00027e  da1e              BGE      |L62.702|
000280  492f              LDR      r1,|L62.832|
000282  f8d1314c          LDR      r3,[r1,#0x14c]        ;7634
000286  f8d1114c          LDR      r1,[r1,#0x14c]        ;7634
00028a  1c49              ADDS     r1,r1,#1              ;7634
00028c  4a2c              LDR      r2,|L62.832|
00028e  f8c2114c          STR      r1,[r2,#0x14c]        ;7634
000292  eb030183          ADD      r1,r3,r3,LSL #2       ;7634
000296  4a2c              LDR      r2,|L62.840|
000298  eb021101          ADD      r1,r2,r1,LSL #4       ;7634
00029c  4608              MOV      r0,r1                 ;7634
00029e  4929              LDR      r1,|L62.836|
0002a0  f7fffffe          BL       strcpy
0002a4  f04f0100          MOV      r1,#0                 ;7634
0002a8  4825              LDR      r0,|L62.832|
0002aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;7634
0002ae  eb000080          ADD      r0,r0,r0,LSL #2       ;7634
0002b2  4a25              LDR      r2,|L62.840|
0002b4  eb021000          ADD      r0,r2,r0,LSL #4       ;7634
0002b8  7001              STRB     r1,[r0,#0]            ;7634
0002ba  4628              MOV      r0,r5                 ;7634
0002bc  e6cf              B        |L62.94|
                  |L62.702|
0002be  4628              MOV      r0,r5                 ;7634
0002c0  e6cd              B        |L62.94|
                  |L62.706|
0002c2  f44f70cc          MOV      r0,#0x198             ;7635
0002c6  5900              LDR      r0,[r0,r4]            ;7635
0002c8  1c40              ADDS     r0,r0,#1              ;7635
0002ca  d02e              BEQ      |L62.810|
0002cc  4641              MOV      r1,r8                 ;7637
0002ce  4620              MOV      r0,r4                 ;7637
0002d0  f7fffffe          BL       convert_stop
0002d4  4605              MOV      r5,r0                 ;7637
0002d6  2d01              CMP      r5,#1                 ;7638
0002d8  d100              BNE      |L62.732|
0002da  e6c0              B        |L62.94|
                  |L62.732|
0002dc  b32d              CBZ      r5,|L62.810|
0002de  4818              LDR      r0,|L62.832|
0002e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;7641
0002e4  2831              CMP      r0,#0x31              ;7641
0002e6  da1e              BGE      |L62.806|
0002e8  4915              LDR      r1,|L62.832|
0002ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;7641
0002ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;7641
0002f2  1c49              ADDS     r1,r1,#1              ;7641
0002f4  4a12              LDR      r2,|L62.832|
0002f6  f8c2114c          STR      r1,[r2,#0x14c]        ;7641
0002fa  eb030183          ADD      r1,r3,r3,LSL #2       ;7641
0002fe  4a12              LDR      r2,|L62.840|
000300  eb021101          ADD      r1,r2,r1,LSL #4       ;7641
000304  4608              MOV      r0,r1                 ;7641
000306  490f              LDR      r1,|L62.836|
000308  f7fffffe          BL       strcpy
00030c  f04f0100          MOV      r1,#0                 ;7641
000310  480b              LDR      r0,|L62.832|
000312  f8d0014c          LDR      r0,[r0,#0x14c]        ;7641
000316  eb000080          ADD      r0,r0,r0,LSL #2       ;7641
00031a  4a0b              LDR      r2,|L62.840|
00031c  eb021000          ADD      r0,r2,r0,LSL #4       ;7641
000320  7001              STRB     r1,[r0,#0]            ;7641
000322  4628              MOV      r0,r5                 ;7641
000324  e69b              B        |L62.94|
                  |L62.806|
000326  4628              MOV      r0,r5                 ;7641
000328  e699              B        |L62.94|
                  |L62.810|
00032a  f24b1070          MOV      r0,#0xb170            ;7643
00032e  f8500008          LDR      r0,[r0,r8]            ;7643
000332  2801              CMP      r0,#1                 ;7643
000334  d101              BNE      |L62.826|
000336  2002              MOVS     r0,#2                 ;7643
000338  e691              B        |L62.94|
                  |L62.826|
00033a  2000              MOVS     r0,#0                 ;7643
00033c  e68f              B        |L62.94|
;;;7645   
                          ENDP

00033e  0000              DCW      0x0000
                  |L62.832|
                          DCD      _setup+0xc000
                  |L62.836|
                          DCD      |symbol_number.496|
                  |L62.840|
                          DCD      _setup+0xb1ac
                  |L62.844|
                          DCD      0xbff00000

                          AREA ||i.execute_unary||, CODE, READONLY, ALIGN=2

                  execute_unary PROC
;;;7675   
;;;7676       static int execute_unary(                     /* ARGUMENTS                       */
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;7677       double * double_ptr,                          /* pointer to the operand          */
;;;7678       int operation)                                /* integer code for the operation  */
;;;7679       {
000004  4680              MOV      r8,r0
000006  4689              MOV      r9,r1
;;;7680           static char name[] SET_TO "execute_unary";
;;;7681           switch (operation)
000008  f1b90f0e          CMP      r9,#0xe
00000c  d273              BCS      |L63.246|
00000e  e8dff009          TBB      [pc,r9]
000012  7207              DCB      0x72,0x07
000014  1b7372ca          DCB      0x1b,0x73,0x72,0xca
000018  dfe7f8f6          DCB      0xdf,0xe7,0xf8,0xf6
00001c  f5f4f3f2          DCB      0xf5,0xf4,0xf3,0xf2
;;;7682           {
;;;7683               case ABS:
;;;7684                   if (*double_ptr < 0.0)
000020  e9d80100          LDRD     r0,r1,[r8,#0]
000024  4604              MOV      r4,r0
000026  2200              MOVS     r2,#0
000028  4613              MOV      r3,r2
00002a  f7fffffe          BL       __aeabi_cdcmple
00002e  d20a              BCS      |L63.70|
;;;7685                       *double_ptr SET_TO (-1.0 * *double_ptr);
000030  e9d81000          LDRD     r1,r0,[r8,#0]
000034  460c              MOV      r4,r1
000036  4622              MOV      r2,r4
000038  4603              MOV      r3,r0
00003a  2000              MOVS     r0,#0
00003c  49eb              LDR      r1,|L63.1004|
00003e  f7fffffe          BL       __aeabi_dmul
000042  e9c80100          STRD     r0,r1,[r8,#0]
                  |L63.70|
;;;7686                   break;
000046  e1ce              B        |L63.998|
;;;7687               case ACOS:
;;;7688                   CHK(((*double_ptr < -1.0) OR (*double_ptr > 1.0)),
000048  e9d81000          LDRD     r1,r0,[r8,#0]
00004c  460c              MOV      r4,r1
00004e  4605              MOV      r5,r0
000050  2200              MOVS     r2,#0
000052  4be6              LDR      r3,|L63.1004|
000054  4620              MOV      r0,r4
000056  4629              MOV      r1,r5
000058  f7fffffe          BL       __aeabi_cdcmple
00005c  d30a              BCC      |L63.116|
00005e  e9d81000          LDRD     r1,r0,[r8,#0]
000062  460c              MOV      r4,r1
000064  4605              MOV      r5,r0
000066  2200              MOVS     r2,#0
000068  4be1              LDR      r3,|L63.1008|
00006a  4620              MOV      r0,r4
00006c  4629              MOV      r1,r5
00006e  f7fffffe          BL       __aeabi_cdrcmple
000072  d227              BCS      |L63.196|
                  |L63.116|
000074  f04f0100          MOV      r1,#0
000078  48de              LDR      r0,|L63.1012|
00007a  f8c0114c          STR      r1,[r0,#0x14c]
00007e  4601              MOV      r1,r0
000080  f8d1314c          LDR      r3,[r1,#0x14c]
000084  f8d1114c          LDR      r1,[r1,#0x14c]
000088  f1010101          ADD      r1,r1,#1
00008c  4602              MOV      r2,r0
00008e  f8c2114c          STR      r1,[r2,#0x14c]
000092  eb030183          ADD      r1,r3,r3,LSL #2
000096  f6a06254          SUB      r2,r0,#0xe54
00009a  eb021101          ADD      r1,r2,r1,LSL #4
00009e  4608              MOV      r0,r1
0000a0  49d5              LDR      r1,|L63.1016|
0000a2  f7fffffe          BL       strcpy
0000a6  f04f0100          MOV      r1,#0
0000aa  48d2              LDR      r0,|L63.1012|
0000ac  f8d0014c          LDR      r0,[r0,#0x14c]
0000b0  eb000080          ADD      r0,r0,r0,LSL #2
0000b4  4ad1              LDR      r2,|L63.1020|
0000b6  eb021000          ADD      r0,r2,r0,LSL #4
0000ba  7001              STRB     r1,[r0,#0]
0000bc  f04f0008          MOV      r0,#8
                  |L63.192|
;;;7689                       NCE_ARGUMENT_TO_ACOS_OUT_OF_RANGE);
;;;7690                   *double_ptr SET_TO acos(*double_ptr);
;;;7691                   *double_ptr SET_TO ((*double_ptr * 180.0)/ PI);
;;;7692                   break;
;;;7693               case ASIN:
;;;7694                   CHK(((*double_ptr < -1.0) OR (*double_ptr > 1.0)),
;;;7695                       NCE_ARGUMENT_TO_ASIN_OUT_OF_RANGE);
;;;7696                   *double_ptr SET_TO asin(*double_ptr);
;;;7697                   *double_ptr SET_TO ((*double_ptr * 180.0)/ PI);
;;;7698                   break;
;;;7699               case COS:
;;;7700                   *double_ptr SET_TO cos((*double_ptr * PI)/180.0);
;;;7701                   break;
;;;7702               case EXP:
;;;7703                   *double_ptr SET_TO exp(*double_ptr);
;;;7704                   break;
;;;7705               case FIX:
;;;7706                   *double_ptr SET_TO floor(*double_ptr);
;;;7707                   break;
;;;7708               case FUP:
;;;7709                   *double_ptr SET_TO ceil(*double_ptr);
;;;7710                   break;
;;;7711               case LN:
;;;7712                   CHK((*double_ptr <= 0.0), NCE_ZERO_OR_NEGATIVE_ARGUMENT_TO_LN);
;;;7713                   *double_ptr SET_TO log(*double_ptr);
;;;7714                   break;
;;;7715               case ROUND:
;;;7716                   *double_ptr SET_TO (double)
;;;7717                       ((int) (*double_ptr + ((*double_ptr < 0.0) ? -0.5 : 0.5)));
;;;7718                   break;
;;;7719               case SIN:
;;;7720                   *double_ptr SET_TO sin((*double_ptr * PI)/180.0);
;;;7721                   break;
;;;7722               case SQRT:
;;;7723                   CHK((*double_ptr < 0.0), NCE_NEGATIVE_ARGUMENT_TO_SQRT);
;;;7724                   *double_ptr SET_TO sqrt(*double_ptr);
;;;7725                   break;
;;;7726               case TAN:
;;;7727                   *double_ptr SET_TO tan((*double_ptr * PI)/180.0);
;;;7728                   break;
;;;7729               default:
;;;7730                   ERM(NCE_BUG_UNKNOWN_OPERATION);
;;;7731           }
;;;7732           return RS274NGC_OK;
;;;7733       }
0000c0  e8bd9ff0          POP      {r4-r12,pc}
                  |L63.196|
0000c4  e9d80100          LDRD     r0,r1,[r8,#0]         ;7690
0000c8  4602              MOV      r2,r0                 ;7690
0000ca  f7fffffe          BL       acos
0000ce  e9c80100          STRD     r0,r1,[r8,#0]         ;7690
0000d2  e9d81000          LDRD     r1,r0,[r8,#0]         ;7691
0000d6  460c              MOV      r4,r1                 ;7691
0000d8  4605              MOV      r5,r0                 ;7691
0000da  2200              MOVS     r2,#0                 ;7691
0000dc  4bc8              LDR      r3,|L63.1024|
0000de  4620              MOV      r0,r4                 ;7691
0000e0  4629              MOV      r1,r5                 ;7691
0000e2  f7fffffe          BL       __aeabi_dmul
0000e6  4606              MOV      r6,r0                 ;7691
0000e8  4ac6              LDR      r2,|L63.1028|
0000ea  4bc7              LDR      r3,|L63.1032|
0000ec  f7fffffe          BL       __aeabi_ddiv
0000f0  e9c80100          STRD     r0,r1,[r8,#0]         ;7691
0000f4  e177              B        |L63.998|
                  |L63.246|
0000f6  e150              B        |L63.922|
0000f8  e9d81000          LDRD     r1,r0,[r8,#0]         ;7694
0000fc  460c              MOV      r4,r1                 ;7694
0000fe  4605              MOV      r5,r0                 ;7694
000100  2200              MOVS     r2,#0                 ;7694
000102  4bba              LDR      r3,|L63.1004|
000104  4620              MOV      r0,r4                 ;7694
000106  4629              MOV      r1,r5                 ;7694
000108  f7fffffe          BL       __aeabi_cdcmple
00010c  d30a              BCC      |L63.292|
00010e  e9d81000          LDRD     r1,r0,[r8,#0]         ;7694
000112  460c              MOV      r4,r1                 ;7694
000114  4605              MOV      r5,r0                 ;7694
000116  2200              MOVS     r2,#0                 ;7694
000118  4bb5              LDR      r3,|L63.1008|
00011a  4620              MOV      r0,r4                 ;7694
00011c  4629              MOV      r1,r5                 ;7694
00011e  f7fffffe          BL       __aeabi_cdrcmple
000122  d224              BCS      |L63.366|
                  |L63.292|
000124  f04f0100          MOV      r1,#0                 ;7694
000128  48b2              LDR      r0,|L63.1012|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;7694
00012e  4601              MOV      r1,r0                 ;7694
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;7694
000134  f8d1214c          LDR      r2,[r1,#0x14c]        ;7694
000138  f1020201          ADD      r2,r2,#1              ;7694
00013c  f8c1214c          STR      r2,[r1,#0x14c]        ;7694
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;7694
000144  4aad              LDR      r2,|L63.1020|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;7694
00014a  4608              MOV      r0,r1                 ;7694
00014c  49aa              LDR      r1,|L63.1016|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;7694
000156  48a7              LDR      r0,|L63.1012|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;7694
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;7694
000160  4aa6              LDR      r2,|L63.1020|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;7694
000166  7001              STRB     r1,[r0,#0]            ;7694
000168  f04f0009          MOV      r0,#9                 ;7694
00016c  e7a8              B        |L63.192|
                  |L63.366|
00016e  e9d81000          LDRD     r1,r0,[r8,#0]         ;7696
000172  460a              MOV      r2,r1                 ;7696
000174  4603              MOV      r3,r0                 ;7696
000176  4610              MOV      r0,r2                 ;7696
000178  4619              MOV      r1,r3                 ;7696
00017a  f7fffffe          BL       asin
00017e  e9c80100          STRD     r0,r1,[r8,#0]         ;7696
000182  e9d81000          LDRD     r1,r0,[r8,#0]         ;7697
000186  460c              MOV      r4,r1                 ;7697
000188  4605              MOV      r5,r0                 ;7697
00018a  2200              MOVS     r2,#0                 ;7697
00018c  4b9c              LDR      r3,|L63.1024|
00018e  4620              MOV      r0,r4                 ;7697
000190  4629              MOV      r1,r5                 ;7697
000192  f7fffffe          BL       __aeabi_dmul
000196  4606              MOV      r6,r0                 ;7697
000198  4a9a              LDR      r2,|L63.1028|
00019a  4b9b              LDR      r3,|L63.1032|
00019c  f7fffffe          BL       __aeabi_ddiv
0001a0  e9c80100          STRD     r0,r1,[r8,#0]         ;7697
0001a4  e11f              B        |L63.998|
0001a6  e9d81000          LDRD     r1,r0,[r8,#0]         ;7700
0001aa  460c              MOV      r4,r1                 ;7700
0001ac  4605              MOV      r5,r0                 ;7700
0001ae  4a95              LDR      r2,|L63.1028|
0001b0  4b95              LDR      r3,|L63.1032|
0001b2  4620              MOV      r0,r4                 ;7700
0001b4  4629              MOV      r1,r5                 ;7700
0001b6  f7fffffe          BL       __aeabi_dmul
0001ba  4606              MOV      r6,r0                 ;7700
0001bc  2200              MOVS     r2,#0                 ;7700
0001be  4b90              LDR      r3,|L63.1024|
0001c0  f7fffffe          BL       __aeabi_ddiv
0001c4  4682              MOV      r10,r0                ;7700
0001c6  f7fffffe          BL       ||cos||
0001ca  e9c80100          STRD     r0,r1,[r8,#0]         ;7700
0001ce  e10a              B        |L63.998|
0001d0  e9d80100          LDRD     r0,r1,[r8,#0]         ;7703
0001d4  4602              MOV      r2,r0                 ;7703
0001d6  f7fffffe          BL       exp
0001da  e9c80100          STRD     r0,r1,[r8,#0]         ;7703
0001de  e102              B        |L63.998|
0001e0  e9d81000          LDRD     r1,r0,[r8,#0]         ;7706
0001e4  460a              MOV      r2,r1                 ;7706
0001e6  4603              MOV      r3,r0                 ;7706
0001e8  4610              MOV      r0,r2                 ;7706
0001ea  4619              MOV      r1,r3                 ;7706
0001ec  f7fffffe          BL       floor
0001f0  e9c80100          STRD     r0,r1,[r8,#0]         ;7706
0001f4  e0f7              B        |L63.998|
0001f6  e0bb              B        |L63.880|
0001f8  e07e              B        |L63.760|
0001fa  e068              B        |L63.718|
0001fc  e045              B        |L63.650|
0001fe  e00b              B        |L63.536|
000200  e7ff              B        |L63.514|
                  |L63.514|
000202  e9d81000          LDRD     r1,r0,[r8,#0]         ;7709
000206  460a              MOV      r2,r1                 ;7709
000208  4603              MOV      r3,r0                 ;7709
00020a  4610              MOV      r0,r2                 ;7709
00020c  4619              MOV      r1,r3                 ;7709
00020e  f7fffffe          BL       ceil
000212  e9c80100          STRD     r0,r1,[r8,#0]         ;7709
000216  e0e6              B        |L63.998|
                  |L63.536|
000218  e9d80100          LDRD     r0,r1,[r8,#0]         ;7712
00021c  4604              MOV      r4,r0                 ;7712
00021e  2200              MOVS     r2,#0                 ;7712
000220  4613              MOV      r3,r2                 ;7712
000222  f7fffffe          BL       __aeabi_cdcmple
000226  d825              BHI      |L63.628|
000228  f04f0100          MOV      r1,#0                 ;7712
00022c  4871              LDR      r0,|L63.1012|
00022e  f8c0114c          STR      r1,[r0,#0x14c]        ;7712
000232  4601              MOV      r1,r0                 ;7712
000234  f8d1314c          LDR      r3,[r1,#0x14c]        ;7712
000238  f8d1114c          LDR      r1,[r1,#0x14c]        ;7712
00023c  f1010101          ADD      r1,r1,#1              ;7712
000240  4602              MOV      r2,r0                 ;7712
000242  f8c2114c          STR      r1,[r2,#0x14c]        ;7712
000246  eb030183          ADD      r1,r3,r3,LSL #2       ;7712
00024a  4a6c              LDR      r2,|L63.1020|
00024c  eb021101          ADD      r1,r2,r1,LSL #4       ;7712
000250  4608              MOV      r0,r1                 ;7712
000252  4969              LDR      r1,|L63.1016|
000254  f7fffffe          BL       strcpy
000258  f04f0100          MOV      r1,#0                 ;7712
00025c  4865              LDR      r0,|L63.1012|
00025e  f8d0014c          LDR      r0,[r0,#0x14c]        ;7712
000262  eb000080          ADD      r0,r0,r0,LSL #2       ;7712
000266  4a65              LDR      r2,|L63.1020|
000268  eb021000          ADD      r0,r2,r0,LSL #4       ;7712
00026c  7001              STRB     r1,[r0,#0]            ;7712
00026e  f04f00c4          MOV      r0,#0xc4              ;7712
000272  e725              B        |L63.192|
                  |L63.628|
000274  e9d81000          LDRD     r1,r0,[r8,#0]         ;7713
000278  460a              MOV      r2,r1                 ;7713
00027a  4603              MOV      r3,r0                 ;7713
00027c  4610              MOV      r0,r2                 ;7713
00027e  4619              MOV      r1,r3                 ;7713
000280  f7fffffe          BL       log
000284  e9c80100          STRD     r0,r1,[r8,#0]         ;7713
000288  e0ad              B        |L63.998|
                  |L63.650|
00028a  e9d81000          LDRD     r1,r0,[r8,#0]         ;7716
00028e  468b              MOV      r11,r1                ;7716
000290  4684              MOV      r12,r0                ;7716
000292  2200              MOVS     r2,#0                 ;7716
000294  4613              MOV      r3,r2                 ;7716
000296  4658              MOV      r0,r11                ;7716
000298  4661              MOV      r1,r12                ;7716
00029a  f7fffffe          BL       __aeabi_cdcmple
00029e  d202              BCS      |L63.678|
0002a0  2200              MOVS     r2,#0                 ;7717
0002a2  4b5a              LDR      r3,|L63.1036|
0002a4  e001              B        |L63.682|
                  |L63.678|
0002a6  2200              MOVS     r2,#0                 ;7717
0002a8  4b59              LDR      r3,|L63.1040|
                  |L63.682|
0002aa  4616              MOV      r6,r2                 ;7717
0002ac  e9d81000          LDRD     r1,r0,[r8,#0]         ;7717
0002b0  468b              MOV      r11,r1                ;7717
0002b2  4684              MOV      r12,r0                ;7717
0002b4  4658              MOV      r0,r11                ;7717
0002b6  4661              MOV      r1,r12                ;7717
0002b8  f7fffffe          BL       __aeabi_dadd
0002bc  4604              MOV      r4,r0                 ;7717
0002be  f7fffffe          BL       __aeabi_d2iz
0002c2  4682              MOV      r10,r0                ;7717
0002c4  f7fffffe          BL       __aeabi_i2d
0002c8  e9c80100          STRD     r0,r1,[r8,#0]         ;7717
0002cc  e08b              B        |L63.998|
                  |L63.718|
0002ce  e9d81000          LDRD     r1,r0,[r8,#0]         ;7720
0002d2  460c              MOV      r4,r1                 ;7720
0002d4  4605              MOV      r5,r0                 ;7720
0002d6  4a4b              LDR      r2,|L63.1028|
0002d8  4b4b              LDR      r3,|L63.1032|
0002da  4620              MOV      r0,r4                 ;7720
0002dc  4629              MOV      r1,r5                 ;7720
0002de  f7fffffe          BL       __aeabi_dmul
0002e2  4606              MOV      r6,r0                 ;7720
0002e4  2200              MOVS     r2,#0                 ;7720
0002e6  4b46              LDR      r3,|L63.1024|
0002e8  f7fffffe          BL       __aeabi_ddiv
0002ec  4682              MOV      r10,r0                ;7720
0002ee  f7fffffe          BL       ||sin||
0002f2  e9c80100          STRD     r0,r1,[r8,#0]         ;7720
0002f6  e076              B        |L63.998|
                  |L63.760|
0002f8  e9d81000          LDRD     r1,r0,[r8,#0]         ;7723
0002fc  460c              MOV      r4,r1                 ;7723
0002fe  4605              MOV      r5,r0                 ;7723
000300  2200              MOVS     r2,#0                 ;7723
000302  4613              MOV      r3,r2                 ;7723
000304  4620              MOV      r0,r4                 ;7723
000306  4629              MOV      r1,r5                 ;7723
000308  f7fffffe          BL       __aeabi_cdcmple
00030c  d225              BCS      |L63.858|
00030e  f04f0100          MOV      r1,#0                 ;7723
000312  4838              LDR      r0,|L63.1012|
000314  f8c0114c          STR      r1,[r0,#0x14c]        ;7723
000318  4601              MOV      r1,r0                 ;7723
00031a  f8d1314c          LDR      r3,[r1,#0x14c]        ;7723
00031e  f8d1114c          LDR      r1,[r1,#0x14c]        ;7723
000322  f1010101          ADD      r1,r1,#1              ;7723
000326  4602              MOV      r2,r0                 ;7723
000328  f8c2114c          STR      r1,[r2,#0x14c]        ;7723
00032c  eb030183          ADD      r1,r3,r3,LSL #2       ;7723
000330  4a32              LDR      r2,|L63.1020|
000332  eb021101          ADD      r1,r2,r1,LSL #4       ;7723
000336  4608              MOV      r0,r1                 ;7723
000338  492f              LDR      r1,|L63.1016|
00033a  f7fffffe          BL       strcpy
00033e  f04f0100          MOV      r1,#0                 ;7723
000342  482c              LDR      r0,|L63.1012|
000344  f8d0014c          LDR      r0,[r0,#0x14c]        ;7723
000348  eb000080          ADD      r0,r0,r0,LSL #2       ;7723
00034c  4a2b              LDR      r2,|L63.1020|
00034e  eb021000          ADD      r0,r2,r0,LSL #4       ;7723
000352  7001              STRB     r1,[r0,#0]            ;7723
000354  f04f0079          MOV      r0,#0x79              ;7723
000358  e6b2              B        |L63.192|
                  |L63.858|
00035a  e9d81000          LDRD     r1,r0,[r8,#0]         ;7724
00035e  460a              MOV      r2,r1                 ;7724
000360  4603              MOV      r3,r0                 ;7724
000362  4610              MOV      r0,r2                 ;7724
000364  4619              MOV      r1,r3                 ;7724
000366  f7fffffe          BL       sqrt
00036a  e9c80100          STRD     r0,r1,[r8,#0]         ;7724
00036e  e03a              B        |L63.998|
                  |L63.880|
000370  e9d81000          LDRD     r1,r0,[r8,#0]         ;7727
000374  460c              MOV      r4,r1                 ;7727
000376  4605              MOV      r5,r0                 ;7727
000378  4a22              LDR      r2,|L63.1028|
00037a  4b23              LDR      r3,|L63.1032|
00037c  4620              MOV      r0,r4                 ;7727
00037e  4629              MOV      r1,r5                 ;7727
000380  f7fffffe          BL       __aeabi_dmul
000384  4606              MOV      r6,r0                 ;7727
000386  2200              MOVS     r2,#0                 ;7727
000388  4b1d              LDR      r3,|L63.1024|
00038a  f7fffffe          BL       __aeabi_ddiv
00038e  4682              MOV      r10,r0                ;7727
000390  f7fffffe          BL       tan
000394  e9c80100          STRD     r0,r1,[r8,#0]         ;7727
000398  e025              B        |L63.998|
                  |L63.922|
00039a  f04f0100          MOV      r1,#0                 ;7730
00039e  4815              LDR      r0,|L63.1012|
0003a0  f8c0114c          STR      r1,[r0,#0x14c]        ;7730
0003a4  4601              MOV      r1,r0                 ;7730
0003a6  f8d1314c          LDR      r3,[r1,#0x14c]        ;7730
0003aa  f8d1114c          LDR      r1,[r1,#0x14c]        ;7730
0003ae  f1010101          ADD      r1,r1,#1              ;7730
0003b2  4602              MOV      r2,r0                 ;7730
0003b4  f8c2114c          STR      r1,[r2,#0x14c]        ;7730
0003b8  eb030183          ADD      r1,r3,r3,LSL #2       ;7730
0003bc  4a0f              LDR      r2,|L63.1020|
0003be  eb021101          ADD      r1,r2,r1,LSL #4       ;7730
0003c2  4608              MOV      r0,r1                 ;7730
0003c4  490c              LDR      r1,|L63.1016|
0003c6  f7fffffe          BL       strcpy
0003ca  f04f0100          MOV      r1,#0                 ;7730
0003ce  4809              LDR      r0,|L63.1012|
0003d0  f8d0014c          LDR      r0,[r0,#0x14c]        ;7730
0003d4  eb000080          ADD      r0,r0,r0,LSL #2       ;7730
0003d8  4a08              LDR      r2,|L63.1020|
0003da  eb021000          ADD      r0,r2,r0,LSL #4       ;7730
0003de  7001              STRB     r1,[r0,#0]            ;7730
0003e0  f04f0025          MOV      r0,#0x25              ;7730
0003e4  e66c              B        |L63.192|
                  |L63.998|
0003e6  bf00              NOP                            ;7686
0003e8  2000              MOVS     r0,#0                 ;7732
0003ea  e669              B        |L63.192|
;;;7734   
                          ENDP

                  |L63.1004|
                          DCD      0xbff00000
                  |L63.1008|
                          DCD      0x3ff00000
                  |L63.1012|
                          DCD      _setup+0xc000
                  |L63.1016|
                          DCD      |symbol_number.497|
                  |L63.1020|
                          DCD      _setup+0xb1ac
                  |L63.1024|
                          DCD      0x40668000
                  |L63.1028|
                          DCD      0x54442d18
                  |L63.1032|
                          DCD      0x400921fb
                  |L63.1036|
                          DCD      0xbfe00000
                  |L63.1040|
                          DCD      0x3fe00000

                          AREA ||i.find_arc_length||, CODE, READONLY, ALIGN=1

                  find_arc_length PROC
;;;7769   
;;;7770       static double find_arc_length(                /* ARGUMENTS                          */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;7771       double x1,                                    /* X-coordinate of start point        */
;;;7772       double y1,                                    /* Y-coordinate of start point        */
;;;7773       double z1,                                    /* Z-coordinate of start point        */
;;;7774       double center_x,                              /* X-coordinate of arc center         */
;;;7775       double center_y,                              /* Y-coordinate of arc center         */
;;;7776       int turn,                                     /* no. of full or partial circles CCW */
;;;7777       double x2,                                    /* X-coordinate of end point          */
;;;7778       double y2,                                    /* Y-coordinate of end point          */
;;;7779       double z2)                                    /* Z-coordinate of end point          */
;;;7780       {
000004  b08d              SUB      sp,sp,#0x34
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddab18          LDRD     r10,r11,[sp,#0x60]
;;;7781           double radius;
;;;7782           double theta;                             /* amount of turn of arc in radians */
;;;7783   
;;;7784           radius SET_TO hypot((center_x - x1), (center_y - y1));
000012  4642              MOV      r2,r8
000014  464b              MOV      r3,r9
000016  e9dd011a          LDRD     r0,r1,[sp,#0x68]
00001a  f7fffffe          BL       __aeabi_dsub
00001e  4652              MOV      r2,r10
000020  465b              MOV      r3,r11
000022  e9cd0108          STRD     r0,r1,[sp,#0x20]
000026  4630              MOV      r0,r6
000028  4639              MOV      r1,r7
00002a  f7fffffe          BL       __aeabi_drsub
00002e  e9cd0106          STRD     r0,r1,[sp,#0x18]
000032  e9dd2308          LDRD     r2,r3,[sp,#0x20]
000036  f7fffffe          BL       hypot
00003a  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;7785           theta SET_TO find_turn(x1, y1, center_x, center_y, turn, x2, y2);
00003e  e9dd0120          LDRD     r0,r1,[sp,#0x80]
000042  e9cd0108          STRD     r0,r1,[sp,#0x20]
000046  e9dd011e          LDRD     r0,r1,[sp,#0x78]
00004a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00004e  981c              LDR      r0,[sp,#0x70]
000050  9004              STR      r0,[sp,#0x10]
000052  e9dd011a          LDRD     r0,r1,[sp,#0x68]
000056  4642              MOV      r2,r8
000058  464b              MOV      r3,r9
00005a  e9cdab00          STRD     r10,r11,[sp,#0]
00005e  e9cd0102          STRD     r0,r1,[sp,#8]
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  f7fffffe          BL       find_turn
00006a  4604              MOV      r4,r0
00006c  460d              MOV      r5,r1
;;;7786           if (z2 IS z1)
00006e  e9dd2316          LDRD     r2,r3,[sp,#0x58]
000072  e9dd0122          LDRD     r0,r1,[sp,#0x88]
000076  f7fffffe          BL       __aeabi_cdcmpeq
00007a  d10b              BNE      |L64.148|
;;;7787               return (radius * fabs(theta));
00007c  f0254000          BIC      r0,r5,#0x80000000
000080  e9cd4008          STRD     r4,r0,[sp,#0x20]
000084  4620              MOV      r0,r4
000086  a909              ADD      r1,sp,#0x24
000088  c90e              LDM      r1,{r1-r3}
00008a  f7fffffe          BL       __aeabi_dmul
                  |L64.142|
;;;7788           else
;;;7789               return hypot((radius * theta), (z2 - z1));
;;;7790       }
00008e  b00d              ADD      sp,sp,#0x34
000090  e8bd8ff0          POP      {r4-r11,pc}
                  |L64.148|
000094  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;7789
000098  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;7789
00009c  f7fffffe          BL       __aeabi_dsub
0000a0  4622              MOV      r2,r4                 ;7789
0000a2  462b              MOV      r3,r5                 ;7789
0000a4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;7789
0000a8  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;7789
0000ac  f7fffffe          BL       __aeabi_dmul
0000b0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;7789
0000b4  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;7789
0000b8  f7fffffe          BL       hypot
0000bc  e7e7              B        |L64.142|
;;;7791   
                          ENDP


                          AREA ||i.find_ends||, CODE, READONLY, ALIGN=2

                  find_ends PROC
;;;7831   
;;;7832       static int find_ends(                         /* ARGUMENTS                                    */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;7833       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;7834       setup_pointer settings,                       /* pointer to machine settings                  */
;;;7835       double * px,                                  /* pointer to end_x                             */
;;;7836       double * py,                                  /* pointer to end_y                             */
;;;7837       double * pz                                   /* pointer to end_z                             */
;;;7838   #ifdef AA
;;;7839       , double * AA_p                               /* pointer to end_a                       *//*AA*/
;;;7840   #endif
;;;7841   #ifdef BB
;;;7842       , double * BB_p                               /* pointer to end_b                       *//*BB*/
;;;7843   #endif
;;;7844   #ifdef CC
;;;7845       , double * CC_p                               /* pointer to end_c                       *//*CC*/
;;;7846   #endif
;;;7847       )
;;;7848       {
000004  b087              SUB      sp,sp,#0x1c
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  f8dda040          LDR      r10,[sp,#0x40]
;;;7849           int mode;
;;;7850           int middle;
;;;7851           int comp;
;;;7852   
;;;7853           mode SET_TO settings->distance_mode;
000012  f89403f8          LDRB     r0,[r4,#0x3f8]
000016  9006              STR      r0,[sp,#0x18]
;;;7854           middle SET_TO (settings->program_x ISNT UNKNOWN);
000018  f5044130          ADD      r1,r4,#0xb000
00001c  f50171bc          ADD      r1,r1,#0x178
000020  c903              LDM      r1,{r0,r1}
000022  4683              MOV      r11,r0
000024  4aaf              LDR      r2,|L65.740|
000026  4bb0              LDR      r3,|L65.744|
000028  f7fffffe          BL       __aeabi_cdcmpeq
00002c  d002              BEQ      |L65.52|
00002e  f04f0001          MOV      r0,#1
000032  e001              B        |L65.56|
                  |L65.52|
000034  f04f0000          MOV      r0,#0
                  |L65.56|
000038  4606              MOV      r6,r0
;;;7855           comp SET_TO (settings->cutter_comp_side ISNT OFF);
00003a  f8d403b0          LDR      r0,[r4,#0x3b0]
00003e  b110              CBZ      r0,|L65.70|
000040  f04f0001          MOV      r0,#1
000044  e001              B        |L65.74|
                  |L65.70|
000046  f04f0000          MOV      r0,#0
                  |L65.74|
00004a  4607              MOV      r7,r0
;;;7856   
;;;7857           if (block->g_modes[0] IS G_53)            /* distance mode is absolute in this case */
00004c  f8d50110          LDR      r0,[r5,#0x110]
000050  f5a07100          SUB      r1,r0,#0x200
000054  3912              SUBS     r1,r1,#0x12
000056  d17a              BNE      |L65.334|
;;;7858           {
;;;7859   #ifdef DEBUG_EMC
;;;7860               COMMENT("interpreter: offsets temporarily suspended");
000058  a0a4              ADR      r0,|L65.748|
00005a  f7fffffe          BL       COMMENT
;;;7861   #endif
;;;7862               *px SET_TO (block->x_flag IS ON) ? (block->x_number -
00005e  f8d501dc          LDR      r0,[r5,#0x1dc]
000062  2801              CMP      r0,#1
000064  d11a              BNE      |L65.156|
000066  e9d4011a          LDRD     r0,r1,[r4,#0x68]
00006a  4683              MOV      r11,r0
00006c  468c              MOV      r12,r1
00006e  f50460c6          ADD      r0,r4,#0x630
000072  c803              LDM      r0,{r0,r1}
000074  465a              MOV      r2,r11
000076  4663              MOV      r3,r12
000078  e9cd0102          STRD     r0,r1,[sp,#8]
00007c  f7fffffe          BL       __aeabi_dadd
000080  e9cd0104          STRD     r0,r1,[sp,#0x10]
000084  f8d511e0          LDR      r1,[r5,#0x1e0]
000088  468b              MOV      r11,r1
00008a  465a              MOV      r2,r11
00008c  f8d501e4          LDR      r0,[r5,#0x1e4]
000090  4603              MOV      r3,r0
000092  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000096  f7fffffe          BL       __aeabi_drsub
00009a  e002              B        |L65.162|
                  |L65.156|
;;;7863                   (settings->origin_offset_x + settings->axis_offset_x)) :
;;;7864               settings->current_x;
00009c  f5047064          ADD      r0,r4,#0x390
0000a0  c803              LDM      r0,{r0,r1}
                  |L65.162|
0000a2  e9c80100          STRD     r0,r1,[r8,#0]
;;;7865               *py SET_TO (block->y_flag IS ON) ? (block->y_number -
0000a6  f8d501e8          LDR      r0,[r5,#0x1e8]
0000aa  2801              CMP      r0,#1
0000ac  d11d              BNE      |L65.234|
0000ae  e9d4011c          LDRD     r0,r1,[r4,#0x70]
0000b2  e9cd0102          STRD     r0,r1,[sp,#8]
0000b6  f8d41638          LDR      r1,[r4,#0x638]
0000ba  468b              MOV      r11,r1
0000bc  f8d4063c          LDR      r0,[r4,#0x63c]
0000c0  4684              MOV      r12,r0
0000c2  4658              MOV      r0,r11
0000c4  4661              MOV      r1,r12
0000c6  e9dd2302          LDRD     r2,r3,[sp,#8]
0000ca  f7fffffe          BL       __aeabi_dadd
0000ce  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000d2  f8d511f0          LDR      r1,[r5,#0x1f0]
0000d6  468b              MOV      r11,r1
0000d8  465a              MOV      r2,r11
0000da  f8d501f4          LDR      r0,[r5,#0x1f4]
0000de  4603              MOV      r3,r0
0000e0  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0000e4  f7fffffe          BL       __aeabi_drsub
0000e8  e002              B        |L65.240|
                  |L65.234|
;;;7866                   (settings->origin_offset_y + settings->axis_offset_y)) :
;;;7867               settings->current_y;
0000ea  f5047066          ADD      r0,r4,#0x398
0000ee  c803              LDM      r0,{r0,r1}
                  |L65.240|
0000f0  e9c90100          STRD     r0,r1,[r9,#0]
;;;7868               *pz SET_TO (block->z_flag IS ON) ? (block->z_number -
0000f4  f8d501f8          LDR      r0,[r5,#0x1f8]
0000f8  2801              CMP      r0,#1
0000fa  d129              BNE      |L65.336|
0000fc  f50460c8          ADD      r0,r4,#0x640
000100  c803              LDM      r0,{r0,r1}
000102  4683              MOV      r11,r0
000104  468c              MOV      r12,r1
000106  f5044140          ADD      r1,r4,#0xc000
00010a  f50171a8          ADD      r1,r1,#0x150
00010e  c903              LDM      r1,{r0,r1}
000110  465a              MOV      r2,r11
000112  4663              MOV      r3,r12
000114  e9cd0100          STRD     r0,r1,[sp,#0]
000118  f7fffffe          BL       __aeabi_dadd
00011c  e9cd0102          STRD     r0,r1,[sp,#8]
000120  e9d4011e          LDRD     r0,r1,[r4,#0x78]
000124  4683              MOV      r11,r0
000126  465a              MOV      r2,r11
000128  460b              MOV      r3,r1
00012a  e9dd0102          LDRD     r0,r1,[sp,#8]
00012e  f7fffffe          BL       __aeabi_dadd
000132  e9cd0104          STRD     r0,r1,[sp,#0x10]
000136  f8d51200          LDR      r1,[r5,#0x200]
00013a  468b              MOV      r11,r1
00013c  465a              MOV      r2,r11
00013e  f8d50204          LDR      r0,[r5,#0x204]
000142  4603              MOV      r3,r0
000144  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000148  f7fffffe          BL       __aeabi_drsub
00014c  e003              B        |L65.342|
                  |L65.334|
00014e  e005              B        |L65.348|
                  |L65.336|
;;;7869                   (settings->tool_length_offset + settings->origin_offset_z
;;;7870                   + settings->axis_offset_z)) : settings->current_z;
000150  f5047068          ADD      r0,r4,#0x3a0
000154  c803              LDM      r0,{r0,r1}
                  |L65.342|
000156  e9ca0100          STRD     r0,r1,[r10,#0]
00015a  e0bf              B        |L65.732|
                  |L65.348|
;;;7871   #ifdef AA
;;;7872      /*AA*/
;;;7873               *AA_p SET_TO (block->a_flag IS ON) ? (block->a_number -
;;;7874       #endif
;;;7875       #ifdef AA
;;;7876      /*AA*/
;;;7877                   (settings->AA_origin_offset + settings->AA_axis_offset)) :
;;;7878   #endif
;;;7879   #ifdef AA
;;;7880               settings->AA_current;                 /*AA*/
;;;7881   #endif
;;;7882   #ifdef BB
;;;7883      /*BB*/
;;;7884               *BB_p SET_TO (block->b_flag IS ON) ? (block->b_number -
;;;7885       #endif
;;;7886       #ifdef BB
;;;7887      /*BB*/
;;;7888                   (settings->BB_origin_offset + settings->BB_axis_offset)) :
;;;7889   #endif
;;;7890   #ifdef BB
;;;7891               settings->BB_current;                 /*BB*/
;;;7892   #endif
;;;7893   #ifdef CC
;;;7894      /*CC*/
;;;7895               *CC_p SET_TO (block->c_flag IS ON) ? (block->c_number -
;;;7896       #endif
;;;7897       #ifdef CC
;;;7898      /*CC*/
;;;7899                   (settings->tool_length_offset + settings->CC_origin_offset
;;;7900       #endif
;;;7901       #ifdef CC
;;;7902      /*CC*/
;;;7903                   + settings->CC_axis_offset)) : settings->CC_current;
;;;7904   #endif
;;;7905           }
;;;7906           else if (mode IS MODE_ABSOLUTE)
00015c  9806              LDR      r0,[sp,#0x18]
00015e  bb88              CBNZ     r0,|L65.452|
;;;7907           {
;;;7908               *px SET_TO (block->x_flag IS ON) ? block->x_number     :
000160  f8d501dc          LDR      r0,[r5,#0x1dc]
000164  2801              CMP      r0,#1
000166  d103              BNE      |L65.368|
000168  f50570f0          ADD      r0,r5,#0x1e0
00016c  c803              LDM      r0,{r0,r1}
00016e  e00a              B        |L65.390|
                  |L65.368|
;;;7909               (comp AND middle)     ? settings->program_x :
000170  b137              CBZ      r7,|L65.384|
000172  b12e              CBZ      r6,|L65.384|
000174  f5044130          ADD      r1,r4,#0xb000
000178  f50171bc          ADD      r1,r1,#0x178
00017c  c903              LDM      r1,{r0,r1}
00017e  e002              B        |L65.390|
                  |L65.384|
;;;7910               settings->current_x ;
000180  f5047064          ADD      r0,r4,#0x390
000184  c803              LDM      r0,{r0,r1}
                  |L65.390|
000186  e9c80100          STRD     r0,r1,[r8,#0]
;;;7911   
;;;7912               *py SET_TO (block->y_flag IS ON) ? block->y_number     :
00018a  f8d501e8          LDR      r0,[r5,#0x1e8]
00018e  2801              CMP      r0,#1
000190  d103              BNE      |L65.410|
000192  f50570f8          ADD      r0,r5,#0x1f0
000196  c803              LDM      r0,{r0,r1}
000198  e00a              B        |L65.432|
                  |L65.410|
;;;7913               (comp AND middle)     ? settings->program_y :
00019a  b137              CBZ      r7,|L65.426|
00019c  b12e              CBZ      r6,|L65.426|
00019e  f5044130          ADD      r1,r4,#0xb000
0001a2  f50171c0          ADD      r1,r1,#0x180
0001a6  c903              LDM      r1,{r0,r1}
0001a8  e002              B        |L65.432|
                  |L65.426|
;;;7914               settings->current_y ;
0001aa  f5047066          ADD      r0,r4,#0x398
0001ae  c803              LDM      r0,{r0,r1}
                  |L65.432|
0001b0  e9c90100          STRD     r0,r1,[r9,#0]
;;;7915   
;;;7916               *pz SET_TO (block->z_flag IS ON) ? block->z_number     :
0001b4  f8d501f8          LDR      r0,[r5,#0x1f8]
0001b8  2801              CMP      r0,#1
0001ba  d104              BNE      |L65.454|
0001bc  f5057000          ADD      r0,r5,#0x200
0001c0  c803              LDM      r0,{r0,r1}
0001c2  e003              B        |L65.460|
                  |L65.452|
0001c4  e005              B        |L65.466|
                  |L65.454|
;;;7917               settings->current_z ;
0001c6  f5047068          ADD      r0,r4,#0x3a0
0001ca  c803              LDM      r0,{r0,r1}
                  |L65.460|
0001cc  e9ca0100          STRD     r0,r1,[r10,#0]
0001d0  e084              B        |L65.732|
                  |L65.466|
;;;7918   #ifdef AA
;;;7919      /*AA*/
;;;7920               *AA_p SET_TO (block->a_flag IS ON) ? block->a_number     :
;;;7921   #endif
;;;7922   #ifdef AA
;;;7923               settings->AA_current ;                /*AA*/
;;;7924   #endif
;;;7925   #ifdef BB
;;;7926      /*BB*/
;;;7927               *BB_p SET_TO (block->b_flag IS ON) ? block->b_number     :
;;;7928   #endif
;;;7929   #ifdef BB
;;;7930               settings->BB_current ;                /*BB*/
;;;7931   #endif
;;;7932   #ifdef CC
;;;7933      /*CC*/
;;;7934               *CC_p SET_TO (block->c_flag IS ON) ? block->c_number     :
;;;7935   #endif
;;;7936   #ifdef CC
;;;7937               settings->CC_current ;                /*CC*/
;;;7938   #endif
;;;7939           }
;;;7940           else                                      /* mode is MODE_INCREMENTAL */
;;;7941           {
;;;7942               *px SET_TO (block->x_flag IS ON)
0001d2  f8d501dc          LDR      r0,[r5,#0x1dc]
0001d6  2801              CMP      r0,#1
0001d8  d125              BNE      |L65.550|
;;;7943                   ? ((comp AND middle) ? (block->x_number + settings->program_x)
0001da  b197              CBZ      r7,|L65.514|
0001dc  b18e              CBZ      r6,|L65.514|
0001de  f5044030          ADD      r0,r4,#0xb000
0001e2  f8d01178          LDR      r1,[r0,#0x178]
0001e6  f8d0017c          LDR      r0,[r0,#0x17c]
0001ea  468b              MOV      r11,r1
0001ec  4684              MOV      r12,r0
0001ee  f50570f0          ADD      r0,r5,#0x1e0
0001f2  c803              LDM      r0,{r0,r1}
0001f4  465a              MOV      r2,r11
0001f6  4663              MOV      r3,r12
0001f8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0001fc  f7fffffe          BL       __aeabi_dadd
000200  e01c              B        |L65.572|
                  |L65.514|
;;;7944                   : (block->x_number + settings->current_x))
000202  f5047064          ADD      r0,r4,#0x390
000206  c803              LDM      r0,{r0,r1}
000208  e9cd0104          STRD     r0,r1,[sp,#0x10]
00020c  f8d511e0          LDR      r1,[r5,#0x1e0]
000210  468b              MOV      r11,r1
000212  f8d501e4          LDR      r0,[r5,#0x1e4]
000216  4684              MOV      r12,r0
000218  4658              MOV      r0,r11
00021a  4661              MOV      r1,r12
00021c  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000220  f7fffffe          BL       __aeabi_dadd
000224  e00a              B        |L65.572|
                  |L65.550|
;;;7945                   : ((comp AND middle) ? settings->program_x
000226  b137              CBZ      r7,|L65.566|
000228  b12e              CBZ      r6,|L65.566|
00022a  f5044130          ADD      r1,r4,#0xb000
00022e  f50171bc          ADD      r1,r1,#0x178
000232  c903              LDM      r1,{r0,r1}
000234  e002              B        |L65.572|
                  |L65.566|
;;;7946                   : settings->current_x);
000236  f5047064          ADD      r0,r4,#0x390
00023a  c803              LDM      r0,{r0,r1}
                  |L65.572|
00023c  e9c80100          STRD     r0,r1,[r8,#0]
;;;7947   
;;;7948               *py SET_TO (block->y_flag IS ON)
000240  f8d501e8          LDR      r0,[r5,#0x1e8]
000244  2801              CMP      r0,#1
000246  d123              BNE      |L65.656|
;;;7949                   ? ((comp AND middle) ? (block->y_number + settings->program_y)
000248  b197              CBZ      r7,|L65.624|
00024a  b18e              CBZ      r6,|L65.624|
00024c  f5044030          ADD      r0,r4,#0xb000
000250  f8d01180          LDR      r1,[r0,#0x180]
000254  f8d00184          LDR      r0,[r0,#0x184]
000258  468b              MOV      r11,r1
00025a  4684              MOV      r12,r0
00025c  f50570f8          ADD      r0,r5,#0x1f0
000260  c803              LDM      r0,{r0,r1}
000262  465a              MOV      r2,r11
000264  4663              MOV      r3,r12
000266  e9cd0104          STRD     r0,r1,[sp,#0x10]
00026a  f7fffffe          BL       __aeabi_dadd
00026e  e01a              B        |L65.678|
                  |L65.624|
;;;7950                   : (block->y_number + settings->current_y))
000270  f8d41398          LDR      r1,[r4,#0x398]
000274  468b              MOV      r11,r1
000276  f8d4039c          LDR      r0,[r4,#0x39c]
00027a  4684              MOV      r12,r0
00027c  f50570f8          ADD      r0,r5,#0x1f0
000280  c803              LDM      r0,{r0,r1}
000282  465a              MOV      r2,r11
000284  4663              MOV      r3,r12
000286  e9cd0104          STRD     r0,r1,[sp,#0x10]
00028a  f7fffffe          BL       __aeabi_dadd
00028e  e00a              B        |L65.678|
                  |L65.656|
;;;7951                   : ((comp AND middle) ? settings->program_y
000290  b137              CBZ      r7,|L65.672|
000292  b12e              CBZ      r6,|L65.672|
000294  f5044130          ADD      r1,r4,#0xb000
000298  f50171c0          ADD      r1,r1,#0x180
00029c  c903              LDM      r1,{r0,r1}
00029e  e002              B        |L65.678|
                  |L65.672|
;;;7952                   : settings->current_y);
0002a0  f5047066          ADD      r0,r4,#0x398
0002a4  c803              LDM      r0,{r0,r1}
                  |L65.678|
0002a6  e9c90100          STRD     r0,r1,[r9,#0]
;;;7953   
;;;7954               *pz SET_TO (block->z_flag IS ON) ?
0002aa  f8d501f8          LDR      r0,[r5,#0x1f8]
0002ae  2801              CMP      r0,#1
0002b0  d10f              BNE      |L65.722|
;;;7955                   (settings->current_z + block->z_number) : settings->current_z;
0002b2  f8d51200          LDR      r1,[r5,#0x200]
0002b6  468b              MOV      r11,r1
0002b8  f8d50204          LDR      r0,[r5,#0x204]
0002bc  4684              MOV      r12,r0
0002be  f5047068          ADD      r0,r4,#0x3a0
0002c2  c803              LDM      r0,{r0,r1}
0002c4  465a              MOV      r2,r11
0002c6  4663              MOV      r3,r12
0002c8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0002cc  f7fffffe          BL       __aeabi_dadd
0002d0  e002              B        |L65.728|
                  |L65.722|
0002d2  f5047068          ADD      r0,r4,#0x3a0
0002d6  c803              LDM      r0,{r0,r1}
                  |L65.728|
0002d8  e9ca0100          STRD     r0,r1,[r10,#0]
                  |L65.732|
;;;7956   #ifdef AA
;;;7957               *AA_p SET_TO (block->a_flag IS ON) ?  /*AA*/
;;;7958       #endif
;;;7959       #ifdef AA
;;;7960      /*AA*/
;;;7961                   (settings->AA_current + block->a_number) : settings->AA_current;
;;;7962   #endif
;;;7963   #ifdef BB
;;;7964               *BB_p SET_TO (block->b_flag IS ON) ?  /*BB*/
;;;7965       #endif
;;;7966       #ifdef BB
;;;7967      /*BB*/
;;;7968                   (settings->BB_current + block->b_number) : settings->BB_current;
;;;7969   #endif
;;;7970   #ifdef CC
;;;7971               *CC_p SET_TO (block->c_flag IS ON) ?  /*CC*/
;;;7972       #endif
;;;7973       #ifdef CC
;;;7974      /*CC*/
;;;7975                   (settings->CC_current + block->c_number) : settings->CC_current;
;;;7976   #endif
;;;7977           }
;;;7978           return RS274NGC_OK;
0002dc  2000              MOVS     r0,#0
;;;7979       }
0002de  b007              ADD      sp,sp,#0x1c
0002e0  e8bd8ff0          POP      {r4-r11,pc}
;;;7980   
                          ENDP

                  |L65.740|
                          DCD      0x0c924223
                  |L65.744|
                          DCD      0x3bc79ca1
                  |L65.748|
0002ec  696e7465          DCB      "interpreter: offsets temporarily suspended",0
0002f0  72707265
0002f4  7465723a
0002f8  206f6666
0002fc  73657473
000300  2074656d
000304  706f7261
000308  72696c79
00030c  20737573
000310  70656e64
000314  656400  
000317  00                DCB      0

                          AREA ||i.find_relative||, CODE, READONLY, ALIGN=1

                  find_relative PROC
;;;8002   
;;;8003       static int find_relative(                     /* ARGUMENTS                   */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;8004       double x1,                                    /* absolute x position         */
;;;8005       double y1,                                    /* absolute y position         */
;;;8006       double z1,                                    /* absolute z position         */
;;;8007   #ifdef AA
;;;8008       double AA_1,             /* absolute a position         */ /*AA*/
;;;8009   #endif
;;;8010   #ifdef BB
;;;8011       double BB_1,             /* absolute b position         */ /*BB*/
;;;8012   #endif
;;;8013   #ifdef CC
;;;8014       double CC_1,             /* absolute c position         */ /*CC*/
;;;8015   #endif
;;;8016       double * x2,                                  /* pointer to relative x       */
;;;8017       double * y2,                                  /* pointer to relative y       */
;;;8018       double * z2,                                  /* pointer to relative z       */
;;;8019   #ifdef AA
;;;8020       double * AA_2,           /* pointer to relative a       */ /*AA*/
;;;8021   #endif
;;;8022   #ifdef BB
;;;8023       double * BB_2,           /* pointer to relative b       */ /*BB*/
;;;8024   #endif
;;;8025   #ifdef CC
;;;8026       double * CC_2,           /* pointer to relative c       */ /*CC*/
;;;8027   #endif
;;;8028       setup_pointer settings)                       /* pointer to machine settings */
;;;8029       {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  f8dda04c          LDR      r10,[sp,#0x4c]
;;;8030           *x2 SET_TO (x1 - (settings->origin_offset_x + settings->axis_offset_x));
000010  e9da101a          LDRD     r1,r0,[r10,#0x68]
000014  4688              MOV      r8,r1
000016  4681              MOV      r9,r0
000018  f8da1630          LDR      r1,[r10,#0x630]
00001c  468b              MOV      r11,r1
00001e  f8da0634          LDR      r0,[r10,#0x634]
000022  4684              MOV      r12,r0
000024  4642              MOV      r2,r8
000026  464b              MOV      r3,r9
000028  4658              MOV      r0,r11
00002a  4661              MOV      r1,r12
00002c  f7fffffe          BL       __aeabi_dadd
000030  4622              MOV      r2,r4
000032  462b              MOV      r3,r5
000034  e9cd0102          STRD     r0,r1,[sp,#8]
000038  f7fffffe          BL       __aeabi_drsub
00003c  9a10              LDR      r2,[sp,#0x40]
00003e  c203              STM      r2!,{r0,r1}
;;;8031           *y2 SET_TO (y1 - (settings->origin_offset_y + settings->axis_offset_y));
000040  e9da101c          LDRD     r1,r0,[r10,#0x70]
000044  4688              MOV      r8,r1
000046  4681              MOV      r9,r0
000048  f8da1638          LDR      r1,[r10,#0x638]
00004c  468b              MOV      r11,r1
00004e  f8da063c          LDR      r0,[r10,#0x63c]
000052  4684              MOV      r12,r0
000054  4642              MOV      r2,r8
000056  464b              MOV      r3,r9
000058  4658              MOV      r0,r11
00005a  4661              MOV      r1,r12
00005c  f7fffffe          BL       __aeabi_dadd
000060  4632              MOV      r2,r6
000062  463b              MOV      r3,r7
000064  e9cd0102          STRD     r0,r1,[sp,#8]
000068  f7fffffe          BL       __aeabi_drsub
00006c  9a11              LDR      r2,[sp,#0x44]
00006e  c203              STM      r2!,{r0,r1}
;;;8032           *z2 SET_TO (z1 - (settings->tool_length_offset +
000070  f8da1640          LDR      r1,[r10,#0x640]
000074  4688              MOV      r8,r1
000076  f8da0644          LDR      r0,[r10,#0x644]
00007a  4681              MOV      r9,r0
00007c  f50a4140          ADD      r1,r10,#0xc000
000080  f50171a8          ADD      r1,r1,#0x150
000084  c903              LDM      r1,{r0,r1}
000086  4683              MOV      r11,r0
000088  4642              MOV      r2,r8
00008a  464b              MOV      r3,r9
00008c  f7fffffe          BL       __aeabi_dadd
000090  e9cd0100          STRD     r0,r1,[sp,#0]
000094  e9da011e          LDRD     r0,r1,[r10,#0x78]
000098  4602              MOV      r2,r0
00009a  4690              MOV      r8,r2
00009c  460b              MOV      r3,r1
00009e  e9dd0100          LDRD     r0,r1,[sp,#0]
0000a2  f7fffffe          BL       __aeabi_dadd
0000a6  e9cd0102          STRD     r0,r1,[sp,#8]
0000aa  e9dd230e          LDRD     r2,r3,[sp,#0x38]
0000ae  f7fffffe          BL       __aeabi_drsub
0000b2  9a12              LDR      r2,[sp,#0x48]
0000b4  c203              STM      r2!,{r0,r1}
;;;8033               settings->origin_offset_z + settings->axis_offset_z));
;;;8034   #ifdef AA
;;;8035      /*AA*/
;;;8036           *AA_2 SET_TO (AA_1 - (settings->AA_origin_offset +
;;;8037       #endif
;;;8038       #ifdef AA
;;;8039               settings->AA_axis_offset));           /*AA*/
;;;8040   #endif
;;;8041   #ifdef BB
;;;8042      /*BB*/
;;;8043           *BB_2 SET_TO (BB_1 - (settings->BB_origin_offset +
;;;8044       #endif
;;;8045       #ifdef BB
;;;8046               settings->BB_axis_offset));           /*BB*/
;;;8047   #endif
;;;8048   #ifdef CC
;;;8049      /*CC*/
;;;8050           *CC_2 SET_TO (CC_1 - (settings->CC_origin_offset +
;;;8051       #endif
;;;8052       #ifdef CC
;;;8053               settings->CC_axis_offset));           /*CC*/
;;;8054   #endif
;;;8055           return RS274NGC_OK;
0000b6  2000              MOVS     r0,#0
;;;8056       }
0000b8  b004              ADD      sp,sp,#0x10
0000ba  e8bd9ff0          POP      {r4-r12,pc}
;;;8057   
                          ENDP


                          AREA ||i.find_straight_length||, CODE, READONLY, ALIGN=1

                  find_straight_length PROC
;;;8090   
;;;8091       static double find_straight_length(           /* ARGUMENTS   */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8092       double x2,                                    /* X-coordinate of end point    */
;;;8093       double y2,                                    /* Y-coordinate of end point    */
;;;8094       double z2,                                    /* Z-coordinate of end point    */
;;;8095   #ifdef AA
;;;8096       double AA_2,      /* A-coordinate of end point    */ /*AA*/
;;;8097   #endif
;;;8098   #ifdef BB
;;;8099       double BB_2,      /* B-coordinate of end point    */ /*BB*/
;;;8100   #endif
;;;8101   #ifdef CC
;;;8102       double CC_2,      /* C-coordinate of end point    */ /*CC*/
;;;8103   #endif
;;;8104       double x1,                                    /* X-coordinate of start point  */
;;;8105       double y1,                                    /* Y-coordinate of start point  */
;;;8106       double z1                                     /* Z-coordinate of start point  */
;;;8107   #ifdef AA
;;;8108       , double AA_1     /* A-coordinate of start point  */ /*AA*/
;;;8109   #endif
;;;8110   #ifdef BB
;;;8111       , double BB_1     /* B-coordinate of start point  */ /*BB*/
;;;8112   #endif
;;;8113   #ifdef CC
;;;8114       , double CC_1     /* C-coordinate of start point  */ /*CC*/
;;;8115   #endif
;;;8116       )
;;;8117       {
000004  b08d              SUB      sp,sp,#0x34
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  e9ddab18          LDRD     r10,r11,[sp,#0x60]
000012  e9dd8916          LDRD     r8,r9,[sp,#0x58]
;;;8118           if ((x1 ISNT x2) OR (y1 ISNT y2) OR (z1 ISNT z2) OR
000016  4652              MOV      r2,r10
000018  465b              MOV      r3,r11
00001a  4620              MOV      r0,r4
00001c  4629              MOV      r1,r5
00001e  f7fffffe          BL       __aeabi_cdcmpeq
000022  d10e              BNE      |L67.66|
000024  4632              MOV      r2,r6
000026  463b              MOV      r3,r7
000028  e9dd011a          LDRD     r0,r1,[sp,#0x68]
00002c  f7fffffe          BL       __aeabi_cdcmpeq
000030  d107              BNE      |L67.66|
000032  4642              MOV      r2,r8
000034  464b              MOV      r3,r9
000036  e9dd011c          LDRD     r0,r1,[sp,#0x70]
00003a  f7fffffe          BL       __aeabi_cdcmpeq
00003e  d100              BNE      |L67.66|
;;;8119               (1
000040  bf00              NOP      
                  |L67.66|
;;;8120       #ifdef AA
;;;8121               AND (AA_2 IS AA_1)                    /*AA*/
;;;8122       #endif
;;;8123       #ifdef BB
;;;8124               AND (BB_2 IS BB_1)                    /*BB*/
;;;8125       #endif
;;;8126       #ifdef CC
;;;8127               AND (CC_2 IS CC_1)                    /*CC*/
;;;8128       #endif
;;;8129               ))                                    /* straight line */
;;;8130               return sqrt(pow((x2 - x1),2) + pow((y2 - y1),2) + pow((z2 - z1),2));
000042  4640              MOV      r0,r8
000044  4649              MOV      r1,r9
000046  e9dd231c          LDRD     r2,r3,[sp,#0x70]
00004a  f7fffffe          BL       __aeabi_dsub
00004e  2200              MOVS     r2,#0
000050  f04f4380          MOV      r3,#0x40000000
000054  e9cd0104          STRD     r0,r1,[sp,#0x10]
000058  f7fffffe          BL       pow
00005c  e9cd0108          STRD     r0,r1,[sp,#0x20]
000060  4630              MOV      r0,r6
000062  4639              MOV      r1,r7
000064  e9dd231a          LDRD     r2,r3,[sp,#0x68]
000068  f7fffffe          BL       __aeabi_dsub
00006c  2200              MOVS     r2,#0
00006e  f04f4380          MOV      r3,#0x40000000
000072  e9cd0100          STRD     r0,r1,[sp,#0]
000076  f7fffffe          BL       pow
00007a  4652              MOV      r2,r10
00007c  465b              MOV      r3,r11
00007e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000082  4620              MOV      r0,r4
000084  4629              MOV      r1,r5
000086  f7fffffe          BL       __aeabi_dsub
00008a  2200              MOVS     r2,#0
00008c  f04f4380          MOV      r3,#0x40000000
000090  e9cd0100          STRD     r0,r1,[sp,#0]
000094  f7fffffe          BL       pow
000098  e9cd0102          STRD     r0,r1,[sp,#8]
00009c  e9dd2304          LDRD     r2,r3,[sp,#0x10]
0000a0  f7fffffe          BL       __aeabi_dadd
0000a4  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000a8  e9dd2308          LDRD     r2,r3,[sp,#0x20]
0000ac  f7fffffe          BL       __aeabi_dadd
0000b0  e9cd010a          STRD     r0,r1,[sp,#0x28]
0000b4  f7fffffe          BL       sqrt
;;;8131           else
;;;8132               return sqrt(0 +
;;;8133           #ifdef AA
;;;8134                   pow((AA_2 - AA_1), 2) +           /*AA*/
;;;8135           #endif
;;;8136           #ifdef BB
;;;8137                   pow((BB_2 - BB_1), 2) +           /*BB*/
;;;8138           #endif
;;;8139           #ifdef CC
;;;8140                   pow((CC_2 - CC_1), 2) +           /*CC*/
;;;8141           #endif
;;;8142                   0);
;;;8143       }
0000b8  b00d              ADD      sp,sp,#0x34
0000ba  e8bd8ff0          POP      {r4-r11,pc}
;;;8144   
                          ENDP


                          AREA ||i.find_turn||, CODE, READONLY, ALIGN=2

                  find_turn PROC
;;;8158   
;;;8159       static double find_turn(                      /* ARGUMENTS                          */
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;8160       double x1,                                    /* X-coordinate of start point        */
;;;8161       double y1,                                    /* Y-coordinate of start point        */
;;;8162       double center_x,                              /* X-coordinate of arc center         */
;;;8163       double center_y,                              /* Y-coordinate of arc center         */
;;;8164       int turn,                                     /* no. of full or partial circles CCW */
;;;8165       double x2,                                    /* X-coordinate of end point          */
;;;8166       double y2)                                    /* Y-coordinate of end point          */
;;;8167       {
000004  b086              SUB      sp,sp,#0x18
000006  f8dda058          LDR      r10,[sp,#0x58]
;;;8168           double alpha;                             /* angle of first radius                      */
;;;8169           double beta;                              /* angle of second radius                     */
;;;8170           double theta;                             /* amount of turn of arc CCW - negative if CW */
;;;8171   
;;;8172           if (turn IS 0)
00000a  f1ba0f00          CMP      r10,#0
00000e  d104              BNE      |L68.26|
;;;8173               return 0.0;
000010  2000              MOVS     r0,#0
000012  4601              MOV      r1,r0
                  |L68.20|
;;;8174           alpha SET_TO atan2((y1 - center_y), (x1 - center_x));
;;;8175           beta SET_TO atan2((y2 - center_y), (x2 - center_x));
;;;8176           if (turn > 0)
;;;8177           {
;;;8178               if (beta <= alpha)
;;;8179                   beta SET_TO (beta + TWO_PI);
;;;8180               theta SET_TO ((beta - alpha) + ((turn - 1) * TWO_PI));
;;;8181           }
;;;8182           else                                      /* turn < 0 */
;;;8183           {
;;;8184               if (alpha <= beta)
;;;8185                   alpha SET_TO (alpha + TWO_PI);
;;;8186               theta SET_TO ((beta - alpha) + ((turn + 1) * TWO_PI));
;;;8187           }
;;;8188           return (theta);
;;;8189       }
000014  b00a              ADD      sp,sp,#0x28
000016  e8bd87f0          POP      {r4-r10,pc}
                  |L68.26|
00001a  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;8174
00001e  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;8174
000022  f7fffffe          BL       __aeabi_dsub
000026  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8174
00002a  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;8174
00002e  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;8174
000032  f7fffffe          BL       __aeabi_dsub
000036  e9cd0102          STRD     r0,r1,[sp,#8]         ;8174
00003a  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8174
00003e  f7fffffe          BL       atan2
000042  4606              MOV      r6,r0                 ;8174
000044  460f              MOV      r7,r1                 ;8174
000046  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;8175
00004a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;8175
00004e  f7fffffe          BL       __aeabi_dsub
000052  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8175
000056  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;8175
00005a  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;8175
00005e  f7fffffe          BL       __aeabi_dsub
000062  e9cd0102          STRD     r0,r1,[sp,#8]         ;8175
000066  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8175
00006a  f7fffffe          BL       atan2
00006e  4604              MOV      r4,r0                 ;8175
000070  460d              MOV      r5,r1                 ;8175
000072  f1ba0f00          CMP      r10,#0                ;8176
000076  dd2a              BLE      |L68.206|
000078  4632              MOV      r2,r6                 ;8178
00007a  463b              MOV      r3,r7                 ;8178
00007c  4620              MOV      r0,r4                 ;8178
00007e  4629              MOV      r1,r5                 ;8178
000080  f7fffffe          BL       __aeabi_cdcmple
000084  d807              BHI      |L68.150|
000086  4a28              LDR      r2,|L68.296|
000088  4b28              LDR      r3,|L68.300|
00008a  4620              MOV      r0,r4                 ;8179
00008c  4629              MOV      r1,r5                 ;8179
00008e  f7fffffe          BL       __aeabi_dadd
000092  4604              MOV      r4,r0                 ;8179
000094  460d              MOV      r5,r1                 ;8179
                  |L68.150|
000096  f1aa0101          SUB      r1,r10,#1             ;8180
00009a  4608              MOV      r0,r1                 ;8180
00009c  f7fffffe          BL       __aeabi_i2d
0000a0  4a21              LDR      r2,|L68.296|
0000a2  4b22              LDR      r3,|L68.300|
0000a4  e9cd0100          STRD     r0,r1,[sp,#0]         ;8180
0000a8  f7fffffe          BL       __aeabi_dmul
0000ac  4632              MOV      r2,r6                 ;8180
0000ae  463b              MOV      r3,r7                 ;8180
0000b0  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8180
0000b4  4620              MOV      r0,r4                 ;8180
0000b6  4629              MOV      r1,r5                 ;8180
0000b8  f7fffffe          BL       __aeabi_dsub
0000bc  e9cd0102          STRD     r0,r1,[sp,#8]         ;8180
0000c0  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8180
0000c4  f7fffffe          BL       __aeabi_dadd
0000c8  4680              MOV      r8,r0                 ;8180
0000ca  4689              MOV      r9,r1                 ;8180
0000cc  e028              B        |L68.288|
                  |L68.206|
0000ce  4622              MOV      r2,r4                 ;8184
0000d0  462b              MOV      r3,r5                 ;8184
0000d2  4630              MOV      r0,r6                 ;8184
0000d4  4639              MOV      r1,r7                 ;8184
0000d6  f7fffffe          BL       __aeabi_cdcmple
0000da  d807              BHI      |L68.236|
0000dc  4a12              LDR      r2,|L68.296|
0000de  4b13              LDR      r3,|L68.300|
0000e0  4630              MOV      r0,r6                 ;8185
0000e2  4639              MOV      r1,r7                 ;8185
0000e4  f7fffffe          BL       __aeabi_dadd
0000e8  4606              MOV      r6,r0                 ;8185
0000ea  460f              MOV      r7,r1                 ;8185
                  |L68.236|
0000ec  f10a0001          ADD      r0,r10,#1             ;8186
0000f0  f7fffffe          BL       __aeabi_i2d
0000f4  4a0c              LDR      r2,|L68.296|
0000f6  4b0d              LDR      r3,|L68.300|
0000f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;8186
0000fc  f7fffffe          BL       __aeabi_dmul
000100  4632              MOV      r2,r6                 ;8186
000102  463b              MOV      r3,r7                 ;8186
000104  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8186
000108  4620              MOV      r0,r4                 ;8186
00010a  4629              MOV      r1,r5                 ;8186
00010c  f7fffffe          BL       __aeabi_dsub
000110  e9cd0102          STRD     r0,r1,[sp,#8]         ;8186
000114  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8186
000118  f7fffffe          BL       __aeabi_dadd
00011c  4680              MOV      r8,r0                 ;8186
00011e  4689              MOV      r9,r1                 ;8186
                  |L68.288|
000120  4640              MOV      r0,r8                 ;8188
000122  4649              MOV      r1,r9                 ;8188
000124  e776              B        |L68.20|
;;;8190   
                          ENDP

000126  0000              DCW      0x0000
                  |L68.296|
                          DCD      0x54442d18
                  |L68.300|
                          DCD      0x401921fb

                          AREA ||i.init_block||, CODE, READONLY, ALIGN=2

                  init_block PROC
;;;8228   
;;;8229       static int init_block(                        /* ARGUMENTS                                     */
000000  4601              MOV      r1,r0
;;;8230       block_pointer block)                          /* pointer to a block to be initialized or reset */
;;;8231       {
;;;8232           int n;
;;;8233   #ifdef AA
;;;8234           block->a_flag SET_TO OFF;                 /*AA*/
;;;8235   #endif
;;;8236   #ifdef BB
;;;8237           block->b_flag SET_TO OFF;                 /*BB*/
;;;8238   #endif
;;;8239   #ifdef CC
;;;8240           block->c_flag SET_TO OFF;                 /*CC*/
;;;8241   #endif
;;;8242           block->comment[0] SET_TO 0;
000002  f04f0000          MOV      r0,#0
000006  7008              STRB     r0,[r1,#0]
;;;8243           block->d_number SET_TO -1;
000008  f04f30ff          MOV      r0,#0xffffffff
00000c  f8c10100          STR      r0,[r1,#0x100]
;;;8244           block->f_number SET_TO -1.0;
000010  f04f0300          MOV      r3,#0
000014  4828              LDR      r0,|L69.184|
000016  f8c13108          STR      r3,[r1,#0x108]
00001a  f8c1010c          STR      r0,[r1,#0x10c]
;;;8245           for (n SET_TO 0; n < 14; n++)
00001e  f04f0000          MOV      r0,#0
000022  4602              MOV      r2,r0
000024  e008              B        |L69.56|
                  |L69.38|
;;;8246           {
;;;8247               block->g_modes[n] SET_TO -1;
000026  f04f33ff          MOV      r3,#0xffffffff
00002a  f5017088          ADD      r0,r1,#0x110
00002e  f8403022          STR      r3,[r0,r2,LSL #2]
000032  f1020001          ADD      r0,r2,#1              ;8245
000036  4602              MOV      r2,r0                 ;8245
                  |L69.56|
000038  2a0e              CMP      r2,#0xe               ;8245
00003a  dbf4              BLT      |L69.38|
;;;8248           }
;;;8249           block->h_number SET_TO -1;
00003c  f04f30ff          MOV      r0,#0xffffffff
000040  f50171a4          ADD      r1,r1,#0x148
000044  6008              STR      r0,[r1,#0]
;;;8250           block->i_flag SET_TO OFF;
000046  f04f0000          MOV      r0,#0
00004a  6048              STR      r0,[r1,#4]
;;;8251           block->j_flag SET_TO OFF;
00004c  6108              STR      r0,[r1,#0x10]
;;;8252           block->k_flag SET_TO OFF;
00004e  6208              STR      r0,[r1,#0x20]
;;;8253           block->l_number SET_TO -1;
000050  f04f30ff          MOV      r0,#0xffffffff
000054  6308              STR      r0,[r1,#0x30]
;;;8254           block->line_number SET_TO -1;
000056  6348              STR      r0,[r1,#0x34]
;;;8255           block->motion_to_be SET_TO -1;
000058  6388              STR      r0,[r1,#0x38]
;;;8256           block->m_count SET_TO 0;
00005a  f04f0000          MOV      r0,#0
00005e  63c8              STR      r0,[r1,#0x3c]
000060  f5a171a4          SUB      r1,r1,#0x148
;;;8257           for (n SET_TO 0; n < 10; n++)
000064  4602              MOV      r2,r0
000066  e008              B        |L69.122|
                  |L69.104|
;;;8258           {
;;;8259               block->m_modes[n] SET_TO -1;
000068  f04f33ff          MOV      r3,#0xffffffff
00006c  f50170c4          ADD      r0,r1,#0x188
000070  f8403022          STR      r3,[r0,r2,LSL #2]
000074  f1020001          ADD      r0,r2,#1              ;8257
000078  4602              MOV      r2,r0                 ;8257
                  |L69.122|
00007a  2a0a              CMP      r2,#0xa               ;8257
00007c  dbf4              BLT      |L69.104|
;;;8260           }
;;;8261           block->p_number SET_TO -1.0;
00007e  f04f0000          MOV      r0,#0
000082  4b0d              LDR      r3,|L69.184|
000084  f50171d8          ADD      r1,r1,#0x1b0
000088  e9c10300          STRD     r0,r3,[r1,#0]
;;;8262           block->q_number SET_TO -1.0;
00008c  4603              MOV      r3,r0
00008e  480a              LDR      r0,|L69.184|
000090  e9c13002          STRD     r3,r0,[r1,#8]
;;;8263           block->r_flag SET_TO OFF;
000094  f04f0000          MOV      r0,#0
000098  6108              STR      r0,[r1,#0x10]
;;;8264           block->s_number SET_TO -1.0;
00009a  4b07              LDR      r3,|L69.184|
00009c  e9c10308          STRD     r0,r3,[r1,#0x20]
;;;8265           block->t_number SET_TO -1;
0000a0  f04f30ff          MOV      r0,#0xffffffff
0000a4  6288              STR      r0,[r1,#0x28]
;;;8266           block->x_flag SET_TO OFF;
0000a6  f04f0000          MOV      r0,#0
0000aa  62c8              STR      r0,[r1,#0x2c]
;;;8267           block->y_flag SET_TO OFF;
0000ac  6388              STR      r0,[r1,#0x38]
;;;8268           block->z_flag SET_TO OFF;
0000ae  6488              STR      r0,[r1,#0x48]
0000b0  f5a171d8          SUB      r1,r1,#0x1b0
;;;8269   
;;;8270           return RS274NGC_OK;
;;;8271       }
0000b4  4770              BX       lr
;;;8272   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L69.184|
                          DCD      0xbff00000

                          AREA ||i.inverse_time_rate_arc||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_arc PROC
;;;8291   
;;;8292       static int inverse_time_rate_arc(             /* ARGUMENTS                       */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8293       double x1,                                    /* x coord of start point of arc            */
;;;8294       double y1,                                    /* y coord of start point of arc            */
;;;8295       double z1,                                    /* z coord of start point of arc            */
;;;8296       double cx,                                    /* x coord of center of arc                 */
;;;8297       double cy,                                    /* y coord of center of arc                 */
;;;8298       int turn,                                     /* turn of arc                              */
;;;8299       double x2,                                    /* x coord of end point of arc              */
;;;8300       double y2,                                    /* y coord of end point of arc              */
;;;8301       double z2,                                    /* z coord of end point of arc              */
;;;8302       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;8303       setup_pointer settings)                       /* pointer to machine settings              */
;;;8304       {
000004  b091              SUB      sp,sp,#0x44
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddab1a          LDRD     r10,r11,[sp,#0x68]
;;;8305           double length;
;;;8306           double rate;
;;;8307   
;;;8308           length SET_TO find_arc_length (x1, y1, z1, cx, cy, turn, x2, y2, z2);
000012  e9dd0126          LDRD     r0,r1,[sp,#0x98]
000016  e9cd010c          STRD     r0,r1,[sp,#0x30]
00001a  e9dd0124          LDRD     r0,r1,[sp,#0x90]
00001e  e9cd010a          STRD     r0,r1,[sp,#0x28]
000022  e9dd0122          LDRD     r0,r1,[sp,#0x88]
000026  e9cd0108          STRD     r0,r1,[sp,#0x20]
00002a  9820              LDR      r0,[sp,#0x80]
00002c  9006              STR      r0,[sp,#0x18]
00002e  e9dd011e          LDRD     r0,r1,[sp,#0x78]
000032  e9cd0104          STRD     r0,r1,[sp,#0x10]
000036  e9dd011c          LDRD     r0,r1,[sp,#0x70]
00003a  4642              MOV      r2,r8
00003c  464b              MOV      r3,r9
00003e  e9cdab00          STRD     r10,r11,[sp,#0]
000042  e9cd0102          STRD     r0,r1,[sp,#8]
000046  4630              MOV      r0,r6
000048  4639              MOV      r1,r7
00004a  f7fffffe          BL       find_arc_length
00004e  e9cd010e          STRD     r0,r1,[sp,#0x38]
;;;8309           rate SET_TO MAX(0.1, (length * block->f_number));
000052  9828              LDR      r0,[sp,#0xa0]
000054  f5007084          ADD      r0,r0,#0x108
000058  c803              LDM      r0,{r0,r1}
00005a  e9cd010a          STRD     r0,r1,[sp,#0x28]
00005e  e9dd230e          LDRD     r2,r3,[sp,#0x38]
000062  f7fffffe          BL       __aeabi_dmul
000066  4a11              LDR      r2,|L70.172|
000068  4b11              LDR      r3,|L70.176|
00006a  e9cd010c          STRD     r0,r1,[sp,#0x30]
00006e  f7fffffe          BL       __aeabi_cdcmple
000072  d202              BCS      |L70.122|
000074  480d              LDR      r0,|L70.172|
000076  490e              LDR      r1,|L70.176|
000078  e009              B        |L70.142|
                  |L70.122|
00007a  9928              LDR      r1,[sp,#0xa0]
00007c  f5017184          ADD      r1,r1,#0x108
000080  c903              LDM      r1,{r0,r1}
000082  e9cd010c          STRD     r0,r1,[sp,#0x30]
000086  e9dd230e          LDRD     r2,r3,[sp,#0x38]
00008a  f7fffffe          BL       __aeabi_dmul
                  |L70.142|
00008e  4604              MOV      r4,r0
000090  460d              MOV      r5,r1
;;;8310           SET_FEED_RATE (rate);
000092  4620              MOV      r0,r4
000094  4629              MOV      r1,r5
000096  f7fffffe          BL       SET_FEED_RATE
;;;8311           settings->feed_rate SET_TO rate;
00009a  9a29              LDR      r2,[sp,#0xa4]
00009c  f5026281          ADD      r2,r2,#0x408
0000a0  c230              STM      r2!,{r4,r5}
;;;8312   
;;;8313           return RS274NGC_OK;
0000a2  2000              MOVS     r0,#0
;;;8314       }
0000a4  b011              ADD      sp,sp,#0x44
0000a6  e8bd8ff0          POP      {r4-r11,pc}
;;;8315   
                          ENDP

0000aa  0000              DCW      0x0000
                  |L70.172|
                          DCD      0x9999999a
                  |L70.176|
                          DCD      0x3fb99999

                          AREA ||i.inverse_time_rate_arc2||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_arc2 PROC
;;;8337   
;;;8338       static int inverse_time_rate_arc2(            /* ARGUMENTS */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8339       double start_x,                               /* x coord of last program point, extra arc center x */
;;;8340       double start_y,                               /* y coord of last program point, extra arc center y */
;;;8341       int turn1,                                    /* turn of extra arc                                 */
;;;8342       double mid_x,                                 /* x coord of end point of extra arc                 */
;;;8343       double mid_y,                                 /* y coord of end point of extra arc                 */
;;;8344       double cx,                                    /* x coord of center of main arc                     */
;;;8345       double cy,                                    /* y coord of center of main arc                     */
;;;8346       int turn2,                                    /* turn of main arc                                  */
;;;8347       double end_x,                                 /* x coord of end point of main arc                  */
;;;8348       double end_y,                                 /* y coord of end point of main arc                  */
;;;8349       double end_z,                                 /* z coord of end point of main arc                  */
;;;8350       block_pointer block,                          /* pointer to a block of RS274 instructions          */
;;;8351       setup_pointer settings)                       /* pointer to machine settings                       */
;;;8352       {
000004  b099              SUB      sp,sp,#0x64
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddba34          LDRD     r11,r10,[sp,#0xd0]
;;;8353           double length;
;;;8354           double rate;
;;;8355   
;;;8356           length SET_TO (find_arc_length (settings->current_x, settings->current_y,
000012  e9dd0132          LDRD     r0,r1,[sp,#0xc8]
000016  e9cd010c          STRD     r0,r1,[sp,#0x30]
00001a  e9dd0130          LDRD     r0,r1,[sp,#0xc0]
00001e  e9cd010a          STRD     r0,r1,[sp,#0x28]
000022  e9dd012e          LDRD     r0,r1,[sp,#0xb8]
000026  e9cd0108          STRD     r0,r1,[sp,#0x20]
00002a  982c              LDR      r0,[sp,#0xb0]
00002c  9006              STR      r0,[sp,#0x18]
00002e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]
000032  e9cd0104          STRD     r0,r1,[sp,#0x10]
000036  e9dd0128          LDRD     r0,r1,[sp,#0xa0]
00003a  e9cd0102          STRD     r0,r1,[sp,#8]
00003e  f50a7068          ADD      r0,r10,#0x3a0
000042  c803              LDM      r0,{r0,r1}
000044  e9cd0100          STRD     r0,r1,[sp,#0]
000048  a824              ADD      r0,sp,#0x90
00004a  c80f              LDM      r0,{r0-r3}
00004c  f7fffffe          BL       find_arc_length
000050  e9cd0114          STRD     r0,r1,[sp,#0x50]
000054  f50a7068          ADD      r0,r10,#0x3a0
000058  c803              LDM      r0,{r0,r1}
00005a  e9cd010c          STRD     r0,r1,[sp,#0x30]
00005e  e9dd0126          LDRD     r0,r1,[sp,#0x98]
000062  e9cd010a          STRD     r0,r1,[sp,#0x28]
000066  e9dd0124          LDRD     r0,r1,[sp,#0x90]
00006a  e9cd0108          STRD     r0,r1,[sp,#0x20]
00006e  9822              LDR      r0,[sp,#0x88]
000070  a902              ADD      r1,sp,#8
000072  e8a103c0          STM      r1!,{r6-r9}
000076  9006              STR      r0,[sp,#0x18]
000078  f50a7068          ADD      r0,r10,#0x3a0
00007c  c803              LDM      r0,{r0,r1}
00007e  e9cd0100          STRD     r0,r1,[sp,#0]
000082  f50a7066          ADD      r0,r10,#0x398
000086  c803              LDM      r0,{r0,r1}
000088  e9cd0110          STRD     r0,r1,[sp,#0x40]
00008c  f50a7064          ADD      r0,r10,#0x390
000090  c803              LDM      r0,{r0,r1}
000092  e9cd010e          STRD     r0,r1,[sp,#0x38]
000096  e9dd2310          LDRD     r2,r3,[sp,#0x40]
00009a  f7fffffe          BL       find_arc_length
00009e  e9cd0112          STRD     r0,r1,[sp,#0x48]
0000a2  e9dd2314          LDRD     r2,r3,[sp,#0x50]
0000a6  f7fffffe          BL       __aeabi_dadd
0000aa  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;8357               settings->current_z, start_x, start_y,
;;;8358               turn1, mid_x, mid_y, settings->current_z) +
;;;8359               find_arc_length(mid_x, mid_y, settings->current_z,
;;;8360               cx, cy, turn2, end_x, end_y, end_z));
;;;8361           rate SET_TO MAX(0.1, (length * block->f_number));
0000ae  f50b7084          ADD      r0,r11,#0x108
0000b2  c803              LDM      r0,{r0,r1}
0000b4  e9cd0112          STRD     r0,r1,[sp,#0x48]
0000b8  e9dd2316          LDRD     r2,r3,[sp,#0x58]
0000bc  f7fffffe          BL       __aeabi_dmul
0000c0  4a0f              LDR      r2,|L71.256|
0000c2  4b10              LDR      r3,|L71.260|
0000c4  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000c8  f7fffffe          BL       __aeabi_cdcmple
0000cc  d202              BCS      |L71.212|
0000ce  480c              LDR      r0,|L71.256|
0000d0  490c              LDR      r1,|L71.260|
0000d2  e008              B        |L71.230|
                  |L71.212|
0000d4  f50b7084          ADD      r0,r11,#0x108
0000d8  c803              LDM      r0,{r0,r1}
0000da  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000de  e9dd2316          LDRD     r2,r3,[sp,#0x58]
0000e2  f7fffffe          BL       __aeabi_dmul
                  |L71.230|
0000e6  4604              MOV      r4,r0
0000e8  460d              MOV      r5,r1
;;;8362           SET_FEED_RATE (rate);
0000ea  4620              MOV      r0,r4
0000ec  4629              MOV      r1,r5
0000ee  f7fffffe          BL       SET_FEED_RATE
;;;8363           settings->feed_rate SET_TO rate;
0000f2  f50a6081          ADD      r0,r10,#0x408
0000f6  c030              STM      r0!,{r4,r5}
;;;8364   
;;;8365           return RS274NGC_OK;
0000f8  2000              MOVS     r0,#0
;;;8366       }
0000fa  b019              ADD      sp,sp,#0x64
0000fc  e8bd8ff0          POP      {r4-r11,pc}
;;;8367   
                          ENDP

                  |L71.256|
                          DCD      0x9999999a
                  |L71.260|
                          DCD      0x3fb99999

                          AREA ||i.inverse_time_rate_as||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_as PROC
;;;8390   
;;;8391       static int inverse_time_rate_as(              /* ARGUMENTS */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;8392       double start_x,                               /* x coord of last program point, extra arc center x */
;;;8393       double start_y,                               /* y coord of last program point, extra arc center y */
;;;8394       int turn,                                     /* turn of extra arc                                 */
;;;8395       double mid_x,                                 /* x coord of end point of extra arc                 */
;;;8396       double mid_y,                                 /* y coord of end point of extra arc                 */
;;;8397       double end_x,                                 /* x coord of end point of straight line             */
;;;8398       double end_y,                                 /* y coord of end point of straight line             */
;;;8399       double end_z,                                 /* z coord of end point of straight line             */
;;;8400   #ifdef AA
;;;8401       double AA_end,                                /* A coord of end point of straight line       *//*AA*/
;;;8402   #endif
;;;8403   #ifdef BB
;;;8404       double BB_end,                                /* B coord of end point of straight line       *//*BB*/
;;;8405   #endif
;;;8406   #ifdef CC
;;;8407       double CC_end,                                /* C coord of end point of straight line       *//*CC*/
;;;8408   #endif
;;;8409       block_pointer block,                          /* pointer to a block of RS274 instructions          */
;;;8410       setup_pointer settings)                       /* pointer to machine settings                       */
;;;8411       {
000004  b098              SUB      sp,sp,#0x60
000006  e9ddba32          LDRD     r11,r10,[sp,#0xc8]
00000a  ac28              ADD      r4,sp,#0xa0
00000c  ccf0              LDM      r4,{r4-r7}
;;;8412           double length;
;;;8413           double rate;
;;;8414   
;;;8415           length SET_TO (find_arc_length (settings->current_x, settings->current_y,
00000e  f50a7068          ADD      r0,r10,#0x3a0
000012  c803              LDM      r0,{r0,r1}
000014  e9cd6704          STRD     r6,r7,[sp,#0x10]
000018  e9cd4502          STRD     r4,r5,[sp,#8]
00001c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000020  e9dd0130          LDRD     r0,r1,[sp,#0xc0]
000024  e9cd0100          STRD     r0,r1,[sp,#0]
000028  a82c              ADD      r0,sp,#0xb0
00002a  c80f              LDM      r0,{r0-r3}
00002c  f7fffffe          BL       find_straight_length
000030  e9cd0114          STRD     r0,r1,[sp,#0x50]
000034  f50a7068          ADD      r0,r10,#0x3a0
000038  c803              LDM      r0,{r0,r1}
00003a  aa08              ADD      r2,sp,#0x20
00003c  c2f0              STM      r2!,{r4-r7}
00003e  e9cd010c          STRD     r0,r1,[sp,#0x30]
000042  9826              LDR      r0,[sp,#0x98]
000044  9006              STR      r0,[sp,#0x18]
000046  e9dd011a          LDRD     r0,r1,[sp,#0x68]
00004a  e9cd0104          STRD     r0,r1,[sp,#0x10]
00004e  e9dd0118          LDRD     r0,r1,[sp,#0x60]
000052  e9cd0102          STRD     r0,r1,[sp,#8]
000056  f50a7068          ADD      r0,r10,#0x3a0
00005a  c803              LDM      r0,{r0,r1}
00005c  e9cd0100          STRD     r0,r1,[sp,#0]
000060  f50a7066          ADD      r0,r10,#0x398
000064  c803              LDM      r0,{r0,r1}
000066  e9cd0110          STRD     r0,r1,[sp,#0x40]
00006a  f50a7064          ADD      r0,r10,#0x390
00006e  c803              LDM      r0,{r0,r1}
000070  e9cd010e          STRD     r0,r1,[sp,#0x38]
000074  e9dd2310          LDRD     r2,r3,[sp,#0x40]
000078  f7fffffe          BL       find_arc_length
00007c  e9cd0112          STRD     r0,r1,[sp,#0x48]
000080  e9dd2314          LDRD     r2,r3,[sp,#0x50]
000084  f7fffffe          BL       __aeabi_dadd
000088  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;8416               settings->current_z, start_x, start_y,
;;;8417               turn, mid_x, mid_y, settings->current_z) +
;;;8418               find_straight_length(end_x, end_y,
;;;8419               end_z
;;;8420       #ifdef AA
;;;8421               , AA_end
;;;8422       #endif
;;;8423   
;;;8424       #ifdef BB
;;;8425               , BB_end
;;;8426       #endif
;;;8427   
;;;8428       #ifdef CC
;;;8429               , CC_end
;;;8430       #endif
;;;8431               , mid_x, mid_y,
;;;8432               settings->current_z
;;;8433       #ifdef AA
;;;8434               , AA_end
;;;8435       #endif
;;;8436   
;;;8437       #ifdef BB
;;;8438               , BB_end
;;;8439       #endif
;;;8440   
;;;8441       #ifdef CC
;;;8442               , CC_end
;;;8443       #endif
;;;8444               ));
;;;8445           rate SET_TO MAX(0.1, (length * block->f_number));
00008c  f50b7084          ADD      r0,r11,#0x108
000090  c803              LDM      r0,{r0,r1}
000092  e9cd0112          STRD     r0,r1,[sp,#0x48]
000096  e9dd2316          LDRD     r2,r3,[sp,#0x58]
00009a  f7fffffe          BL       __aeabi_dmul
00009e  4a10              LDR      r2,|L72.224|
0000a0  4b10              LDR      r3,|L72.228|
0000a2  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000a6  f7fffffe          BL       __aeabi_cdcmple
0000aa  d202              BCS      |L72.178|
0000ac  480c              LDR      r0,|L72.224|
0000ae  490d              LDR      r1,|L72.228|
0000b0  e008              B        |L72.196|
                  |L72.178|
0000b2  f50b7084          ADD      r0,r11,#0x108
0000b6  c803              LDM      r0,{r0,r1}
0000b8  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000bc  e9dd2316          LDRD     r2,r3,[sp,#0x58]
0000c0  f7fffffe          BL       __aeabi_dmul
                  |L72.196|
0000c4  4680              MOV      r8,r0
0000c6  4689              MOV      r9,r1
;;;8446           SET_FEED_RATE (rate);
0000c8  4640              MOV      r0,r8
0000ca  4649              MOV      r1,r9
0000cc  f7fffffe          BL       SET_FEED_RATE
;;;8447           settings->feed_rate SET_TO rate;
0000d0  f8ca940c          STR      r9,[r10,#0x40c]
0000d4  f8ca8408          STR      r8,[r10,#0x408]
;;;8448   
;;;8449           return RS274NGC_OK;
0000d8  2000              MOVS     r0,#0
;;;8450       }
0000da  b01c              ADD      sp,sp,#0x70
0000dc  e8bd9ff0          POP      {r4-r12,pc}
;;;8451   
                          ENDP

                  |L72.224|
                          DCD      0x9999999a
                  |L72.228|
                          DCD      0x3fb99999

                          AREA ||i.inverse_time_rate_straight||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_straight PROC
;;;8469   
;;;8470       static int inverse_time_rate_straight(        /* ARGUMENTS                    */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8471       double end_x,                                 /* x coordinate of end point of straight line */
;;;8472       double end_y,                                 /* y coordinate of end point of straight line */
;;;8473       double end_z,                                 /* z coordinate of end point of straight line */
;;;8474   #ifdef AA
;;;8475       double AA_end,                                /* A coordinate of end point of straight line *//*AA*/
;;;8476   #endif
;;;8477   #ifdef BB
;;;8478       double BB_end,                                /* B coordinate of end point of straight line *//*BB*/
;;;8479   #endif
;;;8480   #ifdef CC
;;;8481       double CC_end,                                /* C coordinate of end point of straight line *//*CC*/
;;;8482   #endif
;;;8483       block_pointer block,                          /* pointer to a block of RS274 instructions   */
;;;8484       setup_pointer settings)                       /* pointer to machine settings                */
;;;8485       {
000004  b08b              SUB      sp,sp,#0x2c
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddba16          LDRD     r11,r10,[sp,#0x58]
;;;8486           static char name[] SET_TO "inverse_time_rate_straight";
;;;8487           double length;
;;;8488           double rate;
;;;8489   
;;;8490           length SET_TO find_straight_length
000012  f50a7068          ADD      r0,r10,#0x3a0
000016  c803              LDM      r0,{r0,r1}
000018  e9cd0106          STRD     r0,r1,[sp,#0x18]
00001c  f50a7066          ADD      r0,r10,#0x398
000020  c803              LDM      r0,{r0,r1}
000022  e9cd0104          STRD     r0,r1,[sp,#0x10]
000026  f50a7064          ADD      r0,r10,#0x390
00002a  c803              LDM      r0,{r0,r1}
00002c  e9cd0102          STRD     r0,r1,[sp,#8]
000030  e9dd0114          LDRD     r0,r1,[sp,#0x50]
000034  4642              MOV      r2,r8
000036  464b              MOV      r3,r9
000038  e9cd0100          STRD     r0,r1,[sp,#0]
00003c  4630              MOV      r0,r6
00003e  4639              MOV      r1,r7
000040  f7fffffe          BL       find_straight_length
000044  e9cd0108          STRD     r0,r1,[sp,#0x20]
;;;8491               (end_x, end_y, end_z
;;;8492       #ifdef AA
;;;8493               , AA_end
;;;8494       #endif
;;;8495   
;;;8496       #ifdef BB
;;;8497               , BB_end
;;;8498       #endif
;;;8499   
;;;8500       #ifdef CC
;;;8501               , CC_end
;;;8502       #endif
;;;8503               , settings->current_x,
;;;8504               settings->current_y, settings->current_z
;;;8505   
;;;8506       #ifdef AA
;;;8507               , settings->AA_current
;;;8508       #endif
;;;8509   
;;;8510       #ifdef BB
;;;8511               , settings->BB_current
;;;8512       #endif
;;;8513   
;;;8514       #ifdef CC
;;;8515               , settings->CC_current
;;;8516       #endif
;;;8517               );
;;;8518           rate SET_TO MAX(0.1, (length * block->f_number));
000048  f50b7084          ADD      r0,r11,#0x108
00004c  c803              LDM      r0,{r0,r1}
00004e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000052  e9dd2308          LDRD     r2,r3,[sp,#0x20]
000056  f7fffffe          BL       __aeabi_dmul
00005a  4a10              LDR      r2,|L73.156|
00005c  4b10              LDR      r3,|L73.160|
00005e  e9cd0106          STRD     r0,r1,[sp,#0x18]
000062  f7fffffe          BL       __aeabi_cdcmple
000066  d202              BCS      |L73.110|
000068  480c              LDR      r0,|L73.156|
00006a  490d              LDR      r1,|L73.160|
00006c  e008              B        |L73.128|
                  |L73.110|
00006e  f50b7084          ADD      r0,r11,#0x108
000072  c803              LDM      r0,{r0,r1}
000074  e9cd0106          STRD     r0,r1,[sp,#0x18]
000078  e9dd2308          LDRD     r2,r3,[sp,#0x20]
00007c  f7fffffe          BL       __aeabi_dmul
                  |L73.128|
000080  4604              MOV      r4,r0
000082  460d              MOV      r5,r1
;;;8519           SET_FEED_RATE (rate);
000084  4620              MOV      r0,r4
000086  4629              MOV      r1,r5
000088  f7fffffe          BL       SET_FEED_RATE
;;;8520           settings->feed_rate SET_TO rate;
00008c  f50a6081          ADD      r0,r10,#0x408
000090  c030              STM      r0!,{r4,r5}
;;;8521   
;;;8522           return RS274NGC_OK;
000092  2000              MOVS     r0,#0
;;;8523       }
000094  b00b              ADD      sp,sp,#0x2c
000096  e8bd8ff0          POP      {r4-r11,pc}
;;;8524   
                          ENDP

00009a  0000              DCW      0x0000
                  |L73.156|
                          DCD      0x9999999a
                  |L73.160|
                          DCD      0x3fb99999

                          AREA ||i.parse_line||, CODE, READONLY, ALIGN=2

                  parse_line PROC
;;;8545   
;;;8546       static int parse_line(                        /* ARGUMENTS                            */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;8547       char * line,                                  /* array holding a line of RS274 code   */
;;;8548       block_pointer block,                          /* pointer to a block to be filled      */
;;;8549       setup_pointer settings)                       /* pointer to machine settings          */
;;;8550       {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;8551           static char name[] SET_TO "parse_line";
;;;8552           int status;
;;;8553   
;;;8554           CHP(init_block (block));
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       init_block
000010  0007              MOVS     r7,r0
000012  d027              BEQ      |L74.100|
000014  4857              LDR      r0,|L74.372|
000016  f8d0014c          LDR      r0,[r0,#0x14c]
00001a  2831              CMP      r0,#0x31
00001c  da20              BGE      |L74.96|
00001e  4955              LDR      r1,|L74.372|
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  1c49              ADDS     r1,r1,#1
00002a  4a52              LDR      r2,|L74.372|
00002c  f8c2114c          STR      r1,[r2,#0x14c]
000030  eb030183          ADD      r1,r3,r3,LSL #2
000034  f6a26254          SUB      r2,r2,#0xe54
000038  eb021101          ADD      r1,r2,r1,LSL #4
00003c  4608              MOV      r0,r1
00003e  494e              LDR      r1,|L74.376|
000040  f7fffffe          BL       strcpy
000044  f04f0100          MOV      r1,#0
000048  484a              LDR      r0,|L74.372|
00004a  f8d0014c          LDR      r0,[r0,#0x14c]
00004e  eb000080          ADD      r0,r0,r0,LSL #2
000052  4a4a              LDR      r2,|L74.380|
000054  eb021000          ADD      r0,r2,r0,LSL #4
000058  7001              STRB     r1,[r0,#0]
00005a  4638              MOV      r0,r7
                  |L74.92|
;;;8555           CHP(read_items(block, line, settings->parameters));
;;;8556           CHP(enhance_block(block, settings));
;;;8557           CHP(check_items (block, settings));
;;;8558           return RS274NGC_OK;
;;;8559       }
00005c  e8bd81f0          POP      {r4-r8,pc}
                  |L74.96|
000060  4638              MOV      r0,r7                 ;8554
000062  e7fb              B        |L74.92|
                  |L74.100|
000064  f50462c9          ADD      r2,r4,#0x648          ;8555
000068  4629              MOV      r1,r5                 ;8555
00006a  4630              MOV      r0,r6                 ;8555
00006c  f7fffffe          BL       read_items
000070  0007              MOVS     r7,r0                 ;8555
000072  d025              BEQ      |L74.192|
000074  483f              LDR      r0,|L74.372|
000076  f8d0014c          LDR      r0,[r0,#0x14c]        ;8555
00007a  2831              CMP      r0,#0x31              ;8555
00007c  da1e              BGE      |L74.188|
00007e  493d              LDR      r1,|L74.372|
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;8555
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;8555
000088  1c49              ADDS     r1,r1,#1              ;8555
00008a  4a3a              LDR      r2,|L74.372|
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;8555
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;8555
000094  4a39              LDR      r2,|L74.380|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;8555
00009a  4608              MOV      r0,r1                 ;8555
00009c  4936              LDR      r1,|L74.376|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;8555
0000a6  4833              LDR      r0,|L74.372|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;8555
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;8555
0000b0  4a32              LDR      r2,|L74.380|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;8555
0000b6  7001              STRB     r1,[r0,#0]            ;8555
0000b8  4638              MOV      r0,r7                 ;8555
0000ba  e7cf              B        |L74.92|
                  |L74.188|
0000bc  4638              MOV      r0,r7                 ;8555
0000be  e7cd              B        |L74.92|
                  |L74.192|
0000c0  4621              MOV      r1,r4                 ;8556
0000c2  4630              MOV      r0,r6                 ;8556
0000c4  f7fffffe          BL       enhance_block
0000c8  0007              MOVS     r7,r0                 ;8556
0000ca  d025              BEQ      |L74.280|
0000cc  4829              LDR      r0,|L74.372|
0000ce  f8d0014c          LDR      r0,[r0,#0x14c]        ;8556
0000d2  2831              CMP      r0,#0x31              ;8556
0000d4  da1e              BGE      |L74.276|
0000d6  4927              LDR      r1,|L74.372|
0000d8  f8d1314c          LDR      r3,[r1,#0x14c]        ;8556
0000dc  f8d1114c          LDR      r1,[r1,#0x14c]        ;8556
0000e0  1c49              ADDS     r1,r1,#1              ;8556
0000e2  4a24              LDR      r2,|L74.372|
0000e4  f8c2114c          STR      r1,[r2,#0x14c]        ;8556
0000e8  eb030183          ADD      r1,r3,r3,LSL #2       ;8556
0000ec  4a23              LDR      r2,|L74.380|
0000ee  eb021101          ADD      r1,r2,r1,LSL #4       ;8556
0000f2  4608              MOV      r0,r1                 ;8556
0000f4  4920              LDR      r1,|L74.376|
0000f6  f7fffffe          BL       strcpy
0000fa  f04f0100          MOV      r1,#0                 ;8556
0000fe  481d              LDR      r0,|L74.372|
000100  f8d0014c          LDR      r0,[r0,#0x14c]        ;8556
000104  eb000080          ADD      r0,r0,r0,LSL #2       ;8556
000108  4a1c              LDR      r2,|L74.380|
00010a  eb021000          ADD      r0,r2,r0,LSL #4       ;8556
00010e  7001              STRB     r1,[r0,#0]            ;8556
000110  4638              MOV      r0,r7                 ;8556
000112  e7a3              B        |L74.92|
                  |L74.276|
000114  4638              MOV      r0,r7                 ;8556
000116  e7a1              B        |L74.92|
                  |L74.280|
000118  4621              MOV      r1,r4                 ;8557
00011a  4630              MOV      r0,r6                 ;8557
00011c  f7fffffe          BL       check_items
000120  0007              MOVS     r7,r0                 ;8557
000122  d025              BEQ      |L74.368|
000124  4813              LDR      r0,|L74.372|
000126  f8d0014c          LDR      r0,[r0,#0x14c]        ;8557
00012a  2831              CMP      r0,#0x31              ;8557
00012c  da1e              BGE      |L74.364|
00012e  4911              LDR      r1,|L74.372|
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;8557
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;8557
000138  1c49              ADDS     r1,r1,#1              ;8557
00013a  4a0e              LDR      r2,|L74.372|
00013c  f8c2114c          STR      r1,[r2,#0x14c]        ;8557
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;8557
000144  4a0d              LDR      r2,|L74.380|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;8557
00014a  4608              MOV      r0,r1                 ;8557
00014c  490a              LDR      r1,|L74.376|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;8557
000156  4807              LDR      r0,|L74.372|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;8557
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;8557
000160  4a06              LDR      r2,|L74.380|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;8557
000166  7001              STRB     r1,[r0,#0]            ;8557
000168  4638              MOV      r0,r7                 ;8557
00016a  e777              B        |L74.92|
                  |L74.364|
00016c  4638              MOV      r0,r7                 ;8557
00016e  e775              B        |L74.92|
                  |L74.368|
000170  2000              MOVS     r0,#0                 ;8558
000172  e773              B        |L74.92|
;;;8560   
                          ENDP

                  |L74.372|
                          DCD      _setup+0xc000
                  |L74.376|
                          DCD      |symbol_number.499|
                  |L74.380|
                          DCD      _setup+0xb1ac

                          AREA ||i.precedence||, CODE, READONLY, ALIGN=1

                  precedence PROC
;;;8575   
;;;8576       static int precedence(                        /* ARGUMENTS  */
000000  4601              MOV      r1,r0
;;;8577       int an_operator)
;;;8578       {
;;;8579           if (an_operator IS RIGHT_BRACKET)
000002  290a              CMP      r1,#0xa
000004  d101              BNE      |L75.10|
;;;8580               return 1;
000006  2001              MOVS     r0,#1
                  |L75.8|
;;;8581           else if (an_operator IS POWER)
;;;8582               return 4;
;;;8583           else if (an_operator >= AND2)
;;;8584               return 2;
;;;8585           else
;;;8586               return 3;
;;;8587       }
000008  4770              BX       lr
                  |L75.10|
00000a  2903              CMP      r1,#3                 ;8581
00000c  d101              BNE      |L75.18|
00000e  2004              MOVS     r0,#4                 ;8582
000010  e7fa              B        |L75.8|
                  |L75.18|
000012  2905              CMP      r1,#5                 ;8583
000014  db01              BLT      |L75.26|
000016  2002              MOVS     r0,#2                 ;8584
000018  e7f6              B        |L75.8|
                  |L75.26|
00001a  2003              MOVS     r0,#3                 ;8586
00001c  e7f4              B        |L75.8|
;;;8588   
                          ENDP


                          AREA ||i.read_a||, CODE, READONLY, ALIGN=2

                  read_a PROC
;;;8627   
;;;8628       static int read_a(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;8629       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8630       int * counter,                                /* pointer to a counter for position on the line  */
;;;8631       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;8632       double * parameters)                          /* array of system parameters                     */
;;;8633       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;8634           static char name[] SET_TO "read_a";
;;;8635           double value;
;;;8636           int status;
;;;8637   
;;;8638           CHK((line[*counter] ISNT 'a'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2861              CMP      r0,#0x61
000012  d027              BEQ      |L76.100|
000014  f04f0100          MOV      r1,#0
000018  482c              LDR      r0,|L76.204|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4923              LDR      r1,|L76.208|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4820              LDR      r0,|L76.204|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a1f              LDR      r2,|L76.212|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L76.96|
;;;8639           *counter SET_TO (*counter + 1);
;;;8640   #ifdef AA
;;;8641      /*AA*/
;;;8642           CHK((block->a_flag ISNT OFF), NCE_MULTIPLE_A_WORDS_ON_ONE_LINE);
;;;8643   #endif
;;;8644           CHP(read_real_value(line, counter, &value, parameters));
;;;8645   #ifdef AA
;;;8646           block->a_flag SET_TO ON;
;;;8647           block->a_number SET_TO value;
;;;8648   #else
;;;8649   #ifdef AXIS_ERROR
;;;8650           ERM(NCE_CANNOT_USE_A_WORD);
;;;8651   #endif                                    /* ifdef AXIS_ERROR */
;;;8652   #endif                                    /* ifdef AA */
;;;8653           return RS274NGC_OK;
;;;8654       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L76.100|
000064  6820              LDR      r0,[r4,#0]            ;8639
000066  f1000001          ADD      r0,r0,#1              ;8639
00006a  6020              STR      r0,[r4,#0]            ;8639
00006c  4633              MOV      r3,r6                 ;8644
00006e  466a              MOV      r2,sp                 ;8644
000070  4621              MOV      r1,r4                 ;8644
000072  4628              MOV      r0,r5                 ;8644
000074  f7fffffe          BL       read_real_value
000078  0007              MOVS     r7,r0                 ;8644
00007a  d025              BEQ      |L76.200|
00007c  4813              LDR      r0,|L76.204|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;8644
000082  2831              CMP      r0,#0x31              ;8644
000084  da1e              BGE      |L76.196|
000086  4911              LDR      r1,|L76.204|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;8644
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8644
000090  1c49              ADDS     r1,r1,#1              ;8644
000092  4a0e              LDR      r2,|L76.204|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8644
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8644
00009c  4a0d              LDR      r2,|L76.212|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8644
0000a2  4608              MOV      r0,r1                 ;8644
0000a4  490a              LDR      r1,|L76.208|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8644
0000ae  4807              LDR      r0,|L76.204|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8644
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8644
0000b8  4a06              LDR      r2,|L76.212|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8644
0000be  7001              STRB     r1,[r0,#0]            ;8644
0000c0  4638              MOV      r0,r7                 ;8644
0000c2  e7cd              B        |L76.96|
                  |L76.196|
0000c4  4638              MOV      r0,r7                 ;8644
0000c6  e7cb              B        |L76.96|
                  |L76.200|
0000c8  2000              MOVS     r0,#0                 ;8653
0000ca  e7c9              B        |L76.96|
;;;8655   
                          ENDP

                  |L76.204|
                          DCD      _setup+0xc000
                  |L76.208|
                          DCD      |symbol_number.500|
                  |L76.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_atan||, CODE, READONLY, ALIGN=2

                  read_atan PROC
;;;8690   
;;;8691       static int read_atan(                         /* ARGUMENTS                                      */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;8692       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8693       int * counter,                                /* pointer to a counter for position on line      */
;;;8694       double * double_ptr,                          /* pointer to double to be read                   */
;;;8695       double * parameters)                          /* array of system parameters                     */
;;;8696       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  469b              MOV      r11,r3
;;;8697           static char name[] SET_TO "read_atan";
;;;8698           double argument2;
;;;8699           int status;
;;;8700   
;;;8701           CHK((line [*counter] ISNT '/'), NCE_SLASH_MISSING_AFTER_FIRST_ATAN_ARGUMENT);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  282f              CMP      r0,#0x2f
000014  d028              BEQ      |L77.104|
000016  f04f0100          MOV      r1,#0
00001a  4851              LDR      r0,|L77.352|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4948              LDR      r1,|L77.356|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4844              LDR      r0,|L77.352|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a44              LDR      r2,|L77.360|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f009c          MOV      r0,#0x9c
                  |L77.98|
;;;8702           *counter SET_TO (*counter + 1);
;;;8703           CHK((line[*counter] ISNT '['),
;;;8704               NCE_LEFT_BRACKET_MISSING_AFTER_SLASH_WITH_ATAN);
;;;8705           CHP(read_real_expression (line, counter, &argument2, parameters));
;;;8706      /* value in radians */
;;;8707           *double_ptr SET_TO atan2(*double_ptr, argument2);
;;;8708      /* convert to degrees */
;;;8709           *double_ptr SET_TO ((*double_ptr * 180.0)/PI);
;;;8710           return RS274NGC_OK;
;;;8711       }
000062  b004              ADD      sp,sp,#0x10
000064  e8bd9ff0          POP      {r4-r12,pc}
                  |L77.104|
000068  6820              LDR      r0,[r4,#0]            ;8702
00006a  f1000001          ADD      r0,r0,#1              ;8702
00006e  6020              STR      r0,[r4,#0]            ;8702
000070  6820              LDR      r0,[r4,#0]            ;8703
000072  f8180000          LDRB     r0,[r8,r0]            ;8703
000076  285b              CMP      r0,#0x5b              ;8703
000078  d025              BEQ      |L77.198|
00007a  f04f0100          MOV      r1,#0                 ;8703
00007e  4838              LDR      r0,|L77.352|
000080  f8c0114c          STR      r1,[r0,#0x14c]        ;8703
000084  4601              MOV      r1,r0                 ;8703
000086  f8d1314c          LDR      r3,[r1,#0x14c]        ;8703
00008a  f8d1114c          LDR      r1,[r1,#0x14c]        ;8703
00008e  f1010101          ADD      r1,r1,#1              ;8703
000092  4602              MOV      r2,r0                 ;8703
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8703
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8703
00009c  4a32              LDR      r2,|L77.360|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8703
0000a2  4608              MOV      r0,r1                 ;8703
0000a4  492f              LDR      r1,|L77.356|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8703
0000ae  482c              LDR      r0,|L77.352|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8703
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8703
0000b8  4a2b              LDR      r2,|L77.360|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8703
0000be  7001              STRB     r1,[r0,#0]            ;8703
0000c0  f04f0060          MOV      r0,#0x60              ;8703
0000c4  e7cd              B        |L77.98|
                  |L77.198|
0000c6  465b              MOV      r3,r11                ;8705
0000c8  aa02              ADD      r2,sp,#8              ;8705
0000ca  4621              MOV      r1,r4                 ;8705
0000cc  4640              MOV      r0,r8                 ;8705
0000ce  f7fffffe          BL       read_real_expression
0000d2  9001              STR      r0,[sp,#4]            ;8705
0000d4  b328              CBZ      r0,|L77.290|
0000d6  4822              LDR      r0,|L77.352|
0000d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;8705
0000dc  2831              CMP      r0,#0x31              ;8705
0000de  da1e              BGE      |L77.286|
0000e0  491f              LDR      r1,|L77.352|
0000e2  f8d1314c          LDR      r3,[r1,#0x14c]        ;8705
0000e6  f8d1114c          LDR      r1,[r1,#0x14c]        ;8705
0000ea  1c49              ADDS     r1,r1,#1              ;8705
0000ec  4a1c              LDR      r2,|L77.352|
0000ee  f8c2114c          STR      r1,[r2,#0x14c]        ;8705
0000f2  eb030183          ADD      r1,r3,r3,LSL #2       ;8705
0000f6  4a1c              LDR      r2,|L77.360|
0000f8  eb021101          ADD      r1,r2,r1,LSL #4       ;8705
0000fc  4608              MOV      r0,r1                 ;8705
0000fe  4919              LDR      r1,|L77.356|
000100  f7fffffe          BL       strcpy
000104  f04f0100          MOV      r1,#0                 ;8705
000108  4815              LDR      r0,|L77.352|
00010a  f8d0014c          LDR      r0,[r0,#0x14c]        ;8705
00010e  eb000080          ADD      r0,r0,r0,LSL #2       ;8705
000112  4a15              LDR      r2,|L77.360|
000114  eb021000          ADD      r0,r2,r0,LSL #4       ;8705
000118  7001              STRB     r1,[r0,#0]            ;8705
00011a  9801              LDR      r0,[sp,#4]            ;8705
00011c  e7a1              B        |L77.98|
                  |L77.286|
00011e  9801              LDR      r0,[sp,#4]            ;8705
000120  e79f              B        |L77.98|
                  |L77.290|
000122  e9d51000          LDRD     r1,r0,[r5,#0]         ;8707
000126  460e              MOV      r6,r1                 ;8707
000128  4607              MOV      r7,r0                 ;8707
00012a  4630              MOV      r0,r6                 ;8707
00012c  4639              MOV      r1,r7                 ;8707
00012e  e9dd2302          LDRD     r2,r3,[sp,#8]         ;8707
000132  f7fffffe          BL       atan2
000136  e9c50100          STRD     r0,r1,[r5,#0]         ;8707
00013a  e9d51000          LDRD     r1,r0,[r5,#0]         ;8709
00013e  460e              MOV      r6,r1                 ;8709
000140  4607              MOV      r7,r0                 ;8709
000142  2200              MOVS     r2,#0                 ;8709
000144  4b09              LDR      r3,|L77.364|
000146  4630              MOV      r0,r6                 ;8709
000148  4639              MOV      r1,r7                 ;8709
00014a  f7fffffe          BL       __aeabi_dmul
00014e  4681              MOV      r9,r0                 ;8709
000150  4a07              LDR      r2,|L77.368|
000152  4b08              LDR      r3,|L77.372|
000154  f7fffffe          BL       __aeabi_ddiv
000158  e9c50100          STRD     r0,r1,[r5,#0]         ;8709
00015c  2000              MOVS     r0,#0                 ;8710
00015e  e780              B        |L77.98|
;;;8712   
                          ENDP

                  |L77.352|
                          DCD      _setup+0xc000
                  |L77.356|
                          DCD      |symbol_number.501|
                  |L77.360|
                          DCD      _setup+0xb1ac
                  |L77.364|
                          DCD      0x40668000
                  |L77.368|
                          DCD      0x54442d18
                  |L77.372|
                          DCD      0x400921fb

                          AREA ||i.read_b||, CODE, READONLY, ALIGN=2

                  read_b PROC
;;;8751   
;;;8752       static int read_b(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;8753       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8754       int * counter,                                /* pointer to a counter for position on the line  */
;;;8755       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;8756       double * parameters)                          /* array of system parameters                     */
;;;8757       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;8758           static char name[] SET_TO "read_b";
;;;8759           double value;
;;;8760           int status;
;;;8761   
;;;8762           CHK((line[*counter] ISNT 'b'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2862              CMP      r0,#0x62
000012  d027              BEQ      |L78.100|
000014  f04f0100          MOV      r1,#0
000018  482c              LDR      r0,|L78.204|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4923              LDR      r1,|L78.208|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4820              LDR      r0,|L78.204|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a1f              LDR      r2,|L78.212|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L78.96|
;;;8763           *counter SET_TO (*counter + 1);
;;;8764   #ifdef BB
;;;8765      /*BB*/
;;;8766           CHK((block->b_flag ISNT OFF), NCE_MULTIPLE_B_WORDS_ON_ONE_LINE);
;;;8767   #endif
;;;8768           CHP(read_real_value(line, counter, &value, parameters));
;;;8769   #ifdef BB
;;;8770           block->b_flag SET_TO ON;
;;;8771           block->b_number SET_TO value;
;;;8772   #else
;;;8773   #ifdef AXIS_ERROR
;;;8774           ERM(NCE_CANNOT_USE_B_WORD);
;;;8775   #endif                                    /* ifdef AXIS_ERROR */
;;;8776   #endif                                    /* ifdef BB */
;;;8777           return RS274NGC_OK;
;;;8778       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L78.100|
000064  6820              LDR      r0,[r4,#0]            ;8763
000066  f1000001          ADD      r0,r0,#1              ;8763
00006a  6020              STR      r0,[r4,#0]            ;8763
00006c  4633              MOV      r3,r6                 ;8768
00006e  466a              MOV      r2,sp                 ;8768
000070  4621              MOV      r1,r4                 ;8768
000072  4628              MOV      r0,r5                 ;8768
000074  f7fffffe          BL       read_real_value
000078  0007              MOVS     r7,r0                 ;8768
00007a  d025              BEQ      |L78.200|
00007c  4813              LDR      r0,|L78.204|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;8768
000082  2831              CMP      r0,#0x31              ;8768
000084  da1e              BGE      |L78.196|
000086  4911              LDR      r1,|L78.204|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;8768
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8768
000090  1c49              ADDS     r1,r1,#1              ;8768
000092  4a0e              LDR      r2,|L78.204|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8768
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8768
00009c  4a0d              LDR      r2,|L78.212|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8768
0000a2  4608              MOV      r0,r1                 ;8768
0000a4  490a              LDR      r1,|L78.208|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8768
0000ae  4807              LDR      r0,|L78.204|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8768
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8768
0000b8  4a06              LDR      r2,|L78.212|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8768
0000be  7001              STRB     r1,[r0,#0]            ;8768
0000c0  4638              MOV      r0,r7                 ;8768
0000c2  e7cd              B        |L78.96|
                  |L78.196|
0000c4  4638              MOV      r0,r7                 ;8768
0000c6  e7cb              B        |L78.96|
                  |L78.200|
0000c8  2000              MOVS     r0,#0                 ;8777
0000ca  e7c9              B        |L78.96|
;;;8779   
                          ENDP

                  |L78.204|
                          DCD      _setup+0xc000
                  |L78.208|
                          DCD      |symbol_number.502|
                  |L78.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_c||, CODE, READONLY, ALIGN=2

                  read_c PROC
;;;8818   
;;;8819       static int read_c(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;8820       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8821       int * counter,                                /* pointer to a counter for position on the line  */
;;;8822       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;8823       double * parameters)                          /* array of system parameters                     */
;;;8824       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;8825           static char name[] SET_TO "read_c";
;;;8826           double value;
;;;8827           int status;
;;;8828   
;;;8829           CHK((line[*counter] ISNT 'c'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2863              CMP      r0,#0x63
000012  d027              BEQ      |L79.100|
000014  f04f0100          MOV      r1,#0
000018  482c              LDR      r0,|L79.204|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4923              LDR      r1,|L79.208|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4820              LDR      r0,|L79.204|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a1f              LDR      r2,|L79.212|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L79.96|
;;;8830           *counter SET_TO (*counter + 1);
;;;8831   #ifdef CC
;;;8832      /*CC*/
;;;8833           CHK((block->c_flag ISNT OFF), NCE_MULTIPLE_C_WORDS_ON_ONE_LINE);
;;;8834   #endif
;;;8835           CHP(read_real_value(line, counter, &value, parameters));
;;;8836   #ifdef CC
;;;8837           block->c_flag SET_TO ON;
;;;8838           block->c_number SET_TO value;
;;;8839   #else
;;;8840   #ifdef AXIS_ERROR
;;;8841           ERM(NCE_CANNOT_USE_C_WORD);
;;;8842   #endif                                    /* ifdef AXIS_ERROR */
;;;8843   #endif                                    /* ifdef CC */
;;;8844           return RS274NGC_OK;
;;;8845       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L79.100|
000064  6820              LDR      r0,[r4,#0]            ;8830
000066  f1000001          ADD      r0,r0,#1              ;8830
00006a  6020              STR      r0,[r4,#0]            ;8830
00006c  4633              MOV      r3,r6                 ;8835
00006e  466a              MOV      r2,sp                 ;8835
000070  4621              MOV      r1,r4                 ;8835
000072  4628              MOV      r0,r5                 ;8835
000074  f7fffffe          BL       read_real_value
000078  0007              MOVS     r7,r0                 ;8835
00007a  d025              BEQ      |L79.200|
00007c  4813              LDR      r0,|L79.204|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;8835
000082  2831              CMP      r0,#0x31              ;8835
000084  da1e              BGE      |L79.196|
000086  4911              LDR      r1,|L79.204|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;8835
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8835
000090  1c49              ADDS     r1,r1,#1              ;8835
000092  4a0e              LDR      r2,|L79.204|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8835
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8835
00009c  4a0d              LDR      r2,|L79.212|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8835
0000a2  4608              MOV      r0,r1                 ;8835
0000a4  490a              LDR      r1,|L79.208|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8835
0000ae  4807              LDR      r0,|L79.204|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8835
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8835
0000b8  4a06              LDR      r2,|L79.212|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8835
0000be  7001              STRB     r1,[r0,#0]            ;8835
0000c0  4638              MOV      r0,r7                 ;8835
0000c2  e7cd              B        |L79.96|
                  |L79.196|
0000c4  4638              MOV      r0,r7                 ;8835
0000c6  e7cb              B        |L79.96|
                  |L79.200|
0000c8  2000              MOVS     r0,#0                 ;8844
0000ca  e7c9              B        |L79.96|
;;;8846   
                          ENDP

                  |L79.204|
                          DCD      _setup+0xc000
                  |L79.208|
                          DCD      |symbol_number.503|
                  |L79.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_comment||, CODE, READONLY, ALIGN=2

                  read_comment PROC
;;;8880   
;;;8881       static int read_comment(                      /* ARGUMENTS                                     */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;8882       char * line,                                  /* string: line of RS274 code being processed    */
;;;8883       int * counter,                                /* pointer to a counter for position on the line */
;;;8884       block_pointer block,                          /* pointer to a block being filled from the line */
;;;8885       double * parameters)                          /* array of system parameters                    */
;;;8886       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;8887           static char name[] SET_TO "read_comment";
;;;8888           int n;
;;;8889   
;;;8890           CHK((line[*counter] ISNT '('), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2828              CMP      r0,#0x28
000012  d027              BEQ      |L80.100|
000014  f04f0100          MOV      r1,#0
000018  4822              LDR      r0,|L80.164|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4919              LDR      r1,|L80.168|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4816              LDR      r0,|L80.164|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a15              LDR      r2,|L80.172|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L80.96|
;;;8891           (*counter)++;
;;;8892           for (n SET_TO 0; line[*counter] ISNT ')' ; (*counter)++, n++)
;;;8893           {
;;;8894               block->comment[n] SET_TO line[*counter];
;;;8895           }
;;;8896           block->comment[n] SET_TO 0;
;;;8897           (*counter)++;
;;;8898           return RS274NGC_OK;
;;;8899       }
000060  e8bd81f0          POP      {r4-r8,pc}
                  |L80.100|
000064  6820              LDR      r0,[r4,#0]            ;8891
000066  f1000001          ADD      r0,r0,#1              ;8891
00006a  6020              STR      r0,[r4,#0]            ;8891
00006c  f04f0600          MOV      r6,#0                 ;8892
000070  e009              B        |L80.134|
                  |L80.114|
000072  6820              LDR      r0,[r4,#0]            ;8894
000074  5c28              LDRB     r0,[r5,r0]            ;8894
000076  55b8              STRB     r0,[r7,r6]            ;8894
000078  6820              LDR      r0,[r4,#0]            ;8892
00007a  f1000001          ADD      r0,r0,#1              ;8892
00007e  6020              STR      r0,[r4,#0]            ;8892
000080  f1060001          ADD      r0,r6,#1              ;8892
000084  4606              MOV      r6,r0                 ;8892
                  |L80.134|
000086  6820              LDR      r0,[r4,#0]            ;8892
000088  5c28              LDRB     r0,[r5,r0]            ;8892
00008a  2829              CMP      r0,#0x29              ;8892
00008c  d1f1              BNE      |L80.114|
00008e  f04f0000          MOV      r0,#0                 ;8896
000092  55b8              STRB     r0,[r7,r6]            ;8896
000094  6820              LDR      r0,[r4,#0]            ;8897
000096  f1000001          ADD      r0,r0,#1              ;8897
00009a  6020              STR      r0,[r4,#0]            ;8897
00009c  f04f0000          MOV      r0,#0                 ;8898
0000a0  e7de              B        |L80.96|
;;;8900   
                          ENDP

0000a2  0000              DCW      0x0000
                  |L80.164|
                          DCD      _setup+0xc000
                  |L80.168|
                          DCD      |symbol_number.504|
                  |L80.172|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_d||, CODE, READONLY, ALIGN=2

                  read_d PROC
;;;8933   
;;;8934       static int read_d(                            /* ARGUMENTS                                     */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;8935       char * line,                                  /* string: line of RS274 code being processed    */
;;;8936       int * counter,                                /* pointer to a counter for position on the line */
;;;8937       block_pointer block,                          /* pointer to a block being filled from the line */
;;;8938       double * parameters)                          /* array of system parameters                    */
;;;8939       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;8940           static char name[] SET_TO "read_d";
;;;8941           int value;
;;;8942           int status;
;;;8943   
;;;8944           CHK((line[*counter] ISNT 'd'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2864              CMP      r0,#0x64
000012  d027              BEQ      |L81.100|
000014  f04f0100          MOV      r1,#0
000018  486e              LDR      r0,|L81.468|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4965              LDR      r1,|L81.472|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4862              LDR      r0,|L81.468|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a61              LDR      r2,|L81.476|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L81.96|
;;;8945           *counter SET_TO (*counter + 1);
;;;8946           CHK((block->d_number > -1), NCE_MULTIPLE_D_WORDS_ON_ONE_LINE);
;;;8947           CHP(read_integer_value(line, counter, &value, parameters));
;;;8948           CHK((value < 0), NCE_NEGATIVE_D_WORD_TOOL_RADIUS_INDEX_USED);
;;;8949           CHK((value > _setup.tool_max), NCE_TOOL_RADIUS_INDEX_TOO_BIG);
;;;8950           block->d_number SET_TO value;
;;;8951           return RS274NGC_OK;
;;;8952       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L81.100|
000064  6820              LDR      r0,[r4,#0]            ;8945
000066  f1000001          ADD      r0,r0,#1              ;8945
00006a  6020              STR      r0,[r4,#0]            ;8945
00006c  f8d50100          LDR      r0,[r5,#0x100]        ;8946
000070  2800              CMP      r0,#0                 ;8946
000072  db25              BLT      |L81.192|
000074  f04f0100          MOV      r1,#0                 ;8946
000078  4856              LDR      r0,|L81.468|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;8946
00007e  4601              MOV      r1,r0                 ;8946
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;8946
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;8946
000088  f1010101          ADD      r1,r1,#1              ;8946
00008c  4602              MOV      r2,r0                 ;8946
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;8946
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;8946
000096  4a51              LDR      r2,|L81.476|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;8946
00009c  4608              MOV      r0,r1                 ;8946
00009e  494e              LDR      r1,|L81.472|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;8946
0000a8  484a              LDR      r0,|L81.468|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;8946
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;8946
0000b2  4a4a              LDR      r2,|L81.476|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;8946
0000b8  7001              STRB     r1,[r0,#0]            ;8946
0000ba  f04f0069          MOV      r0,#0x69              ;8946
0000be  e7cf              B        |L81.96|
                  |L81.192|
0000c0  463b              MOV      r3,r7                 ;8947
0000c2  466a              MOV      r2,sp                 ;8947
0000c4  4621              MOV      r1,r4                 ;8947
0000c6  4630              MOV      r0,r6                 ;8947
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;8947
0000d0  d025              BEQ      |L81.286|
0000d2  4840              LDR      r0,|L81.468|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;8947
0000d8  2831              CMP      r0,#0x31              ;8947
0000da  da1e              BGE      |L81.282|
0000dc  493d              LDR      r1,|L81.468|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;8947
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;8947
0000e6  1c49              ADDS     r1,r1,#1              ;8947
0000e8  4a3a              LDR      r2,|L81.468|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;8947
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;8947
0000f2  4a3a              LDR      r2,|L81.476|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;8947
0000f8  4608              MOV      r0,r1                 ;8947
0000fa  4937              LDR      r1,|L81.472|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;8947
000104  4833              LDR      r0,|L81.468|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;8947
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;8947
00010e  4a33              LDR      r2,|L81.476|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;8947
000114  7001              STRB     r1,[r0,#0]            ;8947
000116  4640              MOV      r0,r8                 ;8947
000118  e7a2              B        |L81.96|
                  |L81.282|
00011a  4640              MOV      r0,r8                 ;8947
00011c  e7a0              B        |L81.96|
                  |L81.286|
00011e  9800              LDR      r0,[sp,#0]            ;8948
000120  2800              CMP      r0,#0                 ;8948
000122  da25              BGE      |L81.368|
000124  f04f0100          MOV      r1,#0                 ;8948
000128  482a              LDR      r0,|L81.468|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;8948
00012e  4601              MOV      r1,r0                 ;8948
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;8948
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;8948
000138  f1010101          ADD      r1,r1,#1              ;8948
00013c  4602              MOV      r2,r0                 ;8948
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;8948
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;8948
000146  4a25              LDR      r2,|L81.476|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;8948
00014c  4608              MOV      r0,r1                 ;8948
00014e  4922              LDR      r1,|L81.472|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;8948
000158  481e              LDR      r0,|L81.468|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;8948
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;8948
000162  4a1e              LDR      r2,|L81.476|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;8948
000168  7001              STRB     r1,[r0,#0]            ;8948
00016a  f04f007a          MOV      r0,#0x7a              ;8948
00016e  e777              B        |L81.96|
                  |L81.368|
000170  4818              LDR      r0,|L81.468|
000172  f8d00158          LDR      r0,[r0,#0x158]        ;8949
000176  9900              LDR      r1,[sp,#0]            ;8949
000178  4288              CMP      r0,r1                 ;8949
00017a  da25              BGE      |L81.456|
00017c  f04f0100          MOV      r1,#0                 ;8949
000180  4814              LDR      r0,|L81.468|
000182  f8c0114c          STR      r1,[r0,#0x14c]        ;8949
000186  4601              MOV      r1,r0                 ;8949
000188  f8d1314c          LDR      r3,[r1,#0x14c]        ;8949
00018c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8949
000190  f1010101          ADD      r1,r1,#1              ;8949
000194  4602              MOV      r2,r0                 ;8949
000196  f8c2114c          STR      r1,[r2,#0x14c]        ;8949
00019a  eb030183          ADD      r1,r3,r3,LSL #2       ;8949
00019e  4a0f              LDR      r2,|L81.476|
0001a0  eb021101          ADD      r1,r2,r1,LSL #4       ;8949
0001a4  4608              MOV      r0,r1                 ;8949
0001a6  490c              LDR      r1,|L81.472|
0001a8  f7fffffe          BL       strcpy
0001ac  f04f0100          MOV      r1,#0                 ;8949
0001b0  4808              LDR      r0,|L81.468|
0001b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;8949
0001b6  eb000080          ADD      r0,r0,r0,LSL #2       ;8949
0001ba  4a08              LDR      r2,|L81.476|
0001bc  eb021000          ADD      r0,r2,r0,LSL #4       ;8949
0001c0  7001              STRB     r1,[r0,#0]            ;8949
0001c2  f04f00a6          MOV      r0,#0xa6              ;8949
0001c6  e74b              B        |L81.96|
                  |L81.456|
0001c8  9800              LDR      r0,[sp,#0]            ;8950
0001ca  f8c50100          STR      r0,[r5,#0x100]        ;8950
0001ce  2000              MOVS     r0,#0                 ;8951
0001d0  e746              B        |L81.96|
;;;8953   
                          ENDP

0001d2  0000              DCW      0x0000
                  |L81.468|
                          DCD      _setup+0xc000
                  |L81.472|
                          DCD      |symbol_number.505|
                  |L81.476|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_f||, CODE, READONLY, ALIGN=2

                  read_f PROC
;;;8985   
;;;8986       static int read_f(                            /* ARGUMENTS                                     */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;8987       char * line,                                  /* string: line of RS274 code being processed    */
;;;8988       int * counter,                                /* pointer to a counter for position on the line */
;;;8989       block_pointer block,                          /* pointer to a block being filled from the line */
;;;8990       double * parameters)                          /* array of system parameters                    */
;;;8991       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;8992           static char name[] SET_TO "read_f";
;;;8993           double value;
;;;8994           int status;
;;;8995   
;;;8996           CHK((line[*counter] ISNT 'f'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2866              CMP      r0,#0x66
000014  d027              BEQ      |L82.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L82.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L82.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L82.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L82.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L82.98|
;;;8997           *counter SET_TO (*counter + 1);
;;;8998           CHK((block->f_number > -1.0), NCE_MULTIPLE_F_WORDS_ON_ONE_LINE);
;;;8999           CHP(read_real_value(line, counter, &value, parameters));
;;;9000           CHK((value < 0.0), NCE_NEGATIVE_F_WORD_USED);
;;;9001           block->f_number SET_TO value;
;;;9002           return RS274NGC_OK;
;;;9003       }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L82.102|
000066  6820              LDR      r0,[r4,#0]            ;8997
000068  f1000001          ADD      r0,r0,#1              ;8997
00006c  6020              STR      r0,[r4,#0]            ;8997
00006e  f8d51108          LDR      r1,[r5,#0x108]        ;8998
000072  460e              MOV      r6,r1                 ;8998
000074  f8d5010c          LDR      r0,[r5,#0x10c]        ;8998
000078  4607              MOV      r7,r0                 ;8998
00007a  f04f0200          MOV      r2,#0                 ;8998
00007e  4b4a              LDR      r3,|L82.424|
000080  4630              MOV      r0,r6                 ;8998
000082  4639              MOV      r1,r7                 ;8998
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L82.214|
00008a  f04f0100          MOV      r1,#0                 ;8998
00008e  4843              LDR      r0,|L82.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;8998
000094  4601              MOV      r1,r0                 ;8998
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;8998
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;8998
00009e  f1010101          ADD      r1,r1,#1              ;8998
0000a2  4602              MOV      r2,r0                 ;8998
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;8998
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;8998
0000ac  4a3d              LDR      r2,|L82.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;8998
0000b2  4608              MOV      r0,r1                 ;8998
0000b4  493a              LDR      r1,|L82.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;8998
0000be  4837              LDR      r0,|L82.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8998
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;8998
0000c8  4a36              LDR      r2,|L82.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;8998
0000ce  7001              STRB     r1,[r0,#0]            ;8998
0000d0  f04f006a          MOV      r0,#0x6a              ;8998
0000d4  e7c5              B        |L82.98|
                  |L82.214|
0000d6  464b              MOV      r3,r9                 ;8999
0000d8  466a              MOV      r2,sp                 ;8999
0000da  4621              MOV      r1,r4                 ;8999
0000dc  4640              MOV      r0,r8                 ;8999
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;8999
0000e6  d025              BEQ      |L82.308|
0000e8  482c              LDR      r0,|L82.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;8999
0000ee  2831              CMP      r0,#0x31              ;8999
0000f0  da1e              BGE      |L82.304|
0000f2  492a              LDR      r1,|L82.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;8999
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;8999
0000fc  1c49              ADDS     r1,r1,#1              ;8999
0000fe  4a27              LDR      r2,|L82.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;8999
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;8999
000108  4a26              LDR      r2,|L82.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;8999
00010e  4608              MOV      r0,r1                 ;8999
000110  4923              LDR      r1,|L82.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;8999
00011a  4820              LDR      r0,|L82.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;8999
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;8999
000124  4a1f              LDR      r2,|L82.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;8999
00012a  7001              STRB     r1,[r0,#0]            ;8999
00012c  4650              MOV      r0,r10                ;8999
00012e  e798              B        |L82.98|
                  |L82.304|
000130  4650              MOV      r0,r10                ;8999
000132  e796              B        |L82.98|
                  |L82.308|
000134  2200              MOVS     r2,#0                 ;9000
000136  4613              MOV      r3,r2                 ;9000
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9000
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d225              BCS      |L82.398|
000142  f04f0100          MOV      r1,#0                 ;9000
000146  4815              LDR      r0,|L82.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;9000
00014c  4601              MOV      r1,r0                 ;9000
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9000
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;9000
000156  f1010101          ADD      r1,r1,#1              ;9000
00015a  4602              MOV      r2,r0                 ;9000
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;9000
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;9000
000164  4a0f              LDR      r2,|L82.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;9000
00016a  4608              MOV      r0,r1                 ;9000
00016c  490c              LDR      r1,|L82.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;9000
000176  4809              LDR      r0,|L82.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;9000
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;9000
000180  4a08              LDR      r2,|L82.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;9000
000186  7001              STRB     r1,[r0,#0]            ;9000
000188  f04f007b          MOV      r0,#0x7b              ;9000
00018c  e769              B        |L82.98|
                  |L82.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9001
000192  f5057284          ADD      r2,r5,#0x108          ;9001
000196  c203              STM      r2!,{r0,r1}           ;9001
000198  2000              MOVS     r0,#0                 ;9002
00019a  e762              B        |L82.98|
;;;9004   
                          ENDP

                  |L82.412|
                          DCD      _setup+0xc000
                  |L82.416|
                          DCD      |symbol_number.506|
                  |L82.420|
                          DCD      _setup+0xb1ac
                  |L82.424|
                          DCD      0xbff00000

                          AREA ||i.read_g||, CODE, READONLY, ALIGN=2

                  read_g PROC
;;;9053   
;;;9054       static int read_g(                            /* ARGUMENTS                                      */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;9055       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9056       int * counter,                                /* pointer to a counter for position on the line  */
;;;9057       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9058       double * parameters)                          /* array of system parameters                     */
;;;9059       {
000004  b087              SUB      sp,sp,#0x1c
000006  4682              MOV      r10,r0
000008  460f              MOV      r7,r1
00000a  4691              MOV      r9,r2
00000c  469b              MOV      r11,r3
;;;9060           static char name[] SET_TO "read_g";
;;;9061           double value_read;
;;;9062           int value;
;;;9063           int mode;
;;;9064           int status;
;;;9065   
;;;9066           CHK((line[*counter] ISNT 'g'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000e  6838              LDR      r0,[r7,#0]
000010  f81a0000          LDRB     r0,[r10,r0]
000014  2867              CMP      r0,#0x67
000016  d028              BEQ      |L83.106|
000018  f04f0100          MOV      r1,#0
00001c  48b2              LDR      r0,|L83.744|
00001e  f8c0114c          STR      r1,[r0,#0x14c]
000022  4601              MOV      r1,r0
000024  f8d1314c          LDR      r3,[r1,#0x14c]
000028  f8d1114c          LDR      r1,[r1,#0x14c]
00002c  f1010101          ADD      r1,r1,#1
000030  4602              MOV      r2,r0
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a06254          SUB      r2,r0,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  49a9              LDR      r1,|L83.748|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  48a6              LDR      r0,|L83.744|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4aa5              LDR      r2,|L83.752|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  f04f0020          MOV      r0,#0x20
                  |L83.100|
;;;9067           *counter SET_TO (*counter + 1);
;;;9068           CHP(read_real_value(line, counter, &value_read, parameters));
;;;9069           value_read SET_TO (10.0 * value_read);
;;;9070           value SET_TO (int)floor(value_read);
;;;9071   
;;;9072           if ((value_read - value) > 0.999)
;;;9073               value SET_TO (int)ceil(value_read);
;;;9074           else if ((value_read - value) > 0.001)
;;;9075               ERM(NCE_G_CODE_OUT_OF_RANGE);
;;;9076   
;;;9077           CHK((value > 999), NCE_G_CODE_OUT_OF_RANGE);
;;;9078           CHK((value < 0), NCE_NEGATIVE_G_CODE_USED);
;;;9079           mode SET_TO _gees[value];
;;;9080           CHK((mode IS -1), NCE_UNKNOWN_G_CODE_USED);
;;;9081           CHK((block->g_modes[mode] ISNT -1),
;;;9082               NCE_TWO_G_CODES_USED_FROM_SAME_MODAL_GROUP);
;;;9083           block->g_modes[mode] SET_TO value;
;;;9084           return RS274NGC_OK;
;;;9085       }
000064  b007              ADD      sp,sp,#0x1c
000066  e8bd8ff0          POP      {r4-r11,pc}
                  |L83.106|
00006a  6838              LDR      r0,[r7,#0]            ;9067
00006c  f1000001          ADD      r0,r0,#1              ;9067
000070  6038              STR      r0,[r7,#0]            ;9067
000072  465b              MOV      r3,r11                ;9068
000074  aa04              ADD      r2,sp,#0x10           ;9068
000076  4639              MOV      r1,r7                 ;9068
000078  4650              MOV      r0,r10                ;9068
00007a  f7fffffe          BL       read_real_value
00007e  9003              STR      r0,[sp,#0xc]          ;9068
000080  b328              CBZ      r0,|L83.206|
000082  4899              LDR      r0,|L83.744|
000084  f8d0014c          LDR      r0,[r0,#0x14c]        ;9068
000088  2831              CMP      r0,#0x31              ;9068
00008a  da1e              BGE      |L83.202|
00008c  4996              LDR      r1,|L83.744|
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9068
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;9068
000096  1c49              ADDS     r1,r1,#1              ;9068
000098  4a93              LDR      r2,|L83.744|
00009a  f8c2114c          STR      r1,[r2,#0x14c]        ;9068
00009e  eb030183          ADD      r1,r3,r3,LSL #2       ;9068
0000a2  4a93              LDR      r2,|L83.752|
0000a4  eb021101          ADD      r1,r2,r1,LSL #4       ;9068
0000a8  4608              MOV      r0,r1                 ;9068
0000aa  4990              LDR      r1,|L83.748|
0000ac  f7fffffe          BL       strcpy
0000b0  f04f0100          MOV      r1,#0                 ;9068
0000b4  488c              LDR      r0,|L83.744|
0000b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;9068
0000ba  eb000080          ADD      r0,r0,r0,LSL #2       ;9068
0000be  4a8c              LDR      r2,|L83.752|
0000c0  eb021000          ADD      r0,r2,r0,LSL #4       ;9068
0000c4  7001              STRB     r1,[r0,#0]            ;9068
0000c6  9803              LDR      r0,[sp,#0xc]          ;9068
0000c8  e7cc              B        |L83.100|
                  |L83.202|
0000ca  9803              LDR      r0,[sp,#0xc]          ;9068
0000cc  e7ca              B        |L83.100|
                  |L83.206|
0000ce  2000              MOVS     r0,#0                 ;9069
0000d0  4988              LDR      r1,|L83.756|
0000d2  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;9069
0000d6  f7fffffe          BL       __aeabi_dmul
0000da  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;9069
0000de  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;9070
0000e2  f7fffffe          BL       floor
0000e6  4604              MOV      r4,r0                 ;9070
0000e8  f7fffffe          BL       __aeabi_d2iz
0000ec  4606              MOV      r6,r0                 ;9070
0000ee  4630              MOV      r0,r6                 ;9072
0000f0  f7fffffe          BL       __aeabi_i2d
0000f4  e9cd0100          STRD     r0,r1,[sp,#0]         ;9072
0000f8  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;9072
0000fc  f7fffffe          BL       __aeabi_drsub
000100  4604              MOV      r4,r0                 ;9072
000102  4a7d              LDR      r2,|L83.760|
000104  4b7d              LDR      r3,|L83.764|
000106  f7fffffe          BL       __aeabi_cdrcmple
00010a  d208              BCS      |L83.286|
00010c  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;9073
000110  f7fffffe          BL       ceil
000114  4604              MOV      r4,r0                 ;9073
000116  f7fffffe          BL       __aeabi_d2iz
00011a  4606              MOV      r6,r0                 ;9073
00011c  e034              B        |L83.392|
                  |L83.286|
00011e  4630              MOV      r0,r6                 ;9074
000120  f7fffffe          BL       __aeabi_i2d
000124  4604              MOV      r4,r0                 ;9074
000126  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;9074
00012a  f7fffffe          BL       __aeabi_drsub
00012e  4a74              LDR      r2,|L83.768|
000130  4b74              LDR      r3,|L83.772|
000132  e9cd0100          STRD     r0,r1,[sp,#0]         ;9074
000136  f7fffffe          BL       __aeabi_cdrcmple
00013a  d225              BCS      |L83.392|
00013c  f04f0100          MOV      r1,#0                 ;9075
000140  4869              LDR      r0,|L83.744|
000142  f8c0114c          STR      r1,[r0,#0x14c]        ;9075
000146  4601              MOV      r1,r0                 ;9075
000148  f8d1314c          LDR      r3,[r1,#0x14c]        ;9075
00014c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9075
000150  f1010101          ADD      r1,r1,#1              ;9075
000154  4602              MOV      r2,r0                 ;9075
000156  f8c2114c          STR      r1,[r2,#0x14c]        ;9075
00015a  eb030183          ADD      r1,r3,r3,LSL #2       ;9075
00015e  4a64              LDR      r2,|L83.752|
000160  eb021101          ADD      r1,r2,r1,LSL #4       ;9075
000164  4608              MOV      r0,r1                 ;9075
000166  4961              LDR      r1,|L83.748|
000168  f7fffffe          BL       strcpy
00016c  f04f0100          MOV      r1,#0                 ;9075
000170  485d              LDR      r0,|L83.744|
000172  f8d0014c          LDR      r0,[r0,#0x14c]        ;9075
000176  eb000080          ADD      r0,r0,r0,LSL #2       ;9075
00017a  4a5d              LDR      r2,|L83.752|
00017c  eb021000          ADD      r0,r2,r0,LSL #4       ;9075
000180  7001              STRB     r1,[r0,#0]            ;9075
000182  f04f0054          MOV      r0,#0x54              ;9075
000186  e76d              B        |L83.100|
                  |L83.392|
000188  f5b67f7a          CMP      r6,#0x3e8             ;9077
00018c  db25              BLT      |L83.474|
00018e  f04f0100          MOV      r1,#0                 ;9077
000192  4855              LDR      r0,|L83.744|
000194  f8c0114c          STR      r1,[r0,#0x14c]        ;9077
000198  4601              MOV      r1,r0                 ;9077
00019a  f8d1314c          LDR      r3,[r1,#0x14c]        ;9077
00019e  f8d1114c          LDR      r1,[r1,#0x14c]        ;9077
0001a2  f1010101          ADD      r1,r1,#1              ;9077
0001a6  4602              MOV      r2,r0                 ;9077
0001a8  f8c2114c          STR      r1,[r2,#0x14c]        ;9077
0001ac  eb030183          ADD      r1,r3,r3,LSL #2       ;9077
0001b0  4a4f              LDR      r2,|L83.752|
0001b2  eb021101          ADD      r1,r2,r1,LSL #4       ;9077
0001b6  4608              MOV      r0,r1                 ;9077
0001b8  494c              LDR      r1,|L83.748|
0001ba  f7fffffe          BL       strcpy
0001be  f04f0100          MOV      r1,#0                 ;9077
0001c2  4849              LDR      r0,|L83.744|
0001c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;9077
0001c8  eb000080          ADD      r0,r0,r0,LSL #2       ;9077
0001cc  4a48              LDR      r2,|L83.752|
0001ce  eb021000          ADD      r0,r2,r0,LSL #4       ;9077
0001d2  7001              STRB     r1,[r0,#0]            ;9077
0001d4  f04f0054          MOV      r0,#0x54              ;9077
0001d8  e744              B        |L83.100|
                  |L83.474|
0001da  2e00              CMP      r6,#0                 ;9078
0001dc  da25              BGE      |L83.554|
0001de  f04f0100          MOV      r1,#0                 ;9078
0001e2  4841              LDR      r0,|L83.744|
0001e4  f8c0114c          STR      r1,[r0,#0x14c]        ;9078
0001e8  4601              MOV      r1,r0                 ;9078
0001ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;9078
0001ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;9078
0001f2  f1010101          ADD      r1,r1,#1              ;9078
0001f6  4602              MOV      r2,r0                 ;9078
0001f8  f8c2114c          STR      r1,[r2,#0x14c]        ;9078
0001fc  eb030183          ADD      r1,r3,r3,LSL #2       ;9078
000200  4a3b              LDR      r2,|L83.752|
000202  eb021101          ADD      r1,r2,r1,LSL #4       ;9078
000206  4608              MOV      r0,r1                 ;9078
000208  4938              LDR      r1,|L83.748|
00020a  f7fffffe          BL       strcpy
00020e  f04f0100          MOV      r1,#0                 ;9078
000212  4835              LDR      r0,|L83.744|
000214  f8d0014c          LDR      r0,[r0,#0x14c]        ;9078
000218  eb000080          ADD      r0,r0,r0,LSL #2       ;9078
00021c  4a34              LDR      r2,|L83.752|
00021e  eb021000          ADD      r0,r2,r0,LSL #4       ;9078
000222  7001              STRB     r1,[r0,#0]            ;9078
000224  f04f007c          MOV      r0,#0x7c              ;9078
000228  e71c              B        |L83.100|
                  |L83.554|
00022a  4837              LDR      r0,|L83.776|
00022c  f8508026          LDR      r8,[r0,r6,LSL #2]     ;9079
000230  f1180001          ADDS     r0,r8,#1              ;9080
000234  d124              BNE      |L83.640|
000236  4601              MOV      r1,r0                 ;9080
000238  482b              LDR      r0,|L83.744|
00023a  f8c0114c          STR      r1,[r0,#0x14c]        ;9080
00023e  4601              MOV      r1,r0                 ;9080
000240  f8d1314c          LDR      r3,[r1,#0x14c]        ;9080
000244  f8d1114c          LDR      r1,[r1,#0x14c]        ;9080
000248  f1010101          ADD      r1,r1,#1              ;9080
00024c  4602              MOV      r2,r0                 ;9080
00024e  f8c2114c          STR      r1,[r2,#0x14c]        ;9080
000252  eb030183          ADD      r1,r3,r3,LSL #2       ;9080
000256  4a26              LDR      r2,|L83.752|
000258  eb021101          ADD      r1,r2,r1,LSL #4       ;9080
00025c  4608              MOV      r0,r1                 ;9080
00025e  4923              LDR      r1,|L83.748|
000260  f7fffffe          BL       strcpy
000264  f04f0100          MOV      r1,#0                 ;9080
000268  481f              LDR      r0,|L83.744|
00026a  f8d0014c          LDR      r0,[r0,#0x14c]        ;9080
00026e  eb000080          ADD      r0,r0,r0,LSL #2       ;9080
000272  4a1f              LDR      r2,|L83.752|
000274  eb021000          ADD      r0,r2,r0,LSL #4       ;9080
000278  7001              STRB     r1,[r0,#0]            ;9080
00027a  f04f00ad          MOV      r0,#0xad              ;9080
00027e  e6f1              B        |L83.100|
                  |L83.640|
000280  f5097088          ADD      r0,r9,#0x110          ;9081
000284  f8500028          LDR      r0,[r0,r8,LSL #2]     ;9081
000288  1c40              ADDS     r0,r0,#1              ;9081
00028a  d025              BEQ      |L83.728|
00028c  f04f0100          MOV      r1,#0                 ;9081
000290  4815              LDR      r0,|L83.744|
000292  f8c0114c          STR      r1,[r0,#0x14c]        ;9081
000296  4601              MOV      r1,r0                 ;9081
000298  f8d1314c          LDR      r3,[r1,#0x14c]        ;9081
00029c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9081
0002a0  f1010101          ADD      r1,r1,#1              ;9081
0002a4  4602              MOV      r2,r0                 ;9081
0002a6  f8c2114c          STR      r1,[r2,#0x14c]        ;9081
0002aa  eb030183          ADD      r1,r3,r3,LSL #2       ;9081
0002ae  4a10              LDR      r2,|L83.752|
0002b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9081
0002b4  4608              MOV      r0,r1                 ;9081
0002b6  490d              LDR      r1,|L83.748|
0002b8  f7fffffe          BL       strcpy
0002bc  f04f0100          MOV      r1,#0                 ;9081
0002c0  4809              LDR      r0,|L83.744|
0002c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9081
0002c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9081
0002ca  4a09              LDR      r2,|L83.752|
0002cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9081
0002d0  7001              STRB     r1,[r0,#0]            ;9081
0002d2  f04f00a8          MOV      r0,#0xa8              ;9081
0002d6  e6c5              B        |L83.100|
                  |L83.728|
0002d8  f5097088          ADD      r0,r9,#0x110          ;9083
0002dc  f8406028          STR      r6,[r0,r8,LSL #2]     ;9083
0002e0  f04f0000          MOV      r0,#0                 ;9084
0002e4  e6be              B        |L83.100|
;;;9086   
                          ENDP

0002e6  0000              DCW      0x0000
                  |L83.744|
                          DCD      _setup+0xc000
                  |L83.748|
                          DCD      |symbol_number.507|
                  |L83.752|
                          DCD      _setup+0xb1ac
                  |L83.756|
                          DCD      0x40240000
                  |L83.760|
                          DCD      0xd916872b
                  |L83.764|
                          DCD      0x3feff7ce
                  |L83.768|
                          DCD      0xd2f1a9fc
                  |L83.772|
                          DCD      0x3f50624d
                  |L83.776|
                          DCD      _gees

                          AREA ||i.read_h||, CODE, READONLY, ALIGN=2

                  read_h PROC
;;;9116   
;;;9117       static int read_h(                            /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9118       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9119       int * counter,                                /* pointer to a counter for position on the line  */
;;;9120       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9121       double * parameters)                          /* array of system parameters                     */
;;;9122       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9123           static char name[] SET_TO "read_h";
;;;9124           int value;
;;;9125           int status;
;;;9126   
;;;9127           CHK((line[*counter] ISNT 'h'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2868              CMP      r0,#0x68
000012  d027              BEQ      |L84.100|
000014  f04f0100          MOV      r1,#0
000018  486e              LDR      r0,|L84.468|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4965              LDR      r1,|L84.472|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4862              LDR      r0,|L84.468|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a61              LDR      r2,|L84.476|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L84.96|
;;;9128           *counter SET_TO (*counter + 1);
;;;9129           CHK((block->h_number > -1), NCE_MULTIPLE_H_WORDS_ON_ONE_LINE);
;;;9130           CHP(read_integer_value(line, counter, &value, parameters));
;;;9131           CHK((value < 0), NCE_NEGATIVE_H_WORD_TOOL_LENGTH_OFFSET_INDEX_USED);
;;;9132           CHK((value > _setup.tool_max), NCE_TOOL_LENGTH_OFFSET_INDEX_TOO_BIG);
;;;9133           block->h_number SET_TO value;
;;;9134           return RS274NGC_OK;
;;;9135       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L84.100|
000064  6820              LDR      r0,[r4,#0]            ;9128
000066  f1000001          ADD      r0,r0,#1              ;9128
00006a  6020              STR      r0,[r4,#0]            ;9128
00006c  f8d50148          LDR      r0,[r5,#0x148]        ;9129
000070  2800              CMP      r0,#0                 ;9129
000072  db25              BLT      |L84.192|
000074  f04f0100          MOV      r1,#0                 ;9129
000078  4856              LDR      r0,|L84.468|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;9129
00007e  4601              MOV      r1,r0                 ;9129
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;9129
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;9129
000088  f1010101          ADD      r1,r1,#1              ;9129
00008c  4602              MOV      r2,r0                 ;9129
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;9129
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;9129
000096  4a51              LDR      r2,|L84.476|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;9129
00009c  4608              MOV      r0,r1                 ;9129
00009e  494e              LDR      r1,|L84.472|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;9129
0000a8  484a              LDR      r0,|L84.468|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;9129
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;9129
0000b2  4a4a              LDR      r2,|L84.476|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;9129
0000b8  7001              STRB     r1,[r0,#0]            ;9129
0000ba  f04f006b          MOV      r0,#0x6b              ;9129
0000be  e7cf              B        |L84.96|
                  |L84.192|
0000c0  463b              MOV      r3,r7                 ;9130
0000c2  466a              MOV      r2,sp                 ;9130
0000c4  4621              MOV      r1,r4                 ;9130
0000c6  4630              MOV      r0,r6                 ;9130
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;9130
0000d0  d025              BEQ      |L84.286|
0000d2  4840              LDR      r0,|L84.468|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;9130
0000d8  2831              CMP      r0,#0x31              ;9130
0000da  da1e              BGE      |L84.282|
0000dc  493d              LDR      r1,|L84.468|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;9130
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;9130
0000e6  1c49              ADDS     r1,r1,#1              ;9130
0000e8  4a3a              LDR      r2,|L84.468|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9130
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9130
0000f2  4a3a              LDR      r2,|L84.476|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9130
0000f8  4608              MOV      r0,r1                 ;9130
0000fa  4937              LDR      r1,|L84.472|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;9130
000104  4833              LDR      r0,|L84.468|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;9130
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;9130
00010e  4a33              LDR      r2,|L84.476|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;9130
000114  7001              STRB     r1,[r0,#0]            ;9130
000116  4640              MOV      r0,r8                 ;9130
000118  e7a2              B        |L84.96|
                  |L84.282|
00011a  4640              MOV      r0,r8                 ;9130
00011c  e7a0              B        |L84.96|
                  |L84.286|
00011e  9800              LDR      r0,[sp,#0]            ;9131
000120  2800              CMP      r0,#0                 ;9131
000122  da25              BGE      |L84.368|
000124  f04f0100          MOV      r1,#0                 ;9131
000128  482a              LDR      r0,|L84.468|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;9131
00012e  4601              MOV      r1,r0                 ;9131
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;9131
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;9131
000138  f1010101          ADD      r1,r1,#1              ;9131
00013c  4602              MOV      r2,r0                 ;9131
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;9131
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;9131
000146  4a25              LDR      r2,|L84.476|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;9131
00014c  4608              MOV      r0,r1                 ;9131
00014e  4922              LDR      r1,|L84.472|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;9131
000158  481e              LDR      r0,|L84.468|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;9131
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;9131
000162  4a1e              LDR      r2,|L84.476|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;9131
000168  7001              STRB     r1,[r0,#0]            ;9131
00016a  f04f007d          MOV      r0,#0x7d              ;9131
00016e  e777              B        |L84.96|
                  |L84.368|
000170  4818              LDR      r0,|L84.468|
000172  f8d00158          LDR      r0,[r0,#0x158]        ;9132
000176  9900              LDR      r1,[sp,#0]            ;9132
000178  4288              CMP      r0,r1                 ;9132
00017a  da25              BGE      |L84.456|
00017c  f04f0100          MOV      r1,#0                 ;9132
000180  4814              LDR      r0,|L84.468|
000182  f8c0114c          STR      r1,[r0,#0x14c]        ;9132
000186  4601              MOV      r1,r0                 ;9132
000188  f8d1314c          LDR      r3,[r1,#0x14c]        ;9132
00018c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9132
000190  f1010101          ADD      r1,r1,#1              ;9132
000194  4602              MOV      r2,r0                 ;9132
000196  f8c2114c          STR      r1,[r2,#0x14c]        ;9132
00019a  eb030183          ADD      r1,r3,r3,LSL #2       ;9132
00019e  4a0f              LDR      r2,|L84.476|
0001a0  eb021101          ADD      r1,r2,r1,LSL #4       ;9132
0001a4  4608              MOV      r0,r1                 ;9132
0001a6  490c              LDR      r1,|L84.472|
0001a8  f7fffffe          BL       strcpy
0001ac  f04f0100          MOV      r1,#0                 ;9132
0001b0  4808              LDR      r0,|L84.468|
0001b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9132
0001b6  eb000080          ADD      r0,r0,r0,LSL #2       ;9132
0001ba  4a08              LDR      r2,|L84.476|
0001bc  eb021000          ADD      r0,r2,r0,LSL #4       ;9132
0001c0  7001              STRB     r1,[r0,#0]            ;9132
0001c2  f04f00a4          MOV      r0,#0xa4              ;9132
0001c6  e74b              B        |L84.96|
                  |L84.456|
0001c8  9800              LDR      r0,[sp,#0]            ;9133
0001ca  f8c50148          STR      r0,[r5,#0x148]        ;9133
0001ce  2000              MOVS     r0,#0                 ;9134
0001d0  e746              B        |L84.96|
;;;9136   
                          ENDP

0001d2  0000              DCW      0x0000
                  |L84.468|
                          DCD      _setup+0xc000
                  |L84.472|
                          DCD      |symbol_number.508|
                  |L84.476|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_i||, CODE, READONLY, ALIGN=2

                  read_i PROC
;;;9169   
;;;9170       static int read_i(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;9171       char * line,                                  /* string: line of RS274 code being processed     */
;;;9172       int * counter,                                /* pointer to a counter for position on the line  */
;;;9173       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9174       double * parameters)                          /* array of system parameters                     */
;;;9175       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9176           static char name[] SET_TO "read_i";
;;;9177           double value;
;;;9178           int status;
;;;9179   
;;;9180           CHK((line[*counter] ISNT 'i'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2869              CMP      r0,#0x69
000012  d027              BEQ      |L85.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L85.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L85.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L85.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L85.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L85.96|
;;;9181           *counter SET_TO (*counter + 1);
;;;9182           CHK((block->i_flag ISNT OFF), NCE_MULTIPLE_I_WORDS_ON_ONE_LINE);
;;;9183           CHP(read_real_value(line, counter, &value, parameters));
;;;9184           block->i_flag SET_TO ON;
;;;9185           block->i_number SET_TO value;
;;;9186           return RS274NGC_OK;
;;;9187       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L85.100|
000064  6820              LDR      r0,[r4,#0]            ;9181
000066  f1000001          ADD      r0,r0,#1              ;9181
00006a  6020              STR      r0,[r4,#0]            ;9181
00006c  f8d5014c          LDR      r0,[r5,#0x14c]        ;9182
000070  b328              CBZ      r0,|L85.190|
000072  f04f0100          MOV      r1,#0                 ;9182
000076  482f              LDR      r0,|L85.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9182
00007c  4601              MOV      r1,r0                 ;9182
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9182
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9182
000086  f1010101          ADD      r1,r1,#1              ;9182
00008a  4602              MOV      r2,r0                 ;9182
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9182
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9182
000094  4a29              LDR      r2,|L85.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9182
00009a  4608              MOV      r0,r1                 ;9182
00009c  4926              LDR      r1,|L85.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9182
0000a6  4823              LDR      r0,|L85.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9182
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9182
0000b0  4a22              LDR      r2,|L85.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9182
0000b6  7001              STRB     r1,[r0,#0]            ;9182
0000b8  f04f006c          MOV      r0,#0x6c              ;9182
0000bc  e7d0              B        |L85.96|
                  |L85.190|
0000be  463b              MOV      r3,r7                 ;9183
0000c0  466a              MOV      r2,sp                 ;9183
0000c2  4621              MOV      r1,r4                 ;9183
0000c4  4630              MOV      r0,r6                 ;9183
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;9183
0000ce  d025              BEQ      |L85.284|
0000d0  4818              LDR      r0,|L85.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9183
0000d6  2831              CMP      r0,#0x31              ;9183
0000d8  da1e              BGE      |L85.280|
0000da  4916              LDR      r1,|L85.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9183
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9183
0000e4  1c49              ADDS     r1,r1,#1              ;9183
0000e6  4a13              LDR      r2,|L85.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;9183
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;9183
0000f0  4a12              LDR      r2,|L85.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;9183
0000f6  4608              MOV      r0,r1                 ;9183
0000f8  490f              LDR      r1,|L85.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;9183
000102  480c              LDR      r0,|L85.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;9183
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;9183
00010c  4a0b              LDR      r2,|L85.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;9183
000112  7001              STRB     r1,[r0,#0]            ;9183
000114  4640              MOV      r0,r8                 ;9183
000116  e7a3              B        |L85.96|
                  |L85.280|
000118  4640              MOV      r0,r8                 ;9183
00011a  e7a1              B        |L85.96|
                  |L85.284|
00011c  f04f0001          MOV      r0,#1                 ;9184
000120  f8c5014c          STR      r0,[r5,#0x14c]        ;9184
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9185
000128  f50572a8          ADD      r2,r5,#0x150          ;9185
00012c  c203              STM      r2!,{r0,r1}           ;9185
00012e  f04f0000          MOV      r0,#0                 ;9186
000132  e795              B        |L85.96|
;;;9188   
                          ENDP

                  |L85.308|
                          DCD      _setup+0xc000
                  |L85.312|
                          DCD      |symbol_number.509|
                  |L85.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_integer_unsigned||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                  read_integer_unsigned PROC
;;;9211   
;;;9212       static int read_integer_unsigned(             /* ARGUMENTS                       */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;9213       char * line,                                  /* string: line of RS274 code being processed    */
;;;9214       int * counter,                                /* pointer to a counter for position on the line */
;;;9215       int * integer_ptr)                            /* pointer to the value being read               */
;;;9216       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
;;;9217           static char name[] SET_TO "read_integer_unsigned";
;;;9218           int n;
;;;9219           char c;
;;;9220   
;;;9221           for (n SET_TO *counter; ; n++)
00000a  6820              LDR      r0,[r4,#0]
00000c  4605              MOV      r5,r0
00000e  bf00              NOP      
                  |L86.16|
;;;9222           {
;;;9223               c SET_TO line[n];
000010  5d77              LDRB     r7,[r6,r5]
;;;9224               if ((c < 48) OR (c > 57))
000012  2f30              CMP      r7,#0x30
000014  db01              BLT      |L86.26|
000016  2f39              CMP      r7,#0x39
000018  dd00              BLE      |L86.28|
                  |L86.26|
;;;9225                   break;
00001a  e003              B        |L86.36|
                  |L86.28|
00001c  f1050001          ADD      r0,r5,#1              ;9221
000020  4605              MOV      r5,r0                 ;9221
000022  e7f5              B        |L86.16|
                  |L86.36|
000024  bf00              NOP      
;;;9226           }
;;;9227           CHK((n IS *counter), NCE_BAD_FORMAT_UNSIGNED_INTEGER);
000026  6820              LDR      r0,[r4,#0]
000028  42a8              CMP      r0,r5
00002a  d127              BNE      |L86.124|
00002c  f04f0100          MOV      r1,#0
000030  482b              LDR      r0,|L86.224|
000032  f8c0114c          STR      r1,[r0,#0x14c]
000036  4601              MOV      r1,r0
000038  f8d1314c          LDR      r3,[r1,#0x14c]
00003c  f8d1114c          LDR      r1,[r1,#0x14c]
000040  f1010101          ADD      r1,r1,#1
000044  4602              MOV      r2,r0
000046  f8c2114c          STR      r1,[r2,#0x14c]
00004a  eb030183          ADD      r1,r3,r3,LSL #2
00004e  f6a06254          SUB      r2,r0,#0xe54
000052  eb021101          ADD      r1,r2,r1,LSL #4
000056  4608              MOV      r0,r1
000058  4922              LDR      r1,|L86.228|
00005a  f7fffffe          BL       strcpy
00005e  f04f0100          MOV      r1,#0
000062  481f              LDR      r0,|L86.224|
000064  f8d0014c          LDR      r0,[r0,#0x14c]
000068  eb000080          ADD      r0,r0,r0,LSL #2
00006c  4a1e              LDR      r2,|L86.232|
00006e  eb021000          ADD      r0,r2,r0,LSL #4
000072  7001              STRB     r1,[r0,#0]
000074  f04f000d          MOV      r0,#0xd
                  |L86.120|
;;;9228           if (sscanf(line + *counter, "%d", integer_ptr) IS 0)
;;;9229               ERM(NCE_SSCANF_FAILED);
;;;9230           *counter SET_TO n;
;;;9231           return RS274NGC_OK;
;;;9232       }
000078  e8bd81f0          POP      {r4-r8,pc}
                  |L86.124|
00007c  6821              LDR      r1,[r4,#0]            ;9228
00007e  4431              ADD      r1,r1,r6              ;9228
000080  4608              MOV      r0,r1                 ;9228
000082  4642              MOV      r2,r8                 ;9228
000084  a119              ADR      r1,|L86.236|
000086  f7fffffe          BL       __0sscanf
00008a  bb28              CBNZ     r0,|L86.216|
00008c  f04f0100          MOV      r1,#0                 ;9229
000090  4813              LDR      r0,|L86.224|
000092  f8c0114c          STR      r1,[r0,#0x14c]        ;9229
000096  4601              MOV      r1,r0                 ;9229
000098  f8d1314c          LDR      r3,[r1,#0x14c]        ;9229
00009c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9229
0000a0  f1010101          ADD      r1,r1,#1              ;9229
0000a4  4602              MOV      r2,r0                 ;9229
0000a6  f8c2114c          STR      r1,[r2,#0x14c]        ;9229
0000aa  eb030183          ADD      r1,r3,r3,LSL #2       ;9229
0000ae  4a0e              LDR      r2,|L86.232|
0000b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9229
0000b4  4608              MOV      r0,r1                 ;9229
0000b6  490b              LDR      r1,|L86.228|
0000b8  f7fffffe          BL       strcpy
0000bc  f04f0100          MOV      r1,#0                 ;9229
0000c0  4807              LDR      r0,|L86.224|
0000c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9229
0000c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9229
0000ca  4a07              LDR      r2,|L86.232|
0000cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9229
0000d0  7001              STRB     r1,[r0,#0]            ;9229
0000d2  f04f00a1          MOV      r0,#0xa1              ;9229
0000d6  e7cf              B        |L86.120|
                  |L86.216|
0000d8  6025              STR      r5,[r4,#0]            ;9230
0000da  2000              MOVS     r0,#0                 ;9231
0000dc  e7cc              B        |L86.120|
;;;9233   
                          ENDP

0000de  0000              DCW      0x0000
                  |L86.224|
                          DCD      _setup+0xc000
                  |L86.228|
                          DCD      |symbol_number.510|
                  |L86.232|
                          DCD      _setup+0xb1ac
                  |L86.236|
0000ec  256400            DCB      "%d",0
0000ef  00                DCB      0

                          AREA ||i.read_integer_value||, CODE, READONLY, ALIGN=2

                  read_integer_value PROC
;;;9267   
;;;9268       static int read_integer_value(                /* ARGUMENTS                                 */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;9269       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9270       int * counter,                                /* pointer to a counter for position on the line  */
;;;9271       int * integer_ptr,                            /* pointer to the value being read                */
;;;9272       double * parameters)                          /* array of system parameters                     */
;;;9273       {
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4616              MOV      r6,r2
00000a  469b              MOV      r11,r3
;;;9274           static char name[] SET_TO "read_integer_value";
;;;9275           double float_value;
;;;9276           int status;
;;;9277   
;;;9278           CHP(read_real_value(line, counter, &float_value, parameters));
00000c  465b              MOV      r3,r11
00000e  aa02              ADD      r2,sp,#8
000010  4651              MOV      r1,r10
000012  4648              MOV      r0,r9
000014  f7fffffe          BL       read_real_value
000018  9001              STR      r0,[sp,#4]
00001a  b340              CBZ      r0,|L87.110|
00001c  483f              LDR      r0,|L87.284|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da21              BGE      |L87.106|
000026  493d              LDR      r1,|L87.284|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a3a              LDR      r2,|L87.284|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4936              LDR      r1,|L87.288|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4832              LDR      r0,|L87.284|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a32              LDR      r2,|L87.292|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  9801              LDR      r0,[sp,#4]
                  |L87.100|
;;;9279           *integer_ptr SET_TO (int)floor(float_value);
;;;9280           if ((float_value - *integer_ptr) > 0.9999)
;;;9281           {
;;;9282               *integer_ptr SET_TO (int)ceil(float_value);
;;;9283           }
;;;9284           else if ((float_value - *integer_ptr) > 0.0001)
;;;9285               ERM(NCE_NON_INTEGER_VALUE_FOR_INTEGER);
;;;9286           return RS274NGC_OK;
;;;9287       }
000064  b004              ADD      sp,sp,#0x10
000066  e8bd9ff0          POP      {r4-r12,pc}
                  |L87.106|
00006a  9801              LDR      r0,[sp,#4]            ;9278
00006c  e7fa              B        |L87.100|
                  |L87.110|
00006e  e9dd0102          LDRD     r0,r1,[sp,#8]         ;9279
000072  f7fffffe          BL       floor
000076  4604              MOV      r4,r0                 ;9279
000078  f7fffffe          BL       __aeabi_d2iz
00007c  6030              STR      r0,[r6,#0]            ;9279
00007e  6831              LDR      r1,[r6,#0]            ;9280
000080  4608              MOV      r0,r1                 ;9280
000082  f7fffffe          BL       __aeabi_i2d
000086  4607              MOV      r7,r0                 ;9280
000088  e9dd2302          LDRD     r2,r3,[sp,#8]         ;9280
00008c  f7fffffe          BL       __aeabi_drsub
000090  4604              MOV      r4,r0                 ;9280
000092  4a25              LDR      r2,|L87.296|
000094  4b25              LDR      r3,|L87.300|
000096  f7fffffe          BL       __aeabi_cdrcmple
00009a  d208              BCS      |L87.174|
00009c  e9dd0102          LDRD     r0,r1,[sp,#8]         ;9282
0000a0  f7fffffe          BL       ceil
0000a4  4604              MOV      r4,r0                 ;9282
0000a6  f7fffffe          BL       __aeabi_d2iz
0000aa  6030              STR      r0,[r6,#0]            ;9282
0000ac  e034              B        |L87.280|
                  |L87.174|
0000ae  6831              LDR      r1,[r6,#0]            ;9284
0000b0  4608              MOV      r0,r1                 ;9284
0000b2  f7fffffe          BL       __aeabi_i2d
0000b6  4607              MOV      r7,r0                 ;9284
0000b8  e9dd2302          LDRD     r2,r3,[sp,#8]         ;9284
0000bc  f7fffffe          BL       __aeabi_drsub
0000c0  4604              MOV      r4,r0                 ;9284
0000c2  4a1b              LDR      r2,|L87.304|
0000c4  4b1b              LDR      r3,|L87.308|
0000c6  f7fffffe          BL       __aeabi_cdrcmple
0000ca  d225              BCS      |L87.280|
0000cc  f04f0100          MOV      r1,#0                 ;9285
0000d0  4812              LDR      r0,|L87.284|
0000d2  f8c0114c          STR      r1,[r0,#0x14c]        ;9285
0000d6  4601              MOV      r1,r0                 ;9285
0000d8  f8d1314c          LDR      r3,[r1,#0x14c]        ;9285
0000dc  f8d1114c          LDR      r1,[r1,#0x14c]        ;9285
0000e0  f1010101          ADD      r1,r1,#1              ;9285
0000e4  4602              MOV      r2,r0                 ;9285
0000e6  f8c2114c          STR      r1,[r2,#0x14c]        ;9285
0000ea  eb030183          ADD      r1,r3,r3,LSL #2       ;9285
0000ee  4a0d              LDR      r2,|L87.292|
0000f0  eb021101          ADD      r1,r2,r1,LSL #4       ;9285
0000f4  4608              MOV      r0,r1                 ;9285
0000f6  490a              LDR      r1,|L87.288|
0000f8  f7fffffe          BL       strcpy
0000fc  f04f0100          MOV      r1,#0                 ;9285
000100  4806              LDR      r0,|L87.284|
000102  f8d0014c          LDR      r0,[r0,#0x14c]        ;9285
000106  eb000080          ADD      r0,r0,r0,LSL #2       ;9285
00010a  4a06              LDR      r2,|L87.292|
00010c  eb021000          ADD      r0,r2,r0,LSL #4       ;9285
000110  7001              STRB     r1,[r0,#0]            ;9285
000112  f04f0087          MOV      r0,#0x87              ;9285
000116  e7a5              B        |L87.100|
                  |L87.280|
000118  2000              MOVS     r0,#0                 ;9286
00011a  e7a3              B        |L87.100|
;;;9288   
                          ENDP

                  |L87.284|
                          DCD      _setup+0xc000
                  |L87.288|
                          DCD      |symbol_number.511|
                  |L87.292|
                          DCD      _setup+0xb1ac
                  |L87.296|
                          DCD      0x48e8a71e
                  |L87.300|
                          DCD      0x3fefff2e
                  |L87.304|
                          DCD      0xeb1c432d
                  |L87.308|
                          DCD      0x3f1a36e2

                          AREA ||i.read_items||, CODE, READONLY, ALIGN=2

                  read_items PROC
;;;9306   
;;;9307       static int read_items(                        /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9308       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9309       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9310       double * parameters)                          /* array of system parameters                     */
;;;9311       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;9312           static char name[] SET_TO "read_items";
;;;9313           int counter;
;;;9314           int length;
;;;9315           int status;
;;;9316   
;;;9317           length SET_TO strlen(line);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       strlen
000010  4607              MOV      r7,r0
;;;9318           counter SET_TO 0;
000012  f04f0000          MOV      r0,#0
000016  9000              STR      r0,[sp,#0]
;;;9319   
;;;9320           if (line[counter] IS '/')                 /* skip the slash character if first */
000018  9800              LDR      r0,[sp,#0]
00001a  5c20              LDRB     r0,[r4,r0]
00001c  282f              CMP      r0,#0x2f
00001e  d103              BNE      |L88.40|
;;;9321               counter++;
000020  9800              LDR      r0,[sp,#0]
000022  f1000001          ADD      r0,r0,#1
000026  9000              STR      r0,[sp,#0]
                  |L88.40|
;;;9322           if (line[counter] IS 'n')
000028  9800              LDR      r0,[sp,#0]
00002a  5c20              LDRB     r0,[r4,r0]
00002c  286e              CMP      r0,#0x6e
00002e  d12f              BNE      |L88.144|
;;;9323           {
;;;9324               CHP(read_line_number(line, &counter, block));
000030  462a              MOV      r2,r5
000032  4669              MOV      r1,sp
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       read_line_number
00003a  ea5f0800          MOVS     r8,r0
00003e  d027              BEQ      |L88.144|
000040  482e              LDR      r0,|L88.252|
000042  f8d0014c          LDR      r0,[r0,#0x14c]
000046  2831              CMP      r0,#0x31
000048  da20              BGE      |L88.140|
00004a  492c              LDR      r1,|L88.252|
00004c  f8d1314c          LDR      r3,[r1,#0x14c]
000050  f8d1114c          LDR      r1,[r1,#0x14c]
000054  1c49              ADDS     r1,r1,#1
000056  4a29              LDR      r2,|L88.252|
000058  f8c2114c          STR      r1,[r2,#0x14c]
00005c  eb030183          ADD      r1,r3,r3,LSL #2
000060  f6a26254          SUB      r2,r2,#0xe54
000064  eb021101          ADD      r1,r2,r1,LSL #4
000068  4608              MOV      r0,r1
00006a  4925              LDR      r1,|L88.256|
00006c  f7fffffe          BL       strcpy
000070  f04f0100          MOV      r1,#0
000074  4821              LDR      r0,|L88.252|
000076  f8d0014c          LDR      r0,[r0,#0x14c]
00007a  eb000080          ADD      r0,r0,r0,LSL #2
00007e  4a21              LDR      r2,|L88.260|
000080  eb021000          ADD      r0,r2,r0,LSL #4
000084  7001              STRB     r1,[r0,#0]
000086  4640              MOV      r0,r8
                  |L88.136|
;;;9325           }
;;;9326           for ( ; counter < length; )
;;;9327           {
;;;9328               CHP(read_one_item (line, &counter, block, parameters));
;;;9329           }
;;;9330           return RS274NGC_OK;
;;;9331       }
000088  e8bd83f8          POP      {r3-r9,pc}
                  |L88.140|
00008c  4640              MOV      r0,r8                 ;9324
00008e  e7fb              B        |L88.136|
                  |L88.144|
000090  e02e              B        |L88.240|
                  |L88.146|
000092  4633              MOV      r3,r6                 ;9328
000094  462a              MOV      r2,r5                 ;9328
000096  4669              MOV      r1,sp                 ;9328
000098  4620              MOV      r0,r4                 ;9328
00009a  f7fffffe          BL       read_one_item
00009e  ea5f0800          MOVS     r8,r0                 ;9328
0000a2  d025              BEQ      |L88.240|
0000a4  4815              LDR      r0,|L88.252|
0000a6  f8d0014c          LDR      r0,[r0,#0x14c]        ;9328
0000aa  2831              CMP      r0,#0x31              ;9328
0000ac  da1e              BGE      |L88.236|
0000ae  4913              LDR      r1,|L88.252|
0000b0  f8d1314c          LDR      r3,[r1,#0x14c]        ;9328
0000b4  f8d1114c          LDR      r1,[r1,#0x14c]        ;9328
0000b8  1c49              ADDS     r1,r1,#1              ;9328
0000ba  4a10              LDR      r2,|L88.252|
0000bc  f8c2114c          STR      r1,[r2,#0x14c]        ;9328
0000c0  eb030183          ADD      r1,r3,r3,LSL #2       ;9328
0000c4  4a0f              LDR      r2,|L88.260|
0000c6  eb021101          ADD      r1,r2,r1,LSL #4       ;9328
0000ca  4608              MOV      r0,r1                 ;9328
0000cc  490c              LDR      r1,|L88.256|
0000ce  f7fffffe          BL       strcpy
0000d2  f04f0100          MOV      r1,#0                 ;9328
0000d6  4809              LDR      r0,|L88.252|
0000d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9328
0000dc  eb000080          ADD      r0,r0,r0,LSL #2       ;9328
0000e0  4a08              LDR      r2,|L88.260|
0000e2  eb021000          ADD      r0,r2,r0,LSL #4       ;9328
0000e6  7001              STRB     r1,[r0,#0]            ;9328
0000e8  4640              MOV      r0,r8                 ;9328
0000ea  e7cd              B        |L88.136|
                  |L88.236|
0000ec  4640              MOV      r0,r8                 ;9328
0000ee  e7cb              B        |L88.136|
                  |L88.240|
0000f0  9800              LDR      r0,[sp,#0]            ;9326
0000f2  42b8              CMP      r0,r7                 ;9326
0000f4  dbcd              BLT      |L88.146|
0000f6  2000              MOVS     r0,#0                 ;9330
0000f8  e7c6              B        |L88.136|
;;;9332   
                          ENDP

0000fa  0000              DCW      0x0000
                  |L88.252|
                          DCD      _setup+0xc000
                  |L88.256|
                          DCD      |symbol_number.512|
                  |L88.260|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_j||, CODE, READONLY, ALIGN=2

                  read_j PROC
;;;9365   
;;;9366       static int read_j(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;9367       char * line,                                  /* string: line of RS274 code being processed     */
;;;9368       int * counter,                                /* pointer to a counter for position on the line  */
;;;9369       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9370       double * parameters)                          /* array of system parameters                     */
;;;9371       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9372           static char name[] SET_TO "read_j";
;;;9373           double value;
;;;9374           int status;
;;;9375   
;;;9376           CHK((line[*counter] ISNT 'j'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  286a              CMP      r0,#0x6a
000012  d027              BEQ      |L89.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L89.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L89.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L89.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L89.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L89.96|
;;;9377           *counter SET_TO (*counter + 1);
;;;9378           CHK((block->j_flag ISNT OFF), NCE_MULTIPLE_J_WORDS_ON_ONE_LINE);
;;;9379           CHP(read_real_value(line, counter, &value, parameters));
;;;9380           block->j_flag SET_TO ON;
;;;9381           block->j_number SET_TO value;
;;;9382           return RS274NGC_OK;
;;;9383       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L89.100|
000064  6820              LDR      r0,[r4,#0]            ;9377
000066  f1000001          ADD      r0,r0,#1              ;9377
00006a  6020              STR      r0,[r4,#0]            ;9377
00006c  f8d50158          LDR      r0,[r5,#0x158]        ;9378
000070  b328              CBZ      r0,|L89.190|
000072  f04f0100          MOV      r1,#0                 ;9378
000076  482f              LDR      r0,|L89.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9378
00007c  4601              MOV      r1,r0                 ;9378
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9378
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9378
000086  f1010101          ADD      r1,r1,#1              ;9378
00008a  4602              MOV      r2,r0                 ;9378
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9378
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9378
000094  4a29              LDR      r2,|L89.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9378
00009a  4608              MOV      r0,r1                 ;9378
00009c  4926              LDR      r1,|L89.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9378
0000a6  4823              LDR      r0,|L89.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9378
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9378
0000b0  4a22              LDR      r2,|L89.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9378
0000b6  7001              STRB     r1,[r0,#0]            ;9378
0000b8  f04f006d          MOV      r0,#0x6d              ;9378
0000bc  e7d0              B        |L89.96|
                  |L89.190|
0000be  463b              MOV      r3,r7                 ;9379
0000c0  466a              MOV      r2,sp                 ;9379
0000c2  4621              MOV      r1,r4                 ;9379
0000c4  4630              MOV      r0,r6                 ;9379
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;9379
0000ce  d025              BEQ      |L89.284|
0000d0  4818              LDR      r0,|L89.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9379
0000d6  2831              CMP      r0,#0x31              ;9379
0000d8  da1e              BGE      |L89.280|
0000da  4916              LDR      r1,|L89.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9379
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9379
0000e4  1c49              ADDS     r1,r1,#1              ;9379
0000e6  4a13              LDR      r2,|L89.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;9379
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;9379
0000f0  4a12              LDR      r2,|L89.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;9379
0000f6  4608              MOV      r0,r1                 ;9379
0000f8  490f              LDR      r1,|L89.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;9379
000102  480c              LDR      r0,|L89.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;9379
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;9379
00010c  4a0b              LDR      r2,|L89.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;9379
000112  7001              STRB     r1,[r0,#0]            ;9379
000114  4640              MOV      r0,r8                 ;9379
000116  e7a3              B        |L89.96|
                  |L89.280|
000118  4640              MOV      r0,r8                 ;9379
00011a  e7a1              B        |L89.96|
                  |L89.284|
00011c  f04f0001          MOV      r0,#1                 ;9380
000120  f8c50158          STR      r0,[r5,#0x158]        ;9380
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9381
000128  f50572b0          ADD      r2,r5,#0x160          ;9381
00012c  c203              STM      r2!,{r0,r1}           ;9381
00012e  f04f0000          MOV      r0,#0                 ;9382
000132  e795              B        |L89.96|
;;;9384   
                          ENDP

                  |L89.308|
                          DCD      _setup+0xc000
                  |L89.312|
                          DCD      |symbol_number.513|
                  |L89.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_k||, CODE, READONLY, ALIGN=2

                  read_k PROC
;;;9417   
;;;9418       static int read_k(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;9419       char * line,                                  /* string: line of RS274 code being processed     */
;;;9420       int * counter,                                /* pointer to a counter for position on the line  */
;;;9421       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9422       double * parameters)                          /* array of system parameters                     */
;;;9423       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9424           static char name[] SET_TO "read_k";
;;;9425           double value;
;;;9426           int status;
;;;9427   
;;;9428           CHK((line[*counter] ISNT 'k'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  286b              CMP      r0,#0x6b
000012  d027              BEQ      |L90.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L90.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L90.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L90.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L90.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L90.96|
;;;9429           *counter SET_TO (*counter + 1);
;;;9430           CHK((block->k_flag ISNT OFF), NCE_MULTIPLE_K_WORDS_ON_ONE_LINE);
;;;9431           CHP(read_real_value(line, counter, &value, parameters));
;;;9432           block->k_flag SET_TO ON;
;;;9433           block->k_number SET_TO value;
;;;9434           return RS274NGC_OK;
;;;9435       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L90.100|
000064  6820              LDR      r0,[r4,#0]            ;9429
000066  f1000001          ADD      r0,r0,#1              ;9429
00006a  6020              STR      r0,[r4,#0]            ;9429
00006c  f8d50168          LDR      r0,[r5,#0x168]        ;9430
000070  b328              CBZ      r0,|L90.190|
000072  f04f0100          MOV      r1,#0                 ;9430
000076  482f              LDR      r0,|L90.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9430
00007c  4601              MOV      r1,r0                 ;9430
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9430
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9430
000086  f1010101          ADD      r1,r1,#1              ;9430
00008a  4602              MOV      r2,r0                 ;9430
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9430
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9430
000094  4a29              LDR      r2,|L90.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9430
00009a  4608              MOV      r0,r1                 ;9430
00009c  4926              LDR      r1,|L90.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9430
0000a6  4823              LDR      r0,|L90.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9430
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9430
0000b0  4a22              LDR      r2,|L90.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9430
0000b6  7001              STRB     r1,[r0,#0]            ;9430
0000b8  f04f006e          MOV      r0,#0x6e              ;9430
0000bc  e7d0              B        |L90.96|
                  |L90.190|
0000be  463b              MOV      r3,r7                 ;9431
0000c0  466a              MOV      r2,sp                 ;9431
0000c2  4621              MOV      r1,r4                 ;9431
0000c4  4630              MOV      r0,r6                 ;9431
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;9431
0000ce  d025              BEQ      |L90.284|
0000d0  4818              LDR      r0,|L90.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9431
0000d6  2831              CMP      r0,#0x31              ;9431
0000d8  da1e              BGE      |L90.280|
0000da  4916              LDR      r1,|L90.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9431
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9431
0000e4  1c49              ADDS     r1,r1,#1              ;9431
0000e6  4a13              LDR      r2,|L90.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;9431
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;9431
0000f0  4a12              LDR      r2,|L90.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;9431
0000f6  4608              MOV      r0,r1                 ;9431
0000f8  490f              LDR      r1,|L90.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;9431
000102  480c              LDR      r0,|L90.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;9431
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;9431
00010c  4a0b              LDR      r2,|L90.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;9431
000112  7001              STRB     r1,[r0,#0]            ;9431
000114  4640              MOV      r0,r8                 ;9431
000116  e7a3              B        |L90.96|
                  |L90.280|
000118  4640              MOV      r0,r8                 ;9431
00011a  e7a1              B        |L90.96|
                  |L90.284|
00011c  f04f0001          MOV      r0,#1                 ;9432
000120  f8c50168          STR      r0,[r5,#0x168]        ;9432
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9433
000128  f50572b8          ADD      r2,r5,#0x170          ;9433
00012c  c203              STM      r2!,{r0,r1}           ;9433
00012e  f04f0000          MOV      r0,#0                 ;9434
000132  e795              B        |L90.96|
;;;9436   
                          ENDP

                  |L90.308|
                          DCD      _setup+0xc000
                  |L90.312|
                          DCD      |symbol_number.514|
                  |L90.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_l||, CODE, READONLY, ALIGN=2

                  read_l PROC
;;;9467   
;;;9468       static int read_l(                            /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9469       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9470       int * counter,                                /* pointer to a counter for position on the line  */
;;;9471       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9472       double * parameters)                          /* array of system parameters                     */
;;;9473       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9474           static char name[] SET_TO "read_l";
;;;9475           int value;
;;;9476           int status;
;;;9477   
;;;9478           CHK((line[*counter] ISNT 'l'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  286c              CMP      r0,#0x6c
000012  d027              BEQ      |L91.100|
000014  f04f0100          MOV      r1,#0
000018  4858              LDR      r0,|L91.380|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  494f              LDR      r1,|L91.384|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  484c              LDR      r0,|L91.380|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a4b              LDR      r2,|L91.388|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L91.96|
;;;9479           *counter SET_TO (*counter + 1);
;;;9480           CHK((block->l_number > -1), NCE_MULTIPLE_L_WORDS_ON_ONE_LINE);
;;;9481           CHP(read_integer_value(line, counter, &value, parameters));
;;;9482           CHK((value < 0), NCE_NEGATIVE_L_WORD_USED);
;;;9483           block->l_number SET_TO value;
;;;9484           return RS274NGC_OK;
;;;9485       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L91.100|
000064  6820              LDR      r0,[r4,#0]            ;9479
000066  f1000001          ADD      r0,r0,#1              ;9479
00006a  6020              STR      r0,[r4,#0]            ;9479
00006c  f8d50178          LDR      r0,[r5,#0x178]        ;9480
000070  2800              CMP      r0,#0                 ;9480
000072  db25              BLT      |L91.192|
000074  f04f0100          MOV      r1,#0                 ;9480
000078  4840              LDR      r0,|L91.380|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;9480
00007e  4601              MOV      r1,r0                 ;9480
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;9480
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;9480
000088  f1010101          ADD      r1,r1,#1              ;9480
00008c  4602              MOV      r2,r0                 ;9480
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;9480
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;9480
000096  4a3b              LDR      r2,|L91.388|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;9480
00009c  4608              MOV      r0,r1                 ;9480
00009e  4938              LDR      r1,|L91.384|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;9480
0000a8  4834              LDR      r0,|L91.380|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;9480
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;9480
0000b2  4a34              LDR      r2,|L91.388|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;9480
0000b8  7001              STRB     r1,[r0,#0]            ;9480
0000ba  f04f006f          MOV      r0,#0x6f              ;9480
0000be  e7cf              B        |L91.96|
                  |L91.192|
0000c0  463b              MOV      r3,r7                 ;9481
0000c2  466a              MOV      r2,sp                 ;9481
0000c4  4621              MOV      r1,r4                 ;9481
0000c6  4630              MOV      r0,r6                 ;9481
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;9481
0000d0  d025              BEQ      |L91.286|
0000d2  482a              LDR      r0,|L91.380|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;9481
0000d8  2831              CMP      r0,#0x31              ;9481
0000da  da1e              BGE      |L91.282|
0000dc  4927              LDR      r1,|L91.380|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;9481
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;9481
0000e6  1c49              ADDS     r1,r1,#1              ;9481
0000e8  4a24              LDR      r2,|L91.380|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9481
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9481
0000f2  4a24              LDR      r2,|L91.388|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9481
0000f8  4608              MOV      r0,r1                 ;9481
0000fa  4921              LDR      r1,|L91.384|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;9481
000104  481d              LDR      r0,|L91.380|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;9481
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;9481
00010e  4a1d              LDR      r2,|L91.388|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;9481
000114  7001              STRB     r1,[r0,#0]            ;9481
000116  4640              MOV      r0,r8                 ;9481
000118  e7a2              B        |L91.96|
                  |L91.282|
00011a  4640              MOV      r0,r8                 ;9481
00011c  e7a0              B        |L91.96|
                  |L91.286|
00011e  9800              LDR      r0,[sp,#0]            ;9482
000120  2800              CMP      r0,#0                 ;9482
000122  da25              BGE      |L91.368|
000124  f04f0100          MOV      r1,#0                 ;9482
000128  4814              LDR      r0,|L91.380|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;9482
00012e  4601              MOV      r1,r0                 ;9482
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;9482
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;9482
000138  f1010101          ADD      r1,r1,#1              ;9482
00013c  4602              MOV      r2,r0                 ;9482
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;9482
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;9482
000146  4a0f              LDR      r2,|L91.388|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;9482
00014c  4608              MOV      r0,r1                 ;9482
00014e  490c              LDR      r1,|L91.384|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;9482
000158  4808              LDR      r0,|L91.380|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;9482
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;9482
000162  4a08              LDR      r2,|L91.388|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;9482
000168  7001              STRB     r1,[r0,#0]            ;9482
00016a  f04f007e          MOV      r0,#0x7e              ;9482
00016e  e777              B        |L91.96|
                  |L91.368|
000170  9800              LDR      r0,[sp,#0]            ;9483
000172  f8c50178          STR      r0,[r5,#0x178]        ;9483
000176  2000              MOVS     r0,#0                 ;9484
000178  e772              B        |L91.96|
;;;9486   
                          ENDP

00017a  0000              DCW      0x0000
                  |L91.380|
                          DCD      _setup+0xc000
                  |L91.384|
                          DCD      |symbol_number.515|
                  |L91.388|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_line_number||, CODE, READONLY, ALIGN=2

                  read_line_number PROC
;;;9515   
;;;9516       static int read_line_number(                  /* ARGUMENTS                               */
000000  b5f8              PUSH     {r3-r7,lr}
;;;9517       char * line,                                  /* string: line of RS274    code being processed  */
;;;9518       int * counter,                                /* pointer to a counter for position on the line  */
;;;9519       block_pointer block)                          /* pointer to a block being filled from the line  */
;;;9520       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;9521           static char name[] SET_TO "read_line_number";
;;;9522           int value;
;;;9523           int status;
;;;9524   
;;;9525           CHK((line[*counter] ISNT 'n'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
000008  6820              LDR      r0,[r4,#0]
00000a  5c28              LDRB     r0,[r5,r0]
00000c  286e              CMP      r0,#0x6e
00000e  d026              BEQ      |L92.94|
000010  f04f0100          MOV      r1,#0
000014  4842              LDR      r0,|L92.288|
000016  f8c0114c          STR      r1,[r0,#0x14c]
00001a  4601              MOV      r1,r0
00001c  f8d1314c          LDR      r3,[r1,#0x14c]
000020  f8d1114c          LDR      r1,[r1,#0x14c]
000024  f1010101          ADD      r1,r1,#1
000028  4602              MOV      r2,r0
00002a  f8c2114c          STR      r1,[r2,#0x14c]
00002e  eb030183          ADD      r1,r3,r3,LSL #2
000032  f6a06254          SUB      r2,r0,#0xe54
000036  eb021101          ADD      r1,r2,r1,LSL #4
00003a  4608              MOV      r0,r1
00003c  4939              LDR      r1,|L92.292|
00003e  f7fffffe          BL       strcpy
000042  f04f0100          MOV      r1,#0
000046  4836              LDR      r0,|L92.288|
000048  f8d0014c          LDR      r0,[r0,#0x14c]
00004c  eb000080          ADD      r0,r0,r0,LSL #2
000050  4a35              LDR      r2,|L92.296|
000052  eb021000          ADD      r0,r2,r0,LSL #4
000056  7001              STRB     r1,[r0,#0]
000058  f04f0020          MOV      r0,#0x20
                  |L92.92|
;;;9526           *counter SET_TO (*counter + 1);
;;;9527           CHP(read_integer_unsigned(line, counter, &value));
;;;9528           CHK((value > 99999), NCE_LINE_NUMBER_GREATER_THAN_99999);
;;;9529           block->line_number SET_TO value;
;;;9530           return RS274NGC_OK;
;;;9531       }
00005c  bdf8              POP      {r3-r7,pc}
                  |L92.94|
00005e  6820              LDR      r0,[r4,#0]            ;9526
000060  f1000001          ADD      r0,r0,#1              ;9526
000064  6020              STR      r0,[r4,#0]            ;9526
000066  466a              MOV      r2,sp                 ;9527
000068  4621              MOV      r1,r4                 ;9527
00006a  4628              MOV      r0,r5                 ;9527
00006c  f7fffffe          BL       read_integer_unsigned
000070  0007              MOVS     r7,r0                 ;9527
000072  d025              BEQ      |L92.192|
000074  482a              LDR      r0,|L92.288|
000076  f8d0014c          LDR      r0,[r0,#0x14c]        ;9527
00007a  2831              CMP      r0,#0x31              ;9527
00007c  da1e              BGE      |L92.188|
00007e  4928              LDR      r1,|L92.288|
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;9527
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;9527
000088  1c49              ADDS     r1,r1,#1              ;9527
00008a  4a25              LDR      r2,|L92.288|
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9527
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9527
000094  4a24              LDR      r2,|L92.296|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9527
00009a  4608              MOV      r0,r1                 ;9527
00009c  4921              LDR      r1,|L92.292|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9527
0000a6  481e              LDR      r0,|L92.288|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9527
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9527
0000b0  4a1d              LDR      r2,|L92.296|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9527
0000b6  7001              STRB     r1,[r0,#0]            ;9527
0000b8  4638              MOV      r0,r7                 ;9527
0000ba  e7cf              B        |L92.92|
                  |L92.188|
0000bc  4638              MOV      r0,r7                 ;9527
0000be  e7cd              B        |L92.92|
                  |L92.192|
0000c0  491a              LDR      r1,|L92.300|
0000c2  9800              LDR      r0,[sp,#0]            ;9528
0000c4  4288              CMP      r0,r1                 ;9528
0000c6  dd25              BLE      |L92.276|
0000c8  f04f0100          MOV      r1,#0                 ;9528
0000cc  4814              LDR      r0,|L92.288|
0000ce  f8c0114c          STR      r1,[r0,#0x14c]        ;9528
0000d2  4601              MOV      r1,r0                 ;9528
0000d4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9528
0000d8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9528
0000dc  f1010101          ADD      r1,r1,#1              ;9528
0000e0  4602              MOV      r2,r0                 ;9528
0000e2  f8c2114c          STR      r1,[r2,#0x14c]        ;9528
0000e6  eb030183          ADD      r1,r3,r3,LSL #2       ;9528
0000ea  4a0f              LDR      r2,|L92.296|
0000ec  eb021101          ADD      r1,r2,r1,LSL #4       ;9528
0000f0  4608              MOV      r0,r1                 ;9528
0000f2  490c              LDR      r1,|L92.292|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0                 ;9528
0000fc  4808              LDR      r0,|L92.288|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;9528
000102  eb000080          ADD      r0,r0,r0,LSL #2       ;9528
000106  4a08              LDR      r2,|L92.296|
000108  eb021000          ADD      r0,r2,r0,LSL #4       ;9528
00010c  7001              STRB     r1,[r0,#0]            ;9528
00010e  f04f0062          MOV      r0,#0x62              ;9528
000112  e7a3              B        |L92.92|
                  |L92.276|
000114  9800              LDR      r0,[sp,#0]            ;9529
000116  f8c6017c          STR      r0,[r6,#0x17c]        ;9529
00011a  2000              MOVS     r0,#0                 ;9530
00011c  e79e              B        |L92.92|
;;;9532   
                          ENDP

00011e  0000              DCW      0x0000
                  |L92.288|
                          DCD      _setup+0xc000
                  |L92.292|
                          DCD      |symbol_number.516|
                  |L92.296|
                          DCD      _setup+0xb1ac
                  |L92.300|
                          DCD      0x0001869f

                          AREA ||i.read_m||, CODE, READONLY, ALIGN=2

                  read_m PROC
;;;9566   
;;;9567       static int read_m(                            /* ARGUMENTS                                     */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9568       char * line,                                  /* string: line of RS274 code being processed    */
;;;9569       int * counter,                                /* pointer to a counter for position on the line */
;;;9570       block_pointer block,                          /* pointer to a block being filled from the line */
;;;9571       double * parameters)                          /* array of system parameters                    */
;;;9572       {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4614              MOV      r4,r2
00000a  4698              MOV      r8,r3
;;;9573           static char name[] SET_TO "read_m";
;;;9574           int value;
;;;9575           int mode;
;;;9576           int status;
;;;9577   
;;;9578           CHK((line[*counter] ISNT 'm'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6828              LDR      r0,[r5,#0]
00000e  5c38              LDRB     r0,[r7,r0]
000010  286d              CMP      r0,#0x6d
000012  d027              BEQ      |L93.100|
000014  f04f0100          MOV      r1,#0
000018  4887              LDR      r0,|L93.568|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  497e              LDR      r1,|L93.572|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  487b              LDR      r0,|L93.568|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a7a              LDR      r2,|L93.576|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L93.96|
;;;9579           *counter SET_TO (*counter + 1);
;;;9580           CHP(read_integer_value(line, counter, &value, parameters));
;;;9581           CHK((value < 0), NCE_NEGATIVE_M_CODE_USED);
;;;9582           CHK((value > 99), NCE_M_CODE_GREATER_THAN_99);
;;;9583           mode SET_TO _ems[value];
;;;9584           CHK((mode IS -1), NCE_UNKNOWN_M_CODE_USED);
;;;9585           CHK((block->m_modes[mode] ISNT -1),
;;;9586               NCE_TWO_M_CODES_USED_FROM_SAME_MODAL_GROUP);
;;;9587           block->m_modes[mode] SET_TO value;
;;;9588           block->m_count++;
;;;9589           return RS274NGC_OK;
;;;9590       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L93.100|
000064  6828              LDR      r0,[r5,#0]            ;9579
000066  f1000001          ADD      r0,r0,#1              ;9579
00006a  6028              STR      r0,[r5,#0]            ;9579
00006c  4643              MOV      r3,r8                 ;9580
00006e  466a              MOV      r2,sp                 ;9580
000070  4629              MOV      r1,r5                 ;9580
000072  4638              MOV      r0,r7                 ;9580
000074  f7fffffe          BL       read_integer_value
000078  ea5f0900          MOVS     r9,r0                 ;9580
00007c  d025              BEQ      |L93.202|
00007e  486e              LDR      r0,|L93.568|
000080  f8d0014c          LDR      r0,[r0,#0x14c]        ;9580
000084  2831              CMP      r0,#0x31              ;9580
000086  da1e              BGE      |L93.198|
000088  496b              LDR      r1,|L93.568|
00008a  f8d1314c          LDR      r3,[r1,#0x14c]        ;9580
00008e  f8d1114c          LDR      r1,[r1,#0x14c]        ;9580
000092  1c49              ADDS     r1,r1,#1              ;9580
000094  4a68              LDR      r2,|L93.568|
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;9580
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;9580
00009e  4a68              LDR      r2,|L93.576|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;9580
0000a4  4608              MOV      r0,r1                 ;9580
0000a6  4965              LDR      r1,|L93.572|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;9580
0000b0  4861              LDR      r0,|L93.568|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9580
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;9580
0000ba  4a61              LDR      r2,|L93.576|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;9580
0000c0  7001              STRB     r1,[r0,#0]            ;9580
0000c2  4648              MOV      r0,r9                 ;9580
0000c4  e7cc              B        |L93.96|
                  |L93.198|
0000c6  4648              MOV      r0,r9                 ;9580
0000c8  e7ca              B        |L93.96|
                  |L93.202|
0000ca  9800              LDR      r0,[sp,#0]            ;9581
0000cc  2800              CMP      r0,#0                 ;9581
0000ce  da25              BGE      |L93.284|
0000d0  f04f0100          MOV      r1,#0                 ;9581
0000d4  4858              LDR      r0,|L93.568|
0000d6  f8c0114c          STR      r1,[r0,#0x14c]        ;9581
0000da  4601              MOV      r1,r0                 ;9581
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9581
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9581
0000e4  f1010101          ADD      r1,r1,#1              ;9581
0000e8  4602              MOV      r2,r0                 ;9581
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9581
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9581
0000f2  4a53              LDR      r2,|L93.576|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9581
0000f8  4608              MOV      r0,r1                 ;9581
0000fa  4950              LDR      r1,|L93.572|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;9581
000104  484c              LDR      r0,|L93.568|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;9581
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;9581
00010e  4a4c              LDR      r2,|L93.576|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;9581
000114  7001              STRB     r1,[r0,#0]            ;9581
000116  f04f007f          MOV      r0,#0x7f              ;9581
00011a  e7a1              B        |L93.96|
                  |L93.284|
00011c  9800              LDR      r0,[sp,#0]            ;9582
00011e  2863              CMP      r0,#0x63              ;9582
000120  dd25              BLE      |L93.366|
000122  f04f0100          MOV      r1,#0                 ;9582
000126  4844              LDR      r0,|L93.568|
000128  f8c0114c          STR      r1,[r0,#0x14c]        ;9582
00012c  4601              MOV      r1,r0                 ;9582
00012e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9582
000132  f8d1114c          LDR      r1,[r1,#0x14c]        ;9582
000136  f1010101          ADD      r1,r1,#1              ;9582
00013a  4602              MOV      r2,r0                 ;9582
00013c  f8c2114c          STR      r1,[r2,#0x14c]        ;9582
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;9582
000144  4a3e              LDR      r2,|L93.576|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;9582
00014a  4608              MOV      r0,r1                 ;9582
00014c  493b              LDR      r1,|L93.572|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;9582
000156  4838              LDR      r0,|L93.568|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;9582
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;9582
000160  4a37              LDR      r2,|L93.576|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;9582
000166  7001              STRB     r1,[r0,#0]            ;9582
000168  f04f0064          MOV      r0,#0x64              ;9582
00016c  e778              B        |L93.96|
                  |L93.366|
00016e  4835              LDR      r0,|L93.580|
000170  9900              LDR      r1,[sp,#0]            ;9583
000172  f8506021          LDR      r6,[r0,r1,LSL #2]     ;9583
000176  1c70              ADDS     r0,r6,#1              ;9584
000178  d124              BNE      |L93.452|
00017a  4601              MOV      r1,r0                 ;9584
00017c  482e              LDR      r0,|L93.568|
00017e  f8c0114c          STR      r1,[r0,#0x14c]        ;9584
000182  4601              MOV      r1,r0                 ;9584
000184  f8d1314c          LDR      r3,[r1,#0x14c]        ;9584
000188  f8d1114c          LDR      r1,[r1,#0x14c]        ;9584
00018c  f1010101          ADD      r1,r1,#1              ;9584
000190  4602              MOV      r2,r0                 ;9584
000192  f8c2114c          STR      r1,[r2,#0x14c]        ;9584
000196  eb030183          ADD      r1,r3,r3,LSL #2       ;9584
00019a  4a29              LDR      r2,|L93.576|
00019c  eb021101          ADD      r1,r2,r1,LSL #4       ;9584
0001a0  4608              MOV      r0,r1                 ;9584
0001a2  4926              LDR      r1,|L93.572|
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;9584
0001ac  4822              LDR      r0,|L93.568|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;9584
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;9584
0001b6  4a22              LDR      r2,|L93.576|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;9584
0001bc  7001              STRB     r1,[r0,#0]            ;9584
0001be  f04f00ae          MOV      r0,#0xae              ;9584
0001c2  e74d              B        |L93.96|
                  |L93.452|
0001c4  f50470c4          ADD      r0,r4,#0x188          ;9585
0001c8  f8500026          LDR      r0,[r0,r6,LSL #2]     ;9585
0001cc  1c40              ADDS     r0,r0,#1              ;9585
0001ce  d025              BEQ      |L93.540|
0001d0  f04f0100          MOV      r1,#0                 ;9585
0001d4  4818              LDR      r0,|L93.568|
0001d6  f8c0114c          STR      r1,[r0,#0x14c]        ;9585
0001da  4601              MOV      r1,r0                 ;9585
0001dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9585
0001e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9585
0001e4  f1010101          ADD      r1,r1,#1              ;9585
0001e8  4602              MOV      r2,r0                 ;9585
0001ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9585
0001ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9585
0001f2  4a13              LDR      r2,|L93.576|
0001f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9585
0001f8  4608              MOV      r0,r1                 ;9585
0001fa  4910              LDR      r1,|L93.572|
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;9585
000204  480c              LDR      r0,|L93.568|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;9585
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;9585
00020e  4a0c              LDR      r2,|L93.576|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;9585
000214  7001              STRB     r1,[r0,#0]            ;9585
000216  f04f00a9          MOV      r0,#0xa9              ;9585
00021a  e721              B        |L93.96|
                  |L93.540|
00021c  f50470c4          ADD      r0,r4,#0x188          ;9587
000220  9900              LDR      r1,[sp,#0]            ;9587
000222  f8401026          STR      r1,[r0,r6,LSL #2]     ;9587
000226  f8d40184          LDR      r0,[r4,#0x184]        ;9588
00022a  f1000001          ADD      r0,r0,#1              ;9588
00022e  f8c40184          STR      r0,[r4,#0x184]        ;9588
000232  f04f0000          MOV      r0,#0                 ;9589
000236  e713              B        |L93.96|
;;;9591   
                          ENDP

                  |L93.568|
                          DCD      _setup+0xc000
                  |L93.572|
                          DCD      |symbol_number.517|
                  |L93.576|
                          DCD      _setup+0xb1ac
                  |L93.580|
                          DCD      _ems

                          AREA ||i.read_one_item||, CODE, READONLY, ALIGN=2

                  read_one_item PROC
;;;9636   
;;;9637       static int read_one_item(                     /* ARGUMENTS                                      */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;9638       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9639       int * counter,                                /* pointer to a counter for position on the line  */
;;;9640       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9641       double * parameters)                          /* array of system parameters                     */
;;;9642       {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
;;;9643           static char name[] SET_TO "read_one_item";
;;;9644           int status;
;;;9645           read_function_pointer function_pointer;
;;;9646           char letter;
;;;9647   
;;;9648           letter SET_TO line[*counter];             /* check if in array range */
00000c  6838              LDR      r0,[r7,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  4605              MOV      r5,r0
;;;9649           CHK(((letter < 0) OR (letter > 'z')), NCE_BAD_CHARACTER_USED);
000012  2d00              CMP      r5,#0
000014  db01              BLT      |L94.26|
000016  2d7a              CMP      r5,#0x7a
000018  dd27              BLE      |L94.106|
                  |L94.26|
00001a  f04f0100          MOV      r1,#0
00001e  4840              LDR      r0,|L94.288|
000020  f8c0114c          STR      r1,[r0,#0x14c]
000024  4601              MOV      r1,r0
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  f1010101          ADD      r1,r1,#1
000032  4602              MOV      r2,r0
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a06254          SUB      r2,r0,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4937              LDR      r1,|L94.292|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4833              LDR      r0,|L94.288|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a33              LDR      r2,|L94.296|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  f04f000c          MOV      r0,#0xc
                  |L94.102|
;;;9650           function_pointer SET_TO _readers[letter];
;;;9651           CHK((function_pointer IS 0), NCE_BAD_CHARACTER_USED);
;;;9652           CHP(function_pointer(line, counter, block, parameters));
;;;9653           return RS274NGC_OK;
;;;9654       }
000066  e8bd87f0          POP      {r4-r10,pc}
                  |L94.106|
00006a  4830              LDR      r0,|L94.300|
00006c  f8504025          LDR      r4,[r0,r5,LSL #2]     ;9650
000070  bb2c              CBNZ     r4,|L94.190|
000072  f04f0100          MOV      r1,#0                 ;9651
000076  482a              LDR      r0,|L94.288|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9651
00007c  4601              MOV      r1,r0                 ;9651
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9651
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9651
000086  f1010101          ADD      r1,r1,#1              ;9651
00008a  4602              MOV      r2,r0                 ;9651
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9651
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9651
000094  4a24              LDR      r2,|L94.296|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9651
00009a  4608              MOV      r0,r1                 ;9651
00009c  4921              LDR      r1,|L94.292|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9651
0000a6  481e              LDR      r0,|L94.288|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9651
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9651
0000b0  4a1d              LDR      r2,|L94.296|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9651
0000b6  7001              STRB     r1,[r0,#0]            ;9651
0000b8  f04f000c          MOV      r0,#0xc               ;9651
0000bc  e7d3              B        |L94.102|
                  |L94.190|
0000be  464b              MOV      r3,r9                 ;9652
0000c0  4642              MOV      r2,r8                 ;9652
0000c2  4639              MOV      r1,r7                 ;9652
0000c4  4630              MOV      r0,r6                 ;9652
0000c6  47a0              BLX      r4                    ;9652
0000c8  ea5f0a00          MOVS     r10,r0                ;9652
0000cc  d025              BEQ      |L94.282|
0000ce  4814              LDR      r0,|L94.288|
0000d0  f8d0014c          LDR      r0,[r0,#0x14c]        ;9652
0000d4  2831              CMP      r0,#0x31              ;9652
0000d6  da1e              BGE      |L94.278|
0000d8  4911              LDR      r1,|L94.288|
0000da  f8d1314c          LDR      r3,[r1,#0x14c]        ;9652
0000de  f8d1114c          LDR      r1,[r1,#0x14c]        ;9652
0000e2  1c49              ADDS     r1,r1,#1              ;9652
0000e4  4a0e              LDR      r2,|L94.288|
0000e6  f8c2114c          STR      r1,[r2,#0x14c]        ;9652
0000ea  eb030183          ADD      r1,r3,r3,LSL #2       ;9652
0000ee  4a0e              LDR      r2,|L94.296|
0000f0  eb021101          ADD      r1,r2,r1,LSL #4       ;9652
0000f4  4608              MOV      r0,r1                 ;9652
0000f6  490b              LDR      r1,|L94.292|
0000f8  f7fffffe          BL       strcpy
0000fc  f04f0100          MOV      r1,#0                 ;9652
000100  4807              LDR      r0,|L94.288|
000102  f8d0014c          LDR      r0,[r0,#0x14c]        ;9652
000106  eb000080          ADD      r0,r0,r0,LSL #2       ;9652
00010a  4a07              LDR      r2,|L94.296|
00010c  eb021000          ADD      r0,r2,r0,LSL #4       ;9652
000110  7001              STRB     r1,[r0,#0]            ;9652
000112  4650              MOV      r0,r10                ;9652
000114  e7a7              B        |L94.102|
                  |L94.278|
000116  4650              MOV      r0,r10                ;9652
000118  e7a5              B        |L94.102|
                  |L94.282|
00011a  2000              MOVS     r0,#0                 ;9653
00011c  e7a3              B        |L94.102|
;;;9655   
                          ENDP

00011e  0000              DCW      0x0000
                  |L94.288|
                          DCD      _setup+0xc000
                  |L94.292|
                          DCD      |symbol_number.518|
                  |L94.296|
                          DCD      _setup+0xb1ac
                  |L94.300|
                          DCD      _readers

                          AREA ||i.read_operation||, CODE, READONLY, ALIGN=2

                  read_operation PROC
;;;9684   
;;;9685       static int read_operation(                    /* ARGUMENTS                                      */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;9686       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9687       int * counter,                                /* pointer to a counter for position on the line  */
;;;9688       int * operation)                              /* pointer to operation to be read                */
;;;9689       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;9690           static char name[] SET_TO "read_operation";
;;;9691           char c;
;;;9692   
;;;9693           c SET_TO line[*counter];
00000a  6820              LDR      r0,[r4,#0]
00000c  5c30              LDRB     r0,[r6,r0]
00000e  4607              MOV      r7,r0
;;;9694           *counter SET_TO (*counter + 1);
000010  6820              LDR      r0,[r4,#0]
000012  f1000001          ADD      r0,r0,#1
000016  6020              STR      r0,[r4,#0]
;;;9695           switch(c)
000018  2f5d              CMP      r7,#0x5d
00001a  d032              BEQ      |L95.130|
00001c  dc0c              BGT      |L95.56|
00001e  2f2b              CMP      r7,#0x2b
000020  d013              BEQ      |L95.74|
000022  dc04              BGT      |L95.46|
000024  2f00              CMP      r7,#0
000026  d07b              BEQ      |L95.288|
000028  2f2a              CMP      r7,#0x2a
                  |L95.42|
00002a  d17a              BNE      |L95.290|
00002c  e019              B        |L95.98|
                  |L95.46|
00002e  2f2d              CMP      r7,#0x2d
000030  d00f              BEQ      |L95.82|
000032  2f2f              CMP      r7,#0x2f
000034  d1f9              BNE      |L95.42|
000036  e010              B        |L95.90|
                  |L95.56|
000038  2f61              CMP      r7,#0x61
00003a  d026              BEQ      |L95.138|
00003c  2f6d              CMP      r7,#0x6d
00003e  d05e              BEQ      |L95.254|
000040  2f6f              CMP      r7,#0x6f
000042  d06f              BEQ      |L95.292|
000044  2f78              CMP      r7,#0x78
000046  d1f0              BNE      |L95.42|
000048  e0c7              B        |L95.474|
                  |L95.74|
;;;9696           {
;;;9697               case '+':
;;;9698                   *operation SET_TO PLUS;
00004a  f04f0009          MOV      r0,#9
00004e  6028              STR      r0,[r5,#0]
;;;9699                   break;
000050  e147              B        |L95.738|
                  |L95.82|
;;;9700               case '-':
;;;9701                   *operation SET_TO MINUS;
000052  f04f0007          MOV      r0,#7
000056  6028              STR      r0,[r5,#0]
;;;9702                   break;
000058  e143              B        |L95.738|
                  |L95.90|
;;;9703               case '/':
;;;9704                   *operation SET_TO DIVIDED_BY;
00005a  f04f0001          MOV      r0,#1
00005e  6028              STR      r0,[r5,#0]
;;;9705                   break;
000060  e13f              B        |L95.738|
                  |L95.98|
;;;9706               case '*':
;;;9707                   if(line[*counter] IS '*')
000062  6820              LDR      r0,[r4,#0]
000064  5c30              LDRB     r0,[r6,r0]
000066  282a              CMP      r0,#0x2a
000068  d107              BNE      |L95.122|
;;;9708                   {
;;;9709                       *operation SET_TO POWER;
00006a  f04f0003          MOV      r0,#3
00006e  6028              STR      r0,[r5,#0]
;;;9710                       *counter SET_TO (*counter + 1);
000070  6820              LDR      r0,[r4,#0]
000072  f1000001          ADD      r0,r0,#1
000076  6020              STR      r0,[r4,#0]
000078  e002              B        |L95.128|
                  |L95.122|
;;;9711                   }
;;;9712                   else
;;;9713                       *operation SET_TO TIMES;
00007a  f04f0004          MOV      r0,#4
00007e  6028              STR      r0,[r5,#0]
                  |L95.128|
;;;9714                   break;
000080  e12f              B        |L95.738|
                  |L95.130|
;;;9715               case ']':
;;;9716                   *operation SET_TO RIGHT_BRACKET;
000082  f04f000a          MOV      r0,#0xa
000086  6028              STR      r0,[r5,#0]
;;;9717                   break;
000088  e12b              B        |L95.738|
                  |L95.138|
;;;9718               case 'a':
;;;9719                   if((line[*counter] IS 'n') AND (line[(*counter)+1] IS 'd'))
00008a  6820              LDR      r0,[r4,#0]
00008c  5c30              LDRB     r0,[r6,r0]
00008e  286e              CMP      r0,#0x6e
000090  d10c              BNE      |L95.172|
000092  6820              LDR      r0,[r4,#0]
000094  1c40              ADDS     r0,r0,#1
000096  5c30              LDRB     r0,[r6,r0]
000098  2864              CMP      r0,#0x64
00009a  d107              BNE      |L95.172|
;;;9720                   {
;;;9721                       *operation SET_TO AND2;
00009c  f04f0005          MOV      r0,#5
0000a0  6028              STR      r0,[r5,#0]
;;;9722                       *counter SET_TO (*counter + 2);
0000a2  6820              LDR      r0,[r4,#0]
0000a4  f1000002          ADD      r0,r0,#2
0000a8  6020              STR      r0,[r4,#0]
0000aa  e027              B        |L95.252|
                  |L95.172|
;;;9723                   }
;;;9724                   else
;;;9725                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_A);
0000ac  f04f0100          MOV      r1,#0
0000b0  488d              LDR      r0,|L95.744|
0000b2  f8c0114c          STR      r1,[r0,#0x14c]
0000b6  4601              MOV      r1,r0
0000b8  f8d1314c          LDR      r3,[r1,#0x14c]
0000bc  f8d1114c          LDR      r1,[r1,#0x14c]
0000c0  f1010101          ADD      r1,r1,#1
0000c4  4602              MOV      r2,r0
0000c6  f8c2114c          STR      r1,[r2,#0x14c]
0000ca  eb030183          ADD      r1,r3,r3,LSL #2
0000ce  f6a06254          SUB      r2,r0,#0xe54
0000d2  eb021101          ADD      r1,r2,r1,LSL #4
0000d6  4608              MOV      r0,r1
0000d8  4984              LDR      r1,|L95.748|
0000da  f7fffffe          BL       strcpy
0000de  f04f0100          MOV      r1,#0
0000e2  4881              LDR      r0,|L95.744|
0000e4  f8d0014c          LDR      r0,[r0,#0x14c]
0000e8  eb000080          ADD      r0,r0,r0,LSL #2
0000ec  4a80              LDR      r2,|L95.752|
0000ee  eb021000          ADD      r0,r2,r0,LSL #4
0000f2  7001              STRB     r1,[r0,#0]
0000f4  f04f00b0          MOV      r0,#0xb0
                  |L95.248|
;;;9726                   break;
;;;9727               case 'm':
;;;9728                   if((line[*counter] IS 'o') AND (line[(*counter)+1] IS 'd'))
;;;9729                   {
;;;9730                       *operation SET_TO MODULO;
;;;9731                       *counter SET_TO (*counter + 2);
;;;9732                   }
;;;9733                   else
;;;9734                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_M);
;;;9735                   break;
;;;9736               case 'o':
;;;9737                   if(line[*counter] IS 'r')
;;;9738                   {
;;;9739                       *operation SET_TO NON_EXCLUSIVE_OR;
;;;9740                       *counter SET_TO (*counter + 1);
;;;9741                   }
;;;9742                   else
;;;9743                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_O);
;;;9744                   break;
;;;9745               case 'x':
;;;9746                   if((line[*counter] IS 'o') AND (line[(*counter)+1] IS 'r'))
;;;9747                   {
;;;9748                       *operation SET_TO EXCLUSIVE_OR;
;;;9749                       *counter SET_TO (*counter + 2);
;;;9750                   }
;;;9751                   else
;;;9752                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_X);
;;;9753                   break;
;;;9754               case 0:
;;;9755                   ERM(NCE_UNCLOSED_EXPRESSION);
;;;9756               default:
;;;9757                   ERM(NCE_UNKNOWN_OPERATION);
;;;9758           }
;;;9759           return RS274NGC_OK;
;;;9760       }
0000f8  e8bd81f0          POP      {r4-r8,pc}
                  |L95.252|
0000fc  e0f1              B        |L95.738|
                  |L95.254|
0000fe  6820              LDR      r0,[r4,#0]            ;9728
000100  5c30              LDRB     r0,[r6,r0]            ;9728
000102  286f              CMP      r0,#0x6f              ;9728
000104  d10f              BNE      |L95.294|
000106  6820              LDR      r0,[r4,#0]            ;9728
000108  1c40              ADDS     r0,r0,#1              ;9728
00010a  5c30              LDRB     r0,[r6,r0]            ;9728
00010c  2864              CMP      r0,#0x64              ;9728
00010e  d10a              BNE      |L95.294|
000110  f04f0002          MOV      r0,#2                 ;9730
000114  6028              STR      r0,[r5,#0]            ;9730
000116  6820              LDR      r0,[r4,#0]            ;9731
000118  f1000002          ADD      r0,r0,#2              ;9731
00011c  6020              STR      r0,[r4,#0]            ;9731
00011e  e028              B        |L95.370|
                  |L95.288|
000120  e093              B        |L95.586|
                  |L95.290|
000122  e0b8              B        |L95.662|
                  |L95.292|
000124  e026              B        |L95.372|
                  |L95.294|
000126  f04f0100          MOV      r1,#0                 ;9734
00012a  486f              LDR      r0,|L95.744|
00012c  f8c0114c          STR      r1,[r0,#0x14c]        ;9734
000130  4601              MOV      r1,r0                 ;9734
000132  f8d1314c          LDR      r3,[r1,#0x14c]        ;9734
000136  f8d1114c          LDR      r1,[r1,#0x14c]        ;9734
00013a  f1010101          ADD      r1,r1,#1              ;9734
00013e  4602              MOV      r2,r0                 ;9734
000140  f8c2114c          STR      r1,[r2,#0x14c]        ;9734
000144  eb030183          ADD      r1,r3,r3,LSL #2       ;9734
000148  4a69              LDR      r2,|L95.752|
00014a  eb021101          ADD      r1,r2,r1,LSL #4       ;9734
00014e  4608              MOV      r0,r1                 ;9734
000150  4966              LDR      r1,|L95.748|
000152  f7fffffe          BL       strcpy
000156  f04f0100          MOV      r1,#0                 ;9734
00015a  4863              LDR      r0,|L95.744|
00015c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9734
000160  eb000080          ADD      r0,r0,r0,LSL #2       ;9734
000164  4a62              LDR      r2,|L95.752|
000166  eb021000          ADD      r0,r2,r0,LSL #4       ;9734
00016a  7001              STRB     r1,[r0,#0]            ;9734
00016c  f04f00b1          MOV      r0,#0xb1              ;9734
000170  e7c2              B        |L95.248|
                  |L95.370|
000172  e0b6              B        |L95.738|
                  |L95.372|
000174  6820              LDR      r0,[r4,#0]            ;9737
000176  5c30              LDRB     r0,[r6,r0]            ;9737
000178  2872              CMP      r0,#0x72              ;9737
00017a  d107              BNE      |L95.396|
00017c  f04f0008          MOV      r0,#8                 ;9739
000180  6028              STR      r0,[r5,#0]            ;9739
000182  6820              LDR      r0,[r4,#0]            ;9740
000184  f1000001          ADD      r0,r0,#1              ;9740
000188  6020              STR      r0,[r4,#0]            ;9740
00018a  e025              B        |L95.472|
                  |L95.396|
00018c  f04f0100          MOV      r1,#0                 ;9743
000190  4855              LDR      r0,|L95.744|
000192  f8c0114c          STR      r1,[r0,#0x14c]        ;9743
000196  4601              MOV      r1,r0                 ;9743
000198  f8d1314c          LDR      r3,[r1,#0x14c]        ;9743
00019c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9743
0001a0  f1010101          ADD      r1,r1,#1              ;9743
0001a4  4602              MOV      r2,r0                 ;9743
0001a6  f8c2114c          STR      r1,[r2,#0x14c]        ;9743
0001aa  eb030183          ADD      r1,r3,r3,LSL #2       ;9743
0001ae  4a50              LDR      r2,|L95.752|
0001b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9743
0001b4  4608              MOV      r0,r1                 ;9743
0001b6  494d              LDR      r1,|L95.748|
0001b8  f7fffffe          BL       strcpy
0001bc  f04f0100          MOV      r1,#0                 ;9743
0001c0  4849              LDR      r0,|L95.744|
0001c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9743
0001c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9743
0001ca  4a49              LDR      r2,|L95.752|
0001cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9743
0001d0  7001              STRB     r1,[r0,#0]            ;9743
0001d2  f04f00b2          MOV      r0,#0xb2              ;9743
0001d6  e78f              B        |L95.248|
                  |L95.472|
0001d8  e083              B        |L95.738|
                  |L95.474|
0001da  6820              LDR      r0,[r4,#0]            ;9746
0001dc  5c30              LDRB     r0,[r6,r0]            ;9746
0001de  286f              CMP      r0,#0x6f              ;9746
0001e0  d10c              BNE      |L95.508|
0001e2  6820              LDR      r0,[r4,#0]            ;9746
0001e4  1c40              ADDS     r0,r0,#1              ;9746
0001e6  5c30              LDRB     r0,[r6,r0]            ;9746
0001e8  2872              CMP      r0,#0x72              ;9746
0001ea  d107              BNE      |L95.508|
0001ec  f04f0006          MOV      r0,#6                 ;9748
0001f0  6028              STR      r0,[r5,#0]            ;9748
0001f2  6820              LDR      r0,[r4,#0]            ;9749
0001f4  f1000002          ADD      r0,r0,#2              ;9749
0001f8  6020              STR      r0,[r4,#0]            ;9749
0001fa  e025              B        |L95.584|
                  |L95.508|
0001fc  f04f0100          MOV      r1,#0                 ;9752
000200  4839              LDR      r0,|L95.744|
000202  f8c0114c          STR      r1,[r0,#0x14c]        ;9752
000206  4601              MOV      r1,r0                 ;9752
000208  f8d1314c          LDR      r3,[r1,#0x14c]        ;9752
00020c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9752
000210  f1010101          ADD      r1,r1,#1              ;9752
000214  4602              MOV      r2,r0                 ;9752
000216  f8c2114c          STR      r1,[r2,#0x14c]        ;9752
00021a  eb030183          ADD      r1,r3,r3,LSL #2       ;9752
00021e  4a34              LDR      r2,|L95.752|
000220  eb021101          ADD      r1,r2,r1,LSL #4       ;9752
000224  4608              MOV      r0,r1                 ;9752
000226  4931              LDR      r1,|L95.748|
000228  f7fffffe          BL       strcpy
00022c  f04f0100          MOV      r1,#0                 ;9752
000230  482d              LDR      r0,|L95.744|
000232  f8d0014c          LDR      r0,[r0,#0x14c]        ;9752
000236  eb000080          ADD      r0,r0,r0,LSL #2       ;9752
00023a  4a2d              LDR      r2,|L95.752|
00023c  eb021000          ADD      r0,r2,r0,LSL #4       ;9752
000240  7001              STRB     r1,[r0,#0]            ;9752
000242  f04f00b3          MOV      r0,#0xb3              ;9752
000246  e757              B        |L95.248|
                  |L95.584|
000248  e04b              B        |L95.738|
                  |L95.586|
00024a  f04f0100          MOV      r1,#0                 ;9755
00024e  4826              LDR      r0,|L95.744|
000250  f8c0114c          STR      r1,[r0,#0x14c]        ;9755
000254  4601              MOV      r1,r0                 ;9755
000256  f8d1314c          LDR      r3,[r1,#0x14c]        ;9755
00025a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9755
00025e  f1010101          ADD      r1,r1,#1              ;9755
000262  4602              MOV      r2,r0                 ;9755
000264  f8c2114c          STR      r1,[r2,#0x14c]        ;9755
000268  eb030183          ADD      r1,r3,r3,LSL #2       ;9755
00026c  4a20              LDR      r2,|L95.752|
00026e  eb021101          ADD      r1,r2,r1,LSL #4       ;9755
000272  4608              MOV      r0,r1                 ;9755
000274  491d              LDR      r1,|L95.748|
000276  f7fffffe          BL       strcpy
00027a  f04f0100          MOV      r1,#0                 ;9755
00027e  481a              LDR      r0,|L95.744|
000280  f8d0014c          LDR      r0,[r0,#0x14c]        ;9755
000284  eb000080          ADD      r0,r0,r0,LSL #2       ;9755
000288  4a19              LDR      r2,|L95.752|
00028a  eb021000          ADD      r0,r2,r0,LSL #4       ;9755
00028e  7001              STRB     r1,[r0,#0]            ;9755
000290  f04f00ac          MOV      r0,#0xac              ;9755
000294  e730              B        |L95.248|
                  |L95.662|
000296  f04f0100          MOV      r1,#0                 ;9757
00029a  4813              LDR      r0,|L95.744|
00029c  f8c0114c          STR      r1,[r0,#0x14c]        ;9757
0002a0  4601              MOV      r1,r0                 ;9757
0002a2  f8d1314c          LDR      r3,[r1,#0x14c]        ;9757
0002a6  f8d1114c          LDR      r1,[r1,#0x14c]        ;9757
0002aa  f1010101          ADD      r1,r1,#1              ;9757
0002ae  4602              MOV      r2,r0                 ;9757
0002b0  f8c2114c          STR      r1,[r2,#0x14c]        ;9757
0002b4  eb030183          ADD      r1,r3,r3,LSL #2       ;9757
0002b8  4a0d              LDR      r2,|L95.752|
0002ba  eb021101          ADD      r1,r2,r1,LSL #4       ;9757
0002be  4608              MOV      r0,r1                 ;9757
0002c0  490a              LDR      r1,|L95.748|
0002c2  f7fffffe          BL       strcpy
0002c6  f04f0100          MOV      r1,#0                 ;9757
0002ca  4807              LDR      r0,|L95.744|
0002cc  f8d0014c          LDR      r0,[r0,#0x14c]        ;9757
0002d0  eb000080          ADD      r0,r0,r0,LSL #2       ;9757
0002d4  4a06              LDR      r2,|L95.752|
0002d6  eb021000          ADD      r0,r2,r0,LSL #4       ;9757
0002da  7001              STRB     r1,[r0,#0]            ;9757
0002dc  f04f00af          MOV      r0,#0xaf              ;9757
0002e0  e70a              B        |L95.248|
                  |L95.738|
0002e2  bf00              NOP                            ;9699
0002e4  2000              MOVS     r0,#0                 ;9759
0002e6  e707              B        |L95.248|
;;;9761   
                          ENDP

                  |L95.744|
                          DCD      _setup+0xc000
                  |L95.748|
                          DCD      |symbol_number.519|
                  |L95.752|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_operation_unary||, CODE, READONLY, ALIGN=2

                  read_operation_unary PROC
;;;9794   
;;;9795       static int read_operation_unary(              /* ARGUMENTS                               */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;9796       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9797       int * counter,                                /* pointer to a counter for position on the line  */
;;;9798       int * operation)                              /* pointer to operation to be read                */
;;;9799       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;9800           static char name[] SET_TO "read_operation_unary";
;;;9801           char c;
;;;9802   
;;;9803           c SET_TO line[*counter];
00000a  6820              LDR      r0,[r4,#0]
00000c  5c28              LDRB     r0,[r5,r0]
00000e  4607              MOV      r7,r0
;;;9804           *counter SET_TO (*counter + 1);
000010  6820              LDR      r0,[r4,#0]
000012  f1000001          ADD      r0,r0,#1
000016  6020              STR      r0,[r4,#0]
;;;9805           switch (c)
000018  2f6c              CMP      r7,#0x6c
00001a  d079              BEQ      |L96.272|
00001c  dc08              BGT      |L96.48|
00001e  2f61              CMP      r7,#0x61
000020  d00d              BEQ      |L96.62|
000022  2f63              CMP      r7,#0x63
000024  d07b              BEQ      |L96.286|
000026  2f65              CMP      r7,#0x65
000028  d074              BEQ      |L96.276|
00002a  2f66              CMP      r7,#0x66
                  |L96.44|
00002c  d173              BNE      |L96.278|
00002e  e0e6              B        |L96.510|
                  |L96.48|
000030  2f72              CMP      r7,#0x72
000032  d071              BEQ      |L96.280|
000034  2f73              CMP      r7,#0x73
000036  d070              BEQ      |L96.282|
000038  2f74              CMP      r7,#0x74
00003a  d1f7              BNE      |L96.44|
00003c  e1da              B        |L96.1012|
                  |L96.62|
;;;9806           {
;;;9807               case 'a':
;;;9808                   if((line[*counter] IS 'b') AND (line[(*counter)+1] IS 's'))
00003e  6820              LDR      r0,[r4,#0]
000040  5c28              LDRB     r0,[r5,r0]
000042  2862              CMP      r0,#0x62
000044  d10c              BNE      |L96.96|
000046  6820              LDR      r0,[r4,#0]
000048  1c40              ADDS     r0,r0,#1
00004a  5c28              LDRB     r0,[r5,r0]
00004c  2873              CMP      r0,#0x73
00004e  d107              BNE      |L96.96|
;;;9809                   {
;;;9810                       *operation SET_TO ABS;
000050  f04f0001          MOV      r0,#1
000054  6030              STR      r0,[r6,#0]
;;;9811                       *counter SET_TO (*counter + 2);
000056  6820              LDR      r0,[r4,#0]
000058  f1000002          ADD      r0,r0,#2
00005c  6020              STR      r0,[r4,#0]
00005e  e05d              B        |L96.284|
                  |L96.96|
;;;9812                   }
;;;9813                   else if(strncmp((line + *counter), "cos", 3) IS 0)
000060  6821              LDR      r1,[r4,#0]
000062  4429              ADD      r1,r1,r5
000064  4608              MOV      r0,r1
000066  2203              MOVS     r2,#3
000068  a1fe              ADR      r1,|L96.1124|
00006a  f7fffffe          BL       strncmp
00006e  b938              CBNZ     r0,|L96.128|
;;;9814                   {
;;;9815                       *operation SET_TO ACOS;
000070  f04f0002          MOV      r0,#2
000074  6030              STR      r0,[r6,#0]
;;;9816                       *counter SET_TO (*counter + 3);
000076  6820              LDR      r0,[r4,#0]
000078  f1000003          ADD      r0,r0,#3
00007c  6020              STR      r0,[r4,#0]
00007e  e04d              B        |L96.284|
                  |L96.128|
;;;9817                   }
;;;9818                   else if(strncmp((line + *counter), "sin", 3) IS 0)
000080  6821              LDR      r1,[r4,#0]
000082  4429              ADD      r1,r1,r5
000084  4608              MOV      r0,r1
000086  2203              MOVS     r2,#3
000088  a1f7              ADR      r1,|L96.1128|
00008a  f7fffffe          BL       strncmp
00008e  b938              CBNZ     r0,|L96.160|
;;;9819                   {
;;;9820                       *operation SET_TO ASIN;
000090  f04f0003          MOV      r0,#3
000094  6030              STR      r0,[r6,#0]
;;;9821                       *counter SET_TO (*counter + 3);
000096  6820              LDR      r0,[r4,#0]
000098  f1000003          ADD      r0,r0,#3
00009c  6020              STR      r0,[r4,#0]
00009e  e03d              B        |L96.284|
                  |L96.160|
;;;9822                   }
;;;9823                   else if(strncmp((line + *counter), "tan", 3) IS 0)
0000a0  6821              LDR      r1,[r4,#0]
0000a2  4429              ADD      r1,r1,r5
0000a4  4608              MOV      r0,r1
0000a6  2203              MOVS     r2,#3
0000a8  a1f0              ADR      r1,|L96.1132|
0000aa  f7fffffe          BL       strncmp
0000ae  b938              CBNZ     r0,|L96.192|
;;;9824                   {
;;;9825                       *operation SET_TO ATAN;
0000b0  f04f0004          MOV      r0,#4
0000b4  6030              STR      r0,[r6,#0]
;;;9826                       *counter SET_TO (*counter + 3);
0000b6  6820              LDR      r0,[r4,#0]
0000b8  f1000003          ADD      r0,r0,#3
0000bc  6020              STR      r0,[r4,#0]
0000be  e02d              B        |L96.284|
                  |L96.192|
;;;9827                   }
;;;9828                   else
;;;9829                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_A);
0000c0  f04f0100          MOV      r1,#0
0000c4  48ea              LDR      r0,|L96.1136|
0000c6  f8c0114c          STR      r1,[r0,#0x14c]
0000ca  4601              MOV      r1,r0
0000cc  f8d1314c          LDR      r3,[r1,#0x14c]
0000d0  f8d1114c          LDR      r1,[r1,#0x14c]
0000d4  f1010101          ADD      r1,r1,#1
0000d8  4602              MOV      r2,r0
0000da  f8c2114c          STR      r1,[r2,#0x14c]
0000de  eb030183          ADD      r1,r3,r3,LSL #2
0000e2  f6a06254          SUB      r2,r0,#0xe54
0000e6  eb021101          ADD      r1,r2,r1,LSL #4
0000ea  4608              MOV      r0,r1
0000ec  49e1              LDR      r1,|L96.1140|
0000ee  f7fffffe          BL       strcpy
0000f2  f04f0100          MOV      r1,#0
0000f6  48de              LDR      r0,|L96.1136|
0000f8  f8d0014c          LDR      r0,[r0,#0x14c]
0000fc  eb000080          ADD      r0,r0,r0,LSL #2
000100  4add              LDR      r2,|L96.1144|
000102  eb021000          ADD      r0,r2,r0,LSL #4
000106  7001              STRB     r1,[r0,#0]
000108  f04f00b4          MOV      r0,#0xb4
                  |L96.268|
;;;9830                   break;
;;;9831               case 'c':
;;;9832                   if((line[*counter] IS 'o') AND (line[(*counter)+1] IS 's'))
;;;9833                   {
;;;9834                       *operation SET_TO COS;
;;;9835                       *counter SET_TO (*counter + 2);
;;;9836                   }
;;;9837                   else
;;;9838                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_C);
;;;9839                   break;
;;;9840               case 'e':
;;;9841                   if((line[*counter] IS 'x') AND (line[(*counter)+1] IS 'p'))
;;;9842                   {
;;;9843                       *operation SET_TO EXP;
;;;9844                       *counter SET_TO (*counter + 2);
;;;9845                   }
;;;9846                   else
;;;9847                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_E);
;;;9848                   break;
;;;9849               case 'f':
;;;9850                   if((line[*counter] IS 'i') AND (line[(*counter)+1] IS 'x'))
;;;9851                   {
;;;9852                       *operation SET_TO FIX;
;;;9853                       *counter SET_TO (*counter + 2);
;;;9854                   }
;;;9855                   else if((line[*counter] IS 'u') AND (line[(*counter)+1] IS 'p'))
;;;9856                   {
;;;9857                       *operation SET_TO FUP;
;;;9858                       *counter SET_TO (*counter + 2);
;;;9859                   }
;;;9860                   else
;;;9861                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_F);
;;;9862                   break;
;;;9863               case 'l':
;;;9864                   if(line[*counter] IS 'n')
;;;9865                   {
;;;9866                       *operation SET_TO LN;
;;;9867                       *counter SET_TO (*counter + 1);
;;;9868                   }
;;;9869                   else
;;;9870                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_L);
;;;9871                   break;
;;;9872               case 'r':
;;;9873                   if(strncmp((line + *counter), "ound", 4) IS 0)
;;;9874                   {
;;;9875                       *operation SET_TO ROUND;
;;;9876                       *counter SET_TO (*counter + 4);
;;;9877                   }
;;;9878                   else
;;;9879                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_R);
;;;9880                   break;
;;;9881               case 's':
;;;9882                   if((line[*counter] IS 'i') AND (line[(*counter)+1] IS 'n'))
;;;9883                   {
;;;9884                       *operation SET_TO SIN;
;;;9885                       *counter SET_TO (*counter + 2);
;;;9886                   }
;;;9887                   else if(strncmp((line + *counter), "qrt", 3) IS 0)
;;;9888                   {
;;;9889                       *operation SET_TO SQRT;
;;;9890                       *counter SET_TO (*counter + 3);
;;;9891                   }
;;;9892                   else
;;;9893                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_S);
;;;9894                   break;
;;;9895               case 't':
;;;9896                   if((line[*counter] IS 'a') AND (line[(*counter)+1] IS 'n'))
;;;9897                   {
;;;9898                       *operation SET_TO TAN;
;;;9899                       *counter SET_TO (*counter + 2);
;;;9900                   }
;;;9901                   else
;;;9902                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_T);
;;;9903                   break;
;;;9904               default:
;;;9905                   ERM(NCE_UNKNOWN_WORD_WHERE_UNARY_OPERATION_COULD_BE);
;;;9906           }
;;;9907           return RS274NGC_OK;
;;;9908       }
00010c  e8bd81f0          POP      {r4-r8,pc}
                  |L96.272|
000110  e0be              B        |L96.656|
000112  e004              B        |L96.286|
                  |L96.276|
000114  e03b              B        |L96.398|
                  |L96.278|
000116  e1b8              B        |L96.1162|
                  |L96.280|
000118  e0ed              B        |L96.758|
                  |L96.282|
00011a  e123              B        |L96.868|
                  |L96.284|
00011c  e1dc              B        |L96.1240|
                  |L96.286|
00011e  6820              LDR      r0,[r4,#0]            ;9832
000120  5c28              LDRB     r0,[r5,r0]            ;9832
000122  286f              CMP      r0,#0x6f              ;9832
000124  d10c              BNE      |L96.320|
000126  6820              LDR      r0,[r4,#0]            ;9832
000128  1c40              ADDS     r0,r0,#1              ;9832
00012a  5c28              LDRB     r0,[r5,r0]            ;9832
00012c  2873              CMP      r0,#0x73              ;9832
00012e  d107              BNE      |L96.320|
000130  f04f0005          MOV      r0,#5                 ;9834
000134  6030              STR      r0,[r6,#0]            ;9834
000136  6820              LDR      r0,[r4,#0]            ;9835
000138  f1000002          ADD      r0,r0,#2              ;9835
00013c  6020              STR      r0,[r4,#0]            ;9835
00013e  e025              B        |L96.396|
                  |L96.320|
000140  f04f0100          MOV      r1,#0                 ;9838
000144  48ca              LDR      r0,|L96.1136|
000146  f8c0114c          STR      r1,[r0,#0x14c]        ;9838
00014a  4601              MOV      r1,r0                 ;9838
00014c  f8d1314c          LDR      r3,[r1,#0x14c]        ;9838
000150  f8d1114c          LDR      r1,[r1,#0x14c]        ;9838
000154  f1010101          ADD      r1,r1,#1              ;9838
000158  4602              MOV      r2,r0                 ;9838
00015a  f8c2114c          STR      r1,[r2,#0x14c]        ;9838
00015e  eb030183          ADD      r1,r3,r3,LSL #2       ;9838
000162  4ac5              LDR      r2,|L96.1144|
000164  eb021101          ADD      r1,r2,r1,LSL #4       ;9838
000168  4608              MOV      r0,r1                 ;9838
00016a  49c2              LDR      r1,|L96.1140|
00016c  f7fffffe          BL       strcpy
000170  f04f0100          MOV      r1,#0                 ;9838
000174  48be              LDR      r0,|L96.1136|
000176  f8d0014c          LDR      r0,[r0,#0x14c]        ;9838
00017a  eb000080          ADD      r0,r0,r0,LSL #2       ;9838
00017e  4abe              LDR      r2,|L96.1144|
000180  eb021000          ADD      r0,r2,r0,LSL #4       ;9838
000184  7001              STRB     r1,[r0,#0]            ;9838
000186  f04f00b5          MOV      r0,#0xb5              ;9838
00018a  e7bf              B        |L96.268|
                  |L96.396|
00018c  e1a4              B        |L96.1240|
                  |L96.398|
00018e  6820              LDR      r0,[r4,#0]            ;9841
000190  5c28              LDRB     r0,[r5,r0]            ;9841
000192  2878              CMP      r0,#0x78              ;9841
000194  d10c              BNE      |L96.432|
000196  6820              LDR      r0,[r4,#0]            ;9841
000198  1c40              ADDS     r0,r0,#1              ;9841
00019a  5c28              LDRB     r0,[r5,r0]            ;9841
00019c  2870              CMP      r0,#0x70              ;9841
00019e  d107              BNE      |L96.432|
0001a0  f04f0006          MOV      r0,#6                 ;9843
0001a4  6030              STR      r0,[r6,#0]            ;9843
0001a6  6820              LDR      r0,[r4,#0]            ;9844
0001a8  f1000002          ADD      r0,r0,#2              ;9844
0001ac  6020              STR      r0,[r4,#0]            ;9844
0001ae  e025              B        |L96.508|
                  |L96.432|
0001b0  f04f0100          MOV      r1,#0                 ;9847
0001b4  48ae              LDR      r0,|L96.1136|
0001b6  f8c0114c          STR      r1,[r0,#0x14c]        ;9847
0001ba  4601              MOV      r1,r0                 ;9847
0001bc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9847
0001c0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9847
0001c4  f1010101          ADD      r1,r1,#1              ;9847
0001c8  4602              MOV      r2,r0                 ;9847
0001ca  f8c2114c          STR      r1,[r2,#0x14c]        ;9847
0001ce  eb030183          ADD      r1,r3,r3,LSL #2       ;9847
0001d2  4aa9              LDR      r2,|L96.1144|
0001d4  eb021101          ADD      r1,r2,r1,LSL #4       ;9847
0001d8  4608              MOV      r0,r1                 ;9847
0001da  49a6              LDR      r1,|L96.1140|
0001dc  f7fffffe          BL       strcpy
0001e0  f04f0100          MOV      r1,#0                 ;9847
0001e4  48a2              LDR      r0,|L96.1136|
0001e6  f8d0014c          LDR      r0,[r0,#0x14c]        ;9847
0001ea  eb000080          ADD      r0,r0,r0,LSL #2       ;9847
0001ee  4aa2              LDR      r2,|L96.1144|
0001f0  eb021000          ADD      r0,r2,r0,LSL #4       ;9847
0001f4  7001              STRB     r1,[r0,#0]            ;9847
0001f6  f04f00b6          MOV      r0,#0xb6              ;9847
0001fa  e787              B        |L96.268|
                  |L96.508|
0001fc  e16c              B        |L96.1240|
                  |L96.510|
0001fe  6820              LDR      r0,[r4,#0]            ;9850
000200  5c28              LDRB     r0,[r5,r0]            ;9850
000202  2869              CMP      r0,#0x69              ;9850
000204  d10c              BNE      |L96.544|
000206  6820              LDR      r0,[r4,#0]            ;9850
000208  1c40              ADDS     r0,r0,#1              ;9850
00020a  5c28              LDRB     r0,[r5,r0]            ;9850
00020c  2878              CMP      r0,#0x78              ;9850
00020e  d107              BNE      |L96.544|
000210  f04f0007          MOV      r0,#7                 ;9852
000214  6030              STR      r0,[r6,#0]            ;9852
000216  6820              LDR      r0,[r4,#0]            ;9853
000218  f1000002          ADD      r0,r0,#2              ;9853
00021c  6020              STR      r0,[r4,#0]            ;9853
00021e  e036              B        |L96.654|
                  |L96.544|
000220  6820              LDR      r0,[r4,#0]            ;9855
000222  5c28              LDRB     r0,[r5,r0]            ;9855
000224  2875              CMP      r0,#0x75              ;9855
000226  d10c              BNE      |L96.578|
000228  6820              LDR      r0,[r4,#0]            ;9855
00022a  1c40              ADDS     r0,r0,#1              ;9855
00022c  5c28              LDRB     r0,[r5,r0]            ;9855
00022e  2870              CMP      r0,#0x70              ;9855
000230  d107              BNE      |L96.578|
000232  f04f0008          MOV      r0,#8                 ;9857
000236  6030              STR      r0,[r6,#0]            ;9857
000238  6820              LDR      r0,[r4,#0]            ;9858
00023a  f1000002          ADD      r0,r0,#2              ;9858
00023e  6020              STR      r0,[r4,#0]            ;9858
000240  e025              B        |L96.654|
                  |L96.578|
000242  f04f0100          MOV      r1,#0                 ;9861
000246  488a              LDR      r0,|L96.1136|
000248  f8c0114c          STR      r1,[r0,#0x14c]        ;9861
00024c  4601              MOV      r1,r0                 ;9861
00024e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9861
000252  f8d1114c          LDR      r1,[r1,#0x14c]        ;9861
000256  f1010101          ADD      r1,r1,#1              ;9861
00025a  4602              MOV      r2,r0                 ;9861
00025c  f8c2114c          STR      r1,[r2,#0x14c]        ;9861
000260  eb030183          ADD      r1,r3,r3,LSL #2       ;9861
000264  4a84              LDR      r2,|L96.1144|
000266  eb021101          ADD      r1,r2,r1,LSL #4       ;9861
00026a  4608              MOV      r0,r1                 ;9861
00026c  4981              LDR      r1,|L96.1140|
00026e  f7fffffe          BL       strcpy
000272  f04f0100          MOV      r1,#0                 ;9861
000276  487e              LDR      r0,|L96.1136|
000278  f8d0014c          LDR      r0,[r0,#0x14c]        ;9861
00027c  eb000080          ADD      r0,r0,r0,LSL #2       ;9861
000280  4a7d              LDR      r2,|L96.1144|
000282  eb021000          ADD      r0,r2,r0,LSL #4       ;9861
000286  7001              STRB     r1,[r0,#0]            ;9861
000288  f04f00b7          MOV      r0,#0xb7              ;9861
00028c  e73e              B        |L96.268|
                  |L96.654|
00028e  e123              B        |L96.1240|
                  |L96.656|
000290  6820              LDR      r0,[r4,#0]            ;9864
000292  5c28              LDRB     r0,[r5,r0]            ;9864
000294  286e              CMP      r0,#0x6e              ;9864
000296  d107              BNE      |L96.680|
000298  f04f0009          MOV      r0,#9                 ;9866
00029c  6030              STR      r0,[r6,#0]            ;9866
00029e  6820              LDR      r0,[r4,#0]            ;9867
0002a0  f1000001          ADD      r0,r0,#1              ;9867
0002a4  6020              STR      r0,[r4,#0]            ;9867
0002a6  e025              B        |L96.756|
                  |L96.680|
0002a8  f04f0100          MOV      r1,#0                 ;9870
0002ac  4870              LDR      r0,|L96.1136|
0002ae  f8c0114c          STR      r1,[r0,#0x14c]        ;9870
0002b2  4601              MOV      r1,r0                 ;9870
0002b4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9870
0002b8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9870
0002bc  f1010101          ADD      r1,r1,#1              ;9870
0002c0  4602              MOV      r2,r0                 ;9870
0002c2  f8c2114c          STR      r1,[r2,#0x14c]        ;9870
0002c6  eb030183          ADD      r1,r3,r3,LSL #2       ;9870
0002ca  4a6b              LDR      r2,|L96.1144|
0002cc  eb021101          ADD      r1,r2,r1,LSL #4       ;9870
0002d0  4608              MOV      r0,r1                 ;9870
0002d2  4968              LDR      r1,|L96.1140|
0002d4  f7fffffe          BL       strcpy
0002d8  f04f0100          MOV      r1,#0                 ;9870
0002dc  4864              LDR      r0,|L96.1136|
0002de  f8d0014c          LDR      r0,[r0,#0x14c]        ;9870
0002e2  eb000080          ADD      r0,r0,r0,LSL #2       ;9870
0002e6  4a64              LDR      r2,|L96.1144|
0002e8  eb021000          ADD      r0,r2,r0,LSL #4       ;9870
0002ec  7001              STRB     r1,[r0,#0]            ;9870
0002ee  f04f00b8          MOV      r0,#0xb8              ;9870
0002f2  e70b              B        |L96.268|
                  |L96.756|
0002f4  e0f0              B        |L96.1240|
                  |L96.758|
0002f6  6821              LDR      r1,[r4,#0]            ;9873
0002f8  4429              ADD      r1,r1,r5              ;9873
0002fa  4608              MOV      r0,r1                 ;9873
0002fc  2204              MOVS     r2,#4                 ;9873
0002fe  a15f              ADR      r1,|L96.1148|
000300  f7fffffe          BL       strncmp
000304  b938              CBNZ     r0,|L96.790|
000306  f04f000a          MOV      r0,#0xa               ;9875
00030a  6030              STR      r0,[r6,#0]            ;9875
00030c  6820              LDR      r0,[r4,#0]            ;9876
00030e  f1000004          ADD      r0,r0,#4              ;9876
000312  6020              STR      r0,[r4,#0]            ;9876
000314  e025              B        |L96.866|
                  |L96.790|
000316  f04f0100          MOV      r1,#0                 ;9879
00031a  4855              LDR      r0,|L96.1136|
00031c  f8c0114c          STR      r1,[r0,#0x14c]        ;9879
000320  4601              MOV      r1,r0                 ;9879
000322  f8d1314c          LDR      r3,[r1,#0x14c]        ;9879
000326  f8d1114c          LDR      r1,[r1,#0x14c]        ;9879
00032a  f1010101          ADD      r1,r1,#1              ;9879
00032e  4602              MOV      r2,r0                 ;9879
000330  f8c2114c          STR      r1,[r2,#0x14c]        ;9879
000334  eb030183          ADD      r1,r3,r3,LSL #2       ;9879
000338  4a4f              LDR      r2,|L96.1144|
00033a  eb021101          ADD      r1,r2,r1,LSL #4       ;9879
00033e  4608              MOV      r0,r1                 ;9879
000340  494c              LDR      r1,|L96.1140|
000342  f7fffffe          BL       strcpy
000346  f04f0100          MOV      r1,#0                 ;9879
00034a  4849              LDR      r0,|L96.1136|
00034c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9879
000350  eb000080          ADD      r0,r0,r0,LSL #2       ;9879
000354  4a48              LDR      r2,|L96.1144|
000356  eb021000          ADD      r0,r2,r0,LSL #4       ;9879
00035a  7001              STRB     r1,[r0,#0]            ;9879
00035c  f04f00b9          MOV      r0,#0xb9              ;9879
000360  e6d4              B        |L96.268|
                  |L96.866|
000362  e0b9              B        |L96.1240|
                  |L96.868|
000364  6820              LDR      r0,[r4,#0]            ;9882
000366  5c28              LDRB     r0,[r5,r0]            ;9882
000368  2869              CMP      r0,#0x69              ;9882
00036a  d10c              BNE      |L96.902|
00036c  6820              LDR      r0,[r4,#0]            ;9882
00036e  1c40              ADDS     r0,r0,#1              ;9882
000370  5c28              LDRB     r0,[r5,r0]            ;9882
000372  286e              CMP      r0,#0x6e              ;9882
000374  d107              BNE      |L96.902|
000376  f04f000b          MOV      r0,#0xb               ;9884
00037a  6030              STR      r0,[r6,#0]            ;9884
00037c  6820              LDR      r0,[r4,#0]            ;9885
00037e  f1000002          ADD      r0,r0,#2              ;9885
000382  6020              STR      r0,[r4,#0]            ;9885
000384  e035              B        |L96.1010|
                  |L96.902|
000386  6821              LDR      r1,[r4,#0]            ;9887
000388  4429              ADD      r1,r1,r5              ;9887
00038a  4608              MOV      r0,r1                 ;9887
00038c  2203              MOVS     r2,#3                 ;9887
00038e  a13d              ADR      r1,|L96.1156|
000390  f7fffffe          BL       strncmp
000394  b938              CBNZ     r0,|L96.934|
000396  f04f000c          MOV      r0,#0xc               ;9889
00039a  6030              STR      r0,[r6,#0]            ;9889
00039c  6820              LDR      r0,[r4,#0]            ;9890
00039e  f1000003          ADD      r0,r0,#3              ;9890
0003a2  6020              STR      r0,[r4,#0]            ;9890
0003a4  e025              B        |L96.1010|
                  |L96.934|
0003a6  f04f0100          MOV      r1,#0                 ;9893
0003aa  4831              LDR      r0,|L96.1136|
0003ac  f8c0114c          STR      r1,[r0,#0x14c]        ;9893
0003b0  4601              MOV      r1,r0                 ;9893
0003b2  f8d1314c          LDR      r3,[r1,#0x14c]        ;9893
0003b6  f8d1114c          LDR      r1,[r1,#0x14c]        ;9893
0003ba  f1010101          ADD      r1,r1,#1              ;9893
0003be  4602              MOV      r2,r0                 ;9893
0003c0  f8c2114c          STR      r1,[r2,#0x14c]        ;9893
0003c4  eb030183          ADD      r1,r3,r3,LSL #2       ;9893
0003c8  4a2b              LDR      r2,|L96.1144|
0003ca  eb021101          ADD      r1,r2,r1,LSL #4       ;9893
0003ce  4608              MOV      r0,r1                 ;9893
0003d0  4928              LDR      r1,|L96.1140|
0003d2  f7fffffe          BL       strcpy
0003d6  f04f0100          MOV      r1,#0                 ;9893
0003da  4825              LDR      r0,|L96.1136|
0003dc  f8d0014c          LDR      r0,[r0,#0x14c]        ;9893
0003e0  eb000080          ADD      r0,r0,r0,LSL #2       ;9893
0003e4  4a24              LDR      r2,|L96.1144|
0003e6  eb021000          ADD      r0,r2,r0,LSL #4       ;9893
0003ea  7001              STRB     r1,[r0,#0]            ;9893
0003ec  f04f00ba          MOV      r0,#0xba              ;9893
0003f0  e68c              B        |L96.268|
                  |L96.1010|
0003f2  e071              B        |L96.1240|
                  |L96.1012|
0003f4  6820              LDR      r0,[r4,#0]            ;9896
0003f6  5c28              LDRB     r0,[r5,r0]            ;9896
0003f8  2861              CMP      r0,#0x61              ;9896
0003fa  d10c              BNE      |L96.1046|
0003fc  6820              LDR      r0,[r4,#0]            ;9896
0003fe  1c40              ADDS     r0,r0,#1              ;9896
000400  5c28              LDRB     r0,[r5,r0]            ;9896
000402  286e              CMP      r0,#0x6e              ;9896
000404  d107              BNE      |L96.1046|
000406  f04f000d          MOV      r0,#0xd               ;9898
00040a  6030              STR      r0,[r6,#0]            ;9898
00040c  6820              LDR      r0,[r4,#0]            ;9899
00040e  f1000002          ADD      r0,r0,#2              ;9899
000412  6020              STR      r0,[r4,#0]            ;9899
000414  e038              B        |L96.1160|
                  |L96.1046|
000416  f04f0100          MOV      r1,#0                 ;9902
00041a  4815              LDR      r0,|L96.1136|
00041c  f8c0114c          STR      r1,[r0,#0x14c]        ;9902
000420  4601              MOV      r1,r0                 ;9902
000422  f8d1314c          LDR      r3,[r1,#0x14c]        ;9902
000426  f8d1114c          LDR      r1,[r1,#0x14c]        ;9902
00042a  f1010101          ADD      r1,r1,#1              ;9902
00042e  4602              MOV      r2,r0                 ;9902
000430  f8c2114c          STR      r1,[r2,#0x14c]        ;9902
000434  eb030183          ADD      r1,r3,r3,LSL #2       ;9902
000438  4a0f              LDR      r2,|L96.1144|
00043a  eb021101          ADD      r1,r2,r1,LSL #4       ;9902
00043e  4608              MOV      r0,r1                 ;9902
000440  490c              LDR      r1,|L96.1140|
000442  f7fffffe          BL       strcpy
000446  f04f0100          MOV      r1,#0                 ;9902
00044a  4809              LDR      r0,|L96.1136|
00044c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9902
000450  eb000080          ADD      r0,r0,r0,LSL #2       ;9902
000454  4a08              LDR      r2,|L96.1144|
000456  eb021000          ADD      r0,r2,r0,LSL #4       ;9902
00045a  7001              STRB     r1,[r0,#0]            ;9902
00045c  f04f00bb          MOV      r0,#0xbb              ;9902
000460  e654              B        |L96.268|
000462  0000              DCW      0x0000
                  |L96.1124|
000464  636f7300          DCB      "cos",0
                  |L96.1128|
000468  73696e00          DCB      "sin",0
                  |L96.1132|
00046c  74616e00          DCB      "tan",0
                  |L96.1136|
                          DCD      _setup+0xc000
                  |L96.1140|
                          DCD      |symbol_number.520|
                  |L96.1144|
                          DCD      _setup+0xb1ac
                  |L96.1148|
00047c  6f756e64          DCB      "ound",0
000480  00      
000481  00                DCB      0
000482  00                DCB      0
000483  00                DCB      0
                  |L96.1156|
000484  71727400          DCB      "qrt",0
                  |L96.1160|
000488  e026              B        |L96.1240|
                  |L96.1162|
00048a  f04f0100          MOV      r1,#0                 ;9905
00048e  4814              LDR      r0,|L96.1248|
000490  f8c0114c          STR      r1,[r0,#0x14c]        ;9905
000494  4601              MOV      r1,r0                 ;9905
000496  f8d1314c          LDR      r3,[r1,#0x14c]        ;9905
00049a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9905
00049e  f1010101          ADD      r1,r1,#1              ;9905
0004a2  4602              MOV      r2,r0                 ;9905
0004a4  f8c2114c          STR      r1,[r2,#0x14c]        ;9905
0004a8  eb030183          ADD      r1,r3,r3,LSL #2       ;9905
0004ac  f6a06254          SUB      r2,r0,#0xe54          ;9905
0004b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9905
0004b4  4608              MOV      r0,r1                 ;9905
0004b6  490b              LDR      r1,|L96.1252|
0004b8  f7fffffe          BL       strcpy
0004bc  f04f0100          MOV      r1,#0                 ;9905
0004c0  4807              LDR      r0,|L96.1248|
0004c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9905
0004c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9905
0004ca  4a07              LDR      r2,|L96.1256|
0004cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9905
0004d0  7001              STRB     r1,[r0,#0]            ;9905
0004d2  f04f00bc          MOV      r0,#0xbc              ;9905
0004d6  e619              B        |L96.268|
                  |L96.1240|
0004d8  bf00              NOP                            ;9830
0004da  2000              MOVS     r0,#0                 ;9907
0004dc  e616              B        |L96.268|
;;;9909   
                          ENDP

0004de  0000              DCW      0x0000
                  |L96.1248|
                          DCD      _setup+0xc000
                  |L96.1252|
                          DCD      |symbol_number.520|
                  |L96.1256|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_p||, CODE, READONLY, ALIGN=2

                  read_p PROC
;;;9941   
;;;9942       static int read_p(                            /* ARGUMENTS                                      */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;9943       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9944       int * counter,                                /* pointer to a counter for position on the line  */
;;;9945       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9946       double * parameters)                          /* array of system parameters                     */
;;;9947       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;9948           static char name[] SET_TO "read_p";
;;;9949           double value;
;;;9950           int status;
;;;9951   
;;;9952           CHK((line[*counter] ISNT 'p'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2870              CMP      r0,#0x70
000014  d027              BEQ      |L97.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L97.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L97.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L97.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L97.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L97.98|
;;;9953           *counter SET_TO (*counter + 1);
;;;9954           CHK((block->p_number > -1.0), NCE_MULTIPLE_P_WORDS_ON_ONE_LINE);
;;;9955           CHP(read_real_value(line, counter, &value, parameters));
;;;9956           CHK((value < 0.0), NCE_NEGATIVE_P_WORD_USED);
;;;9957           block->p_number SET_TO value;
;;;9958           return RS274NGC_OK;
;;;9959       }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L97.102|
000066  6820              LDR      r0,[r4,#0]            ;9953
000068  f1000001          ADD      r0,r0,#1              ;9953
00006c  6020              STR      r0,[r4,#0]            ;9953
00006e  f8d511b0          LDR      r1,[r5,#0x1b0]        ;9954
000072  460e              MOV      r6,r1                 ;9954
000074  f8d501b4          LDR      r0,[r5,#0x1b4]        ;9954
000078  4607              MOV      r7,r0                 ;9954
00007a  f04f0200          MOV      r2,#0                 ;9954
00007e  4b4a              LDR      r3,|L97.424|
000080  4630              MOV      r0,r6                 ;9954
000082  4639              MOV      r1,r7                 ;9954
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L97.214|
00008a  f04f0100          MOV      r1,#0                 ;9954
00008e  4843              LDR      r0,|L97.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;9954
000094  4601              MOV      r1,r0                 ;9954
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;9954
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9954
00009e  f1010101          ADD      r1,r1,#1              ;9954
0000a2  4602              MOV      r2,r0                 ;9954
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;9954
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;9954
0000ac  4a3d              LDR      r2,|L97.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;9954
0000b2  4608              MOV      r0,r1                 ;9954
0000b4  493a              LDR      r1,|L97.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;9954
0000be  4837              LDR      r0,|L97.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;9954
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;9954
0000c8  4a36              LDR      r2,|L97.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;9954
0000ce  7001              STRB     r1,[r0,#0]            ;9954
0000d0  f04f0070          MOV      r0,#0x70              ;9954
0000d4  e7c5              B        |L97.98|
                  |L97.214|
0000d6  464b              MOV      r3,r9                 ;9955
0000d8  466a              MOV      r2,sp                 ;9955
0000da  4621              MOV      r1,r4                 ;9955
0000dc  4640              MOV      r0,r8                 ;9955
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;9955
0000e6  d025              BEQ      |L97.308|
0000e8  482c              LDR      r0,|L97.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;9955
0000ee  2831              CMP      r0,#0x31              ;9955
0000f0  da1e              BGE      |L97.304|
0000f2  492a              LDR      r1,|L97.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9955
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9955
0000fc  1c49              ADDS     r1,r1,#1              ;9955
0000fe  4a27              LDR      r2,|L97.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;9955
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;9955
000108  4a26              LDR      r2,|L97.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;9955
00010e  4608              MOV      r0,r1                 ;9955
000110  4923              LDR      r1,|L97.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;9955
00011a  4820              LDR      r0,|L97.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9955
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;9955
000124  4a1f              LDR      r2,|L97.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;9955
00012a  7001              STRB     r1,[r0,#0]            ;9955
00012c  4650              MOV      r0,r10                ;9955
00012e  e798              B        |L97.98|
                  |L97.304|
000130  4650              MOV      r0,r10                ;9955
000132  e796              B        |L97.98|
                  |L97.308|
000134  2200              MOVS     r2,#0                 ;9956
000136  4613              MOV      r3,r2                 ;9956
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9956
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d225              BCS      |L97.398|
000142  f04f0100          MOV      r1,#0                 ;9956
000146  4815              LDR      r0,|L97.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;9956
00014c  4601              MOV      r1,r0                 ;9956
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9956
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;9956
000156  f1010101          ADD      r1,r1,#1              ;9956
00015a  4602              MOV      r2,r0                 ;9956
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;9956
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;9956
000164  4a0f              LDR      r2,|L97.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;9956
00016a  4608              MOV      r0,r1                 ;9956
00016c  490c              LDR      r1,|L97.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;9956
000176  4809              LDR      r0,|L97.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;9956
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;9956
000180  4a08              LDR      r2,|L97.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;9956
000186  7001              STRB     r1,[r0,#0]            ;9956
000188  f04f0081          MOV      r0,#0x81              ;9956
00018c  e769              B        |L97.98|
                  |L97.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9957
000192  f50572d8          ADD      r2,r5,#0x1b0          ;9957
000196  c203              STM      r2!,{r0,r1}           ;9957
000198  2000              MOVS     r0,#0                 ;9958
00019a  e762              B        |L97.98|
;;;9960   
                          ENDP

                  |L97.412|
                          DCD      _setup+0xc000
                  |L97.416|
                          DCD      |symbol_number.521|
                  |L97.420|
                          DCD      _setup+0xb1ac
                  |L97.424|
                          DCD      0xbff00000

                          AREA ||i.read_parameter||, CODE, READONLY, ALIGN=2

                  read_parameter PROC
;;;9997   
;;;9998       static int read_parameter(                    /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9999       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10000      int * counter,                                /* pointer to a counter for position on the line  */
;;;10001      double * double_ptr,                          /* pointer to double to be read                   */
;;;10002      double * parameters)                          /* array of system parameters                     */
;;;10003      {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;10004          static char name[] SET_TO "read_parameter";
;;;10005          int index;
;;;10006          int status;
;;;10007  
;;;10008          CHK((line[*counter] ISNT '#'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2823              CMP      r0,#0x23
000012  d027              BEQ      |L98.100|
000014  f04f0100          MOV      r1,#0
000018  4847              LDR      r0,|L98.312|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493e              LDR      r1,|L98.316|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483b              LDR      r0,|L98.312|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a3a              LDR      r2,|L98.320|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L98.96|
;;;10009          *counter SET_TO (*counter + 1);
;;;10010          CHP(read_integer_value(line, counter, &index, parameters));
;;;10011          CHK(((index < 1) OR (index >= RS274NGC_MAX_PARAMETERS)),
;;;10012              NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;10013          *double_ptr SET_TO parameters[index];
;;;10014          return RS274NGC_OK;
;;;10015      }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L98.100|
000064  6820              LDR      r0,[r4,#0]            ;10009
000066  f1000001          ADD      r0,r0,#1              ;10009
00006a  6020              STR      r0,[r4,#0]            ;10009
00006c  463b              MOV      r3,r7                 ;10010
00006e  466a              MOV      r2,sp                 ;10010
000070  4621              MOV      r1,r4                 ;10010
000072  4628              MOV      r0,r5                 ;10010
000074  f7fffffe          BL       read_integer_value
000078  ea5f0800          MOVS     r8,r0                 ;10010
00007c  d025              BEQ      |L98.202|
00007e  482e              LDR      r0,|L98.312|
000080  f8d0014c          LDR      r0,[r0,#0x14c]        ;10010
000084  2831              CMP      r0,#0x31              ;10010
000086  da1e              BGE      |L98.198|
000088  492b              LDR      r1,|L98.312|
00008a  f8d1314c          LDR      r3,[r1,#0x14c]        ;10010
00008e  f8d1114c          LDR      r1,[r1,#0x14c]        ;10010
000092  1c49              ADDS     r1,r1,#1              ;10010
000094  4a28              LDR      r2,|L98.312|
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;10010
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;10010
00009e  4a28              LDR      r2,|L98.320|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;10010
0000a4  4608              MOV      r0,r1                 ;10010
0000a6  4925              LDR      r1,|L98.316|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;10010
0000b0  4821              LDR      r0,|L98.312|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;10010
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;10010
0000ba  4a21              LDR      r2,|L98.320|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;10010
0000c0  7001              STRB     r1,[r0,#0]            ;10010
0000c2  4640              MOV      r0,r8                 ;10010
0000c4  e7cc              B        |L98.96|
                  |L98.198|
0000c6  4640              MOV      r0,r8                 ;10010
0000c8  e7ca              B        |L98.96|
                  |L98.202|
0000ca  9800              LDR      r0,[sp,#0]            ;10011
0000cc  2801              CMP      r0,#1                 ;10011
0000ce  db04              BLT      |L98.218|
0000d0  f2415118          MOV      r1,#0x1518            ;10011
0000d4  9800              LDR      r0,[sp,#0]            ;10011
0000d6  4288              CMP      r0,r1                 ;10011
0000d8  db25              BLT      |L98.294|
                  |L98.218|
0000da  f04f0100          MOV      r1,#0                 ;10011
0000de  4816              LDR      r0,|L98.312|
0000e0  f8c0114c          STR      r1,[r0,#0x14c]        ;10011
0000e4  4601              MOV      r1,r0                 ;10011
0000e6  f8d1314c          LDR      r3,[r1,#0x14c]        ;10011
0000ea  f8d1114c          LDR      r1,[r1,#0x14c]        ;10011
0000ee  f1010101          ADD      r1,r1,#1              ;10011
0000f2  4602              MOV      r2,r0                 ;10011
0000f4  f8c2114c          STR      r1,[r2,#0x14c]        ;10011
0000f8  eb030183          ADD      r1,r3,r3,LSL #2       ;10011
0000fc  4a10              LDR      r2,|L98.320|
0000fe  eb021101          ADD      r1,r2,r1,LSL #4       ;10011
000102  4608              MOV      r0,r1                 ;10011
000104  490d              LDR      r1,|L98.316|
000106  f7fffffe          BL       strcpy
00010a  f04f0100          MOV      r1,#0                 ;10011
00010e  480a              LDR      r0,|L98.312|
000110  f8d0014c          LDR      r0,[r0,#0x14c]        ;10011
000114  eb000080          ADD      r0,r0,r0,LSL #2       ;10011
000118  4a09              LDR      r2,|L98.320|
00011a  eb021000          ADD      r0,r2,r0,LSL #4       ;10011
00011e  7001              STRB     r1,[r0,#0]            ;10011
000120  f04f008e          MOV      r0,#0x8e              ;10011
000124  e79c              B        |L98.96|
                  |L98.294|
000126  9800              LDR      r0,[sp,#0]            ;10013
000128  eb0701c0          ADD      r1,r7,r0,LSL #3       ;10013
00012c  c903              LDM      r1,{r0,r1}            ;10013
00012e  e9c60100          STRD     r0,r1,[r6,#0]         ;10013
000132  f04f0000          MOV      r0,#0                 ;10014
000136  e793              B        |L98.96|
;;;10016  
                          ENDP

                  |L98.312|
                          DCD      _setup+0xc000
                  |L98.316|
                          DCD      |symbol_number.522|
                  |L98.320|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_parameter_setting||, CODE, READONLY, ALIGN=2

                  read_parameter_setting PROC
;;;10083  
;;;10084      static int read_parameter_setting(            /* ARGUMENTS                        */
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;10085      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10086      int * counter,                                /* pointer to a counter for position on the line  */
;;;10087      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;10088      double * parameters)                          /* array of system parameters                     */
;;;10089      {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;10090          static char name[] SET_TO "read_parameter_setting";
;;;10091          int index;
;;;10092          double value;
;;;10093          int status;
;;;10094  
;;;10095          CHK((line[*counter] ISNT '#'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2823              CMP      r0,#0x23
000012  d027              BEQ      |L99.100|
000014  f04f0100          MOV      r1,#0
000018  487e              LDR      r0,|L99.532|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4975              LDR      r1,|L99.536|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4872              LDR      r0,|L99.532|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a71              LDR      r2,|L99.540|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L99.96|
;;;10096          *counter SET_TO (*counter + 1);
;;;10097          CHP(read_integer_value(line, counter, &index, parameters));
;;;10098          CHK(((index < 1) OR (index >= RS274NGC_MAX_PARAMETERS)),
;;;10099              NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;10100          CHK((line[*counter] ISNT '='), NCE_EQUAL_SIGN_MISSING_IN_PARAMETER_SETTING);
;;;10101          *counter SET_TO (*counter + 1);
;;;10102          CHP(read_real_value(line, counter, &value, parameters));
;;;10103          _setup.parameter_numbers[_setup.parameter_occurrence] SET_TO index;
;;;10104          _setup.parameter_values[_setup.parameter_occurrence] SET_TO value;
;;;10105          _setup.parameter_occurrence++;
;;;10106          return RS274NGC_OK;
;;;10107      }
000060  e8bd83fe          POP      {r1-r9,pc}
                  |L99.100|
000064  6820              LDR      r0,[r4,#0]            ;10096
000066  f1000001          ADD      r0,r0,#1              ;10096
00006a  6020              STR      r0,[r4,#0]            ;10096
00006c  4633              MOV      r3,r6                 ;10097
00006e  aa02              ADD      r2,sp,#8              ;10097
000070  4621              MOV      r1,r4                 ;10097
000072  4628              MOV      r0,r5                 ;10097
000074  f7fffffe          BL       read_integer_value
000078  0007              MOVS     r7,r0                 ;10097
00007a  d025              BEQ      |L99.200|
00007c  4865              LDR      r0,|L99.532|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;10097
000082  2831              CMP      r0,#0x31              ;10097
000084  da1e              BGE      |L99.196|
000086  4963              LDR      r1,|L99.532|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;10097
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;10097
000090  1c49              ADDS     r1,r1,#1              ;10097
000092  4a60              LDR      r2,|L99.532|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;10097
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;10097
00009c  4a5f              LDR      r2,|L99.540|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;10097
0000a2  4608              MOV      r0,r1                 ;10097
0000a4  495c              LDR      r1,|L99.536|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;10097
0000ae  4859              LDR      r0,|L99.532|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10097
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;10097
0000b8  4a58              LDR      r2,|L99.540|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;10097
0000be  7001              STRB     r1,[r0,#0]            ;10097
0000c0  4638              MOV      r0,r7                 ;10097
0000c2  e7cd              B        |L99.96|
                  |L99.196|
0000c4  4638              MOV      r0,r7                 ;10097
0000c6  e7cb              B        |L99.96|
                  |L99.200|
0000c8  9802              LDR      r0,[sp,#8]            ;10098
0000ca  2801              CMP      r0,#1                 ;10098
0000cc  db04              BLT      |L99.216|
0000ce  f2415118          MOV      r1,#0x1518            ;10098
0000d2  9802              LDR      r0,[sp,#8]            ;10098
0000d4  4288              CMP      r0,r1                 ;10098
0000d6  db25              BLT      |L99.292|
                  |L99.216|
0000d8  f04f0100          MOV      r1,#0                 ;10098
0000dc  484d              LDR      r0,|L99.532|
0000de  f8c0114c          STR      r1,[r0,#0x14c]        ;10098
0000e2  4601              MOV      r1,r0                 ;10098
0000e4  f8d1314c          LDR      r3,[r1,#0x14c]        ;10098
0000e8  f8d1114c          LDR      r1,[r1,#0x14c]        ;10098
0000ec  f1010101          ADD      r1,r1,#1              ;10098
0000f0  4602              MOV      r2,r0                 ;10098
0000f2  f8c2114c          STR      r1,[r2,#0x14c]        ;10098
0000f6  eb030183          ADD      r1,r3,r3,LSL #2       ;10098
0000fa  4a48              LDR      r2,|L99.540|
0000fc  eb021101          ADD      r1,r2,r1,LSL #4       ;10098
000100  4608              MOV      r0,r1                 ;10098
000102  4945              LDR      r1,|L99.536|
000104  f7fffffe          BL       strcpy
000108  f04f0100          MOV      r1,#0                 ;10098
00010c  4841              LDR      r0,|L99.532|
00010e  f8d0014c          LDR      r0,[r0,#0x14c]        ;10098
000112  eb000080          ADD      r0,r0,r0,LSL #2       ;10098
000116  4a41              LDR      r2,|L99.540|
000118  eb021000          ADD      r0,r2,r0,LSL #4       ;10098
00011c  7001              STRB     r1,[r0,#0]            ;10098
00011e  f04f008e          MOV      r0,#0x8e              ;10098
000122  e79d              B        |L99.96|
                  |L99.292|
000124  6820              LDR      r0,[r4,#0]            ;10100
000126  5c28              LDRB     r0,[r5,r0]            ;10100
000128  283d              CMP      r0,#0x3d              ;10100
00012a  d025              BEQ      |L99.376|
00012c  f04f0100          MOV      r1,#0                 ;10100
000130  4838              LDR      r0,|L99.532|
000132  f8c0114c          STR      r1,[r0,#0x14c]        ;10100
000136  4601              MOV      r1,r0                 ;10100
000138  f8d1314c          LDR      r3,[r1,#0x14c]        ;10100
00013c  f8d1114c          LDR      r1,[r1,#0x14c]        ;10100
000140  f1010101          ADD      r1,r1,#1              ;10100
000144  4602              MOV      r2,r0                 ;10100
000146  f8c2114c          STR      r1,[r2,#0x14c]        ;10100
00014a  eb030183          ADD      r1,r3,r3,LSL #2       ;10100
00014e  4a33              LDR      r2,|L99.540|
000150  eb021101          ADD      r1,r2,r1,LSL #4       ;10100
000154  4608              MOV      r0,r1                 ;10100
000156  4930              LDR      r1,|L99.536|
000158  f7fffffe          BL       strcpy
00015c  f04f0100          MOV      r1,#0                 ;10100
000160  482c              LDR      r0,|L99.532|
000162  f8d0014c          LDR      r0,[r0,#0x14c]        ;10100
000166  eb000080          ADD      r0,r0,r0,LSL #2       ;10100
00016a  4a2c              LDR      r2,|L99.540|
00016c  eb021000          ADD      r0,r2,r0,LSL #4       ;10100
000170  7001              STRB     r1,[r0,#0]            ;10100
000172  f04f004d          MOV      r0,#0x4d              ;10100
000176  e773              B        |L99.96|
                  |L99.376|
000178  6820              LDR      r0,[r4,#0]            ;10101
00017a  f1000001          ADD      r0,r0,#1              ;10101
00017e  6020              STR      r0,[r4,#0]            ;10101
000180  4633              MOV      r3,r6                 ;10102
000182  466a              MOV      r2,sp                 ;10102
000184  4621              MOV      r1,r4                 ;10102
000186  4628              MOV      r0,r5                 ;10102
000188  f7fffffe          BL       read_real_value
00018c  0007              MOVS     r7,r0                 ;10102
00018e  d025              BEQ      |L99.476|
000190  4820              LDR      r0,|L99.532|
000192  f8d0014c          LDR      r0,[r0,#0x14c]        ;10102
000196  2831              CMP      r0,#0x31              ;10102
000198  da1e              BGE      |L99.472|
00019a  491e              LDR      r1,|L99.532|
00019c  f8d1314c          LDR      r3,[r1,#0x14c]        ;10102
0001a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;10102
0001a4  1c49              ADDS     r1,r1,#1              ;10102
0001a6  4a1b              LDR      r2,|L99.532|
0001a8  f8c2114c          STR      r1,[r2,#0x14c]        ;10102
0001ac  eb030183          ADD      r1,r3,r3,LSL #2       ;10102
0001b0  4a1a              LDR      r2,|L99.540|
0001b2  eb021101          ADD      r1,r2,r1,LSL #4       ;10102
0001b6  4608              MOV      r0,r1                 ;10102
0001b8  4917              LDR      r1,|L99.536|
0001ba  f7fffffe          BL       strcpy
0001be  f04f0100          MOV      r1,#0                 ;10102
0001c2  4814              LDR      r0,|L99.532|
0001c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;10102
0001c8  eb000080          ADD      r0,r0,r0,LSL #2       ;10102
0001cc  4a13              LDR      r2,|L99.540|
0001ce  eb021000          ADD      r0,r2,r0,LSL #4       ;10102
0001d2  7001              STRB     r1,[r0,#0]            ;10102
0001d4  4638              MOV      r0,r7                 ;10102
0001d6  e743              B        |L99.96|
                  |L99.472|
0001d8  4638              MOV      r0,r7                 ;10102
0001da  e741              B        |L99.96|
                  |L99.476|
0001dc  4810              LDR      r0,|L99.544|
0001de  9902              LDR      r1,[sp,#8]            ;10103
0001e0  f8d00f08          LDR      r0,[r0,#0xf08]        ;10103
0001e4  4a0f              LDR      r2,|L99.548|
0001e6  f8421020          STR      r1,[r2,r0,LSL #2]     ;10103
0001ea  4a0d              LDR      r2,|L99.544|
0001ec  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10104
0001f0  f8d22f08          LDR      r2,[r2,#0xf08]        ;10104
0001f4  4b0b              LDR      r3,|L99.548|
0001f6  33cc              ADDS     r3,r3,#0xcc           ;10104
0001f8  eb0302c2          ADD      r2,r3,r2,LSL #3       ;10104
0001fc  c203              STM      r2!,{r0,r1}           ;10104
0001fe  4808              LDR      r0,|L99.544|
000200  f8d00f08          LDR      r0,[r0,#0xf08]        ;10105
000204  f1000001          ADD      r0,r0,#1              ;10105
000208  4905              LDR      r1,|L99.544|
00020a  f8c10f08          STR      r0,[r1,#0xf08]        ;10105
00020e  f04f0000          MOV      r0,#0                 ;10106
000212  e725              B        |L99.96|
;;;10108  
                          ENDP

                  |L99.532|
                          DCD      _setup+0xc000
                  |L99.536|
                          DCD      |symbol_number.523|
                  |L99.540|
                          DCD      _setup+0xb1ac
                  |L99.544|
                          DCD      _setup+0xa000
                  |L99.548|
                          DCD      _setup+0xaf0c

                          AREA ||i.read_q||, CODE, READONLY, ALIGN=2

                  read_q PROC
;;;10139  
;;;10140      static int read_q(                            /* ARGUMENTS                                      */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;10141      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10142      int * counter,                                /* pointer to a counter for position on the line  */
;;;10143      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;10144      double * parameters)                          /* array of system parameters                     */
;;;10145      {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;10146          static char name[] SET_TO "read_q";
;;;10147          double value;
;;;10148          int status;
;;;10149  
;;;10150          CHK((line[*counter] ISNT 'q'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2871              CMP      r0,#0x71
000014  d027              BEQ      |L100.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L100.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L100.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L100.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L100.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L100.98|
;;;10151          *counter SET_TO (*counter + 1);
;;;10152          CHK((block->q_number > -1.0), NCE_MULTIPLE_Q_WORDS_ON_ONE_LINE);
;;;10153          CHP(read_real_value(line, counter, &value, parameters));
;;;10154          CHK((value <= 0.0), NCE_NEGATIVE_OR_ZERO_Q_VALUE_USED);
;;;10155          block->q_number SET_TO value;
;;;10156          return RS274NGC_OK;
;;;10157      }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L100.102|
000066  6820              LDR      r0,[r4,#0]            ;10151
000068  f1000001          ADD      r0,r0,#1              ;10151
00006c  6020              STR      r0,[r4,#0]            ;10151
00006e  f8d511b8          LDR      r1,[r5,#0x1b8]        ;10152
000072  460e              MOV      r6,r1                 ;10152
000074  f8d501bc          LDR      r0,[r5,#0x1bc]        ;10152
000078  4607              MOV      r7,r0                 ;10152
00007a  f04f0200          MOV      r2,#0                 ;10152
00007e  4b4a              LDR      r3,|L100.424|
000080  4630              MOV      r0,r6                 ;10152
000082  4639              MOV      r1,r7                 ;10152
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L100.214|
00008a  f04f0100          MOV      r1,#0                 ;10152
00008e  4843              LDR      r0,|L100.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;10152
000094  4601              MOV      r1,r0                 ;10152
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;10152
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;10152
00009e  f1010101          ADD      r1,r1,#1              ;10152
0000a2  4602              MOV      r2,r0                 ;10152
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;10152
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;10152
0000ac  4a3d              LDR      r2,|L100.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;10152
0000b2  4608              MOV      r0,r1                 ;10152
0000b4  493a              LDR      r1,|L100.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;10152
0000be  4837              LDR      r0,|L100.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10152
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;10152
0000c8  4a36              LDR      r2,|L100.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;10152
0000ce  7001              STRB     r1,[r0,#0]            ;10152
0000d0  f04f0071          MOV      r0,#0x71              ;10152
0000d4  e7c5              B        |L100.98|
                  |L100.214|
0000d6  464b              MOV      r3,r9                 ;10153
0000d8  466a              MOV      r2,sp                 ;10153
0000da  4621              MOV      r1,r4                 ;10153
0000dc  4640              MOV      r0,r8                 ;10153
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;10153
0000e6  d025              BEQ      |L100.308|
0000e8  482c              LDR      r0,|L100.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;10153
0000ee  2831              CMP      r0,#0x31              ;10153
0000f0  da1e              BGE      |L100.304|
0000f2  492a              LDR      r1,|L100.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;10153
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;10153
0000fc  1c49              ADDS     r1,r1,#1              ;10153
0000fe  4a27              LDR      r2,|L100.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;10153
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;10153
000108  4a26              LDR      r2,|L100.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;10153
00010e  4608              MOV      r0,r1                 ;10153
000110  4923              LDR      r1,|L100.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;10153
00011a  4820              LDR      r0,|L100.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10153
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;10153
000124  4a1f              LDR      r2,|L100.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;10153
00012a  7001              STRB     r1,[r0,#0]            ;10153
00012c  4650              MOV      r0,r10                ;10153
00012e  e798              B        |L100.98|
                  |L100.304|
000130  4650              MOV      r0,r10                ;10153
000132  e796              B        |L100.98|
                  |L100.308|
000134  2200              MOVS     r2,#0                 ;10154
000136  4613              MOV      r3,r2                 ;10154
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10154
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d825              BHI      |L100.398|
000142  f04f0100          MOV      r1,#0                 ;10154
000146  4815              LDR      r0,|L100.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;10154
00014c  4601              MOV      r1,r0                 ;10154
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10154
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;10154
000156  f1010101          ADD      r1,r1,#1              ;10154
00015a  4602              MOV      r2,r0                 ;10154
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;10154
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;10154
000164  4a0f              LDR      r2,|L100.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;10154
00016a  4608              MOV      r0,r1                 ;10154
00016c  490c              LDR      r1,|L100.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;10154
000176  4809              LDR      r0,|L100.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;10154
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;10154
000180  4a08              LDR      r2,|L100.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;10154
000186  7001              STRB     r1,[r0,#0]            ;10154
000188  f04f0080          MOV      r0,#0x80              ;10154
00018c  e769              B        |L100.98|
                  |L100.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10155
000192  f50572dc          ADD      r2,r5,#0x1b8          ;10155
000196  c203              STM      r2!,{r0,r1}           ;10155
000198  2000              MOVS     r0,#0                 ;10156
00019a  e762              B        |L100.98|
;;;10158  
                          ENDP

                  |L100.412|
                          DCD      _setup+0xc000
                  |L100.416|
                          DCD      |symbol_number.524|
                  |L100.420|
                          DCD      _setup+0xb1ac
                  |L100.424|
                          DCD      0xbff00000

                          AREA ||i.read_r||, CODE, READONLY, ALIGN=2

                  read_r PROC
;;;10193  
;;;10194      static int read_r(                            /* ARGUMENTS                                     */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;10195      char * line,                                  /* string: line of RS274 code being processed    */
;;;10196      int * counter,                                /* pointer to a counter for position on the line */
;;;10197      block_pointer block,                          /* pointer to a block being filled from the line */
;;;10198      double * parameters)                          /* array of system parameters                    */
;;;10199      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;10200          static char name[] SET_TO "read_r";
;;;10201          double value;
;;;10202          int status;
;;;10203  
;;;10204          CHK((line[*counter] ISNT 'r'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2872              CMP      r0,#0x72
000012  d027              BEQ      |L101.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L101.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L101.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L101.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L101.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L101.96|
;;;10205          *counter SET_TO (*counter + 1);
;;;10206          CHK((block->r_flag ISNT OFF), NCE_MULTIPLE_R_WORDS_ON_ONE_LINE);
;;;10207          CHP(read_real_value(line, counter, &value, parameters));
;;;10208          block->r_flag SET_TO ON;
;;;10209          block->r_number SET_TO value;
;;;10210          return RS274NGC_OK;
;;;10211      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L101.100|
000064  6820              LDR      r0,[r4,#0]            ;10205
000066  f1000001          ADD      r0,r0,#1              ;10205
00006a  6020              STR      r0,[r4,#0]            ;10205
00006c  f8d501c0          LDR      r0,[r5,#0x1c0]        ;10206
000070  b328              CBZ      r0,|L101.190|
000072  f04f0100          MOV      r1,#0                 ;10206
000076  482f              LDR      r0,|L101.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;10206
00007c  4601              MOV      r1,r0                 ;10206
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10206
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;10206
000086  f1010101          ADD      r1,r1,#1              ;10206
00008a  4602              MOV      r2,r0                 ;10206
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;10206
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;10206
000094  4a29              LDR      r2,|L101.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;10206
00009a  4608              MOV      r0,r1                 ;10206
00009c  4926              LDR      r1,|L101.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;10206
0000a6  4823              LDR      r0,|L101.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;10206
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;10206
0000b0  4a22              LDR      r2,|L101.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;10206
0000b6  7001              STRB     r1,[r0,#0]            ;10206
0000b8  f04f0072          MOV      r0,#0x72              ;10206
0000bc  e7d0              B        |L101.96|
                  |L101.190|
0000be  463b              MOV      r3,r7                 ;10207
0000c0  466a              MOV      r2,sp                 ;10207
0000c2  4621              MOV      r1,r4                 ;10207
0000c4  4630              MOV      r0,r6                 ;10207
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;10207
0000ce  d025              BEQ      |L101.284|
0000d0  4818              LDR      r0,|L101.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;10207
0000d6  2831              CMP      r0,#0x31              ;10207
0000d8  da1e              BGE      |L101.280|
0000da  4916              LDR      r1,|L101.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;10207
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;10207
0000e4  1c49              ADDS     r1,r1,#1              ;10207
0000e6  4a13              LDR      r2,|L101.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;10207
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;10207
0000f0  4a12              LDR      r2,|L101.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;10207
0000f6  4608              MOV      r0,r1                 ;10207
0000f8  490f              LDR      r1,|L101.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;10207
000102  480c              LDR      r0,|L101.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;10207
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;10207
00010c  4a0b              LDR      r2,|L101.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;10207
000112  7001              STRB     r1,[r0,#0]            ;10207
000114  4640              MOV      r0,r8                 ;10207
000116  e7a3              B        |L101.96|
                  |L101.280|
000118  4640              MOV      r0,r8                 ;10207
00011a  e7a1              B        |L101.96|
                  |L101.284|
00011c  f04f0001          MOV      r0,#1                 ;10208
000120  f8c501c0          STR      r0,[r5,#0x1c0]        ;10208
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10209
000128  f50572e4          ADD      r2,r5,#0x1c8          ;10209
00012c  c203              STM      r2!,{r0,r1}           ;10209
00012e  f04f0000          MOV      r0,#0                 ;10210
000132  e795              B        |L101.96|
;;;10212  
                          ENDP

                  |L101.308|
                          DCD      _setup+0xc000
                  |L101.312|
                          DCD      |symbol_number.525|
                  |L101.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_real_expression||, CODE, READONLY, ALIGN=2

                  read_real_expression PROC
;;;10459  
;;;10460      static int read_real_expression(              /* ARGUMENTS                               */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10461      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10462      int * counter,                                /* pointer to a counter for position on the line  */
;;;10463      double * value,                               /* pointer to double to be computed               */
;;;10464      double * parameters)                          /* array of system parameters                     */
;;;10465      {
000004  b090              SUB      sp,sp,#0x40
000006  4606              MOV      r6,r0
000008  460d              MOV      r5,r1
00000a  4617              MOV      r7,r2
00000c  4698              MOV      r8,r3
;;;10466          static char name[] SET_TO "read_real_expression";
;;;10467          double values[MAX_STACK];
;;;10468          int operators[MAX_STACK];
;;;10469          int stack_index;
;;;10470          int status;
;;;10471  
;;;10472          CHK((line[*counter] ISNT '['), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000e  6828              LDR      r0,[r5,#0]
000010  5c30              LDRB     r0,[r6,r0]
000012  285b              CMP      r0,#0x5b
000014  d028              BEQ      |L102.104|
000016  f04f0100          MOV      r1,#0
00001a  48bb              LDR      r0,|L102.776|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  49b2              LDR      r1,|L102.780|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  48ae              LDR      r0,|L102.776|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4aae              LDR      r2,|L102.784|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L102.98|
;;;10473          *counter SET_TO (*counter + 1);
;;;10474          CHP(read_real_value(line, counter, values, parameters));
;;;10475          CHP(read_operation(line, counter, operators));
;;;10476          stack_index SET_TO 1;
;;;10477          for(; operators[0] ISNT RIGHT_BRACKET ;)
;;;10478          {
;;;10479              CHP(read_real_value(line, counter, values+stack_index, parameters));
;;;10480              CHP(read_operation(line, counter, operators+stack_index));
;;;10481              if (precedence(operators[stack_index]) >
;;;10482                  precedence(operators[stack_index - 1]))
;;;10483                  stack_index++;
;;;10484              else                                  /* precedence of latest operator is <= previous precedence */
;;;10485              {
;;;10486                  for (;precedence(operators[stack_index]) <=
;;;10487                      precedence(operators[stack_index - 1]); )
;;;10488                  {
;;;10489                      CHP(execute_binary((values + stack_index - 1),
;;;10490                          operators[stack_index -1],
;;;10491                          (values + stack_index)));
;;;10492                      operators[stack_index - 1] SET_TO operators[stack_index];
;;;10493                      if ((stack_index > 1) AND
;;;10494                          (precedence(operators[stack_index - 1]) <=
;;;10495                          precedence(operators[stack_index - 2])))
;;;10496                          stack_index--;
;;;10497                      else
;;;10498                          break;
;;;10499                  }
;;;10500              }
;;;10501          }
;;;10502          *value SET_TO values[0];
;;;10503          return RS274NGC_OK;
;;;10504      }
000062  b010              ADD      sp,sp,#0x40
000064  e8bd87f0          POP      {r4-r10,pc}
                  |L102.104|
000068  6828              LDR      r0,[r5,#0]            ;10473
00006a  f1000001          ADD      r0,r0,#1              ;10473
00006e  6028              STR      r0,[r5,#0]            ;10473
000070  4643              MOV      r3,r8                 ;10474
000072  aa06              ADD      r2,sp,#0x18           ;10474
000074  4629              MOV      r1,r5                 ;10474
000076  4630              MOV      r0,r6                 ;10474
000078  f7fffffe          BL       read_real_value
00007c  ea5f0900          MOVS     r9,r0                 ;10474
000080  d025              BEQ      |L102.206|
000082  48a1              LDR      r0,|L102.776|
000084  f8d0014c          LDR      r0,[r0,#0x14c]        ;10474
000088  2831              CMP      r0,#0x31              ;10474
00008a  da1e              BGE      |L102.202|
00008c  499e              LDR      r1,|L102.776|
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10474
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;10474
000096  1c49              ADDS     r1,r1,#1              ;10474
000098  4a9b              LDR      r2,|L102.776|
00009a  f8c2114c          STR      r1,[r2,#0x14c]        ;10474
00009e  eb030183          ADD      r1,r3,r3,LSL #2       ;10474
0000a2  4a9b              LDR      r2,|L102.784|
0000a4  eb021101          ADD      r1,r2,r1,LSL #4       ;10474
0000a8  4608              MOV      r0,r1                 ;10474
0000aa  4998              LDR      r1,|L102.780|
0000ac  f7fffffe          BL       strcpy
0000b0  f04f0100          MOV      r1,#0                 ;10474
0000b4  4894              LDR      r0,|L102.776|
0000b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;10474
0000ba  eb000080          ADD      r0,r0,r0,LSL #2       ;10474
0000be  4a94              LDR      r2,|L102.784|
0000c0  eb021000          ADD      r0,r2,r0,LSL #4       ;10474
0000c4  7001              STRB     r1,[r0,#0]            ;10474
0000c6  4648              MOV      r0,r9                 ;10474
0000c8  e7cb              B        |L102.98|
                  |L102.202|
0000ca  4648              MOV      r0,r9                 ;10474
0000cc  e7c9              B        |L102.98|
                  |L102.206|
0000ce  aa01              ADD      r2,sp,#4              ;10475
0000d0  4629              MOV      r1,r5                 ;10475
0000d2  4630              MOV      r0,r6                 ;10475
0000d4  f7fffffe          BL       read_operation
0000d8  ea5f0900          MOVS     r9,r0                 ;10475
0000dc  d025              BEQ      |L102.298|
0000de  488a              LDR      r0,|L102.776|
0000e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10475
0000e4  2831              CMP      r0,#0x31              ;10475
0000e6  da1e              BGE      |L102.294|
0000e8  4987              LDR      r1,|L102.776|
0000ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;10475
0000ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;10475
0000f2  1c49              ADDS     r1,r1,#1              ;10475
0000f4  4a84              LDR      r2,|L102.776|
0000f6  f8c2114c          STR      r1,[r2,#0x14c]        ;10475
0000fa  eb030183          ADD      r1,r3,r3,LSL #2       ;10475
0000fe  4a84              LDR      r2,|L102.784|
000100  eb021101          ADD      r1,r2,r1,LSL #4       ;10475
000104  4608              MOV      r0,r1                 ;10475
000106  4981              LDR      r1,|L102.780|
000108  f7fffffe          BL       strcpy
00010c  f04f0100          MOV      r1,#0                 ;10475
000110  487d              LDR      r0,|L102.776|
000112  f8d0014c          LDR      r0,[r0,#0x14c]        ;10475
000116  eb000080          ADD      r0,r0,r0,LSL #2       ;10475
00011a  4a7d              LDR      r2,|L102.784|
00011c  eb021000          ADD      r0,r2,r0,LSL #4       ;10475
000120  7001              STRB     r1,[r0,#0]            ;10475
000122  4648              MOV      r0,r9                 ;10475
000124  e79d              B        |L102.98|
                  |L102.294|
000126  4648              MOV      r0,r9                 ;10475
000128  e79b              B        |L102.98|
                  |L102.298|
00012a  f04f0401          MOV      r4,#1                 ;10476
00012e  e0e1              B        |L102.756|
                  |L102.304|
000130  a806              ADD      r0,sp,#0x18           ;10479
000132  eb0000c4          ADD      r0,r0,r4,LSL #3       ;10479
000136  4602              MOV      r2,r0                 ;10479
000138  4643              MOV      r3,r8                 ;10479
00013a  4629              MOV      r1,r5                 ;10479
00013c  4630              MOV      r0,r6                 ;10479
00013e  f7fffffe          BL       read_real_value
000142  ea5f0900          MOVS     r9,r0                 ;10479
000146  d025              BEQ      |L102.404|
000148  486f              LDR      r0,|L102.776|
00014a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10479
00014e  2831              CMP      r0,#0x31              ;10479
000150  da1e              BGE      |L102.400|
000152  496d              LDR      r1,|L102.776|
000154  f8d1314c          LDR      r3,[r1,#0x14c]        ;10479
000158  f8d1114c          LDR      r1,[r1,#0x14c]        ;10479
00015c  1c49              ADDS     r1,r1,#1              ;10479
00015e  4a6a              LDR      r2,|L102.776|
000160  f8c2114c          STR      r1,[r2,#0x14c]        ;10479
000164  eb030183          ADD      r1,r3,r3,LSL #2       ;10479
000168  4a69              LDR      r2,|L102.784|
00016a  eb021101          ADD      r1,r2,r1,LSL #4       ;10479
00016e  4608              MOV      r0,r1                 ;10479
000170  4966              LDR      r1,|L102.780|
000172  f7fffffe          BL       strcpy
000176  f04f0100          MOV      r1,#0                 ;10479
00017a  4863              LDR      r0,|L102.776|
00017c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10479
000180  eb000080          ADD      r0,r0,r0,LSL #2       ;10479
000184  4a62              LDR      r2,|L102.784|
000186  eb021000          ADD      r0,r2,r0,LSL #4       ;10479
00018a  7001              STRB     r1,[r0,#0]            ;10479
00018c  4648              MOV      r0,r9                 ;10479
00018e  e768              B        |L102.98|
                  |L102.400|
000190  4648              MOV      r0,r9                 ;10479
000192  e766              B        |L102.98|
                  |L102.404|
000194  a801              ADD      r0,sp,#4              ;10480
000196  eb000084          ADD      r0,r0,r4,LSL #2       ;10480
00019a  4602              MOV      r2,r0                 ;10480
00019c  4629              MOV      r1,r5                 ;10480
00019e  4630              MOV      r0,r6                 ;10480
0001a0  f7fffffe          BL       read_operation
0001a4  ea5f0900          MOVS     r9,r0                 ;10480
0001a8  d025              BEQ      |L102.502|
0001aa  4857              LDR      r0,|L102.776|
0001ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;10480
0001b0  2831              CMP      r0,#0x31              ;10480
0001b2  da1e              BGE      |L102.498|
0001b4  4954              LDR      r1,|L102.776|
0001b6  f8d1314c          LDR      r3,[r1,#0x14c]        ;10480
0001ba  f8d1114c          LDR      r1,[r1,#0x14c]        ;10480
0001be  1c49              ADDS     r1,r1,#1              ;10480
0001c0  4a51              LDR      r2,|L102.776|
0001c2  f8c2114c          STR      r1,[r2,#0x14c]        ;10480
0001c6  eb030183          ADD      r1,r3,r3,LSL #2       ;10480
0001ca  4a51              LDR      r2,|L102.784|
0001cc  eb021101          ADD      r1,r2,r1,LSL #4       ;10480
0001d0  4608              MOV      r0,r1                 ;10480
0001d2  494e              LDR      r1,|L102.780|
0001d4  f7fffffe          BL       strcpy
0001d8  f04f0100          MOV      r1,#0                 ;10480
0001dc  484a              LDR      r0,|L102.776|
0001de  f8d0014c          LDR      r0,[r0,#0x14c]        ;10480
0001e2  eb000080          ADD      r0,r0,r0,LSL #2       ;10480
0001e6  4a4a              LDR      r2,|L102.784|
0001e8  eb021000          ADD      r0,r2,r0,LSL #4       ;10480
0001ec  7001              STRB     r1,[r0,#0]            ;10480
0001ee  4648              MOV      r0,r9                 ;10480
0001f0  e737              B        |L102.98|
                  |L102.498|
0001f2  4648              MOV      r0,r9                 ;10480
0001f4  e735              B        |L102.98|
                  |L102.502|
0001f6  a901              ADD      r1,sp,#4              ;10481
0001f8  f8511024          LDR      r1,[r1,r4,LSL #2]     ;10481
0001fc  4608              MOV      r0,r1                 ;10481
0001fe  f7fffffe          BL       precedence
000202  4682              MOV      r10,r0                ;10481
000204  1e61              SUBS     r1,r4,#1              ;10481
000206  aa01              ADD      r2,sp,#4              ;10481
000208  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10481
00020c  4608              MOV      r0,r1                 ;10481
00020e  f7fffffe          BL       precedence
000212  4582              CMP      r10,r0                ;10481
000214  dd03              BLE      |L102.542|
000216  f1040001          ADD      r0,r4,#1              ;10483
00021a  4604              MOV      r4,r0                 ;10483
00021c  e06a              B        |L102.756|
                  |L102.542|
00021e  e058              B        |L102.722|
                  |L102.544|
000220  ab06              ADD      r3,sp,#0x18           ;10489
000222  eb0303c4          ADD      r3,r3,r4,LSL #3       ;10489
000226  461a              MOV      r2,r3                 ;10489
000228  1e63              SUBS     r3,r4,#1              ;10489
00022a  f10d0c04          ADD      r12,sp,#4             ;10489
00022e  f85c3023          LDR      r3,[r12,r3,LSL #2]    ;10489
000232  4619              MOV      r1,r3                 ;10489
000234  ab06              ADD      r3,sp,#0x18           ;10489
000236  eb0303c4          ADD      r3,r3,r4,LSL #3       ;10489
00023a  3b08              SUBS     r3,r3,#8              ;10489
00023c  4618              MOV      r0,r3                 ;10489
00023e  f7fffffe          BL       execute_binary
000242  ea5f0900          MOVS     r9,r0                 ;10489
000246  d025              BEQ      |L102.660|
000248  482f              LDR      r0,|L102.776|
00024a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10489
00024e  2831              CMP      r0,#0x31              ;10489
000250  da1e              BGE      |L102.656|
000252  492d              LDR      r1,|L102.776|
000254  f8d1314c          LDR      r3,[r1,#0x14c]        ;10489
000258  f8d1114c          LDR      r1,[r1,#0x14c]        ;10489
00025c  1c49              ADDS     r1,r1,#1              ;10489
00025e  4a2a              LDR      r2,|L102.776|
000260  f8c2114c          STR      r1,[r2,#0x14c]        ;10489
000264  eb030183          ADD      r1,r3,r3,LSL #2       ;10489
000268  4a29              LDR      r2,|L102.784|
00026a  eb021101          ADD      r1,r2,r1,LSL #4       ;10489
00026e  4608              MOV      r0,r1                 ;10489
000270  4926              LDR      r1,|L102.780|
000272  f7fffffe          BL       strcpy
000276  f04f0100          MOV      r1,#0                 ;10489
00027a  4823              LDR      r0,|L102.776|
00027c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10489
000280  eb000080          ADD      r0,r0,r0,LSL #2       ;10489
000284  4a22              LDR      r2,|L102.784|
000286  eb021000          ADD      r0,r2,r0,LSL #4       ;10489
00028a  7001              STRB     r1,[r0,#0]            ;10489
00028c  4648              MOV      r0,r9                 ;10489
00028e  e6e8              B        |L102.98|
                  |L102.656|
000290  4648              MOV      r0,r9                 ;10489
000292  e6e6              B        |L102.98|
                  |L102.660|
000294  a801              ADD      r0,sp,#4              ;10492
000296  f8501024          LDR      r1,[r0,r4,LSL #2]     ;10492
00029a  f1a40001          SUB      r0,r4,#1              ;10492
00029e  aa01              ADD      r2,sp,#4              ;10492
0002a0  f8421020          STR      r1,[r2,r0,LSL #2]     ;10492
0002a4  2c01              CMP      r4,#1                 ;10493
0002a6  dd13              BLE      |L102.720|
0002a8  1e61              SUBS     r1,r4,#1              ;10494
0002aa  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10494
0002ae  4608              MOV      r0,r1                 ;10494
0002b0  f7fffffe          BL       precedence
0002b4  4682              MOV      r10,r0                ;10494
0002b6  1ea1              SUBS     r1,r4,#2              ;10494
0002b8  aa01              ADD      r2,sp,#4              ;10494
0002ba  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10494
0002be  4608              MOV      r0,r1                 ;10494
0002c0  f7fffffe          BL       precedence
0002c4  4582              CMP      r10,r0                ;10494
0002c6  dc03              BGT      |L102.720|
0002c8  f1a40001          SUB      r0,r4,#1              ;10496
0002cc  4604              MOV      r4,r0                 ;10496
0002ce  e000              B        |L102.722|
                  |L102.720|
0002d0  e00f              B        |L102.754|
                  |L102.722|
0002d2  a901              ADD      r1,sp,#4              ;10486
0002d4  f8511024          LDR      r1,[r1,r4,LSL #2]     ;10486
0002d8  4608              MOV      r0,r1                 ;10486
0002da  f7fffffe          BL       precedence
0002de  4682              MOV      r10,r0                ;10486
0002e0  1e61              SUBS     r1,r4,#1              ;10486
0002e2  aa01              ADD      r2,sp,#4              ;10486
0002e4  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10486
0002e8  4608              MOV      r0,r1                 ;10486
0002ea  f7fffffe          BL       precedence
0002ee  4582              CMP      r10,r0                ;10486
0002f0  dd96              BLE      |L102.544|
                  |L102.754|
0002f2  bf00              NOP                            ;10498
                  |L102.756|
0002f4  9801              LDR      r0,[sp,#4]            ;10477
0002f6  280a              CMP      r0,#0xa               ;10477
0002f8  f47faf1a          BNE      |L102.304|
0002fc  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;10502
000300  e9c70100          STRD     r0,r1,[r7,#0]         ;10502
000304  2000              MOVS     r0,#0                 ;10503
000306  e6ac              B        |L102.98|
;;;10505  
                          ENDP

                  |L102.776|
                          DCD      _setup+0xc000
                  |L102.780|
                          DCD      |symbol_number.526|
                  |L102.784|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_real_number||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_real
                  read_real_number PROC
;;;10542  
;;;10543      static int read_real_number(                  /* ARGUMENTS                               */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10544      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10545      int * counter,                                /* pointer to a counter for position on the line  */
;;;10546      double * double_ptr)                          /* pointer to double to be read                   */
;;;10547      {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
;;;10548          static char name[] SET_TO "read_real_number";
;;;10549          char c;                                   /* for character being processed    */
;;;10550          int flag_digit;                           /* set to ON if digit found         */
;;;10551          int flag_point;                           /* set to ON if decimal point found */
;;;10552          int n;                                    /* for indexing line                */
;;;10553  
;;;10554          n SET_TO *counter;
00000a  6838              LDR      r0,[r7,#0]
00000c  4605              MOV      r5,r0
;;;10555          flag_point SET_TO OFF;
00000e  f04f0000          MOV      r0,#0
000012  4682              MOV      r10,r0
;;;10556          flag_digit SET_TO OFF;
000014  4681              MOV      r9,r0
;;;10557  
;;;10558     /* check first character */
;;;10559          c SET_TO line[n];
000016  5d70              LDRB     r0,[r6,r5]
000018  4604              MOV      r4,r0
;;;10560          if (c IS '+')
00001a  2c2b              CMP      r4,#0x2b
00001c  d107              BNE      |L103.46|
;;;10561          {
;;;10562              *counter SET_TO (*counter + 1);       /* skip plus sign */
00001e  6838              LDR      r0,[r7,#0]
000020  f1000001          ADD      r0,r0,#1
000024  6038              STR      r0,[r7,#0]
;;;10563              n++;
000026  f1050001          ADD      r0,r5,#1
00002a  4605              MOV      r5,r0
00002c  e033              B        |L103.150|
                  |L103.46|
;;;10564          }
;;;10565          else if (c IS '-')
00002e  2c2d              CMP      r4,#0x2d
000030  d103              BNE      |L103.58|
;;;10566          {
;;;10567              n++;
000032  f1050001          ADD      r0,r5,#1
000036  4605              MOV      r5,r0
000038  e02d              B        |L103.150|
                  |L103.58|
;;;10568          }
;;;10569          else if ((c ISNT '.') AND ((c < 48) OR (c > 57)))
00003a  2c2e              CMP      r4,#0x2e
00003c  d02b              BEQ      |L103.150|
00003e  2c30              CMP      r4,#0x30
000040  db01              BLT      |L103.70|
000042  2c39              CMP      r4,#0x39
000044  dd27              BLE      |L103.150|
                  |L103.70|
;;;10570              ERM(NCE_BAD_NUMBER_FORMAT);
000046  f04f0100          MOV      r1,#0
00004a  4850              LDR      r0,|L103.396|
00004c  f8c0114c          STR      r1,[r0,#0x14c]
000050  4601              MOV      r1,r0
000052  f8d1314c          LDR      r3,[r1,#0x14c]
000056  f8d1114c          LDR      r1,[r1,#0x14c]
00005a  f1010101          ADD      r1,r1,#1
00005e  4602              MOV      r2,r0
000060  f8c2114c          STR      r1,[r2,#0x14c]
000064  eb030183          ADD      r1,r3,r3,LSL #2
000068  f6a06254          SUB      r2,r0,#0xe54
00006c  eb021101          ADD      r1,r2,r1,LSL #4
000070  4608              MOV      r0,r1
000072  4947              LDR      r1,|L103.400|
000074  f7fffffe          BL       strcpy
000078  f04f0100          MOV      r1,#0
00007c  4843              LDR      r0,|L103.396|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]
000082  eb000080          ADD      r0,r0,r0,LSL #2
000086  4a43              LDR      r2,|L103.404|
000088  eb021000          ADD      r0,r2,r0,LSL #4
00008c  7001              STRB     r1,[r0,#0]
00008e  f04f000e          MOV      r0,#0xe
                  |L103.146|
;;;10571  
;;;10572     /* check out rest of characters (must be digit or decimal point) */
;;;10573          for (; (c SET_TO line[n]) ISNT (char) NULL; n++)
;;;10574          {
;;;10575              if (( 47 < c) AND ( c < 58))
;;;10576              {
;;;10577                  flag_digit SET_TO ON;
;;;10578              }
;;;10579              else if (c IS '.')
;;;10580              {
;;;10581                  if (flag_point IS OFF)
;;;10582                  {
;;;10583                      flag_point SET_TO ON;
;;;10584                  }
;;;10585                  else
;;;10586                      break;                        /* two decimal points, error appears on reading next item */
;;;10587              }
;;;10588              else
;;;10589                  break;
;;;10590          }
;;;10591  
;;;10592          CHK((flag_digit IS OFF), NCE_NO_DIGITS_FOUND_WHERE_REAL_NUMBER_SHOULD_BE);
;;;10593          line[n] SET_TO (char) NULL;               /* temporary string termination for sscanf */
;;;10594          if (sscanf(line + *counter, "%lf", double_ptr) IS 0)
;;;10595          {
;;;10596              line[n] SET_TO c;
;;;10597              ERM(NCE_SSCANF_FAILED);
;;;10598          }
;;;10599          else
;;;10600          {
;;;10601              line[n] SET_TO c;
;;;10602              *counter SET_TO n;
;;;10603          }
;;;10604          return RS274NGC_OK;
;;;10605      }
000092  e8bd87f0          POP      {r4-r10,pc}
                  |L103.150|
000096  e015              B        |L103.196|
                  |L103.152|
000098  2c2f              CMP      r4,#0x2f              ;10575
00009a  dd05              BLE      |L103.168|
00009c  2c3a              CMP      r4,#0x3a              ;10575
00009e  da03              BGE      |L103.168|
0000a0  f04f0001          MOV      r0,#1                 ;10577
0000a4  4681              MOV      r9,r0                 ;10577
0000a6  e00a              B        |L103.190|
                  |L103.168|
0000a8  2c2e              CMP      r4,#0x2e              ;10579
0000aa  d107              BNE      |L103.188|
0000ac  f1ba0f00          CMP      r10,#0                ;10581
0000b0  d103              BNE      |L103.186|
0000b2  f04f0001          MOV      r0,#1                 ;10583
0000b6  4682              MOV      r10,r0                ;10583
0000b8  e001              B        |L103.190|
                  |L103.186|
0000ba  e006              B        |L103.202|
                  |L103.188|
0000bc  e005              B        |L103.202|
                  |L103.190|
0000be  f1050001          ADD      r0,r5,#1              ;10573
0000c2  4605              MOV      r5,r0                 ;10573
                  |L103.196|
0000c4  5d70              LDRB     r0,[r6,r5]            ;10573
0000c6  0004              MOVS     r4,r0                 ;10573
0000c8  d1e6              BNE      |L103.152|
                  |L103.202|
0000ca  bf00              NOP                            ;10586
0000cc  f1b90f00          CMP      r9,#0                 ;10592
0000d0  d125              BNE      |L103.286|
0000d2  f04f0100          MOV      r1,#0                 ;10592
0000d6  482d              LDR      r0,|L103.396|
0000d8  f8c0114c          STR      r1,[r0,#0x14c]        ;10592
0000dc  4601              MOV      r1,r0                 ;10592
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;10592
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;10592
0000e6  f1010101          ADD      r1,r1,#1              ;10592
0000ea  4602              MOV      r2,r0                 ;10592
0000ec  f8c2114c          STR      r1,[r2,#0x14c]        ;10592
0000f0  eb030183          ADD      r1,r3,r3,LSL #2       ;10592
0000f4  4a27              LDR      r2,|L103.404|
0000f6  eb021101          ADD      r1,r2,r1,LSL #4       ;10592
0000fa  4608              MOV      r0,r1                 ;10592
0000fc  4924              LDR      r1,|L103.400|
0000fe  f7fffffe          BL       strcpy
000102  f04f0100          MOV      r1,#0                 ;10592
000106  4821              LDR      r0,|L103.396|
000108  f8d0014c          LDR      r0,[r0,#0x14c]        ;10592
00010c  eb000080          ADD      r0,r0,r0,LSL #2       ;10592
000110  4a20              LDR      r2,|L103.404|
000112  eb021000          ADD      r0,r2,r0,LSL #4       ;10592
000116  7001              STRB     r1,[r0,#0]            ;10592
000118  f04f0086          MOV      r0,#0x86              ;10592
00011c  e7b9              B        |L103.146|
                  |L103.286|
00011e  f04f0000          MOV      r0,#0                 ;10593
000122  5570              STRB     r0,[r6,r5]            ;10593
000124  6839              LDR      r1,[r7,#0]            ;10594
000126  4431              ADD      r1,r1,r6              ;10594
000128  4608              MOV      r0,r1                 ;10594
00012a  4642              MOV      r2,r8                 ;10594
00012c  a11a              ADR      r1,|L103.408|
00012e  f7fffffe          BL       __0sscanf
000132  bb30              CBNZ     r0,|L103.386|
000134  5574              STRB     r4,[r6,r5]            ;10596
000136  f04f0100          MOV      r1,#0                 ;10597
00013a  4814              LDR      r0,|L103.396|
00013c  f8c0114c          STR      r1,[r0,#0x14c]        ;10597
000140  4601              MOV      r1,r0                 ;10597
000142  f8d1314c          LDR      r3,[r1,#0x14c]        ;10597
000146  f8d1114c          LDR      r1,[r1,#0x14c]        ;10597
00014a  f1010101          ADD      r1,r1,#1              ;10597
00014e  4602              MOV      r2,r0                 ;10597
000150  f8c2114c          STR      r1,[r2,#0x14c]        ;10597
000154  eb030183          ADD      r1,r3,r3,LSL #2       ;10597
000158  4a0e              LDR      r2,|L103.404|
00015a  eb021101          ADD      r1,r2,r1,LSL #4       ;10597
00015e  4608              MOV      r0,r1                 ;10597
000160  490b              LDR      r1,|L103.400|
000162  f7fffffe          BL       strcpy
000166  f04f0100          MOV      r1,#0                 ;10597
00016a  4808              LDR      r0,|L103.396|
00016c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10597
000170  eb000080          ADD      r0,r0,r0,LSL #2       ;10597
000174  4a07              LDR      r2,|L103.404|
000176  eb021000          ADD      r0,r2,r0,LSL #4       ;10597
00017a  7001              STRB     r1,[r0,#0]            ;10597
00017c  f04f00a1          MOV      r0,#0xa1              ;10597
000180  e787              B        |L103.146|
                  |L103.386|
000182  5574              STRB     r4,[r6,r5]            ;10601
000184  603d              STR      r5,[r7,#0]            ;10602
000186  2000              MOVS     r0,#0                 ;10604
000188  e783              B        |L103.146|
;;;10606  
                          ENDP

00018a  0000              DCW      0x0000
                  |L103.396|
                          DCD      _setup+0xc000
                  |L103.400|
                          DCD      |symbol_number.527|
                  |L103.404|
                          DCD      _setup+0xb1ac
                  |L103.408|
000198  256c6600          DCB      "%lf",0

                          AREA ||i.read_real_value||, CODE, READONLY, ALIGN=2

                  read_real_value PROC
;;;10653  
;;;10654      static int read_real_value(                   /* ARGUMENTS                               */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10655      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10656      int * counter,                                /* pointer to a counter for position on the line  */
;;;10657      double * double_ptr,                          /* pointer to double to be read                   */
;;;10658      double * parameters)                          /* array of system parameters                     */
;;;10659      {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;10660          static char name[] SET_TO "read_real_value";
;;;10661          char c;
;;;10662          int status;
;;;10663  
;;;10664          c SET_TO line[*counter];
00000c  6830              LDR      r0,[r6,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  4604              MOV      r4,r0
;;;10665          CHK((c IS 0), NCE_NO_CHARACTERS_FOUND_IN_READING_REAL_VALUE);
000012  bb3c              CBNZ     r4,|L104.100|
000014  f04f0100          MOV      r1,#0
000018  4876              LDR      r0,|L104.500|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  496d              LDR      r1,|L104.504|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  486a              LDR      r0,|L104.500|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a69              LDR      r2,|L104.508|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0085          MOV      r0,#0x85
                  |L104.96|
;;;10666          if (c IS '[')
;;;10667              CHP(read_real_expression (line, counter, double_ptr, parameters));
;;;10668          else if (c IS '#')
;;;10669              CHP(read_parameter(line, counter, double_ptr, parameters));
;;;10670          else if ((c >= 'a') AND (c <= 'z'))
;;;10671              CHP(read_unary(line, counter, double_ptr, parameters));
;;;10672          else
;;;10673              CHP(read_real_number(line, counter, double_ptr));
;;;10674  
;;;10675          return RS274NGC_OK;
;;;10676      }
000060  e8bd87f0          POP      {r4-r10,pc}
                  |L104.100|
000064  2c5b              CMP      r4,#0x5b              ;10666
000066  d12e              BNE      |L104.198|
000068  4643              MOV      r3,r8                 ;10667
00006a  463a              MOV      r2,r7                 ;10667
00006c  4631              MOV      r1,r6                 ;10667
00006e  4628              MOV      r0,r5                 ;10667
000070  f7fffffe          BL       read_real_expression
000074  ea5f0900          MOVS     r9,r0                 ;10667
                  |L104.120|
000078  d07e              BEQ      |L104.376|
00007a  485e              LDR      r0,|L104.500|
00007c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10667
000080  2831              CMP      r0,#0x31              ;10667
000082  da1e              BGE      |L104.194|
000084  495b              LDR      r1,|L104.500|
000086  f8d1314c          LDR      r3,[r1,#0x14c]        ;10667
00008a  f8d1114c          LDR      r1,[r1,#0x14c]        ;10667
00008e  1c49              ADDS     r1,r1,#1              ;10667
000090  4a58              LDR      r2,|L104.500|
000092  f8c2114c          STR      r1,[r2,#0x14c]        ;10667
000096  eb030183          ADD      r1,r3,r3,LSL #2       ;10667
00009a  4a58              LDR      r2,|L104.508|
00009c  eb021101          ADD      r1,r2,r1,LSL #4       ;10667
0000a0  4608              MOV      r0,r1                 ;10667
0000a2  4955              LDR      r1,|L104.504|
0000a4  f7fffffe          BL       strcpy
0000a8  f04f0100          MOV      r1,#0                 ;10667
0000ac  4851              LDR      r0,|L104.500|
0000ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;10667
0000b2  eb000080          ADD      r0,r0,r0,LSL #2       ;10667
0000b6  4a51              LDR      r2,|L104.508|
0000b8  eb021000          ADD      r0,r2,r0,LSL #4       ;10667
0000bc  7001              STRB     r1,[r0,#0]            ;10667
0000be  4648              MOV      r0,r9                 ;10667
0000c0  e7ce              B        |L104.96|
                  |L104.194|
0000c2  4648              MOV      r0,r9                 ;10667
0000c4  e7cc              B        |L104.96|
                  |L104.198|
0000c6  2c23              CMP      r4,#0x23              ;10668
0000c8  d12e              BNE      |L104.296|
0000ca  4643              MOV      r3,r8                 ;10669
0000cc  463a              MOV      r2,r7                 ;10669
0000ce  4631              MOV      r1,r6                 ;10669
0000d0  4628              MOV      r0,r5                 ;10669
0000d2  f7fffffe          BL       read_parameter
0000d6  ea5f0900          MOVS     r9,r0                 ;10669
0000da  d0cd              BEQ      |L104.120|
0000dc  4845              LDR      r0,|L104.500|
0000de  f8d0014c          LDR      r0,[r0,#0x14c]        ;10669
0000e2  2831              CMP      r0,#0x31              ;10669
0000e4  da1e              BGE      |L104.292|
0000e6  4943              LDR      r1,|L104.500|
0000e8  f8d1314c          LDR      r3,[r1,#0x14c]        ;10669
0000ec  f8d1114c          LDR      r1,[r1,#0x14c]        ;10669
0000f0  1c49              ADDS     r1,r1,#1              ;10669
0000f2  4a40              LDR      r2,|L104.500|
0000f4  f8c2114c          STR      r1,[r2,#0x14c]        ;10669
0000f8  eb030183          ADD      r1,r3,r3,LSL #2       ;10669
0000fc  4a3f              LDR      r2,|L104.508|
0000fe  eb021101          ADD      r1,r2,r1,LSL #4       ;10669
000102  4608              MOV      r0,r1                 ;10669
000104  493c              LDR      r1,|L104.504|
000106  f7fffffe          BL       strcpy
00010a  f04f0100          MOV      r1,#0                 ;10669
00010e  4839              LDR      r0,|L104.500|
000110  f8d0014c          LDR      r0,[r0,#0x14c]        ;10669
000114  eb000080          ADD      r0,r0,r0,LSL #2       ;10669
000118  4a38              LDR      r2,|L104.508|
00011a  eb021000          ADD      r0,r2,r0,LSL #4       ;10669
00011e  7001              STRB     r1,[r0,#0]            ;10669
000120  4648              MOV      r0,r9                 ;10669
000122  e79d              B        |L104.96|
                  |L104.292|
000124  4648              MOV      r0,r9                 ;10669
000126  e79b              B        |L104.96|
                  |L104.296|
000128  2c61              CMP      r4,#0x61              ;10670
00012a  db32              BLT      |L104.402|
00012c  2c7a              CMP      r4,#0x7a              ;10670
00012e  dc30              BGT      |L104.402|
000130  4643              MOV      r3,r8                 ;10671
000132  463a              MOV      r2,r7                 ;10671
000134  4631              MOV      r1,r6                 ;10671
000136  4628              MOV      r0,r5                 ;10671
000138  f7fffffe          BL       read_unary
00013c  ea5f0900          MOVS     r9,r0                 ;10671
000140  d055              BEQ      |L104.494|
000142  482c              LDR      r0,|L104.500|
000144  f8d0014c          LDR      r0,[r0,#0x14c]        ;10671
000148  2831              CMP      r0,#0x31              ;10671
00014a  da20              BGE      |L104.398|
00014c  4929              LDR      r1,|L104.500|
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10671
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;10671
000156  1c49              ADDS     r1,r1,#1              ;10671
000158  4a26              LDR      r2,|L104.500|
00015a  f8c2114c          STR      r1,[r2,#0x14c]        ;10671
00015e  eb030183          ADD      r1,r3,r3,LSL #2       ;10671
000162  4a26              LDR      r2,|L104.508|
000164  eb021101          ADD      r1,r2,r1,LSL #4       ;10671
000168  4608              MOV      r0,r1                 ;10671
00016a  4923              LDR      r1,|L104.504|
00016c  f7fffffe          BL       strcpy
000170  f04f0100          MOV      r1,#0                 ;10671
000174  481f              LDR      r0,|L104.500|
000176  e000              B        |L104.378|
                  |L104.376|
000178  e039              B        |L104.494|
                  |L104.378|
00017a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10671
00017e  eb000080          ADD      r0,r0,r0,LSL #2       ;10671
000182  4a1e              LDR      r2,|L104.508|
000184  eb021000          ADD      r0,r2,r0,LSL #4       ;10671
000188  7001              STRB     r1,[r0,#0]            ;10671
00018a  4648              MOV      r0,r9                 ;10671
00018c  e768              B        |L104.96|
                  |L104.398|
00018e  4648              MOV      r0,r9                 ;10671
000190  e766              B        |L104.96|
                  |L104.402|
000192  463a              MOV      r2,r7                 ;10673
000194  4631              MOV      r1,r6                 ;10673
000196  4628              MOV      r0,r5                 ;10673
000198  f7fffffe          BL       read_real_number
00019c  ea5f0900          MOVS     r9,r0                 ;10673
0001a0  d025              BEQ      |L104.494|
0001a2  4814              LDR      r0,|L104.500|
0001a4  f8d0014c          LDR      r0,[r0,#0x14c]        ;10673
0001a8  2831              CMP      r0,#0x31              ;10673
0001aa  da1e              BGE      |L104.490|
0001ac  4911              LDR      r1,|L104.500|
0001ae  f8d1314c          LDR      r3,[r1,#0x14c]        ;10673
0001b2  f8d1114c          LDR      r1,[r1,#0x14c]        ;10673
0001b6  1c49              ADDS     r1,r1,#1              ;10673
0001b8  4a0e              LDR      r2,|L104.500|
0001ba  f8c2114c          STR      r1,[r2,#0x14c]        ;10673
0001be  eb030183          ADD      r1,r3,r3,LSL #2       ;10673
0001c2  4a0e              LDR      r2,|L104.508|
0001c4  eb021101          ADD      r1,r2,r1,LSL #4       ;10673
0001c8  4608              MOV      r0,r1                 ;10673
0001ca  490b              LDR      r1,|L104.504|
0001cc  f7fffffe          BL       strcpy
0001d0  f04f0100          MOV      r1,#0                 ;10673
0001d4  4807              LDR      r0,|L104.500|
0001d6  f8d0014c          LDR      r0,[r0,#0x14c]        ;10673
0001da  eb000080          ADD      r0,r0,r0,LSL #2       ;10673
0001de  4a07              LDR      r2,|L104.508|
0001e0  eb021000          ADD      r0,r2,r0,LSL #4       ;10673
0001e4  7001              STRB     r1,[r0,#0]            ;10673
0001e6  4648              MOV      r0,r9                 ;10673
0001e8  e73a              B        |L104.96|
                  |L104.490|
0001ea  4648              MOV      r0,r9                 ;10673
0001ec  e738              B        |L104.96|
                  |L104.494|
0001ee  2000              MOVS     r0,#0                 ;10675
0001f0  e736              B        |L104.96|
;;;10677  
                          ENDP

0001f2  0000              DCW      0x0000
                  |L104.500|
                          DCD      _setup+0xc000
                  |L104.504|
                          DCD      |symbol_number.528|
                  |L104.508|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_s||, CODE, READONLY, ALIGN=2

                  read_s PROC
;;;10827  
;;;10828      static int read_s(                            /* ARGUMENTS                                     */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;10829      char * line,                                  /* string: line of RS274NGC code being processed */
;;;10830      int * counter,                                /* pointer to a counter for position on the line */
;;;10831      block_pointer block,                          /* pointer to a block being filled from the line */
;;;10832      double * parameters)                          /* array of system parameters                    */
;;;10833      {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;10834          static char name[] SET_TO "read_s";
;;;10835          double value;
;;;10836          int status;
;;;10837  
;;;10838          CHK((line[*counter] ISNT 's'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2873              CMP      r0,#0x73
000014  d027              BEQ      |L105.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L105.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L105.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L105.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L105.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L105.98|
;;;10839          *counter SET_TO (*counter + 1);
;;;10840          CHK((block->s_number > -1.0), NCE_MULTIPLE_S_WORDS_ON_ONE_LINE);
;;;10841          CHP(read_real_value(line, counter, &value, parameters));
;;;10842          CHK((value < 0.0), NCE_NEGATIVE_SPINDLE_SPEED_USED);
;;;10843          block->s_number SET_TO value;
;;;10844          return RS274NGC_OK;
;;;10845      }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L105.102|
000066  6820              LDR      r0,[r4,#0]            ;10839
000068  f1000001          ADD      r0,r0,#1              ;10839
00006c  6020              STR      r0,[r4,#0]            ;10839
00006e  f8d511d0          LDR      r1,[r5,#0x1d0]        ;10840
000072  460e              MOV      r6,r1                 ;10840
000074  f8d501d4          LDR      r0,[r5,#0x1d4]        ;10840
000078  4607              MOV      r7,r0                 ;10840
00007a  f04f0200          MOV      r2,#0                 ;10840
00007e  4b4a              LDR      r3,|L105.424|
000080  4630              MOV      r0,r6                 ;10840
000082  4639              MOV      r1,r7                 ;10840
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L105.214|
00008a  f04f0100          MOV      r1,#0                 ;10840
00008e  4843              LDR      r0,|L105.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;10840
000094  4601              MOV      r1,r0                 ;10840
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;10840
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;10840
00009e  f1010101          ADD      r1,r1,#1              ;10840
0000a2  4602              MOV      r2,r0                 ;10840
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;10840
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;10840
0000ac  4a3d              LDR      r2,|L105.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;10840
0000b2  4608              MOV      r0,r1                 ;10840
0000b4  493a              LDR      r1,|L105.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;10840
0000be  4837              LDR      r0,|L105.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10840
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;10840
0000c8  4a36              LDR      r2,|L105.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;10840
0000ce  7001              STRB     r1,[r0,#0]            ;10840
0000d0  f04f0073          MOV      r0,#0x73              ;10840
0000d4  e7c5              B        |L105.98|
                  |L105.214|
0000d6  464b              MOV      r3,r9                 ;10841
0000d8  466a              MOV      r2,sp                 ;10841
0000da  4621              MOV      r1,r4                 ;10841
0000dc  4640              MOV      r0,r8                 ;10841
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;10841
0000e6  d025              BEQ      |L105.308|
0000e8  482c              LDR      r0,|L105.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;10841
0000ee  2831              CMP      r0,#0x31              ;10841
0000f0  da1e              BGE      |L105.304|
0000f2  492a              LDR      r1,|L105.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;10841
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;10841
0000fc  1c49              ADDS     r1,r1,#1              ;10841
0000fe  4a27              LDR      r2,|L105.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;10841
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;10841
000108  4a26              LDR      r2,|L105.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;10841
00010e  4608              MOV      r0,r1                 ;10841
000110  4923              LDR      r1,|L105.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;10841
00011a  4820              LDR      r0,|L105.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10841
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;10841
000124  4a1f              LDR      r2,|L105.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;10841
00012a  7001              STRB     r1,[r0,#0]            ;10841
00012c  4650              MOV      r0,r10                ;10841
00012e  e798              B        |L105.98|
                  |L105.304|
000130  4650              MOV      r0,r10                ;10841
000132  e796              B        |L105.98|
                  |L105.308|
000134  2200              MOVS     r2,#0                 ;10842
000136  4613              MOV      r3,r2                 ;10842
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10842
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d225              BCS      |L105.398|
000142  f04f0100          MOV      r1,#0                 ;10842
000146  4815              LDR      r0,|L105.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;10842
00014c  4601              MOV      r1,r0                 ;10842
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10842
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;10842
000156  f1010101          ADD      r1,r1,#1              ;10842
00015a  4602              MOV      r2,r0                 ;10842
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;10842
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;10842
000164  4a0f              LDR      r2,|L105.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;10842
00016a  4608              MOV      r0,r1                 ;10842
00016c  490c              LDR      r1,|L105.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;10842
000176  4809              LDR      r0,|L105.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;10842
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;10842
000180  4a08              LDR      r2,|L105.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;10842
000186  7001              STRB     r1,[r0,#0]            ;10842
000188  f04f0082          MOV      r0,#0x82              ;10842
00018c  e769              B        |L105.98|
                  |L105.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10843
000192  f50572e8          ADD      r2,r5,#0x1d0          ;10843
000196  c203              STM      r2!,{r0,r1}           ;10843
000198  2000              MOVS     r0,#0                 ;10844
00019a  e762              B        |L105.98|
;;;10846  
                          ENDP

                  |L105.412|
                          DCD      _setup+0xc000
                  |L105.416|
                          DCD      |symbol_number.529|
                  |L105.420|
                          DCD      _setup+0xb1ac
                  |L105.424|
                          DCD      0xbff00000

                          AREA ||i.read_t||, CODE, READONLY, ALIGN=2

                  read_t PROC
;;;10877  
;;;10878      static int read_t(                            /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;10879      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10880      int * counter,                                /* pointer to a counter for position on the line  */
;;;10881      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;10882      double * parameters)                          /* array of system parameters                     */
;;;10883      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;10884          static char name[] SET_TO "read_t";
;;;10885          int value;
;;;10886          int status;
;;;10887  
;;;10888          CHK((line[*counter] ISNT 't'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2874              CMP      r0,#0x74
000012  d027              BEQ      |L106.100|
000014  f04f0100          MOV      r1,#0
000018  4858              LDR      r0,|L106.380|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  494f              LDR      r1,|L106.384|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  484c              LDR      r0,|L106.380|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a4b              LDR      r2,|L106.388|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L106.96|
;;;10889          *counter SET_TO (*counter + 1);
;;;10890          CHK((block->t_number > -1), NCE_MULTIPLE_T_WORDS_ON_ONE_LINE);
;;;10891          CHP(read_integer_value(line, counter, &value, parameters));
;;;10892          CHK((value < 0), NCE_NEGATIVE_TOOL_ID_USED);
;;;10893          block->t_number SET_TO value;
;;;10894          return RS274NGC_OK;
;;;10895      }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L106.100|
000064  6820              LDR      r0,[r4,#0]            ;10889
000066  f1000001          ADD      r0,r0,#1              ;10889
00006a  6020              STR      r0,[r4,#0]            ;10889
00006c  f8d501d8          LDR      r0,[r5,#0x1d8]        ;10890
000070  2800              CMP      r0,#0                 ;10890
000072  db25              BLT      |L106.192|
000074  f04f0100          MOV      r1,#0                 ;10890
000078  4840              LDR      r0,|L106.380|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;10890
00007e  4601              MOV      r1,r0                 ;10890
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;10890
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;10890
000088  f1010101          ADD      r1,r1,#1              ;10890
00008c  4602              MOV      r2,r0                 ;10890
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;10890
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;10890
000096  4a3b              LDR      r2,|L106.388|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;10890
00009c  4608              MOV      r0,r1                 ;10890
00009e  4938              LDR      r1,|L106.384|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;10890
0000a8  4834              LDR      r0,|L106.380|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;10890
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;10890
0000b2  4a34              LDR      r2,|L106.388|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;10890
0000b8  7001              STRB     r1,[r0,#0]            ;10890
0000ba  f04f0074          MOV      r0,#0x74              ;10890
0000be  e7cf              B        |L106.96|
                  |L106.192|
0000c0  463b              MOV      r3,r7                 ;10891
0000c2  466a              MOV      r2,sp                 ;10891
0000c4  4621              MOV      r1,r4                 ;10891
0000c6  4630              MOV      r0,r6                 ;10891
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;10891
0000d0  d025              BEQ      |L106.286|
0000d2  482a              LDR      r0,|L106.380|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;10891
0000d8  2831              CMP      r0,#0x31              ;10891
0000da  da1e              BGE      |L106.282|
0000dc  4927              LDR      r1,|L106.380|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;10891
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;10891
0000e6  1c49              ADDS     r1,r1,#1              ;10891
0000e8  4a24              LDR      r2,|L106.380|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;10891
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;10891
0000f2  4a24              LDR      r2,|L106.388|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;10891
0000f8  4608              MOV      r0,r1                 ;10891
0000fa  4921              LDR      r1,|L106.384|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;10891
000104  481d              LDR      r0,|L106.380|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;10891
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;10891
00010e  4a1d              LDR      r2,|L106.388|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;10891
000114  7001              STRB     r1,[r0,#0]            ;10891
000116  4640              MOV      r0,r8                 ;10891
000118  e7a2              B        |L106.96|
                  |L106.282|
00011a  4640              MOV      r0,r8                 ;10891
00011c  e7a0              B        |L106.96|
                  |L106.286|
00011e  9800              LDR      r0,[sp,#0]            ;10892
000120  2800              CMP      r0,#0                 ;10892
000122  da25              BGE      |L106.368|
000124  f04f0100          MOV      r1,#0                 ;10892
000128  4814              LDR      r0,|L106.380|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;10892
00012e  4601              MOV      r1,r0                 ;10892
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;10892
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;10892
000138  f1010101          ADD      r1,r1,#1              ;10892
00013c  4602              MOV      r2,r0                 ;10892
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;10892
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;10892
000146  4a0f              LDR      r2,|L106.388|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;10892
00014c  4608              MOV      r0,r1                 ;10892
00014e  490c              LDR      r1,|L106.384|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;10892
000158  4808              LDR      r0,|L106.380|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10892
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;10892
000162  4a08              LDR      r2,|L106.388|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;10892
000168  7001              STRB     r1,[r0,#0]            ;10892
00016a  f04f0083          MOV      r0,#0x83              ;10892
00016e  e777              B        |L106.96|
                  |L106.368|
000170  9800              LDR      r0,[sp,#0]            ;10893
000172  f8c501d8          STR      r0,[r5,#0x1d8]        ;10893
000176  2000              MOVS     r0,#0                 ;10894
000178  e772              B        |L106.96|
;;;10896  
                          ENDP

00017a  0000              DCW      0x0000
                  |L106.380|
                          DCD      _setup+0xc000
                  |L106.384|
                          DCD      |symbol_number.530|
                  |L106.388|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_text||, CODE, READONLY, ALIGN=2

                  read_text PROC
;;;10961  
;;;10962      static int read_text(                         /* ARGUMENTS                                   */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10963      const char * command,                         /* a string which may have input text, or null */
;;;10964      FILE * inport,                                /* a file pointer for an input file, or null   */
;;;10965      char * raw_line,                              /* array to write raw input line into          */
;;;10966      char * line,                                  /* array for input line to be processed in     */
;;;10967      int * length)                                 /* a pointer to an integer to be set           */
;;;10968      {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
00000c  f8dd9020          LDR      r9,[sp,#0x20]
;;;10969          static char name[] SET_TO "read_text";
;;;10970          int status;                               /* used in CHP */
;;;10971          int index;
;;;10972  
;;;10973          if (command IS NULL)
000010  2f00              CMP      r7,#0
000012  d17e              BNE      |L107.274|
;;;10974          {
;;;10975              if(fgets(raw_line, RS274NGC_TEXT_SIZE, inport) IS NULL)
000014  4642              MOV      r2,r8
000016  f44f7180          MOV      r1,#0x100
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       fgets
000020  2800              CMP      r0,#0
000022  d150              BNE      |L107.198|
;;;10976              {
;;;10977                  if (_setup.percent_flag IS ON)
000024  48ad              LDR      r0,|L107.732|
000026  f8d00168          LDR      r0,[r0,#0x168]
00002a  2801              CMP      r0,#1
00002c  d126              BNE      |L107.124|
;;;10978                      ERM(NCE_FILE_ENDED_WITH_NO_PERCENT_SIGN);
00002e  f04f0100          MOV      r1,#0
000032  48ab              LDR      r0,|L107.736|
000034  f8c0114c          STR      r1,[r0,#0x14c]
000038  4601              MOV      r1,r0
00003a  f8d1314c          LDR      r3,[r1,#0x14c]
00003e  f8d1114c          LDR      r1,[r1,#0x14c]
000042  f1010101          ADD      r1,r1,#1
000046  4602              MOV      r2,r0
000048  f8c2114c          STR      r1,[r2,#0x14c]
00004c  eb030183          ADD      r1,r3,r3,LSL #2
000050  f6a06254          SUB      r2,r0,#0xe54
000054  eb021101          ADD      r1,r2,r1,LSL #4
000058  4608              MOV      r0,r1
00005a  49a2              LDR      r1,|L107.740|
00005c  f7fffffe          BL       strcpy
000060  4639              MOV      r1,r7
000062  489f              LDR      r0,|L107.736|
000064  f8d0014c          LDR      r0,[r0,#0x14c]
000068  eb000080          ADD      r0,r0,r0,LSL #2
00006c  4a9e              LDR      r2,|L107.744|
00006e  eb021000          ADD      r0,r2,r0,LSL #4
000072  7001              STRB     r1,[r0,#0]
000074  f04f0050          MOV      r0,#0x50
                  |L107.120|
;;;10979                  else
;;;10980                      ERM(NCE_FILE_ENDED_WITH_NO_PERCENT_SIGN_OR_PROGRAM_END);
;;;10981              }
;;;10982              if (strlen(raw_line) IS (RS274NGC_TEXT_SIZE - 1))
;;;10983              {                                     // line is too long. need to finish reading the line to recover
;;;10984                  for(;fgetc(inport) ISNT '\n';)    // could also look for EOF
;;;10985                  {
;;;10986                  }
;;;10987                  ERM(NCE_COMMAND_TOO_LONG);
;;;10988              }
;;;10989     // index set on last char
;;;10990              for(index SET_TO (strlen(raw_line) -1);
;;;10991                  (index >= 0) AND (isspace(raw_line[index]));
;;;10992                  index--)
;;;10993              {                                     // remove space at end of raw_line, especially CR & LF
;;;10994                  raw_line[index] SET_TO 0;
;;;10995              }
;;;10996              strcpy(line, raw_line);
;;;10997              CHP(close_and_downcase(line));
;;;10998              if ((line[0] IS '%') AND (line[1] IS 0) AND (_setup.percent_flag IS ON))
;;;10999                  return RS274NGC_ENDFILE;
;;;11000          }
;;;11001          else
;;;11002          {
;;;11003              CHK((strlen(command) >= RS274NGC_TEXT_SIZE), NCE_COMMAND_TOO_LONG);
;;;11004              strcpy(raw_line, command);
;;;11005              strcpy(line, command);
;;;11006              CHP(close_and_downcase(line));
;;;11007          }
;;;11008          _setup.sequence_number++;
;;;11009          _setup.parameter_occurrence SET_TO 0;     /* initialize parameter buffer */
;;;11010          if ((line[0] IS 0) OR ((line[0] IS '/') AND (line[1] IS 0)))
;;;11011              *length SET_TO 0;
;;;11012          else
;;;11013              *length SET_TO strlen(line);
;;;11014  
;;;11015          return ((line[0] IS '/')? RS274NGC_EXECUTE_FINISH : RS274NGC_OK);
;;;11016      }
000078  e8bd87f0          POP      {r4-r10,pc}
                  |L107.124|
00007c  f04f0100          MOV      r1,#0                 ;10980
000080  4897              LDR      r0,|L107.736|
000082  f8c0114c          STR      r1,[r0,#0x14c]        ;10980
000086  4601              MOV      r1,r0                 ;10980
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;10980
00008c  f8d1214c          LDR      r2,[r1,#0x14c]        ;10980
000090  f1020201          ADD      r2,r2,#1              ;10980
000094  f8c1214c          STR      r2,[r1,#0x14c]        ;10980
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;10980
00009c  4a92              LDR      r2,|L107.744|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;10980
0000a2  4608              MOV      r0,r1                 ;10980
0000a4  498f              LDR      r1,|L107.740|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;10980
0000ae  488c              LDR      r0,|L107.736|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10980
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;10980
0000b8  4a8b              LDR      r2,|L107.744|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;10980
0000be  7001              STRB     r1,[r0,#0]            ;10980
0000c0  f04f0051          MOV      r0,#0x51              ;10980
0000c4  e7d8              B        |L107.120|
                  |L107.198|
0000c6  4628              MOV      r0,r5                 ;10982
0000c8  f7fffffe          BL       strlen
0000cc  28ff              CMP      r0,#0xff              ;10982
0000ce  d12d              BNE      |L107.300|
0000d0  bf00              NOP                            ;10984
                  |L107.210|
0000d2  4640              MOV      r0,r8                 ;10984
0000d4  f7fffffe          BL       fgetc
0000d8  280a              CMP      r0,#0xa               ;10984
0000da  d1fa              BNE      |L107.210|
0000dc  f04f0100          MOV      r1,#0                 ;10987
0000e0  487f              LDR      r0,|L107.736|
0000e2  f8c0114c          STR      r1,[r0,#0x14c]        ;10987
0000e6  4601              MOV      r1,r0                 ;10987
0000e8  f8d1314c          LDR      r3,[r1,#0x14c]        ;10987
0000ec  f8d1114c          LDR      r1,[r1,#0x14c]        ;10987
0000f0  f1010101          ADD      r1,r1,#1              ;10987
0000f4  4602              MOV      r2,r0                 ;10987
0000f6  f8c2114c          STR      r1,[r2,#0x14c]        ;10987
0000fa  eb030183          ADD      r1,r3,r3,LSL #2       ;10987
0000fe  4a7a              LDR      r2,|L107.744|
000100  eb021101          ADD      r1,r2,r1,LSL #4       ;10987
000104  4608              MOV      r0,r1                 ;10987
000106  4977              LDR      r1,|L107.740|
000108  f7fffffe          BL       strcpy
00010c  f04f0100          MOV      r1,#0                 ;10987
000110  e000              B        |L107.276|
                  |L107.274|
000112  e05f              B        |L107.468|
                  |L107.276|
000114  4872              LDR      r0,|L107.736|
000116  f8d0014c          LDR      r0,[r0,#0x14c]        ;10987
00011a  eb000080          ADD      r0,r0,r0,LSL #2       ;10987
00011e  4a72              LDR      r2,|L107.744|
000120  eb021000          ADD      r0,r2,r0,LSL #4       ;10987
000124  7001              STRB     r1,[r0,#0]            ;10987
000126  f04f0042          MOV      r0,#0x42              ;10987
00012a  e7a5              B        |L107.120|
                  |L107.300|
00012c  4628              MOV      r0,r5                 ;10990
00012e  f7fffffe          BL       strlen
000132  f1a00001          SUB      r0,r0,#1              ;10990
000136  4606              MOV      r6,r0                 ;10990
000138  e005              B        |L107.326|
                  |L107.314|
00013a  f04f0000          MOV      r0,#0                 ;10994
00013e  55a8              STRB     r0,[r5,r6]            ;10994
000140  f1a60001          SUB      r0,r6,#1              ;10992
000144  4606              MOV      r6,r0                 ;10992
                  |L107.326|
000146  2e00              CMP      r6,#0                 ;10991
000148  db07              BLT      |L107.346|
00014a  f7fffffe          BL       __rt_ctype_table
00014e  6800              LDR      r0,[r0,#0]            ;10991
000150  5da9              LDRB     r1,[r5,r6]            ;10991
000152  5c40              LDRB     r0,[r0,r1]            ;10991
000154  f0100f01          TST      r0,#1                 ;10991
000158  d1ef              BNE      |L107.314|
                  |L107.346|
00015a  4629              MOV      r1,r5                 ;10996
00015c  4620              MOV      r0,r4                 ;10996
00015e  f7fffffe          BL       strcpy
000162  4620              MOV      r0,r4                 ;10997
000164  f7fffffe          BL       close_and_downcase
000168  ea5f0a00          MOVS     r10,r0                ;10997
00016c  d025              BEQ      |L107.442|
00016e  485c              LDR      r0,|L107.736|
000170  f8d0014c          LDR      r0,[r0,#0x14c]        ;10997
000174  2831              CMP      r0,#0x31              ;10997
000176  da1e              BGE      |L107.438|
000178  4959              LDR      r1,|L107.736|
00017a  f8d1314c          LDR      r3,[r1,#0x14c]        ;10997
00017e  f8d1114c          LDR      r1,[r1,#0x14c]        ;10997
000182  1c49              ADDS     r1,r1,#1              ;10997
000184  4a56              LDR      r2,|L107.736|
000186  f8c2114c          STR      r1,[r2,#0x14c]        ;10997
00018a  eb030183          ADD      r1,r3,r3,LSL #2       ;10997
00018e  4a56              LDR      r2,|L107.744|
000190  eb021101          ADD      r1,r2,r1,LSL #4       ;10997
000194  4608              MOV      r0,r1                 ;10997
000196  4953              LDR      r1,|L107.740|
000198  f7fffffe          BL       strcpy
00019c  f04f0100          MOV      r1,#0                 ;10997
0001a0  484f              LDR      r0,|L107.736|
0001a2  f8d0014c          LDR      r0,[r0,#0x14c]        ;10997
0001a6  eb000080          ADD      r0,r0,r0,LSL #2       ;10997
0001aa  4a4f              LDR      r2,|L107.744|
0001ac  eb021000          ADD      r0,r2,r0,LSL #4       ;10997
0001b0  7001              STRB     r1,[r0,#0]            ;10997
0001b2  4650              MOV      r0,r10                ;10997
0001b4  e760              B        |L107.120|
                  |L107.438|
0001b6  4650              MOV      r0,r10                ;10997
0001b8  e75e              B        |L107.120|
                  |L107.442|
0001ba  7820              LDRB     r0,[r4,#0]            ;10998
0001bc  2825              CMP      r0,#0x25              ;10998
0001be  d167              BNE      |L107.656|
0001c0  7860              LDRB     r0,[r4,#1]            ;10998
0001c2  2800              CMP      r0,#0                 ;10998
0001c4  d164              BNE      |L107.656|
0001c6  4845              LDR      r0,|L107.732|
0001c8  f8d00168          LDR      r0,[r0,#0x168]        ;10998
0001cc  2801              CMP      r0,#1                 ;10998
0001ce  d15f              BNE      |L107.656|
0001d0  2003              MOVS     r0,#3                 ;10999
0001d2  e751              B        |L107.120|
                  |L107.468|
0001d4  4638              MOV      r0,r7                 ;11003
0001d6  f7fffffe          BL       strlen
0001da  28ff              CMP      r0,#0xff              ;11003
0001dc  d924              BLS      |L107.552|
0001de  f04f0100          MOV      r1,#0                 ;11003
0001e2  483f              LDR      r0,|L107.736|
0001e4  f8c0114c          STR      r1,[r0,#0x14c]        ;11003
0001e8  4601              MOV      r1,r0                 ;11003
0001ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;11003
0001ee  f8d1214c          LDR      r2,[r1,#0x14c]        ;11003
0001f2  f1020201          ADD      r2,r2,#1              ;11003
0001f6  f8c1214c          STR      r2,[r1,#0x14c]        ;11003
0001fa  eb030183          ADD      r1,r3,r3,LSL #2       ;11003
0001fe  4a3a              LDR      r2,|L107.744|
000200  eb021101          ADD      r1,r2,r1,LSL #4       ;11003
000204  4608              MOV      r0,r1                 ;11003
000206  4937              LDR      r1,|L107.740|
000208  f7fffffe          BL       strcpy
00020c  f04f0100          MOV      r1,#0                 ;11003
000210  4833              LDR      r0,|L107.736|
000212  f8d0014c          LDR      r0,[r0,#0x14c]        ;11003
000216  eb000080          ADD      r0,r0,r0,LSL #2       ;11003
00021a  4a33              LDR      r2,|L107.744|
00021c  eb021000          ADD      r0,r2,r0,LSL #4       ;11003
000220  7001              STRB     r1,[r0,#0]            ;11003
000222  f04f0042          MOV      r0,#0x42              ;11003
000226  e727              B        |L107.120|
                  |L107.552|
000228  4639              MOV      r1,r7                 ;11004
00022a  4628              MOV      r0,r5                 ;11004
00022c  f7fffffe          BL       strcpy
000230  4639              MOV      r1,r7                 ;11005
000232  4620              MOV      r0,r4                 ;11005
000234  f7fffffe          BL       strcpy
000238  4620              MOV      r0,r4                 ;11006
00023a  f7fffffe          BL       close_and_downcase
00023e  ea5f0a00          MOVS     r10,r0                ;11006
000242  d025              BEQ      |L107.656|
000244  4826              LDR      r0,|L107.736|
000246  f8d0014c          LDR      r0,[r0,#0x14c]        ;11006
00024a  2831              CMP      r0,#0x31              ;11006
00024c  da1e              BGE      |L107.652|
00024e  4924              LDR      r1,|L107.736|
000250  f8d1314c          LDR      r3,[r1,#0x14c]        ;11006
000254  f8d1114c          LDR      r1,[r1,#0x14c]        ;11006
000258  1c49              ADDS     r1,r1,#1              ;11006
00025a  4a21              LDR      r2,|L107.736|
00025c  f8c2114c          STR      r1,[r2,#0x14c]        ;11006
000260  eb030183          ADD      r1,r3,r3,LSL #2       ;11006
000264  4a20              LDR      r2,|L107.744|
000266  eb021101          ADD      r1,r2,r1,LSL #4       ;11006
00026a  4608              MOV      r0,r1                 ;11006
00026c  491d              LDR      r1,|L107.740|
00026e  f7fffffe          BL       strcpy
000272  f04f0100          MOV      r1,#0                 ;11006
000276  481a              LDR      r0,|L107.736|
000278  f8d0014c          LDR      r0,[r0,#0x14c]        ;11006
00027c  eb000080          ADD      r0,r0,r0,LSL #2       ;11006
000280  4a19              LDR      r2,|L107.744|
000282  eb021000          ADD      r0,r2,r0,LSL #4       ;11006
000286  7001              STRB     r1,[r0,#0]            ;11006
000288  4650              MOV      r0,r10                ;11006
00028a  e6f5              B        |L107.120|
                  |L107.652|
00028c  4650              MOV      r0,r10                ;11006
00028e  e6f3              B        |L107.120|
                  |L107.656|
000290  4812              LDR      r0,|L107.732|
000292  f8d00190          LDR      r0,[r0,#0x190]        ;11008
000296  f1000001          ADD      r0,r0,#1              ;11008
00029a  4910              LDR      r1,|L107.732|
00029c  f8c10190          STR      r0,[r1,#0x190]        ;11008
0002a0  f04f0100          MOV      r1,#0                 ;11009
0002a4  4811              LDR      r0,|L107.748|
0002a6  f8c01f08          STR      r1,[r0,#0xf08]        ;11009
0002aa  7820              LDRB     r0,[r4,#0]            ;11010
0002ac  b120              CBZ      r0,|L107.696|
0002ae  7820              LDRB     r0,[r4,#0]            ;11010
0002b0  282f              CMP      r0,#0x2f              ;11010
0002b2  d106              BNE      |L107.706|
0002b4  7860              LDRB     r0,[r4,#1]            ;11010
0002b6  b920              CBNZ     r0,|L107.706|
                  |L107.696|
0002b8  f04f0000          MOV      r0,#0                 ;11011
0002bc  f8c90000          STR      r0,[r9,#0]            ;11011
0002c0  e004              B        |L107.716|
                  |L107.706|
0002c2  4620              MOV      r0,r4                 ;11013
0002c4  f7fffffe          BL       strlen
0002c8  f8c90000          STR      r0,[r9,#0]            ;11013
                  |L107.716|
0002cc  7820              LDRB     r0,[r4,#0]            ;11015
0002ce  282f              CMP      r0,#0x2f              ;11015
0002d0  d101              BNE      |L107.726|
0002d2  2002              MOVS     r0,#2                 ;11015
0002d4  e6d0              B        |L107.120|
                  |L107.726|
0002d6  2000              MOVS     r0,#0                 ;11015
0002d8  e6ce              B        |L107.120|
;;;11017  
                          ENDP

0002da  0000              DCW      0x0000
                  |L107.732|
                          DCD      _setup+0xb000
                  |L107.736|
                          DCD      _setup+0xc000
                  |L107.740|
                          DCD      |symbol_number.531|
                  |L107.744|
                          DCD      _setup+0xb1ac
                  |L107.748|
                          DCD      _setup+0xa000

                          AREA ||i.read_unary||, CODE, READONLY, ALIGN=2

                  read_unary PROC
;;;11046  
;;;11047      static int read_unary(                        /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;11048      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;11049      int * counter,                                /* pointer to a counter for position on the line  */
;;;11050      double * double_ptr,                          /* pointer to double to be read                   */
;;;11051      double * parameters)                          /* array of system parameters                     */
;;;11052      {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;11053          static char name[] SET_TO "read_unary";
;;;11054          int operation;
;;;11055          int status;
;;;11056  
;;;11057          CHP(read_operation_unary (line, counter, &operation));
00000c  466a              MOV      r2,sp
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       read_operation_unary
000016  ea5f0800          MOVS     r8,r0
00001a  d027              BEQ      |L108.108|
00001c  4870              LDR      r0,|L108.480|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da20              BGE      |L108.104|
000026  496e              LDR      r1,|L108.480|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a6b              LDR      r2,|L108.480|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4967              LDR      r1,|L108.484|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4863              LDR      r0,|L108.480|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a63              LDR      r2,|L108.488|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  4640              MOV      r0,r8
                  |L108.100|
;;;11058          CHK((line[*counter] ISNT '['),
;;;11059              NCE_LEFT_BRACKET_MISSING_AFTER_UNARY_OPERATION_NAME);
;;;11060          CHP(read_real_expression (line, counter, double_ptr, parameters));
;;;11061  
;;;11062          if (operation IS ATAN)
;;;11063              CHP(read_atan(line, counter, double_ptr, parameters));
;;;11064          else
;;;11065              CHP(execute_unary(double_ptr, operation));
;;;11066          return RS274NGC_OK;
;;;11067      }
000064  e8bd83f8          POP      {r3-r9,pc}
                  |L108.104|
000068  4640              MOV      r0,r8                 ;11057
00006a  e7fb              B        |L108.100|
                  |L108.108|
00006c  6828              LDR      r0,[r5,#0]            ;11058
00006e  5c20              LDRB     r0,[r4,r0]            ;11058
000070  285b              CMP      r0,#0x5b              ;11058
000072  d025              BEQ      |L108.192|
000074  f04f0100          MOV      r1,#0                 ;11058
000078  4859              LDR      r0,|L108.480|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;11058
00007e  4601              MOV      r1,r0                 ;11058
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;11058
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;11058
000088  f1010101          ADD      r1,r1,#1              ;11058
00008c  4602              MOV      r2,r0                 ;11058
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;11058
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;11058
000096  4a54              LDR      r2,|L108.488|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;11058
00009c  4608              MOV      r0,r1                 ;11058
00009e  4951              LDR      r1,|L108.484|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;11058
0000a8  484d              LDR      r0,|L108.480|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;11058
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;11058
0000b2  4a4d              LDR      r2,|L108.488|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;11058
0000b8  7001              STRB     r1,[r0,#0]            ;11058
0000ba  f04f0061          MOV      r0,#0x61              ;11058
0000be  e7d1              B        |L108.100|
                  |L108.192|
0000c0  463b              MOV      r3,r7                 ;11060
0000c2  4632              MOV      r2,r6                 ;11060
0000c4  4629              MOV      r1,r5                 ;11060
0000c6  4620              MOV      r0,r4                 ;11060
0000c8  f7fffffe          BL       read_real_expression
0000cc  ea5f0800          MOVS     r8,r0                 ;11060
0000d0  d025              BEQ      |L108.286|
0000d2  4843              LDR      r0,|L108.480|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;11060
0000d8  2831              CMP      r0,#0x31              ;11060
0000da  da1e              BGE      |L108.282|
0000dc  4940              LDR      r1,|L108.480|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;11060
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;11060
0000e6  1c49              ADDS     r1,r1,#1              ;11060
0000e8  4a3d              LDR      r2,|L108.480|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;11060
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;11060
0000f2  4a3d              LDR      r2,|L108.488|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;11060
0000f8  4608              MOV      r0,r1                 ;11060
0000fa  493a              LDR      r1,|L108.484|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;11060
000104  4836              LDR      r0,|L108.480|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;11060
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;11060
00010e  4a36              LDR      r2,|L108.488|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;11060
000114  7001              STRB     r1,[r0,#0]            ;11060
000116  4640              MOV      r0,r8                 ;11060
000118  e7a4              B        |L108.100|
                  |L108.282|
00011a  4640              MOV      r0,r8                 ;11060
00011c  e7a2              B        |L108.100|
                  |L108.286|
00011e  9800              LDR      r0,[sp,#0]            ;11062
000120  2804              CMP      r0,#4                 ;11062
000122  d12e              BNE      |L108.386|
000124  463b              MOV      r3,r7                 ;11063
000126  4632              MOV      r2,r6                 ;11063
000128  4629              MOV      r1,r5                 ;11063
00012a  4620              MOV      r0,r4                 ;11063
00012c  f7fffffe          BL       read_atan
000130  ea5f0800          MOVS     r8,r0                 ;11063
000134  d052              BEQ      |L108.476|
000136  482a              LDR      r0,|L108.480|
000138  f8d0014c          LDR      r0,[r0,#0x14c]        ;11063
00013c  2831              CMP      r0,#0x31              ;11063
00013e  da1e              BGE      |L108.382|
000140  4927              LDR      r1,|L108.480|
000142  f8d1314c          LDR      r3,[r1,#0x14c]        ;11063
000146  f8d1114c          LDR      r1,[r1,#0x14c]        ;11063
00014a  1c49              ADDS     r1,r1,#1              ;11063
00014c  4a24              LDR      r2,|L108.480|
00014e  f8c2114c          STR      r1,[r2,#0x14c]        ;11063
000152  eb030183          ADD      r1,r3,r3,LSL #2       ;11063
000156  4a24              LDR      r2,|L108.488|
000158  eb021101          ADD      r1,r2,r1,LSL #4       ;11063
00015c  4608              MOV      r0,r1                 ;11063
00015e  4921              LDR      r1,|L108.484|
000160  f7fffffe          BL       strcpy
000164  f04f0100          MOV      r1,#0                 ;11063
000168  481d              LDR      r0,|L108.480|
00016a  f8d0014c          LDR      r0,[r0,#0x14c]        ;11063
00016e  eb000080          ADD      r0,r0,r0,LSL #2       ;11063
000172  4a1d              LDR      r2,|L108.488|
000174  eb021000          ADD      r0,r2,r0,LSL #4       ;11063
000178  7001              STRB     r1,[r0,#0]            ;11063
00017a  4640              MOV      r0,r8                 ;11063
00017c  e772              B        |L108.100|
                  |L108.382|
00017e  4640              MOV      r0,r8                 ;11063
000180  e770              B        |L108.100|
                  |L108.386|
000182  4630              MOV      r0,r6                 ;11065
000184  9900              LDR      r1,[sp,#0]            ;11065
000186  f7fffffe          BL       execute_unary
00018a  ea5f0800          MOVS     r8,r0                 ;11065
00018e  d025              BEQ      |L108.476|
000190  4813              LDR      r0,|L108.480|
000192  f8d0014c          LDR      r0,[r0,#0x14c]        ;11065
000196  2831              CMP      r0,#0x31              ;11065
000198  da1e              BGE      |L108.472|
00019a  4911              LDR      r1,|L108.480|
00019c  f8d1314c          LDR      r3,[r1,#0x14c]        ;11065
0001a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11065
0001a4  1c49              ADDS     r1,r1,#1              ;11065
0001a6  4a0e              LDR      r2,|L108.480|
0001a8  f8c2114c          STR      r1,[r2,#0x14c]        ;11065
0001ac  eb030183          ADD      r1,r3,r3,LSL #2       ;11065
0001b0  4a0d              LDR      r2,|L108.488|
0001b2  eb021101          ADD      r1,r2,r1,LSL #4       ;11065
0001b6  4608              MOV      r0,r1                 ;11065
0001b8  490a              LDR      r1,|L108.484|
0001ba  f7fffffe          BL       strcpy
0001be  f04f0100          MOV      r1,#0                 ;11065
0001c2  4807              LDR      r0,|L108.480|
0001c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;11065
0001c8  eb000080          ADD      r0,r0,r0,LSL #2       ;11065
0001cc  4a06              LDR      r2,|L108.488|
0001ce  eb021000          ADD      r0,r2,r0,LSL #4       ;11065
0001d2  7001              STRB     r1,[r0,#0]            ;11065
0001d4  4640              MOV      r0,r8                 ;11065
0001d6  e745              B        |L108.100|
                  |L108.472|
0001d8  4640              MOV      r0,r8                 ;11065
0001da  e743              B        |L108.100|
                  |L108.476|
0001dc  2000              MOVS     r0,#0                 ;11066
0001de  e741              B        |L108.100|
;;;11068  
                          ENDP

                  |L108.480|
                          DCD      _setup+0xc000
                  |L108.484|
                          DCD      |symbol_number.532|
                  |L108.488|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_x||, CODE, READONLY, ALIGN=2

                  read_x PROC
;;;11101  
;;;11102      static int read_x(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;11103      char * line,                                  /* string: line of RS274 code being processed     */
;;;11104      int * counter,                                /* pointer to a counter for position on the line  */
;;;11105      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;11106      double * parameters)                          /* array of system parameters                     */
;;;11107      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;11108          static char name[] SET_TO "read_x";
;;;11109          double value;
;;;11110          int status;
;;;11111  
;;;11112          CHK((line[*counter] ISNT 'x'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2878              CMP      r0,#0x78
000012  d027              BEQ      |L109.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L109.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L109.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L109.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L109.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L109.96|
;;;11113          *counter SET_TO (*counter + 1);
;;;11114          CHK((block->x_flag ISNT OFF), NCE_MULTIPLE_X_WORDS_ON_ONE_LINE);
;;;11115          CHP(read_real_value(line, counter, &value, parameters));
;;;11116          block->x_flag SET_TO ON;
;;;11117          block->x_number SET_TO value;
;;;11118          return RS274NGC_OK;
;;;11119      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L109.100|
000064  6820              LDR      r0,[r4,#0]            ;11113
000066  f1000001          ADD      r0,r0,#1              ;11113
00006a  6020              STR      r0,[r4,#0]            ;11113
00006c  f8d501dc          LDR      r0,[r5,#0x1dc]        ;11114
000070  b328              CBZ      r0,|L109.190|
000072  f04f0100          MOV      r1,#0                 ;11114
000076  482f              LDR      r0,|L109.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;11114
00007c  4601              MOV      r1,r0                 ;11114
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11114
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;11114
000086  f1010101          ADD      r1,r1,#1              ;11114
00008a  4602              MOV      r2,r0                 ;11114
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;11114
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;11114
000094  4a29              LDR      r2,|L109.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;11114
00009a  4608              MOV      r0,r1                 ;11114
00009c  4926              LDR      r1,|L109.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;11114
0000a6  4823              LDR      r0,|L109.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;11114
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;11114
0000b0  4a22              LDR      r2,|L109.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;11114
0000b6  7001              STRB     r1,[r0,#0]            ;11114
0000b8  f04f0075          MOV      r0,#0x75              ;11114
0000bc  e7d0              B        |L109.96|
                  |L109.190|
0000be  463b              MOV      r3,r7                 ;11115
0000c0  466a              MOV      r2,sp                 ;11115
0000c2  4621              MOV      r1,r4                 ;11115
0000c4  4630              MOV      r0,r6                 ;11115
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;11115
0000ce  d025              BEQ      |L109.284|
0000d0  4818              LDR      r0,|L109.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11115
0000d6  2831              CMP      r0,#0x31              ;11115
0000d8  da1e              BGE      |L109.280|
0000da  4916              LDR      r1,|L109.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;11115
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11115
0000e4  1c49              ADDS     r1,r1,#1              ;11115
0000e6  4a13              LDR      r2,|L109.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;11115
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;11115
0000f0  4a12              LDR      r2,|L109.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;11115
0000f6  4608              MOV      r0,r1                 ;11115
0000f8  490f              LDR      r1,|L109.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;11115
000102  480c              LDR      r0,|L109.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11115
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;11115
00010c  4a0b              LDR      r2,|L109.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;11115
000112  7001              STRB     r1,[r0,#0]            ;11115
000114  4640              MOV      r0,r8                 ;11115
000116  e7a3              B        |L109.96|
                  |L109.280|
000118  4640              MOV      r0,r8                 ;11115
00011a  e7a1              B        |L109.96|
                  |L109.284|
00011c  f04f0001          MOV      r0,#1                 ;11116
000120  f8c501dc          STR      r0,[r5,#0x1dc]        ;11116
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;11117
000128  f50572f0          ADD      r2,r5,#0x1e0          ;11117
00012c  c203              STM      r2!,{r0,r1}           ;11117
00012e  f04f0000          MOV      r0,#0                 ;11118
000132  e795              B        |L109.96|
;;;11120  
                          ENDP

                  |L109.308|
                          DCD      _setup+0xc000
                  |L109.312|
                          DCD      |symbol_number.533|
                  |L109.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_y||, CODE, READONLY, ALIGN=2

                  read_y PROC
;;;11153  
;;;11154      static int read_y(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;11155      char * line,                                  /* string: line of RS274 code being processed     */
;;;11156      int * counter,                                /* pointer to a counter for position on the line  */
;;;11157      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;11158      double * parameters)                          /* array of system parameters                     */
;;;11159      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;11160          static char name[] SET_TO "read_y";
;;;11161          double value;
;;;11162          int status;
;;;11163  
;;;11164          CHK((line[*counter] ISNT 'y'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2879              CMP      r0,#0x79
000012  d027              BEQ      |L110.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L110.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L110.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L110.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L110.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L110.96|
;;;11165          *counter SET_TO (*counter + 1);
;;;11166          CHK((block->y_flag ISNT OFF), NCE_MULTIPLE_Y_WORDS_ON_ONE_LINE);
;;;11167          CHP(read_real_value(line, counter, &value, parameters));
;;;11168          block->y_flag SET_TO ON;
;;;11169          block->y_number SET_TO value;
;;;11170          return RS274NGC_OK;
;;;11171      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L110.100|
000064  6820              LDR      r0,[r4,#0]            ;11165
000066  f1000001          ADD      r0,r0,#1              ;11165
00006a  6020              STR      r0,[r4,#0]            ;11165
00006c  f8d501e8          LDR      r0,[r5,#0x1e8]        ;11166
000070  b328              CBZ      r0,|L110.190|
000072  f04f0100          MOV      r1,#0                 ;11166
000076  482f              LDR      r0,|L110.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;11166
00007c  4601              MOV      r1,r0                 ;11166
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11166
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;11166
000086  f1010101          ADD      r1,r1,#1              ;11166
00008a  4602              MOV      r2,r0                 ;11166
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;11166
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;11166
000094  4a29              LDR      r2,|L110.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;11166
00009a  4608              MOV      r0,r1                 ;11166
00009c  4926              LDR      r1,|L110.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;11166
0000a6  4823              LDR      r0,|L110.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;11166
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;11166
0000b0  4a22              LDR      r2,|L110.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;11166
0000b6  7001              STRB     r1,[r0,#0]            ;11166
0000b8  f04f0076          MOV      r0,#0x76              ;11166
0000bc  e7d0              B        |L110.96|
                  |L110.190|
0000be  463b              MOV      r3,r7                 ;11167
0000c0  466a              MOV      r2,sp                 ;11167
0000c2  4621              MOV      r1,r4                 ;11167
0000c4  4630              MOV      r0,r6                 ;11167
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;11167
0000ce  d025              BEQ      |L110.284|
0000d0  4818              LDR      r0,|L110.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11167
0000d6  2831              CMP      r0,#0x31              ;11167
0000d8  da1e              BGE      |L110.280|
0000da  4916              LDR      r1,|L110.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;11167
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11167
0000e4  1c49              ADDS     r1,r1,#1              ;11167
0000e6  4a13              LDR      r2,|L110.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;11167
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;11167
0000f0  4a12              LDR      r2,|L110.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;11167
0000f6  4608              MOV      r0,r1                 ;11167
0000f8  490f              LDR      r1,|L110.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;11167
000102  480c              LDR      r0,|L110.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11167
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;11167
00010c  4a0b              LDR      r2,|L110.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;11167
000112  7001              STRB     r1,[r0,#0]            ;11167
000114  4640              MOV      r0,r8                 ;11167
000116  e7a3              B        |L110.96|
                  |L110.280|
000118  4640              MOV      r0,r8                 ;11167
00011a  e7a1              B        |L110.96|
                  |L110.284|
00011c  f04f0001          MOV      r0,#1                 ;11168
000120  f8c501e8          STR      r0,[r5,#0x1e8]        ;11168
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;11169
000128  f50572f8          ADD      r2,r5,#0x1f0          ;11169
00012c  c203              STM      r2!,{r0,r1}           ;11169
00012e  f04f0000          MOV      r0,#0                 ;11170
000132  e795              B        |L110.96|
;;;11172  
                          ENDP

                  |L110.308|
                          DCD      _setup+0xc000
                  |L110.312|
                          DCD      |symbol_number.534|
                  |L110.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_z||, CODE, READONLY, ALIGN=2

                  read_z PROC
;;;11205  
;;;11206      static int read_z(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;11207      char * line,                                  /* string: line of RS274 code being processed     */
;;;11208      int * counter,                                /* pointer to a counter for position on the line  */
;;;11209      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;11210      double * parameters)                          /* array of system parameters                     */
;;;11211      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;11212          static char name[] SET_TO "read_z";
;;;11213          double value;
;;;11214          int status;
;;;11215  
;;;11216          CHK((line[*counter] ISNT 'z'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  287a              CMP      r0,#0x7a
000012  d027              BEQ      |L111.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L111.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L111.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L111.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L111.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L111.96|
;;;11217          *counter SET_TO (*counter + 1);
;;;11218          CHK((block->z_flag ISNT OFF), NCE_MULTIPLE_Z_WORDS_ON_ONE_LINE);
;;;11219          CHP(read_real_value(line, counter, &value, parameters));
;;;11220          block->z_flag SET_TO ON;
;;;11221          block->z_number SET_TO value;
;;;11222          return RS274NGC_OK;
;;;11223      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L111.100|
000064  6820              LDR      r0,[r4,#0]            ;11217
000066  f1000001          ADD      r0,r0,#1              ;11217
00006a  6020              STR      r0,[r4,#0]            ;11217
00006c  f8d501f8          LDR      r0,[r5,#0x1f8]        ;11218
000070  b328              CBZ      r0,|L111.190|
000072  f04f0100          MOV      r1,#0                 ;11218
000076  482f              LDR      r0,|L111.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;11218
00007c  4601              MOV      r1,r0                 ;11218
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11218
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;11218
000086  f1010101          ADD      r1,r1,#1              ;11218
00008a  4602              MOV      r2,r0                 ;11218
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;11218
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;11218
000094  4a29              LDR      r2,|L111.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;11218
00009a  4608              MOV      r0,r1                 ;11218
00009c  4926              LDR      r1,|L111.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;11218
0000a6  4823              LDR      r0,|L111.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;11218
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;11218
0000b0  4a22              LDR      r2,|L111.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;11218
0000b6  7001              STRB     r1,[r0,#0]            ;11218
0000b8  f04f0077          MOV      r0,#0x77              ;11218
0000bc  e7d0              B        |L111.96|
                  |L111.190|
0000be  463b              MOV      r3,r7                 ;11219
0000c0  466a              MOV      r2,sp                 ;11219
0000c2  4621              MOV      r1,r4                 ;11219
0000c4  4630              MOV      r0,r6                 ;11219
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;11219
0000ce  d025              BEQ      |L111.284|
0000d0  4818              LDR      r0,|L111.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11219
0000d6  2831              CMP      r0,#0x31              ;11219
0000d8  da1e              BGE      |L111.280|
0000da  4916              LDR      r1,|L111.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;11219
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11219
0000e4  1c49              ADDS     r1,r1,#1              ;11219
0000e6  4a13              LDR      r2,|L111.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;11219
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;11219
0000f0  4a12              LDR      r2,|L111.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;11219
0000f6  4608              MOV      r0,r1                 ;11219
0000f8  490f              LDR      r1,|L111.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;11219
000102  480c              LDR      r0,|L111.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11219
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;11219
00010c  4a0b              LDR      r2,|L111.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;11219
000112  7001              STRB     r1,[r0,#0]            ;11219
000114  4640              MOV      r0,r8                 ;11219
000116  e7a3              B        |L111.96|
                  |L111.280|
000118  4640              MOV      r0,r8                 ;11219
00011a  e7a1              B        |L111.96|
                  |L111.284|
00011c  f04f0001          MOV      r0,#1                 ;11220
000120  f8c501f8          STR      r0,[r5,#0x1f8]        ;11220
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;11221
000128  f5057200          ADD      r2,r5,#0x200          ;11221
00012c  c203              STM      r2!,{r0,r1}           ;11221
00012e  f04f0000          MOV      r0,#0                 ;11222
000132  e795              B        |L111.96|
;;;11224  
                          ENDP

                  |L111.308|
                          DCD      _setup+0xc000
                  |L111.312|
                          DCD      |symbol_number.535|
                  |L111.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.rs274ngc_active_g_codes||, CODE, READONLY, ALIGN=2

                  rs274ngc_active_g_codes PROC
;;;12246  
;;;12247      void rs274ngc_active_g_codes(                 /* ARGUMENTS                   */
000000  4601              MOV      r1,r0
;;;12248      int * codes)                                  /* array of codes to copy into */
;;;12249      {
;;;12250          int n;
;;;12251  
;;;12252          for (n SET_TO 0; n < RS274NGC_ACTIVE_G_CODES; n++)
000002  f04f0200          MOV      r2,#0
000006  4610              MOV      r0,r2
000008  e007              B        |L112.26|
                  |L112.10|
;;;12253          {
;;;12254              codes[n] SET_TO _setup.active_g_codes[n];
00000a  4a05              LDR      r2,|L112.32|
00000c  f8522020          LDR      r2,[r2,r0,LSL #2]
000010  f8412020          STR      r2,[r1,r0,LSL #2]
000014  f1000201          ADD      r2,r0,#1              ;12252
000018  4610              MOV      r0,r2                 ;12252
                  |L112.26|
00001a  280c              CMP      r0,#0xc               ;12252
00001c  dbf5              BLT      |L112.10|
;;;12255          }
;;;12256      }
00001e  4770              BX       lr
;;;12257  
                          ENDP

                  |L112.32|
                          DCD      _setup

                          AREA ||i.rs274ngc_active_m_codes||, CODE, READONLY, ALIGN=2

                  rs274ngc_active_m_codes PROC
;;;12271  
;;;12272      void rs274ngc_active_m_codes(                 /* ARGUMENTS                   */
000000  4601              MOV      r1,r0
;;;12273      int * codes)                                  /* array of codes to copy into */
;;;12274      {
;;;12275          int n;
;;;12276  
;;;12277          for (n SET_TO 0; n < RS274NGC_ACTIVE_M_CODES; n++)
000002  f04f0200          MOV      r2,#0
000006  4610              MOV      r0,r2
000008  e007              B        |L113.26|
                  |L113.10|
;;;12278          {
;;;12279              codes[n] SET_TO _setup.active_m_codes[n];
00000a  4a05              LDR      r2,|L113.32|
00000c  f8522020          LDR      r2,[r2,r0,LSL #2]
000010  f8412020          STR      r2,[r1,r0,LSL #2]
000014  f1000201          ADD      r2,r0,#1              ;12277
000018  4610              MOV      r0,r2                 ;12277
                  |L113.26|
00001a  2807              CMP      r0,#7                 ;12277
00001c  dbf5              BLT      |L113.10|
;;;12280          }
;;;12281      }
00001e  4770              BX       lr
;;;12282  
                          ENDP

                  |L113.32|
                          DCD      _setup+0x30

                          AREA ||i.rs274ngc_active_settings||, CODE, READONLY, ALIGN=2

                  rs274ngc_active_settings PROC
;;;12296  
;;;12297      void rs274ngc_active_settings(                /* ARGUMENTS                      */
000000  b510              PUSH     {r4,lr}
;;;12298      double * settings)                            /* array of settings to copy into */
;;;12299      {
000002  4601              MOV      r1,r0
;;;12300          int n;
;;;12301  
;;;12302          for (n SET_TO 0; n < RS274NGC_ACTIVE_SETTINGS; n++)
000004  f04f0200          MOV      r2,#0
000008  4610              MOV      r0,r2
00000a  e009              B        |L114.32|
                  |L114.12|
;;;12303          {
;;;12304              settings[n] SET_TO _setup.active_settings[n];
00000c  4a06              LDR      r2,|L114.40|
00000e  eb0203c0          ADD      r3,r2,r0,LSL #3
000012  cb0c              LDM      r3,{r2,r3}
000014  eb0104c0          ADD      r4,r1,r0,LSL #3
000018  c40c              STM      r4!,{r2,r3}
00001a  f1000201          ADD      r2,r0,#1              ;12302
00001e  4610              MOV      r0,r2                 ;12302
                  |L114.32|
000020  2803              CMP      r0,#3                 ;12302
000022  dbf3              BLT      |L114.12|
;;;12305          }
;;;12306      }
000024  bd10              POP      {r4,pc}
;;;12307  
                          ENDP

000026  0000              DCW      0x0000
                  |L114.40|
                          DCD      _setup+0x50

                          AREA ||i.rs274ngc_close||, CODE, READONLY, ALIGN=2

                  rs274ngc_close PROC
;;;11456  
;;;11457      int rs274ngc_close()
000000  b510              PUSH     {r4,lr}
;;;11458      {
;;;11459          if (_setup.file_pointer ISNT NULL)
000002  4809              LDR      r0,|L115.40|
000004  f8d00510          LDR      r0,[r0,#0x510]  ; _setup
000008  b150              CBZ      r0,|L115.32|
;;;11460          {
;;;11461              fclose(_setup.file_pointer);
00000a  4907              LDR      r1,|L115.40|
00000c  f8d11510          LDR      r1,[r1,#0x510]  ; _setup
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       fclose
;;;11462              _setup.file_pointer SET_TO NULL;
000016  f04f0000          MOV      r0,#0
00001a  4903              LDR      r1,|L115.40|
00001c  f8c10510          STR      r0,[r1,#0x510]  ; _setup
                  |L115.32|
;;;11463          }
;;;11464          rs274ngc_reset();
000020  f7fffffe          BL       rs274ngc_reset
;;;11465  
;;;11466          return RS274NGC_OK;
000024  2000              MOVS     r0,#0
;;;11467      }
000026  bd10              POP      {r4,pc}
;;;11468  
                          ENDP

                  |L115.40|
                          DCD      _setup

                          AREA ||i.rs274ngc_error_text||, CODE, READONLY, ALIGN=2

                  rs274ngc_error_text PROC
;;;12325     */
;;;12326      void rs274ngc_error_text(                     /* ARGUMENTS                            */
000000  b570              PUSH     {r4-r6,lr}
;;;12327      int error_code,                               /* code number of error                 */
;;;12328      char * error_text,                            /* char array to copy error text into   */
;;;12329      unsigned int max_size)                                 /* maximum number of characters to copy */
;;;12330      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;12331          if (((error_code >= RS274NGC_MIN_ERROR) AND
000008  2c03              CMP      r4,#3
00000a  db11              BLT      |L116.48|
;;;12332              (error_code <= RS274NGC_MAX_ERROR)) AND
00000c  2cc5              CMP      r4,#0xc5
00000e  dc0f              BGT      |L116.48|
;;;12333              (strlen(_rs274ngc_errors[error_code]) < max_size))
000010  4909              LDR      r1,|L116.56|
000012  f8511024          LDR      r1,[r1,r4,LSL #2]
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       strlen
00001c  42b0              CMP      r0,r6
00001e  d207              BCS      |L116.48|
;;;12334          {
;;;12335              strcpy(error_text, _rs274ngc_errors[error_code]);
000020  4805              LDR      r0,|L116.56|
000022  f8500024          LDR      r0,[r0,r4,LSL #2]
000026  4601              MOV      r1,r0
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       strcpy
00002e  e002              B        |L116.54|
                  |L116.48|
;;;12336          }
;;;12337          else
;;;12338              error_text[0] SET_TO 0;
000030  f04f0000          MOV      r0,#0
000034  7028              STRB     r0,[r5,#0]
                  |L116.54|
;;;12339      }
000036  bd70              POP      {r4-r6,pc}
;;;12340  
                          ENDP

                  |L116.56|
                          DCD      _rs274ngc_errors

                          AREA ||i.rs274ngc_execute||, CODE, READONLY, ALIGN=2

                  rs274ngc_execute PROC
;;;11490  
;;;11491      int rs274ngc_execute()                        /* NO ARGUMENTS */
000000  b570              PUSH     {r4-r6,lr}
;;;11492      {
;;;11493          static char name[] SET_TO "rs274ngc_execute";
;;;11494          int status;
;;;11495          int n;
;;;11496  
;;;11497          for (n SET_TO 0; n < _setup.parameter_occurrence; n++)
000002  f04f0000          MOV      r0,#0
000006  4605              MOV      r5,r0
000008  e00f              B        |L117.42|
                  |L117.10|
;;;11498          {                                         // copy parameter settings from parameter buffer into parameter table
;;;11499              _setup.parameters[_setup.parameter_numbers[n]]
00000a  482e              LDR      r0,|L117.196|
00000c  eb0000c5          ADD      r0,r0,r5,LSL #3
000010  c806              LDM      r0!,{r1,r2}
000012  482c              LDR      r0,|L117.196|
000014  f1a000cc          SUB      r0,r0,#0xcc
000018  f8503025          LDR      r3,[r0,r5,LSL #2]
00001c  482a              LDR      r0,|L117.200|
00001e  eb0000c3          ADD      r0,r0,r3,LSL #3
000022  c006              STM      r0!,{r1,r2}
000024  f1050001          ADD      r0,r5,#1              ;11497
000028  4605              MOV      r5,r0                 ;11497
                  |L117.42|
00002a  4828              LDR      r0,|L117.204|
00002c  f8d00f08          LDR      r0,[r0,#0xf08]        ;11497
000030  42a8              CMP      r0,r5                 ;11497
000032  dcea              BGT      |L117.10|
;;;11500                  SET_TO _setup.parameter_values[n];
;;;11501          }
;;;11502          if (_setup.line_length ISNT 0)            /* line not blank */
000034  4826              LDR      r0,|L117.208|
000036  f8d00520          LDR      r0,[r0,#0x520]  ; _setup
00003a  2800              CMP      r0,#0
00003c  d03e              BEQ      |L117.188|
;;;11503          {
;;;11504              status SET_TO execute_block (&(_setup.block1), &_setup);
00003e  4924              LDR      r1,|L117.208|
000040  f1010080          ADD      r0,r1,#0x80
000044  f7fffffe          BL       execute_block
000048  4604              MOV      r4,r0
;;;11505              write_g_codes(&(_setup.block1), &_setup);
00004a  4921              LDR      r1,|L117.208|
00004c  f1010080          ADD      r0,r1,#0x80
000050  f7fffffe          BL       write_g_codes
;;;11506              write_m_codes(&(_setup.block1), &_setup);
000054  491e              LDR      r1,|L117.208|
000056  f1010080          ADD      r0,r1,#0x80
00005a  f7fffffe          BL       write_m_codes
;;;11507              write_settings(&_setup);
00005e  481c              LDR      r0,|L117.208|
000060  f7fffffe          BL       write_settings
;;;11508              if ((status ISNT RS274NGC_OK) AND
000064  b364              CBZ      r4,|L117.192|
;;;11509                  (status ISNT RS274NGC_EXECUTE_FINISH) AND
000066  2c02              CMP      r4,#2
000068  d02a              BEQ      |L117.192|
;;;11510                  (status ISNT RS274NGC_EXIT))
00006a  2c01              CMP      r4,#1
00006c  d028              BEQ      |L117.192|
;;;11511                  ERP(status);
00006e  4819              LDR      r0,|L117.212|
000070  f8d0014c          LDR      r0,[r0,#0x14c]
000074  2831              CMP      r0,#0x31
000076  da1f              BGE      |L117.184|
000078  4916              LDR      r1,|L117.212|
00007a  f8d1314c          LDR      r3,[r1,#0x14c]
00007e  f8d1114c          LDR      r1,[r1,#0x14c]
000082  1c49              ADDS     r1,r1,#1
000084  4a13              LDR      r2,|L117.212|
000086  f8c2114c          STR      r1,[r2,#0x14c]
00008a  eb030183          ADD      r1,r3,r3,LSL #2
00008e  f6a26254          SUB      r2,r2,#0xe54
000092  eb021101          ADD      r1,r2,r1,LSL #4
000096  4608              MOV      r0,r1
000098  490f              LDR      r1,|L117.216|
00009a  f7fffffe          BL       strcpy
00009e  f04f0100          MOV      r1,#0
0000a2  480c              LDR      r0,|L117.212|
0000a4  f8d0014c          LDR      r0,[r0,#0x14c]
0000a8  eb000080          ADD      r0,r0,r0,LSL #2
0000ac  4a0b              LDR      r2,|L117.220|
0000ae  eb021000          ADD      r0,r2,r0,LSL #4
0000b2  7001              STRB     r1,[r0,#0]
0000b4  4620              MOV      r0,r4
                  |L117.182|
;;;11512          }
;;;11513          else                                      /* blank line is OK */
;;;11514              status SET_TO RS274NGC_OK;
;;;11515          return status;
;;;11516      }
0000b6  bd70              POP      {r4-r6,pc}
                  |L117.184|
0000b8  4620              MOV      r0,r4                 ;11511
0000ba  e7fc              B        |L117.182|
                  |L117.188|
0000bc  f04f0400          MOV      r4,#0                 ;11514
                  |L117.192|
0000c0  4620              MOV      r0,r4                 ;11515
0000c2  e7f8              B        |L117.182|
;;;11517  
                          ENDP

                  |L117.196|
                          DCD      _setup+0xafd8
                  |L117.200|
                          DCD      _setup+0x648
                  |L117.204|
                          DCD      _setup+0xa000
                  |L117.208|
                          DCD      _setup
                  |L117.212|
                          DCD      _setup+0xc000
                  |L117.216|
                          DCD      |symbol_number.537|
                  |L117.220|
                          DCD      _setup+0xb1ac

                          AREA ||i.rs274ngc_exit||, CODE, READONLY, ALIGN=2

                  rs274ngc_exit PROC
;;;11534  
;;;11535      int rs274ngc_exit()                           /* NO ARGUMENTS */
000000  b500              PUSH     {lr}
;;;11536      {
000002  b0c1              SUB      sp,sp,#0x104
;;;11537          char file_name[RS274NGC_TEXT_SIZE];
;;;11538  
;;;11539          GET_EXTERNAL_PARAMETER_FILE_NAME(file_name, (RS274NGC_TEXT_SIZE - 1));
000004  21ff              MOVS     r1,#0xff
000006  a801              ADD      r0,sp,#4
000008  f7fffffe          BL       GET_EXTERNAL_PARAMETER_FILE_NAME
;;;11540          rs274ngc_save_parameters
00000c  f89d1004          LDRB     r1,[sp,#4]
000010  b909              CBNZ     r1,|L118.22|
;;;11541              (((file_name[0] IS 0) ? RS274NGC_PARAMETER_FILE_NAME_DEFAULT : file_name),
000012  a106              ADR      r1,|L118.44|
000014  e000              B        |L118.24|
                  |L118.22|
000016  a901              ADD      r1,sp,#4
                  |L118.24|
000018  4608              MOV      r0,r1
00001a  4908              LDR      r1,|L118.60|
00001c  f7fffffe          BL       rs274ngc_save_parameters
;;;11542              _setup.parameters);
;;;11543          rs274ngc_reset();
000020  f7fffffe          BL       rs274ngc_reset
;;;11544  
;;;11545          return RS274NGC_OK;
000024  2000              MOVS     r0,#0
;;;11546      }
000026  b041              ADD      sp,sp,#0x104
000028  bd00              POP      {pc}
;;;11547  
                          ENDP

00002a  0000              DCW      0x0000
                  |L118.44|
00002c  72733237          DCB      "rs274ngc.var",0
000030  346e6763
000034  2e766172
000038  00      
000039  00                DCB      0
00003a  00                DCB      0
00003b  00                DCB      0
                  |L118.60|
                          DCD      _setup+0x648

                          AREA ||i.rs274ngc_file_name||, CODE, READONLY, ALIGN=2

                  rs274ngc_file_name PROC
;;;12356  
;;;12357      void rs274ngc_file_name(                      /* ARGUMENTS                            */
000000  b570              PUSH     {r4-r6,lr}
;;;12358      char * file_name,                             /* string: to copy file name into       */
;;;12359      unsigned int max_size)                                 /* maximum number of characters to copy */
;;;12360      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;12361          if (strlen(_setup.filename) < max_size)
000006  4807              LDR      r0,|L119.36|
000008  f7fffffe          BL       strlen
00000c  42a8              CMP      r0,r5
00000e  d204              BCS      |L119.26|
;;;12362              strcpy(file_name, _setup.filename);
000010  4904              LDR      r1,|L119.36|
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       strcpy
000018  e002              B        |L119.32|
                  |L119.26|
;;;12363          else
;;;12364              file_name[0] SET_TO 0;
00001a  f04f0000          MOV      r0,#0
00001e  7020              STRB     r0,[r4,#0]
                  |L119.32|
;;;12365      }
000020  bd70              POP      {r4-r6,pc}
;;;12366  
                          ENDP

000022  0000              DCW      0x0000
                  |L119.36|
                          DCD      _setup+0x410

                          AREA ||i.rs274ngc_init||, CODE, READONLY, ALIGN=2

                  rs274ngc_init PROC
;;;11574  
;;;11575      int rs274ngc_init()                           /* NO ARGUMENTS */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;11576      {
000004  b0c7              SUB      sp,sp,#0x11c
;;;11577          static char name[] SET_TO "rs274ngc_init";
;;;11578          int k;                                    // starting index in parameters of origin offsets
;;;11579          int status;
;;;11580          char filename[RS274NGC_TEXT_SIZE];
;;;11581          double * pars;                            // short name for _setup.parameters
;;;11582  
;;;11583          INIT_CANON();
000006  f7fffffe          BL       INIT_CANON
;;;11584          _setup.length_units SET_TO GET_EXTERNAL_LENGTH_UNIT_TYPE();
00000a  f7fffffe          BL       GET_EXTERNAL_LENGTH_UNIT_TYPE
00000e  49b1              LDR      r1,|L120.724|
000010  f8c1051c          STR      r0,[r1,#0x51c]  ; _setup
;;;11585          USE_LENGTH_UNITS(_setup.length_units);
000014  f8d1151c          LDR      r1,[r1,#0x51c]  ; _setup
000018  4608              MOV      r0,r1
00001a  f7fffffe          BL       USE_LENGTH_UNITS
;;;11586          GET_EXTERNAL_PARAMETER_FILE_NAME(filename, RS274NGC_TEXT_SIZE);
00001e  f44f7180          MOV      r1,#0x100
000022  a806              ADD      r0,sp,#0x18
000024  f7fffffe          BL       GET_EXTERNAL_PARAMETER_FILE_NAME
;;;11587          if (filename[0] IS 0)
000028  f89d0018          LDRB     r0,[sp,#0x18]
00002c  b918              CBNZ     r0,|L120.54|
;;;11588              strcpy(filename, RS274NGC_PARAMETER_FILE_NAME_DEFAULT);
00002e  a1aa              ADR      r1,|L120.728|
000030  a806              ADD      r0,sp,#0x18
000032  f7fffffe          BL       strcpy
                  |L120.54|
;;;11589          CHP(rs274ngc_restore_parameters(filename));
000036  a806              ADD      r0,sp,#0x18
000038  f7fffffe          BL       rs274ngc_restore_parameters
00003c  9046              STR      r0,[sp,#0x118]
00003e  b340              CBZ      r0,|L120.146|
000040  48a9              LDR      r0,|L120.744|
000042  f8d0014c          LDR      r0,[r0,#0x14c]
000046  2831              CMP      r0,#0x31
000048  da21              BGE      |L120.142|
00004a  49a7              LDR      r1,|L120.744|
00004c  f8d1314c          LDR      r3,[r1,#0x14c]
000050  f8d1114c          LDR      r1,[r1,#0x14c]
000054  1c49              ADDS     r1,r1,#1
000056  4aa4              LDR      r2,|L120.744|
000058  f8c2114c          STR      r1,[r2,#0x14c]
00005c  eb030183          ADD      r1,r3,r3,LSL #2
000060  f6a26254          SUB      r2,r2,#0xe54
000064  eb021101          ADD      r1,r2,r1,LSL #4
000068  4608              MOV      r0,r1
00006a  49a0              LDR      r1,|L120.748|
00006c  f7fffffe          BL       strcpy
000070  f04f0100          MOV      r1,#0
000074  489c              LDR      r0,|L120.744|
000076  f8d0014c          LDR      r0,[r0,#0x14c]
00007a  eb000080          ADD      r0,r0,r0,LSL #2
00007e  4a9c              LDR      r2,|L120.752|
000080  eb021000          ADD      r0,r2,r0,LSL #4
000084  7001              STRB     r1,[r0,#0]
000086  9846              LDR      r0,[sp,#0x118]
                  |L120.136|
;;;11590          pars SET_TO _setup.parameters;
;;;11591          _setup.origin_index SET_TO (int)(pars[5220] + 0.0001);
;;;11592          CHK(((_setup.origin_index < 1) OR (_setup.origin_index > 9)),
;;;11593              NCE_COORDINATE_SYSTEM_INDEX_PARAMETER_5220_OUT_OF_RANGE);
;;;11594          k SET_TO (5200 + (_setup.origin_index * 20));
;;;11595          SET_ORIGIN_OFFSETS((pars[k + 1] + pars[5211]),
;;;11596              (pars[k + 2] + pars[5212]),
;;;11597              (pars[k + 3] + pars[5213])
;;;11598      #ifdef AA
;;;11599              ,            (pars[k + 4] + pars[5214])
;;;11600      #else
;;;11601      #ifdef ALL_AXES
;;;11602              , 0
;;;11603      #endif
;;;11604      #endif
;;;11605      #ifdef BB
;;;11606              ,            (pars[k + 5] + pars[5215])
;;;11607      #else
;;;11608      #ifdef ALL_AXES
;;;11609              , 0
;;;11610      #endif
;;;11611      #endif
;;;11612      #ifdef CC
;;;11613              ,            (pars[k + 6] + pars[5216])
;;;11614      #else
;;;11615      #ifdef ALL_AXES
;;;11616              , 0
;;;11617      #endif
;;;11618      #endif
;;;11619              );
;;;11620          SET_FEED_REFERENCE(CANON_XYZ);
;;;11621  #ifdef AA
;;;11622          _setup.AA_axis_offset SET_TO pars[5214];  /*AA*/
;;;11623  #endif
;;;11624     //_setup.Aa_current set in rs274ngc_synch
;;;11625  #ifdef AA
;;;11626     /*AA*/
;;;11627          _setup.AA_origin_offset SET_TO pars[k + 4];
;;;11628  #endif
;;;11629     //_setup.active_g_codes initialized below
;;;11630     //_setup.active_m_codes initialized below
;;;11631     //_setup.active_settings initialized below
;;;11632          _setup.axis_offset_x SET_TO pars[5211];
;;;11633          _setup.axis_offset_y SET_TO pars[5212];
;;;11634          _setup.axis_offset_z SET_TO pars[5213];
;;;11635  #ifdef BB
;;;11636          _setup.BB_axis_offset SET_TO pars[5215];  /*BB*/
;;;11637  #endif
;;;11638     //_setup.Bb_current set in rs274ngc_synch
;;;11639  #ifdef BB
;;;11640     /*BB*/
;;;11641          _setup.BB_origin_offset SET_TO pars[k + 5];
;;;11642  #endif
;;;11643     //_setup.block1 does not need initialization
;;;11644          _setup.blocktext[0] SET_TO 0;
;;;11645  #ifdef CC
;;;11646          _setup.CC_axis_offset SET_TO pars[5216];  /*CC*/
;;;11647  #endif
;;;11648     //_setup.Cc_current set in rs274ngc_synch
;;;11649  #ifdef CC
;;;11650     /*CC*/
;;;11651          _setup.CC_origin_offset SET_TO pars[k + 6];
;;;11652  #endif
;;;11653     //_setup.current_slot set in rs274ngc_synch
;;;11654     //_setup.current_x set in rs274ngc_synch
;;;11655     //_setup.current_y set in rs274ngc_synch
;;;11656     //_setup.current_z set in rs274ngc_synch
;;;11657          _setup.cutter_comp_side SET_TO OFF;
;;;11658     //_setup.cycle values do not need initialization
;;;11659          _setup.distance_mode SET_TO MODE_ABSOLUTE;
;;;11660          _setup.feed_mode SET_TO UNITS_PER_MINUTE;
;;;11661          _setup.feed_override SET_TO ON;
;;;11662     //_setup.feed_rate set in rs274ngc_synch
;;;11663          _setup.filename[0] SET_TO 0;
;;;11664          _setup.file_pointer SET_TO NULL;
;;;11665     //_setup.flood set in rs274ngc_synch
;;;11666          _setup.length_offset_index SET_TO 1;
;;;11667     //_setup.length_units set in rs274ngc_synch
;;;11668          _setup.line_length SET_TO 0;
;;;11669          _setup.linetext[0] SET_TO 0;
;;;11670     //_setup.mist set in rs274ngc_synch
;;;11671          _setup.motion_mode SET_TO G_80;
;;;11672     //_setup.origin_index set above
;;;11673          _setup.origin_offset_x SET_TO pars[k + 1];
;;;11674          _setup.origin_offset_y SET_TO pars[k + 2];
;;;11675          _setup.origin_offset_z SET_TO pars[k + 3];
;;;11676     //_setup.parameters set above
;;;11677     //_setup.parameter_occurrence does not need initialization
;;;11678     //_setup.parameter_numbers does not need initialization
;;;11679     //_setup.parameter_values does not need initialization
;;;11680     //_setup.percent_flag does not need initialization
;;;11681     //_setup.plane set in rs274ngc_synch
;;;11682          _setup.probe_flag SET_TO OFF;
;;;11683          _setup.program_x SET_TO UNKNOWN;          /* for cutter comp */
;;;11684          _setup.program_y SET_TO UNKNOWN;          /* for cutter comp */
;;;11685     //_setup.retract_mode does not need initialization
;;;11686     //_setup.selected_tool_slot set in rs274ngc_synch
;;;11687          _setup.sequence_number SET_TO 0;          /*DOES THIS NEED TO BE AT TOP? */
;;;11688     //_setup.speed set in rs274ngc_synch
;;;11689          _setup.speed_feed_mode SET_TO CANON_INDEPENDENT;
;;;11690          _setup.speed_override SET_TO ON;
;;;11691     //_setup.spindle_turning set in rs274ngc_synch
;;;11692     //_setup.stack does not need initialization
;;;11693     //_setup.stack_index does not need initialization
;;;11694          _setup.tool_length_offset SET_TO 0.0;
;;;11695     //_setup.tool_max set in rs274ngc_synch
;;;11696     //_setup.tool_table set in rs274ngc_synch
;;;11697          _setup.tool_table_index SET_TO 1;
;;;11698     //_setup.traverse_rate set in rs274ngc_synch
;;;11699  
;;;11700          write_g_codes((block_pointer)NULL, &_setup);
;;;11701          write_m_codes((block_pointer)NULL, &_setup);
;;;11702          write_settings(&_setup);
;;;11703  
;;;11704     // Synch rest of settings to external world
;;;11705          rs274ngc_synch();
;;;11706  
;;;11707          return RS274NGC_OK;
;;;11708      }
000088  b047              ADD      sp,sp,#0x11c
00008a  e8bd8ff0          POP      {r4-r11,pc}
                  |L120.142|
00008e  9846              LDR      r0,[sp,#0x118]        ;11589
000090  e7fa              B        |L120.136|
                  |L120.146|
000092  f8df8260          LDR      r8,|L120.756|
000096  f5084120          ADD      r1,r8,#0xa000         ;11591
00009a  f5017148          ADD      r1,r1,#0x320          ;11591
00009e  c903              LDM      r1,{r0,r1}            ;11591
0000a0  4604              MOV      r4,r0                 ;11591
0000a2  4a95              LDR      r2,|L120.760|
0000a4  4b95              LDR      r3,|L120.764|
0000a6  f7fffffe          BL       __aeabi_dadd
0000aa  4606              MOV      r6,r0                 ;11591
0000ac  f7fffffe          BL       __aeabi_d2iz
0000b0  4988              LDR      r1,|L120.724|
0000b2  f8c1062c          STR      r0,[r1,#0x62c]        ;11591  ; _setup
0000b6  4608              MOV      r0,r1                 ;11592
0000b8  f8d0062c          LDR      r0,[r0,#0x62c]        ;11592  ; _setup
0000bc  2801              CMP      r0,#1                 ;11592
0000be  db04              BLT      |L120.202|
0000c0  4608              MOV      r0,r1                 ;11592
0000c2  f8d0062c          LDR      r0,[r0,#0x62c]        ;11592  ; _setup
0000c6  2809              CMP      r0,#9                 ;11592
0000c8  dd25              BLE      |L120.278|
                  |L120.202|
0000ca  f04f0100          MOV      r1,#0                 ;11592
0000ce  4886              LDR      r0,|L120.744|
0000d0  f8c0114c          STR      r1,[r0,#0x14c]        ;11592
0000d4  4601              MOV      r1,r0                 ;11592
0000d6  f8d1314c          LDR      r3,[r1,#0x14c]        ;11592
0000da  f8d1114c          LDR      r1,[r1,#0x14c]        ;11592
0000de  f1010101          ADD      r1,r1,#1              ;11592
0000e2  4602              MOV      r2,r0                 ;11592
0000e4  f8c2114c          STR      r1,[r2,#0x14c]        ;11592
0000e8  eb030183          ADD      r1,r3,r3,LSL #2       ;11592
0000ec  4a80              LDR      r2,|L120.752|
0000ee  eb021101          ADD      r1,r2,r1,LSL #4       ;11592
0000f2  4608              MOV      r0,r1                 ;11592
0000f4  497d              LDR      r1,|L120.748|
0000f6  f7fffffe          BL       strcpy
0000fa  f04f0100          MOV      r1,#0                 ;11592
0000fe  487a              LDR      r0,|L120.744|
000100  f8d0014c          LDR      r0,[r0,#0x14c]        ;11592
000104  eb000080          ADD      r0,r0,r0,LSL #2       ;11592
000108  4a79              LDR      r2,|L120.752|
00010a  eb021000          ADD      r0,r2,r0,LSL #4       ;11592
00010e  7001              STRB     r1,[r0,#0]            ;11592
000110  f04f0044          MOV      r0,#0x44              ;11592
000114  e7b8              B        |L120.136|
                  |L120.278|
000116  486f              LDR      r0,|L120.724|
000118  f8d0062c          LDR      r0,[r0,#0x62c]        ;11594  ; _setup
00011c  eb000080          ADD      r0,r0,r0,LSL #2       ;11594
000120  f2414150          MOV      r1,#0x1450            ;11594
000124  eb010980          ADD      r9,r1,r0,LSL #2       ;11594
000128  f5084120          ADD      r1,r8,#0xa000         ;11595
00012c  f501713a          ADD      r1,r1,#0x2e8          ;11595
000130  c903              LDM      r1,{r0,r1}            ;11595
000132  4604              MOV      r4,r0                 ;11595
000134  460d              MOV      r5,r1                 ;11595
000136  f1090003          ADD      r0,r9,#3              ;11595
00013a  eb0801c0          ADD      r1,r8,r0,LSL #3       ;11595
00013e  c903              LDM      r1,{r0,r1}            ;11595
000140  4606              MOV      r6,r0                 ;11595
000142  4622              MOV      r2,r4                 ;11595
000144  462b              MOV      r3,r5                 ;11595
000146  f7fffffe          BL       __aeabi_dadd
00014a  4682              MOV      r10,r0                ;11595
00014c  468b              MOV      r11,r1                ;11595
00014e  f5084020          ADD      r0,r8,#0xa000         ;11595
000152  f8d012e0          LDR      r1,[r0,#0x2e0]        ;11595
000156  f8d002e4          LDR      r0,[r0,#0x2e4]        ;11595
00015a  460c              MOV      r4,r1                 ;11595
00015c  4605              MOV      r5,r0                 ;11595
00015e  f1090002          ADD      r0,r9,#2              ;11595
000162  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11595
000166  e9d01000          LDRD     r1,r0,[r0,#0]         ;11595
00016a  460e              MOV      r6,r1                 ;11595
00016c  4607              MOV      r7,r0                 ;11595
00016e  4622              MOV      r2,r4                 ;11595
000170  462b              MOV      r3,r5                 ;11595
000172  4630              MOV      r0,r6                 ;11595
000174  4639              MOV      r1,r7                 ;11595
000176  f7fffffe          BL       __aeabi_dadd
00017a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;11595
00017e  f5084020          ADD      r0,r8,#0xa000         ;11595
000182  f8d012d8          LDR      r1,[r0,#0x2d8]        ;11595
000186  f8d002dc          LDR      r0,[r0,#0x2dc]        ;11595
00018a  460c              MOV      r4,r1                 ;11595
00018c  4605              MOV      r5,r0                 ;11595
00018e  f1090001          ADD      r0,r9,#1              ;11595
000192  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11595
000196  e9d01000          LDRD     r1,r0,[r0,#0]         ;11595
00019a  460e              MOV      r6,r1                 ;11595
00019c  4607              MOV      r7,r0                 ;11595
00019e  4622              MOV      r2,r4                 ;11595
0001a0  462b              MOV      r3,r5                 ;11595
0001a2  4630              MOV      r0,r6                 ;11595
0001a4  4639              MOV      r1,r7                 ;11595
0001a6  f7fffffe          BL       __aeabi_dadd
0001aa  e9cdab00          STRD     r10,r11,[sp,#0]       ;11595
0001ae  e9cd0102          STRD     r0,r1,[sp,#8]         ;11595
0001b2  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;11595
0001b6  f7fffffe          BL       SET_ORIGIN_OFFSETS
0001ba  2002              MOVS     r0,#2                 ;11620
0001bc  f7fffffe          BL       SET_FEED_REFERENCE
0001c0  f5084120          ADD      r1,r8,#0xa000         ;11632
0001c4  f5017136          ADD      r1,r1,#0x2d8          ;11632
0001c8  c903              LDM      r1,{r0,r1}            ;11632
0001ca  4a42              LDR      r2,|L120.724|
0001cc  e9c2011a          STRD     r0,r1,[r2,#0x68]      ;11632
0001d0  f5084020          ADD      r0,r8,#0xa000         ;11633
0001d4  f8d012e0          LDR      r1,[r0,#0x2e0]        ;11633
0001d8  f8d002e4          LDR      r0,[r0,#0x2e4]        ;11633
0001dc  e9c2101c          STRD     r1,r0,[r2,#0x70]      ;11633
0001e0  f5084020          ADD      r0,r8,#0xa000         ;11634
0001e4  f8d012e8          LDR      r1,[r0,#0x2e8]        ;11634
0001e8  f8d002ec          LDR      r0,[r0,#0x2ec]        ;11634
0001ec  e9c2101e          STRD     r1,r0,[r2,#0x78]      ;11634
0001f0  f04f0000          MOV      r0,#0                 ;11644
0001f4  4611              MOV      r1,r2                 ;11644
0001f6  f8810288          STRB     r0,[r1,#0x288]        ;11644
0001fa  f8c103b0          STR      r0,[r1,#0x3b0]        ;11657  ; _setup
0001fe  f88103f8          STRB     r0,[r1,#0x3f8]        ;11659
000202  f8c103fc          STR      r0,[r1,#0x3fc]        ;11660  ; _setup
000206  f04f0001          MOV      r0,#1                 ;11661
00020a  f8c10400          STR      r0,[r1,#0x400]        ;11661  ; _setup
00020e  f04f0000          MOV      r0,#0                 ;11663
000212  f8810410          STRB     r0,[r1,#0x410]        ;11663
000216  f8c10510          STR      r0,[r1,#0x510]        ;11664  ; _setup
00021a  f04f0001          MOV      r0,#1                 ;11666
00021e  f8c10518          STR      r0,[r1,#0x518]        ;11666  ; _setup
000222  f04f0000          MOV      r0,#0                 ;11668
000226  f8c10520          STR      r0,[r1,#0x520]        ;11668  ; _setup
00022a  f8810524          STRB     r0,[r1,#0x524]        ;11669
00022e  f44f7048          MOV      r0,#0x320             ;11671
000232  f8c10628          STR      r0,[r1,#0x628]        ;11671  ; _setup
000236  f1090001          ADD      r0,r9,#1              ;11673
00023a  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11673
00023e  e9d01000          LDRD     r1,r0,[r0,#0]         ;11673
000242  f8c21630          STR      r1,[r2,#0x630]        ;11673  ; _setup
000246  f8c20634          STR      r0,[r2,#0x634]        ;11673  ; _setup
00024a  f1090002          ADD      r0,r9,#2              ;11674
00024e  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11674
000252  e9d01000          LDRD     r1,r0,[r0,#0]         ;11674
000256  f8c21638          STR      r1,[r2,#0x638]        ;11674  ; _setup
00025a  f8c2063c          STR      r0,[r2,#0x63c]        ;11674  ; _setup
00025e  f1090003          ADD      r0,r9,#3              ;11675
000262  eb0801c0          ADD      r1,r8,r0,LSL #3       ;11675
000266  c903              LDM      r1,{r0,r1}            ;11675
000268  f50262c8          ADD      r2,r2,#0x640          ;11675
00026c  c203              STM      r2!,{r0,r1}           ;11675
00026e  f04f0100          MOV      r1,#0                 ;11682
000272  4823              LDR      r0,|L120.768|
000274  f8c01170          STR      r1,[r0,#0x170]        ;11682
000278  4a22              LDR      r2,|L120.772|
00027a  4923              LDR      r1,|L120.776|
00027c  f8c02178          STR      r2,[r0,#0x178]        ;11683
000280  f8c0117c          STR      r1,[r0,#0x17c]        ;11683
000284  f8c02180          STR      r2,[r0,#0x180]        ;11684
000288  f8c01184          STR      r1,[r0,#0x184]        ;11684
00028c  f04f0100          MOV      r1,#0                 ;11687
000290  f8c01190          STR      r1,[r0,#0x190]        ;11687
000294  f04f0102          MOV      r1,#2                 ;11689
000298  f8c011a0          STR      r1,[r0,#0x1a0]        ;11689
00029c  f04f0101          MOV      r1,#1                 ;11690
0002a0  f8c011a4          STR      r1,[r0,#0x1a4]        ;11690
0002a4  f04f0200          MOV      r2,#0                 ;11694
0002a8  480f              LDR      r0,|L120.744|
0002aa  f8c02150          STR      r2,[r0,#0x150]        ;11694
0002ae  f8c02154          STR      r2,[r0,#0x154]        ;11694
0002b2  f8c01d78          STR      r1,[r0,#0xd78]        ;11697
0002b6  4907              LDR      r1,|L120.724|
0002b8  4610              MOV      r0,r2                 ;11700
0002ba  f7fffffe          BL       write_g_codes
0002be  4905              LDR      r1,|L120.724|
0002c0  2000              MOVS     r0,#0                 ;11701
0002c2  f7fffffe          BL       write_m_codes
0002c6  4803              LDR      r0,|L120.724|
0002c8  f7fffffe          BL       write_settings
0002cc  f7fffffe          BL       rs274ngc_synch
0002d0  2000              MOVS     r0,#0                 ;11707
0002d2  e6d9              B        |L120.136|
;;;11709  
                          ENDP

                  |L120.724|
                          DCD      _setup
                  |L120.728|
0002d8  72733237          DCB      "rs274ngc.var",0
0002dc  346e6763
0002e0  2e766172
0002e4  00      
0002e5  00                DCB      0
0002e6  00                DCB      0
0002e7  00                DCB      0
                  |L120.744|
                          DCD      _setup+0xc000
                  |L120.748|
                          DCD      |symbol_number.538|
                  |L120.752|
                          DCD      _setup+0xb1ac
                  |L120.756|
                          DCD      _setup+0x648
                  |L120.760|
                          DCD      0xeb1c432d
                  |L120.764|
                          DCD      0x3f1a36e2
                  |L120.768|
                          DCD      _setup+0xb000
                  |L120.772|
                          DCD      0x0c924223
                  |L120.776|
                          DCD      0x3bc79ca1

                          AREA ||i.rs274ngc_line_length||, CODE, READONLY, ALIGN=2

                  rs274ngc_line_length PROC
;;;12378  
;;;12379      int rs274ngc_line_length()
000000  4801              LDR      r0,|L121.8|
;;;12380      {
;;;12381          return _setup.line_length;
000002  f8d00520          LDR      r0,[r0,#0x520]  ; _setup
;;;12382      }
000006  4770              BX       lr
;;;12383  
                          ENDP

                  |L121.8|
                          DCD      _setup

                          AREA ||i.rs274ngc_line_text||, CODE, READONLY, ALIGN=2

                  rs274ngc_line_text PROC
;;;12399  
;;;12400      void rs274ngc_line_text(                      /* ARGUMENTS                            */
000000  b510              PUSH     {r4,lr}
;;;12401      char * line_text,                             /* string: to copy line into            */
;;;12402      int max_size)                                 /* maximum number of characters to copy */
;;;12403      {
000002  4602              MOV      r2,r0
;;;12404          int n;
;;;12405          char * the_text;
;;;12406  
;;;12407          the_text SET_TO _setup.linetext;
000004  4c0b              LDR      r4,|L122.52|
000006  4623              MOV      r3,r4
;;;12408          for (n SET_TO 0; n < (max_size - 1); n++)
000008  f04f0400          MOV      r4,#0
00000c  4620              MOV      r0,r4
00000e  e008              B        |L122.34|
                  |L122.16|
;;;12409          {
;;;12410              if (the_text[n] ISNT 0)
000010  5c1c              LDRB     r4,[r3,r0]
000012  b114              CBZ      r4,|L122.26|
;;;12411                  line_text[n] SET_TO the_text[n];
000014  5c1c              LDRB     r4,[r3,r0]
000016  5414              STRB     r4,[r2,r0]
000018  e000              B        |L122.28|
                  |L122.26|
;;;12412              else
;;;12413                  break;
00001a  e005              B        |L122.40|
                  |L122.28|
00001c  f1000401          ADD      r4,r0,#1              ;12408
000020  4620              MOV      r0,r4                 ;12408
                  |L122.34|
000022  1e4c              SUBS     r4,r1,#1              ;12408
000024  4284              CMP      r4,r0                 ;12408
000026  dcf3              BGT      |L122.16|
                  |L122.40|
000028  bf00              NOP      
;;;12414          }
;;;12415          line_text[n] SET_TO 0;
00002a  f04f0400          MOV      r4,#0
00002e  5414              STRB     r4,[r2,r0]
;;;12416      }
000030  bd10              POP      {r4,pc}
;;;12417  
                          ENDP

000032  0000              DCW      0x0000
                  |L122.52|
                          DCD      _setup+0x524

                          AREA ||i.rs274ngc_load_tool_table||, CODE, READONLY, ALIGN=2

                  rs274ngc_load_tool_table PROC
;;;11733  
;;;11734      int rs274ngc_load_tool_table()                /* NO ARGUMENTS */
000000  f04f0100          MOV      r1,#0
;;;11735      {
;;;11736  //        static char name[] SET_TO "rs274ngc_load_tool_table";
;;;11737  //        int n;
;;;11738  //
;;;11739  //        CHK((_setup.tool_max > CANON_TOOL_MAX), NCE_TOOL_MAX_TOO_LARGE);
;;;11740  //        for (n SET_TO 0; n <= _setup.tool_max; n++)
;;;11741  //        {
;;;11742  //            _setup.tool_table[n] SET_TO GET_EXTERNAL_TOOL_TABLE(n);
;;;11743  //        }
;;;11744  //        for(; n <= CANON_TOOL_MAX; n++)
;;;11745  //        {
;;;11746  //            _setup.tool_table[n].id SET_TO 0;
;;;11747  //            _setup.tool_table[n].length SET_TO 0;
;;;11748  //            _setup.tool_table[n].diameter SET_TO 0;
;;;11749  //        }
;;;11750  		_setup.tool_table[0].id SET_TO 0;
000004  4805              LDR      r0,|L123.28|
000006  f8c01160          STR      r1,[r0,#0x160]
;;;11751  		_setup.tool_table[0].length SET_TO 0;
00000a  f50072b0          ADD      r2,r0,#0x160
00000e  6091              STR      r1,[r2,#8]
000010  60d1              STR      r1,[r2,#0xc]
;;;11752  		_setup.tool_table[0].diameter SET_TO 0;
000012  6111              STR      r1,[r2,#0x10]
000014  6151              STR      r1,[r2,#0x14]
;;;11753          return RS274NGC_OK;
000016  4608              MOV      r0,r1
;;;11754      }
000018  4770              BX       lr
;;;11755  
                          ENDP

00001a  0000              DCW      0x0000
                  |L123.28|
                          DCD      _setup+0xc000

                          AREA ||i.rs274ngc_open||, CODE, READONLY, ALIGN=2

                  rs274ngc_open PROC
;;;11801  
;;;11802      int rs274ngc_open(                            /* ARGUMENTS                                     */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;11803      const char * filename)                        /* string: the name of the input NC-program file */
;;;11804      {
000004  4607              MOV      r7,r0
;;;11805          static char name[] SET_TO "rs274ngc_open";
;;;11806          char * line;
;;;11807          int index;
;;;11808          int length;
;;;11809  
;;;11810          CHK((_setup.file_pointer ISNT NULL), NCE_A_FILE_IS_ALREADY_OPEN);
000006  48a4              LDR      r0,|L124.664|
000008  f8d00510          LDR      r0,[r0,#0x510]  ; _setup
00000c  b338              CBZ      r0,|L124.94|
00000e  f04f0100          MOV      r1,#0
000012  48a2              LDR      r0,|L124.668|
000014  f8c0114c          STR      r1,[r0,#0x14c]
000018  4601              MOV      r1,r0
00001a  f8d1314c          LDR      r3,[r1,#0x14c]
00001e  f8d1114c          LDR      r1,[r1,#0x14c]
000022  f1010101          ADD      r1,r1,#1
000026  4602              MOV      r2,r0
000028  f8c2114c          STR      r1,[r2,#0x14c]
00002c  eb030183          ADD      r1,r3,r3,LSL #2
000030  f6a06254          SUB      r2,r0,#0xe54
000034  eb021101          ADD      r1,r2,r1,LSL #4
000038  4608              MOV      r0,r1
00003a  4999              LDR      r1,|L124.672|
00003c  f7fffffe          BL       strcpy
000040  f04f0100          MOV      r1,#0
000044  4895              LDR      r0,|L124.668|
000046  f8d0014c          LDR      r0,[r0,#0x14c]
00004a  eb000080          ADD      r0,r0,r0,LSL #2
00004e  4a95              LDR      r2,|L124.676|
000050  eb021000          ADD      r0,r2,r0,LSL #4
000054  7001              STRB     r1,[r0,#0]
000056  f04f0004          MOV      r0,#4
                  |L124.90|
;;;11811          CHK((strlen(filename) > (RS274NGC_TEXT_SIZE - 1)), NCE_FILE_NAME_TOO_LONG);
;;;11812          _setup.file_pointer SET_TO fopen(filename, "r");
;;;11813          CHK((_setup.file_pointer IS NULL), NCE_UNABLE_TO_OPEN_FILE);
;;;11814          line SET_TO _setup.linetext;
;;;11815          for(index SET_TO -1; index IS -1;)        /* skip blank lines */
;;;11816          {
;;;11817              CHK((fgets(line, RS274NGC_TEXT_SIZE, _setup.file_pointer) IS NULL),
;;;11818                  NCE_FILE_ENDED_WITH_NO_PERCENT_SIGN);
;;;11819              length SET_TO strlen(line);
;;;11820              if (length IS (RS274NGC_TEXT_SIZE - 1))
;;;11821              {                                     // line is too long. need to finish reading the line to recover
;;;11822     // could look for EOF
;;;11823                  for(;fgetc(_setup.file_pointer) ISNT '\n';);
;;;11824                  ERM(NCE_COMMAND_TOO_LONG);
;;;11825              }
;;;11826              for(index SET_TO (length -1);         // index set on last char
;;;11827                  (index >= 0) AND (isspace(line[index]));
;;;11828                  index--);
;;;11829          }
;;;11830          if(line[index] IS '%')
;;;11831          {
;;;11832              for(index--; (index >= 0) AND (isspace(line[index])); index--);
;;;11833              if (index IS -1)
;;;11834                  _setup.percent_flag SET_TO ON;
;;;11835              else
;;;11836              {
;;;11837                  fseek(_setup.file_pointer, 0, SEEK_SET);
;;;11838                  _setup.percent_flag SET_TO OFF;
;;;11839              }
;;;11840          }
;;;11841          else
;;;11842          {
;;;11843              fseek(_setup.file_pointer, 0, SEEK_SET);
;;;11844              _setup.percent_flag SET_TO OFF;
;;;11845          }
;;;11846          strcpy(_setup.filename, filename);
;;;11847          _setup.sequence_number SET_TO 0;
;;;11848          rs274ngc_reset();
;;;11849          return RS274NGC_OK;
;;;11850      }
00005a  e8bd81f0          POP      {r4-r8,pc}
                  |L124.94|
00005e  4638              MOV      r0,r7                 ;11811
000060  f7fffffe          BL       strlen
000064  28ff              CMP      r0,#0xff              ;11811
000066  d925              BLS      |L124.180|
000068  f04f0100          MOV      r1,#0                 ;11811
00006c  488b              LDR      r0,|L124.668|
00006e  f8c0114c          STR      r1,[r0,#0x14c]        ;11811
000072  4601              MOV      r1,r0                 ;11811
000074  f8d1314c          LDR      r3,[r1,#0x14c]        ;11811
000078  f8d1114c          LDR      r1,[r1,#0x14c]        ;11811
00007c  f1010101          ADD      r1,r1,#1              ;11811
000080  4602              MOV      r2,r0                 ;11811
000082  f8c2114c          STR      r1,[r2,#0x14c]        ;11811
000086  eb030183          ADD      r1,r3,r3,LSL #2       ;11811
00008a  4a86              LDR      r2,|L124.676|
00008c  eb021101          ADD      r1,r2,r1,LSL #4       ;11811
000090  4608              MOV      r0,r1                 ;11811
000092  4983              LDR      r1,|L124.672|
000094  f7fffffe          BL       strcpy
000098  f04f0100          MOV      r1,#0                 ;11811
00009c  487f              LDR      r0,|L124.668|
00009e  f8d0014c          LDR      r0,[r0,#0x14c]        ;11811
0000a2  eb000080          ADD      r0,r0,r0,LSL #2       ;11811
0000a6  4a7f              LDR      r2,|L124.676|
0000a8  eb021000          ADD      r0,r2,r0,LSL #4       ;11811
0000ac  7001              STRB     r1,[r0,#0]            ;11811
0000ae  f04f0052          MOV      r0,#0x52              ;11811
0000b2  e7d2              B        |L124.90|
                  |L124.180|
0000b4  a17c              ADR      r1,|L124.680|
0000b6  4638              MOV      r0,r7                 ;11812
0000b8  f7fffffe          BL       fopen
0000bc  4976              LDR      r1,|L124.664|
0000be  f8c10510          STR      r0,[r1,#0x510]        ;11812  ; _setup
0000c2  4608              MOV      r0,r1                 ;11813
0000c4  f8d00510          LDR      r0,[r0,#0x510]        ;11813  ; _setup
0000c8  bb28              CBNZ     r0,|L124.278|
0000ca  f04f0100          MOV      r1,#0                 ;11813
0000ce  4873              LDR      r0,|L124.668|
0000d0  f8c0114c          STR      r1,[r0,#0x14c]        ;11813
0000d4  4601              MOV      r1,r0                 ;11813
0000d6  f8d1314c          LDR      r3,[r1,#0x14c]        ;11813
0000da  f8d1114c          LDR      r1,[r1,#0x14c]        ;11813
0000de  f1010101          ADD      r1,r1,#1              ;11813
0000e2  4602              MOV      r2,r0                 ;11813
0000e4  f8c2114c          STR      r1,[r2,#0x14c]        ;11813
0000e8  eb030183          ADD      r1,r3,r3,LSL #2       ;11813
0000ec  4a6d              LDR      r2,|L124.676|
0000ee  eb021101          ADD      r1,r2,r1,LSL #4       ;11813
0000f2  4608              MOV      r0,r1                 ;11813
0000f4  496a              LDR      r1,|L124.672|
0000f6  f7fffffe          BL       strcpy
0000fa  f04f0100          MOV      r1,#0                 ;11813
0000fe  4867              LDR      r0,|L124.668|
000100  f8d0014c          LDR      r0,[r0,#0x14c]        ;11813
000104  eb000080          ADD      r0,r0,r0,LSL #2       ;11813
000108  4a66              LDR      r2,|L124.676|
00010a  eb021000          ADD      r0,r2,r0,LSL #4       ;11813
00010e  7001              STRB     r1,[r0,#0]            ;11813
000110  f04f00aa          MOV      r0,#0xaa              ;11813
000114  e7a1              B        |L124.90|
                  |L124.278|
000116  4d65              LDR      r5,|L124.684|
000118  f04f34ff          MOV      r4,#0xffffffff        ;11815
00011c  e075              B        |L124.522|
                  |L124.286|
00011e  485e              LDR      r0,|L124.664|
000120  f8d00510          LDR      r0,[r0,#0x510]        ;11817  ; _setup
000124  4602              MOV      r2,r0                 ;11817
000126  f44f7180          MOV      r1,#0x100             ;11817
00012a  4628              MOV      r0,r5                 ;11817
00012c  f7fffffe          BL       fgets
000130  bb28              CBNZ     r0,|L124.382|
000132  f04f0100          MOV      r1,#0                 ;11817
000136  4859              LDR      r0,|L124.668|
000138  f8c0114c          STR      r1,[r0,#0x14c]        ;11817
00013c  4601              MOV      r1,r0                 ;11817
00013e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11817
000142  f8d1114c          LDR      r1,[r1,#0x14c]        ;11817
000146  f1010101          ADD      r1,r1,#1              ;11817
00014a  4602              MOV      r2,r0                 ;11817
00014c  f8c2114c          STR      r1,[r2,#0x14c]        ;11817
000150  eb030183          ADD      r1,r3,r3,LSL #2       ;11817
000154  4a53              LDR      r2,|L124.676|
000156  eb021101          ADD      r1,r2,r1,LSL #4       ;11817
00015a  4608              MOV      r0,r1                 ;11817
00015c  4950              LDR      r1,|L124.672|
00015e  f7fffffe          BL       strcpy
000162  f04f0100          MOV      r1,#0                 ;11817
000166  484d              LDR      r0,|L124.668|
000168  f8d0014c          LDR      r0,[r0,#0x14c]        ;11817
00016c  eb000080          ADD      r0,r0,r0,LSL #2       ;11817
000170  4a4c              LDR      r2,|L124.676|
000172  eb021000          ADD      r0,r2,r0,LSL #4       ;11817
000176  7001              STRB     r1,[r0,#0]            ;11817
000178  f04f0050          MOV      r0,#0x50              ;11817
00017c  e76d              B        |L124.90|
                  |L124.382|
00017e  4628              MOV      r0,r5                 ;11819
000180  f7fffffe          BL       strlen
000184  4606              MOV      r6,r0                 ;11819
000186  2eff              CMP      r6,#0xff              ;11820
000188  d12e              BNE      |L124.488|
00018a  bf00              NOP                            ;11823
                  |L124.396|
00018c  4942              LDR      r1,|L124.664|
00018e  f8d11510          LDR      r1,[r1,#0x510]        ;11823  ; _setup
000192  4608              MOV      r0,r1                 ;11823
000194  f7fffffe          BL       fgetc
000198  280a              CMP      r0,#0xa               ;11823
00019a  d1f7              BNE      |L124.396|
00019c  f04f0100          MOV      r1,#0                 ;11824
0001a0  483e              LDR      r0,|L124.668|
0001a2  f8c0114c          STR      r1,[r0,#0x14c]        ;11824
0001a6  4601              MOV      r1,r0                 ;11824
0001a8  f8d1314c          LDR      r3,[r1,#0x14c]        ;11824
0001ac  f8d1114c          LDR      r1,[r1,#0x14c]        ;11824
0001b0  f1010101          ADD      r1,r1,#1              ;11824
0001b4  4602              MOV      r2,r0                 ;11824
0001b6  f8c2114c          STR      r1,[r2,#0x14c]        ;11824
0001ba  eb030183          ADD      r1,r3,r3,LSL #2       ;11824
0001be  4a39              LDR      r2,|L124.676|
0001c0  eb021101          ADD      r1,r2,r1,LSL #4       ;11824
0001c4  4608              MOV      r0,r1                 ;11824
0001c6  4936              LDR      r1,|L124.672|
0001c8  f7fffffe          BL       strcpy
0001cc  f04f0100          MOV      r1,#0                 ;11824
0001d0  4832              LDR      r0,|L124.668|
0001d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11824
0001d6  eb000080          ADD      r0,r0,r0,LSL #2       ;11824
0001da  4a32              LDR      r2,|L124.676|
0001dc  eb021000          ADD      r0,r2,r0,LSL #4       ;11824
0001e0  7001              STRB     r1,[r0,#0]            ;11824
0001e2  f04f0042          MOV      r0,#0x42              ;11824
0001e6  e738              B        |L124.90|
                  |L124.488|
0001e8  f1a60001          SUB      r0,r6,#1              ;11826
0001ec  4604              MOV      r4,r0                 ;11826
0001ee  e002              B        |L124.502|
                  |L124.496|
0001f0  f1a40001          SUB      r0,r4,#1              ;11828
0001f4  4604              MOV      r4,r0                 ;11828
                  |L124.502|
0001f6  2c00              CMP      r4,#0                 ;11827
0001f8  db07              BLT      |L124.522|
0001fa  f7fffffe          BL       __rt_ctype_table
0001fe  6800              LDR      r0,[r0,#0]            ;11827
000200  5d29              LDRB     r1,[r5,r4]            ;11827
000202  5c40              LDRB     r0,[r0,r1]            ;11827
000204  f0100f01          TST      r0,#1                 ;11827
000208  d1f2              BNE      |L124.496|
                  |L124.522|
00020a  1c60              ADDS     r0,r4,#1              ;11815
00020c  d087              BEQ      |L124.286|
00020e  5d28              LDRB     r0,[r5,r4]            ;11830
000210  2825              CMP      r0,#0x25              ;11830
000212  d126              BNE      |L124.610|
000214  f1a40001          SUB      r0,r4,#1              ;11832
000218  4604              MOV      r4,r0                 ;11832
00021a  e002              B        |L124.546|
                  |L124.540|
00021c  f1a40001          SUB      r0,r4,#1              ;11832
000220  4604              MOV      r4,r0                 ;11832
                  |L124.546|
000222  2c00              CMP      r4,#0                 ;11832
000224  db07              BLT      |L124.566|
000226  f7fffffe          BL       __rt_ctype_table
00022a  6800              LDR      r0,[r0,#0]            ;11832
00022c  5d29              LDRB     r1,[r5,r4]            ;11832
00022e  5c40              LDRB     r0,[r0,r1]            ;11832
000230  f0100f01          TST      r0,#1                 ;11832
000234  d1f2              BNE      |L124.540|
                  |L124.566|
000236  1c60              ADDS     r0,r4,#1              ;11833
000238  d105              BNE      |L124.582|
00023a  f04f0101          MOV      r1,#1                 ;11834
00023e  481c              LDR      r0,|L124.688|
000240  f8c01168          STR      r1,[r0,#0x168]        ;11834
000244  e01a              B        |L124.636|
                  |L124.582|
000246  4914              LDR      r1,|L124.664|
000248  f8d11510          LDR      r1,[r1,#0x510]        ;11837  ; _setup
00024c  4608              MOV      r0,r1                 ;11837
00024e  2200              MOVS     r2,#0                 ;11837
000250  4611              MOV      r1,r2                 ;11837
000252  f7fffffe          BL       fseek
000256  f04f0100          MOV      r1,#0                 ;11838
00025a  4815              LDR      r0,|L124.688|
00025c  f8c01168          STR      r1,[r0,#0x168]        ;11838
000260  e00c              B        |L124.636|
                  |L124.610|
000262  490d              LDR      r1,|L124.664|
000264  f8d11510          LDR      r1,[r1,#0x510]        ;11843  ; _setup
000268  4608              MOV      r0,r1                 ;11843
00026a  2200              MOVS     r2,#0                 ;11843
00026c  4611              MOV      r1,r2                 ;11843
00026e  f7fffffe          BL       fseek
000272  f04f0100          MOV      r1,#0                 ;11844
000276  480e              LDR      r0,|L124.688|
000278  f8c01168          STR      r1,[r0,#0x168]        ;11844
                  |L124.636|
00027c  4639              MOV      r1,r7                 ;11846
00027e  480d              LDR      r0,|L124.692|
000280  f7fffffe          BL       strcpy
000284  f04f0100          MOV      r1,#0                 ;11847
000288  4809              LDR      r0,|L124.688|
00028a  f8c01190          STR      r1,[r0,#0x190]        ;11847
00028e  f7fffffe          BL       rs274ngc_reset
000292  2000              MOVS     r0,#0                 ;11849
000294  e6e1              B        |L124.90|
;;;11851  
                          ENDP

000296  0000              DCW      0x0000
                  |L124.664|
                          DCD      _setup
                  |L124.668|
                          DCD      _setup+0xc000
                  |L124.672|
                          DCD      |symbol_number.539|
                  |L124.676|
                          DCD      _setup+0xb1ac
                  |L124.680|
0002a8  7200              DCB      "r",0
0002aa  00                DCB      0
0002ab  00                DCB      0
                  |L124.684|
                          DCD      _setup+0x524
                  |L124.688|
                          DCD      _setup+0xb000
                  |L124.692|
                          DCD      _setup+0x410

                          AREA ||i.rs274ngc_read||, CODE, READONLY, ALIGN=2

                  rs274ngc_read PROC
;;;11882  
;;;11883      int rs274ngc_read(                            /* ARGUMENTS                       */
000000  b5f8              PUSH     {r3-r7,lr}
;;;11884      const char * command)                         /* may be NULL or a string to read */
;;;11885      {
000002  4605              MOV      r5,r0
;;;11886          static char name[] SET_TO "rs274ngc_read";
;;;11887          int status;
;;;11888          int read_status;
;;;11889  
;;;11890          if (_setup.probe_flag IS ON)
000004  4867              LDR      r0,|L125.420|
000006  f8d00170          LDR      r0,[r0,#0x170]
00000a  2801              CMP      r0,#1
00000c  d131              BNE      |L125.114|
;;;11891          {
;;;11892              CHK((GET_EXTERNAL_QUEUE_EMPTY() IS 0),
00000e  f7fffffe          BL       GET_EXTERNAL_QUEUE_EMPTY
000012  bb30              CBNZ     r0,|L125.98|
000014  f04f0100          MOV      r1,#0
000018  4863              LDR      r0,|L125.424|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  495a              LDR      r1,|L125.428|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4857              LDR      r0,|L125.424|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a56              LDR      r2,|L125.432|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0091          MOV      r0,#0x91
                  |L125.96|
;;;11893                  NCE_QUEUE_IS_NOT_EMPTY_AFTER_PROBING);
;;;11894              set_probe_data(&_setup);
;;;11895              _setup.probe_flag SET_TO OFF;
;;;11896          }
;;;11897          CHK(((command IS NULL) AND (_setup.file_pointer IS NULL)),
;;;11898              NCE_FILE_NOT_OPEN);
;;;11899          read_status SET_TO read_text(command, _setup.file_pointer, _setup.linetext,
;;;11900              _setup.blocktext, &_setup.line_length);
;;;11901          if ((read_status IS RS274NGC_EXECUTE_FINISH) OR
;;;11902              (read_status IS RS274NGC_OK))
;;;11903          {
;;;11904              if (_setup.line_length ISNT 0)
;;;11905              {
;;;11906                  CHP(parse_line(_setup.blocktext, &(_setup.block1), &_setup));
;;;11907              }
;;;11908          }
;;;11909          else if (read_status IS RS274NGC_ENDFILE);
;;;11910          else
;;;11911              ERP(read_status);
;;;11912          return read_status;
;;;11913      }
000060  bdf8              POP      {r3-r7,pc}
                  |L125.98|
000062  4854              LDR      r0,|L125.436|
000064  f7fffffe          BL       set_probe_data
000068  f04f0100          MOV      r1,#0                 ;11895
00006c  484d              LDR      r0,|L125.420|
00006e  f8c01170          STR      r1,[r0,#0x170]        ;11895
                  |L125.114|
000072  bb4d              CBNZ     r5,|L125.200|
000074  484f              LDR      r0,|L125.436|
000076  f8d00510          LDR      r0,[r0,#0x510]        ;11897  ; _setup
00007a  bb28              CBNZ     r0,|L125.200|
00007c  f04f0100          MOV      r1,#0                 ;11897
000080  4849              LDR      r0,|L125.424|
000082  f8c0114c          STR      r1,[r0,#0x14c]        ;11897
000086  4601              MOV      r1,r0                 ;11897
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;11897
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;11897
000090  f1010101          ADD      r1,r1,#1              ;11897
000094  4602              MOV      r2,r0                 ;11897
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;11897
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;11897
00009e  4a44              LDR      r2,|L125.432|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;11897
0000a4  4608              MOV      r0,r1                 ;11897
0000a6  4941              LDR      r1,|L125.428|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;11897
0000b0  483d              LDR      r0,|L125.424|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11897
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;11897
0000ba  4a3d              LDR      r2,|L125.432|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;11897
0000c0  7001              STRB     r1,[r0,#0]            ;11897
0000c2  f04f0053          MOV      r0,#0x53              ;11897
0000c6  e7cb              B        |L125.96|
                  |L125.200|
0000c8  483b              LDR      r0,|L125.440|
0000ca  9000              STR      r0,[sp,#0]            ;11899
0000cc  4839              LDR      r0,|L125.436|
0000ce  f8d00510          LDR      r0,[r0,#0x510]        ;11899  ; _setup
0000d2  4601              MOV      r1,r0                 ;11899
0000d4  4b39              LDR      r3,|L125.444|
0000d6  f5037227          ADD      r2,r3,#0x29c          ;11899
0000da  4628              MOV      r0,r5                 ;11899
0000dc  f7fffffe          BL       read_text
0000e0  4604              MOV      r4,r0                 ;11899
0000e2  2c02              CMP      r4,#2                 ;11901
0000e4  d000              BEQ      |L125.232|
0000e6  bb84              CBNZ     r4,|L125.330|
                  |L125.232|
0000e8  4832              LDR      r0,|L125.436|
0000ea  f8d00520          LDR      r0,[r0,#0x520]        ;11904  ; _setup
0000ee  2800              CMP      r0,#0                 ;11904
0000f0  d056              BEQ      |L125.416|
0000f2  4a30              LDR      r2,|L125.436|
0000f4  f1020180          ADD      r1,r2,#0x80           ;11906
0000f8  4830              LDR      r0,|L125.444|
0000fa  f7fffffe          BL       parse_line
0000fe  0006              MOVS     r6,r0                 ;11906
000100  d04e              BEQ      |L125.416|
000102  4829              LDR      r0,|L125.424|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11906
000108  2831              CMP      r0,#0x31              ;11906
00010a  da1f              BGE      |L125.332|
00010c  4926              LDR      r1,|L125.424|
00010e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11906
000112  f8d1114c          LDR      r1,[r1,#0x14c]        ;11906
000116  1c49              ADDS     r1,r1,#1              ;11906
000118  4a23              LDR      r2,|L125.424|
00011a  f8c2114c          STR      r1,[r2,#0x14c]        ;11906
00011e  eb030183          ADD      r1,r3,r3,LSL #2       ;11906
000122  4a23              LDR      r2,|L125.432|
000124  eb021101          ADD      r1,r2,r1,LSL #4       ;11906
000128  4608              MOV      r0,r1                 ;11906
00012a  4920              LDR      r1,|L125.428|
00012c  f7fffffe          BL       strcpy
000130  f04f0100          MOV      r1,#0                 ;11906
000134  481c              LDR      r0,|L125.424|
000136  f8d0014c          LDR      r0,[r0,#0x14c]        ;11906
00013a  eb000080          ADD      r0,r0,r0,LSL #2       ;11906
00013e  4a1c              LDR      r2,|L125.432|
000140  eb021000          ADD      r0,r2,r0,LSL #4       ;11906
000144  7001              STRB     r1,[r0,#0]            ;11906
000146  4630              MOV      r0,r6                 ;11906
000148  e78a              B        |L125.96|
                  |L125.330|
00014a  e001              B        |L125.336|
                  |L125.332|
00014c  4630              MOV      r0,r6                 ;11906
00014e  e787              B        |L125.96|
                  |L125.336|
000150  2c03              CMP      r4,#3                 ;11909
000152  d025              BEQ      |L125.416|
000154  4814              LDR      r0,|L125.424|
000156  f8d0014c          LDR      r0,[r0,#0x14c]        ;11911
00015a  2831              CMP      r0,#0x31              ;11911
00015c  da1e              BGE      |L125.412|
00015e  4912              LDR      r1,|L125.424|
000160  f8d1314c          LDR      r3,[r1,#0x14c]        ;11911
000164  f8d1114c          LDR      r1,[r1,#0x14c]        ;11911
000168  1c49              ADDS     r1,r1,#1              ;11911
00016a  4a0f              LDR      r2,|L125.424|
00016c  f8c2114c          STR      r1,[r2,#0x14c]        ;11911
000170  eb030183          ADD      r1,r3,r3,LSL #2       ;11911
000174  4a0e              LDR      r2,|L125.432|
000176  eb021101          ADD      r1,r2,r1,LSL #4       ;11911
00017a  4608              MOV      r0,r1                 ;11911
00017c  490b              LDR      r1,|L125.428|
00017e  f7fffffe          BL       strcpy
000182  f04f0100          MOV      r1,#0                 ;11911
000186  4808              LDR      r0,|L125.424|
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;11911
00018c  eb000080          ADD      r0,r0,r0,LSL #2       ;11911
000190  4a07              LDR      r2,|L125.432|
000192  eb021000          ADD      r0,r2,r0,LSL #4       ;11911
000196  7001              STRB     r1,[r0,#0]            ;11911
000198  4620              MOV      r0,r4                 ;11911
00019a  e761              B        |L125.96|
                  |L125.412|
00019c  4620              MOV      r0,r4                 ;11911
00019e  e75f              B        |L125.96|
                  |L125.416|
0001a0  4620              MOV      r0,r4                 ;11912
0001a2  e75d              B        |L125.96|
;;;11914  
                          ENDP

                  |L125.420|
                          DCD      _setup+0xb000
                  |L125.424|
                          DCD      _setup+0xc000
                  |L125.428|
                          DCD      |symbol_number.540|
                  |L125.432|
                          DCD      _setup+0xb1ac
                  |L125.436|
                          DCD      _setup
                  |L125.440|
                          DCD      _setup+0x520
                  |L125.444|
                          DCD      _setup+0x288

                          AREA ||i.rs274ngc_reset||, CODE, READONLY, ALIGN=2

                  rs274ngc_reset PROC
;;;11945  
;;;11946      int rs274ngc_reset()
000000  f04f0000          MOV      r0,#0
;;;11947      {
;;;11948          _setup.linetext[0] SET_TO 0;
000004  4903              LDR      r1,|L126.20|
000006  f8810524          STRB     r0,[r1,#0x524]
;;;11949          _setup.blocktext[0] SET_TO 0;
00000a  f8810288          STRB     r0,[r1,#0x288]
;;;11950          _setup.line_length SET_TO 0;
00000e  f8c10520          STR      r0,[r1,#0x520]  ; _setup
;;;11951  
;;;11952          return RS274NGC_OK;
;;;11953      }
000012  4770              BX       lr
;;;11954  
                          ENDP

                  |L126.20|
                          DCD      _setup

                          AREA ||i.rs274ngc_restore_parameters||, CODE, READONLY, ALIGN=2

                  rs274ngc_restore_parameters PROC
;;;11991     */
;;;11992      int rs274ngc_restore_parameters(              /* ARGUMENTS                        */
000000  b530              PUSH     {r4,r5,lr}
;;;11993      const char * filename)                        /* name of parameter file to read   */
;;;11994      {
000002  4603              MOV      r3,r0
;;;11995  //        static char name[] SET_TO "rs274ngc_restore_parameters";
;;;11996  //        FILE * infile;
;;;11997  //        char line[256];
;;;11998  //        int variable;
;;;11999  //        double value;
;;;12000  //        int required;                             // number of next required parameter
;;;12001  //        int index;                                // index into _required_parameters
;;;12002          double * pars;                            // short name for _setup.parameters
;;;12003          int k;
;;;12004  //
;;;12005  //   // open original for reading
;;;12006  //        infile SET_TO fopen(filename, "r");
;;;12007  //        CHK((infile IS NULL), NCE_UNABLE_TO_OPEN_FILE);
;;;12008  //
;;;12009          pars SET_TO _setup.parameters;
000004  480d              LDR      r0,|L127.60|
000006  4602              MOV      r2,r0
;;;12010  //        k SET_TO 0;
;;;12011  //        index SET_TO 0;
;;;12012  //        required SET_TO _required_parameters[index++];
;;;12013  //        while (feof(infile) IS 0)
;;;12014  //        {
;;;12015  //            if (fgets(line, 256, infile) IS NULL)
;;;12016  //            {
;;;12017  //                break;
;;;12018  //            }
;;;12019  //
;;;12020  //   // try for a variable-value match in the file
;;;12021  //            if (sscanf(line, "%d %lf", &variable, &value) IS 2)
;;;12022  //            {
;;;12023  //                CHK(((variable <= 0) OR (variable >= RS274NGC_MAX_PARAMETERS)),
;;;12024  //                    NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;12025  //                for (; k < RS274NGC_MAX_PARAMETERS; k++)
;;;12026  //                {
;;;12027  //                    if (k > variable)
;;;12028  //                        ERM(NCE_PARAMETER_FILE_OUT_OF_ORDER);
;;;12029  //                    else if (k IS variable)
;;;12030  //                    {
;;;12031  //                        pars[k] SET_TO value;
;;;12032  //                        if (k IS required)
;;;12033  //                            required SET_TO _required_parameters[index++];
;;;12034  //                        k++;
;;;12035  //                        break;
;;;12036  //                    }
;;;12037  //                    else                          // if (k < variable)
;;;12038  //                    {
;;;12039  //                        if (k IS required)
;;;12040  //                            ERM(NCE_REQUIRED_PARAMETER_MISSING);
;;;12041  //                        else
;;;12042  //                            pars[k] SET_TO 0;
;;;12043  //                    }
;;;12044  //                }
;;;12045  //            }
;;;12046  //        }
;;;12047  //        fclose(infile);
;;;12048  //        CHK((required ISNT RS274NGC_MAX_PARAMETERS), NCE_REQUIRED_PARAMETER_MISSING);
;;;12049          for (; k < RS274NGC_MAX_PARAMETERS; k++)
000008  e008              B        |L127.28|
                  |L127.10|
;;;12050          {
;;;12051              pars[k] SET_TO 0;
00000a  f04f0000          MOV      r0,#0
00000e  eb0205c1          ADD      r5,r2,r1,LSL #3
000012  6028              STR      r0,[r5,#0]
000014  6068              STR      r0,[r5,#4]
000016  f1010001          ADD      r0,r1,#1              ;12049
00001a  4601              MOV      r1,r0                 ;12049
                  |L127.28|
00001c  f2415018          MOV      r0,#0x1518            ;12049
000020  4281              CMP      r1,r0                 ;12049
000022  dbf2              BLT      |L127.10|
;;;12052          }
;;;12053  		pars[5220]=1.0;
000024  f04f0400          MOV      r4,#0
000028  4805              LDR      r0,|L127.64|
00002a  f5024520          ADD      r5,r2,#0xa000
00002e  f8c54320          STR      r4,[r5,#0x320]
000032  f8c50324          STR      r0,[r5,#0x324]
;;;12054          return RS274NGC_OK;
000036  f04f0000          MOV      r0,#0
;;;12055      }
00003a  bd30              POP      {r4,r5,pc}
;;;12056  
                          ENDP

                  |L127.60|
                          DCD      _setup+0x648
                  |L127.64|
                          DCD      0x3ff00000

                          AREA ||i.rs274ngc_save_parameters||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                          REQUIRE _scanf_real
                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_f
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_fp_dec
                  rs274ngc_save_parameters PROC
;;;12090     */
;;;12091      int rs274ngc_save_parameters(                 /* ARGUMENTS             */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;12092      const char * filename,                        /* name of file to write */
;;;12093      const double parameters[])                    /* parameters to save    */
;;;12094      {
000004  b0c6              SUB      sp,sp,#0x118
000006  4682              MOV      r10,r0
000008  460d              MOV      r5,r1
;;;12095          static char name[] SET_TO "rs274ngc_save_parameters";
;;;12096          FILE * infile;
;;;12097          FILE * outfile;
;;;12098          char line[256];
;;;12099          int variable;
;;;12100          double value;
;;;12101          int required;                             // number of next required parameter
;;;12102          int index;                                // index into _required_parameters
;;;12103          int k;
;;;12104  
;;;12105     // rename as .bak
;;;12106          strcpy(line, filename);
00000a  4651              MOV      r1,r10
00000c  a805              ADD      r0,sp,#0x14
00000e  f7fffffe          BL       strcpy
;;;12107          strcat(line, RS274NGC_PARAMETER_FILE_BACKUP_SUFFIX);
000012  a1b6              ADR      r1,|L128.748|
000014  a805              ADD      r0,sp,#0x14
000016  f7fffffe          BL       strcat
;;;12108          CHK((rename(filename, line) ISNT 0), NCE_CANNOT_CREATE_BACKUP_FILE);
00001a  a905              ADD      r1,sp,#0x14
00001c  4650              MOV      r0,r10
00001e  f7fffffe          BL       rename
000022  b340              CBZ      r0,|L128.118|
000024  f04f0100          MOV      r1,#0
000028  48b2              LDR      r0,|L128.756|
00002a  f8c0114c          STR      r1,[r0,#0x14c]
00002e  4601              MOV      r1,r0
000030  f8d1314c          LDR      r3,[r1,#0x14c]
000034  f8d1114c          LDR      r1,[r1,#0x14c]
000038  f1010101          ADD      r1,r1,#1
00003c  4602              MOV      r2,r0
00003e  f8c2114c          STR      r1,[r2,#0x14c]
000042  eb030183          ADD      r1,r3,r3,LSL #2
000046  f6a06254          SUB      r2,r0,#0xe54
00004a  eb021101          ADD      r1,r2,r1,LSL #4
00004e  4608              MOV      r0,r1
000050  49a9              LDR      r1,|L128.760|
000052  f7fffffe          BL       strcpy
000056  f04f0100          MOV      r1,#0
00005a  48a6              LDR      r0,|L128.756|
00005c  f8d0014c          LDR      r0,[r0,#0x14c]
000060  eb000080          ADD      r0,r0,r0,LSL #2
000064  4aa5              LDR      r2,|L128.764|
000066  eb021000          ADD      r0,r2,r0,LSL #4
00006a  7001              STRB     r1,[r0,#0]
00006c  f04f0028          MOV      r0,#0x28
                  |L128.112|
;;;12109  
;;;12110     // open backup for reading
;;;12111          infile SET_TO fopen(line, "r");
;;;12112          CHK((infile IS NULL), NCE_CANNOT_OPEN_BACKUP_FILE);
;;;12113  
;;;12114     // open original for writing
;;;12115          outfile SET_TO fopen(filename, "w");
;;;12116          CHK((outfile IS NULL), NCE_CANNOT_OPEN_VARIABLE_FILE);
;;;12117  
;;;12118          k SET_TO 0;
;;;12119          index SET_TO 0;
;;;12120          required SET_TO _required_parameters[index++];
;;;12121          while (feof(infile) IS 0)
;;;12122          {
;;;12123              if (fgets(line, 256, infile) IS NULL)
;;;12124              {
;;;12125                  break;
;;;12126              }
;;;12127     // try for a variable-value match
;;;12128              if (sscanf(line, "%d %f", &variable, &value) IS 2)
;;;12129              {
;;;12130                  CHK(((variable <= 0) OR (variable >= RS274NGC_MAX_PARAMETERS)),
;;;12131                      NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;12132                  for (; k < RS274NGC_MAX_PARAMETERS; k++)
;;;12133                  {
;;;12134                      if (k > variable)
;;;12135                          ERM(NCE_PARAMETER_FILE_OUT_OF_ORDER);
;;;12136                      else if (k IS variable)
;;;12137                      {
;;;12138                          sprintf(line, "%d\t%f\r\n", k, parameters[k]);
;;;12139                          fputs(line, outfile);
;;;12140                          if (k IS required)
;;;12141                              required SET_TO _required_parameters[index++];
;;;12142                          k++;
;;;12143                          break;
;;;12144                      }
;;;12145                      else if (k IS required)       // know (k < variable)
;;;12146                      {
;;;12147                          sprintf(line, "%d\t%f\r\n", k, parameters[k]);
;;;12148                          fputs(line, outfile);
;;;12149                          required SET_TO _required_parameters[index++];
;;;12150                      }
;;;12151                  }
;;;12152              }
;;;12153          }
;;;12154          fclose(infile);
;;;12155          for (; k < RS274NGC_MAX_PARAMETERS; k++)
;;;12156          {
;;;12157              if (k IS required)
;;;12158              {
;;;12159                  sprintf(line, "%d\t%f\r\n", k, parameters[k]);
;;;12160                  fputs(line, outfile);
;;;12161                  required SET_TO _required_parameters[index++];
;;;12162              }
;;;12163          }
;;;12164          fclose(outfile);
;;;12165  
;;;12166          return RS274NGC_OK;
;;;12167      }
000070  b046              ADD      sp,sp,#0x118
000072  e8bd87f0          POP      {r4-r10,pc}
                  |L128.118|
000076  a1a2              ADR      r1,|L128.768|
000078  a805              ADD      r0,sp,#0x14           ;12111
00007a  f7fffffe          BL       fopen
00007e  4606              MOV      r6,r0                 ;12111
000080  bb2e              CBNZ     r6,|L128.206|
000082  f04f0100          MOV      r1,#0                 ;12112
000086  489b              LDR      r0,|L128.756|
000088  f8c0114c          STR      r1,[r0,#0x14c]        ;12112
00008c  4601              MOV      r1,r0                 ;12112
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;12112
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;12112
000096  f1010101          ADD      r1,r1,#1              ;12112
00009a  4602              MOV      r2,r0                 ;12112
00009c  f8c2114c          STR      r1,[r2,#0x14c]        ;12112
0000a0  eb030183          ADD      r1,r3,r3,LSL #2       ;12112
0000a4  4a95              LDR      r2,|L128.764|
0000a6  eb021101          ADD      r1,r2,r1,LSL #4       ;12112
0000aa  4608              MOV      r0,r1                 ;12112
0000ac  4992              LDR      r1,|L128.760|
0000ae  f7fffffe          BL       strcpy
0000b2  f04f0100          MOV      r1,#0                 ;12112
0000b6  488f              LDR      r0,|L128.756|
0000b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;12112
0000bc  eb000080          ADD      r0,r0,r0,LSL #2       ;12112
0000c0  4a8e              LDR      r2,|L128.764|
0000c2  eb021000          ADD      r0,r2,r0,LSL #4       ;12112
0000c6  7001              STRB     r1,[r0,#0]            ;12112
0000c8  f04f002d          MOV      r0,#0x2d              ;12112
0000cc  e7d0              B        |L128.112|
                  |L128.206|
0000ce  a18d              ADR      r1,|L128.772|
0000d0  4650              MOV      r0,r10                ;12115
0000d2  f7fffffe          BL       fopen
0000d6  4607              MOV      r7,r0                 ;12115
0000d8  bb2f              CBNZ     r7,|L128.294|
0000da  f04f0100          MOV      r1,#0                 ;12116
0000de  4885              LDR      r0,|L128.756|
0000e0  f8c0114c          STR      r1,[r0,#0x14c]        ;12116
0000e4  4601              MOV      r1,r0                 ;12116
0000e6  f8d1314c          LDR      r3,[r1,#0x14c]        ;12116
0000ea  f8d1114c          LDR      r1,[r1,#0x14c]        ;12116
0000ee  f1010101          ADD      r1,r1,#1              ;12116
0000f2  4602              MOV      r2,r0                 ;12116
0000f4  f8c2114c          STR      r1,[r2,#0x14c]        ;12116
0000f8  eb030183          ADD      r1,r3,r3,LSL #2       ;12116
0000fc  4a7f              LDR      r2,|L128.764|
0000fe  eb021101          ADD      r1,r2,r1,LSL #4       ;12116
000102  4608              MOV      r0,r1                 ;12116
000104  497c              LDR      r1,|L128.760|
000106  f7fffffe          BL       strcpy
00010a  f04f0100          MOV      r1,#0                 ;12116
00010e  4879              LDR      r0,|L128.756|
000110  f8d0014c          LDR      r0,[r0,#0x14c]        ;12116
000114  eb000080          ADD      r0,r0,r0,LSL #2       ;12116
000118  4a78              LDR      r2,|L128.764|
00011a  eb021000          ADD      r0,r2,r0,LSL #4       ;12116
00011e  7001              STRB     r1,[r0,#0]            ;12116
000120  f04f002e          MOV      r0,#0x2e              ;12116
000124  e7a4              B        |L128.112|
                  |L128.294|
000126  f04f0400          MOV      r4,#0                 ;12118
00012a  4620              MOV      r0,r4                 ;12119
00012c  4681              MOV      r9,r0                 ;12119
00012e  4648              MOV      r0,r9                 ;12120
000130  f1090101          ADD      r1,r9,#1              ;12120
000134  4689              MOV      r9,r1                 ;12120
000136  4974              LDR      r1,|L128.776|
000138  f8518020          LDR      r8,[r1,r0,LSL #2]     ;12120
                  |L128.316|
00013c  e0a6              B        |L128.652|
                  |L128.318|
00013e  4632              MOV      r2,r6                 ;12123
000140  f44f7180          MOV      r1,#0x100             ;12123
000144  a805              ADD      r0,sp,#0x14           ;12123
000146  f7fffffe          BL       fgets
00014a  b900              CBNZ     r0,|L128.334|
00014c  e0a4              B        |L128.664|
                  |L128.334|
00014e  ab02              ADD      r3,sp,#8              ;12128
000150  aa04              ADD      r2,sp,#0x10           ;12128
000152  a16e              ADR      r1,|L128.780|
000154  a805              ADD      r0,sp,#0x14           ;12128
000156  f7fffffe          BL       __0sscanf
00015a  2802              CMP      r0,#2                 ;12128
00015c  d1ee              BNE      |L128.316|
00015e  9804              LDR      r0,[sp,#0x10]         ;12130
000160  2800              CMP      r0,#0                 ;12130
000162  dd04              BLE      |L128.366|
000164  f2415118          MOV      r1,#0x1518            ;12130
000168  9804              LDR      r0,[sp,#0x10]         ;12130
00016a  4288              CMP      r0,r1                 ;12130
00016c  db25              BLT      |L128.442|
                  |L128.366|
00016e  f04f0100          MOV      r1,#0                 ;12130
000172  4860              LDR      r0,|L128.756|
000174  f8c0114c          STR      r1,[r0,#0x14c]        ;12130
000178  4601              MOV      r1,r0                 ;12130
00017a  f8d1314c          LDR      r3,[r1,#0x14c]        ;12130
00017e  f8d1114c          LDR      r1,[r1,#0x14c]        ;12130
000182  f1010101          ADD      r1,r1,#1              ;12130
000186  4602              MOV      r2,r0                 ;12130
000188  f8c2114c          STR      r1,[r2,#0x14c]        ;12130
00018c  eb030183          ADD      r1,r3,r3,LSL #2       ;12130
000190  4a5a              LDR      r2,|L128.764|
000192  eb021101          ADD      r1,r2,r1,LSL #4       ;12130
000196  4608              MOV      r0,r1                 ;12130
000198  4957              LDR      r1,|L128.760|
00019a  f7fffffe          BL       strcpy
00019e  f04f0100          MOV      r1,#0                 ;12130
0001a2  4854              LDR      r0,|L128.756|
0001a4  f8d0014c          LDR      r0,[r0,#0x14c]        ;12130
0001a8  eb000080          ADD      r0,r0,r0,LSL #2       ;12130
0001ac  4a53              LDR      r2,|L128.764|
0001ae  eb021000          ADD      r0,r2,r0,LSL #4       ;12130
0001b2  7001              STRB     r1,[r0,#0]            ;12130
0001b4  f04f008e          MOV      r0,#0x8e              ;12130
0001b8  e75a              B        |L128.112|
                  |L128.442|
0001ba  e062              B        |L128.642|
                  |L128.444|
0001bc  9804              LDR      r0,[sp,#0x10]         ;12134
0001be  4284              CMP      r4,r0                 ;12134
0001c0  dd25              BLE      |L128.526|
0001c2  f04f0100          MOV      r1,#0                 ;12135
0001c6  484b              LDR      r0,|L128.756|
0001c8  f8c0114c          STR      r1,[r0,#0x14c]        ;12135
0001cc  4601              MOV      r1,r0                 ;12135
0001ce  f8d1314c          LDR      r3,[r1,#0x14c]        ;12135
0001d2  f8d1114c          LDR      r1,[r1,#0x14c]        ;12135
0001d6  f1010101          ADD      r1,r1,#1              ;12135
0001da  4602              MOV      r2,r0                 ;12135
0001dc  f8c2114c          STR      r1,[r2,#0x14c]        ;12135
0001e0  eb030183          ADD      r1,r3,r3,LSL #2       ;12135
0001e4  4a45              LDR      r2,|L128.764|
0001e6  eb021101          ADD      r1,r2,r1,LSL #4       ;12135
0001ea  4608              MOV      r0,r1                 ;12135
0001ec  4942              LDR      r1,|L128.760|
0001ee  f7fffffe          BL       strcpy
0001f2  f04f0100          MOV      r1,#0                 ;12135
0001f6  483f              LDR      r0,|L128.756|
0001f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;12135
0001fc  eb000080          ADD      r0,r0,r0,LSL #2       ;12135
000200  4a3e              LDR      r2,|L128.764|
000202  eb021000          ADD      r0,r2,r0,LSL #4       ;12135
000206  7001              STRB     r1,[r0,#0]            ;12135
000208  f04f008d          MOV      r0,#0x8d              ;12135
00020c  e730              B        |L128.112|
                  |L128.526|
00020e  9804              LDR      r0,[sp,#0x10]         ;12136
000210  4284              CMP      r4,r0                 ;12136
000212  d11b              BNE      |L128.588|
000214  eb0501c4          ADD      r1,r5,r4,LSL #3       ;12138
000218  c903              LDM      r1,{r0,r1}            ;12138
00021a  4622              MOV      r2,r4                 ;12138
00021c  e9cd0100          STRD     r0,r1,[sp,#0]         ;12138
000220  a13c              ADR      r1,|L128.788|
000222  a805              ADD      r0,sp,#0x14           ;12138
000224  f7fffffe          BL       __2sprintf
000228  4639              MOV      r1,r7                 ;12139
00022a  a805              ADD      r0,sp,#0x14           ;12139
00022c  f7fffffe          BL       fputs
000230  4544              CMP      r4,r8                 ;12140
000232  d107              BNE      |L128.580|
000234  4648              MOV      r0,r9                 ;12141
000236  f1090101          ADD      r1,r9,#1              ;12141
00023a  4689              MOV      r9,r1                 ;12141
00023c  4932              LDR      r1,|L128.776|
00023e  f8510020          LDR      r0,[r1,r0,LSL #2]     ;12141
000242  4680              MOV      r8,r0                 ;12141
                  |L128.580|
000244  f1040001          ADD      r0,r4,#1              ;12142
000248  4604              MOV      r4,r0                 ;12142
00024a  e01e              B        |L128.650|
                  |L128.588|
00024c  4544              CMP      r4,r8                 ;12145
00024e  d115              BNE      |L128.636|
000250  eb0500c4          ADD      r0,r5,r4,LSL #3       ;12147
000254  c803              LDM      r0,{r0,r1}            ;12147
000256  4622              MOV      r2,r4                 ;12147
000258  e9cd0100          STRD     r0,r1,[sp,#0]         ;12147
00025c  a12d              ADR      r1,|L128.788|
00025e  a805              ADD      r0,sp,#0x14           ;12147
000260  f7fffffe          BL       __2sprintf
000264  4639              MOV      r1,r7                 ;12148
000266  a805              ADD      r0,sp,#0x14           ;12148
000268  f7fffffe          BL       fputs
00026c  4648              MOV      r0,r9                 ;12149
00026e  f1090101          ADD      r1,r9,#1              ;12149
000272  4689              MOV      r9,r1                 ;12149
000274  4924              LDR      r1,|L128.776|
000276  f8510020          LDR      r0,[r1,r0,LSL #2]     ;12149
00027a  4680              MOV      r8,r0                 ;12149
                  |L128.636|
00027c  f1040001          ADD      r0,r4,#1              ;12132
000280  4604              MOV      r4,r0                 ;12132
                  |L128.642|
000282  f2415018          MOV      r0,#0x1518            ;12132
000286  4284              CMP      r4,r0                 ;12132
000288  db98              BLT      |L128.444|
                  |L128.650|
00028a  bf00              NOP                            ;12143
                  |L128.652|
00028c  4630              MOV      r0,r6                 ;12121
00028e  f7fffffe          BL       feof
000292  2800              CMP      r0,#0                 ;12121
000294  f43faf53          BEQ      |L128.318|
                  |L128.664|
000298  bf00              NOP                            ;12125
00029a  4630              MOV      r0,r6                 ;12154
00029c  f7fffffe          BL       fclose
0002a0  e01a              B        |L128.728|
                  |L128.674|
0002a2  4544              CMP      r4,r8                 ;12157
0002a4  d115              BNE      |L128.722|
0002a6  eb0501c4          ADD      r1,r5,r4,LSL #3       ;12159
0002aa  c903              LDM      r1,{r0,r1}            ;12159
0002ac  4622              MOV      r2,r4                 ;12159
0002ae  e9cd0100          STRD     r0,r1,[sp,#0]         ;12159
0002b2  a118              ADR      r1,|L128.788|
0002b4  a805              ADD      r0,sp,#0x14           ;12159
0002b6  f7fffffe          BL       __2sprintf
0002ba  4639              MOV      r1,r7                 ;12160
0002bc  a805              ADD      r0,sp,#0x14           ;12160
0002be  f7fffffe          BL       fputs
0002c2  4648              MOV      r0,r9                 ;12161
0002c4  f1090101          ADD      r1,r9,#1              ;12161
0002c8  4689              MOV      r9,r1                 ;12161
0002ca  490f              LDR      r1,|L128.776|
0002cc  f8510020          LDR      r0,[r1,r0,LSL #2]     ;12161
0002d0  4680              MOV      r8,r0                 ;12161
                  |L128.722|
0002d2  f1040001          ADD      r0,r4,#1              ;12155
0002d6  4604              MOV      r4,r0                 ;12155
                  |L128.728|
0002d8  f2415018          MOV      r0,#0x1518            ;12155
0002dc  4284              CMP      r4,r0                 ;12155
0002de  dbe0              BLT      |L128.674|
0002e0  4638              MOV      r0,r7                 ;12164
0002e2  f7fffffe          BL       fclose
0002e6  2000              MOVS     r0,#0                 ;12166
0002e8  e6c2              B        |L128.112|
;;;12168  
                          ENDP

0002ea  0000              DCW      0x0000
                  |L128.748|
0002ec  2e62616b          DCB      ".bak",0
0002f0  00      
0002f1  00                DCB      0
0002f2  00                DCB      0
0002f3  00                DCB      0
                  |L128.756|
                          DCD      _setup+0xc000
                  |L128.760|
                          DCD      |symbol_number.541|
                  |L128.764|
                          DCD      _setup+0xb1ac
                  |L128.768|
000300  7200              DCB      "r",0
000302  00                DCB      0
000303  00                DCB      0
                  |L128.772|
000304  7700              DCB      "w",0
000306  00                DCB      0
000307  00                DCB      0
                  |L128.776|
                          DCD      _required_parameters
                  |L128.780|
00030c  25642025          DCB      "%d %f",0
000310  6600    
000312  00                DCB      0
000313  00                DCB      0
                  |L128.788|
000314  25640925          DCB      "%d\t%f\r\n",0
000318  660d0a00

                          AREA ||i.rs274ngc_sequence_number||, CODE, READONLY, ALIGN=2

                  rs274ngc_sequence_number PROC
;;;12431  
;;;12432      int rs274ngc_sequence_number()
000000  4801              LDR      r0,|L129.8|
;;;12433      {
;;;12434          return _setup.sequence_number;
000002  f8d00190          LDR      r0,[r0,#0x190]
;;;12435      }
000006  4770              BX       lr
;;;12436  
                          ENDP

                  |L129.8|
                          DCD      _setup+0xb000

                          AREA ||i.rs274ngc_stack_name||, CODE, READONLY, ALIGN=2

                  rs274ngc_stack_name PROC
;;;12460  
;;;12461      void rs274ngc_stack_name(                     /* ARGUMENTS                            */
000000  b5f0              PUSH     {r4-r7,lr}
;;;12462      int stack_index,                              /* index into stack of function names   */
;;;12463      char * function_name,                         /* string: to copy function name into   */
;;;12464      int max_size)                                 /* maximum number of characters to copy */
;;;12465      {
000002  4603              MOV      r3,r0
000004  4614              MOV      r4,r2
;;;12466          int n;
;;;12467          char * the_name;
;;;12468  
;;;12469          if ((stack_index > -1) AND (stack_index < 20))
000006  2b00              CMP      r3,#0
000008  db1a              BLT      |L130.64|
00000a  2b14              CMP      r3,#0x14
00000c  da18              BGE      |L130.64|
;;;12470          {
;;;12471              the_name SET_TO _setup.stack[stack_index];
00000e  eb030583          ADD      r5,r3,r3,LSL #2
000012  4e0d              LDR      r6,|L130.72|
000014  eb061205          ADD      r2,r6,r5,LSL #4
;;;12472              for (n SET_TO 0; n < (max_size - 1); n++)
000018  f04f0000          MOV      r0,#0
00001c  e008              B        |L130.48|
                  |L130.30|
;;;12473              {
;;;12474                  if (the_name[n] ISNT 0)
00001e  5c15              LDRB     r5,[r2,r0]
000020  b115              CBZ      r5,|L130.40|
;;;12475                      function_name[n] SET_TO the_name[n];
000022  5c15              LDRB     r5,[r2,r0]
000024  540d              STRB     r5,[r1,r0]
000026  e000              B        |L130.42|
                  |L130.40|
;;;12476                  else
;;;12477                      break;
000028  e005              B        |L130.54|
                  |L130.42|
00002a  f1000501          ADD      r5,r0,#1              ;12472
00002e  4628              MOV      r0,r5                 ;12472
                  |L130.48|
000030  1e65              SUBS     r5,r4,#1              ;12472
000032  4285              CMP      r5,r0                 ;12472
000034  dcf3              BGT      |L130.30|
                  |L130.54|
000036  bf00              NOP      
;;;12478              }
;;;12479              function_name[n] SET_TO 0;
000038  f04f0500          MOV      r5,#0
00003c  540d              STRB     r5,[r1,r0]
00003e  e002              B        |L130.70|
                  |L130.64|
;;;12480          }
;;;12481          else
;;;12482              function_name[0] SET_TO 0;
000040  f04f0500          MOV      r5,#0
000044  700d              STRB     r5,[r1,#0]
                  |L130.70|
;;;12483      }
000046  bdf0              POP      {r4-r7,pc}
;;;12484  
                          ENDP

                  |L130.72|
                          DCD      _setup+0xb1ac

                          AREA ||i.rs274ngc_synch||, CODE, READONLY, ALIGN=2

                  rs274ngc_synch PROC
;;;12187  
;;;12188      int rs274ngc_synch()                          /* NO ARGUMENTS */
000000  b510              PUSH     {r4,lr}
;;;12189      {
;;;12190          _setup.control_mode SET_TO GET_EXTERNAL_MOTION_CONTROL_MODE();
000002  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000006  492e              LDR      r1,|L131.192|
000008  f8c10388          STR      r0,[r1,#0x388]  ; _setup
;;;12191  #ifdef AA
;;;12192     /*AA*/
;;;12193          _setup.AA_current SET_TO GET_EXTERNAL_POSITION_A();
;;;12194  #endif
;;;12195  #ifdef BB
;;;12196     /*BB*/
;;;12197          _setup.BB_current SET_TO GET_EXTERNAL_POSITION_B();
;;;12198  #endif
;;;12199  #ifdef CC
;;;12200     /*CC*/
;;;12201          _setup.CC_current SET_TO GET_EXTERNAL_POSITION_C();
;;;12202  #endif
;;;12203          _setup.current_slot SET_TO GET_EXTERNAL_TOOL_SLOT();
00000c  f7fffffe          BL       GET_EXTERNAL_TOOL_SLOT
000010  492b              LDR      r1,|L131.192|
000012  f8c1038c          STR      r0,[r1,#0x38c]  ; _setup
;;;12204          _setup.current_x SET_TO GET_EXTERNAL_POSITION_X();
000016  f7fffffe          BL       GET_EXTERNAL_POSITION_X
00001a  4a29              LDR      r2,|L131.192|
00001c  f5027264          ADD      r2,r2,#0x390
000020  c203              STM      r2!,{r0,r1}
;;;12205          _setup.current_y SET_TO GET_EXTERNAL_POSITION_Y();
000022  f7fffffe          BL       GET_EXTERNAL_POSITION_Y
000026  4a26              LDR      r2,|L131.192|
000028  f5027266          ADD      r2,r2,#0x398
00002c  c203              STM      r2!,{r0,r1}
;;;12206          _setup.current_z SET_TO GET_EXTERNAL_POSITION_Z();
00002e  f7fffffe          BL       GET_EXTERNAL_POSITION_Z
000032  4a23              LDR      r2,|L131.192|
000034  f5027268          ADD      r2,r2,#0x3a0
000038  c203              STM      r2!,{r0,r1}
;;;12207          _setup.feed_rate SET_TO GET_EXTERNAL_FEED_RATE();
00003a  f7fffffe          BL       GET_EXTERNAL_FEED_RATE
00003e  4a20              LDR      r2,|L131.192|
000040  f5026281          ADD      r2,r2,#0x408
000044  c203              STM      r2!,{r0,r1}
;;;12208          _setup.flood SET_TO (GET_EXTERNAL_FLOOD() ISNT 0) ? ON : OFF;
000046  f7fffffe          BL       GET_EXTERNAL_FLOOD
00004a  b110              CBZ      r0,|L131.82|
00004c  f04f0001          MOV      r0,#1
000050  e001              B        |L131.86|
                  |L131.82|
000052  f04f0000          MOV      r0,#0
                  |L131.86|
000056  491a              LDR      r1,|L131.192|
000058  f8c10514          STR      r0,[r1,#0x514]  ; _setup
;;;12209          _setup.length_units SET_TO GET_EXTERNAL_LENGTH_UNIT_TYPE();
00005c  f7fffffe          BL       GET_EXTERNAL_LENGTH_UNIT_TYPE
000060  4917              LDR      r1,|L131.192|
000062  f8c1051c          STR      r0,[r1,#0x51c]  ; _setup
;;;12210          _setup.mist SET_TO (GET_EXTERNAL_MIST() ISNT 0) ? ON : OFF;
000066  f7fffffe          BL       GET_EXTERNAL_MIST
00006a  b110              CBZ      r0,|L131.114|
00006c  f04f0001          MOV      r0,#1
000070  e001              B        |L131.118|
                  |L131.114|
000072  f04f0000          MOV      r0,#0
                  |L131.118|
000076  4912              LDR      r1,|L131.192|
000078  f8c10624          STR      r0,[r1,#0x624]  ; _setup
;;;12211          _setup.plane SET_TO GET_EXTERNAL_PLANE();
00007c  f7fffffe          BL       GET_EXTERNAL_PLANE
000080  4910              LDR      r1,|L131.196|
000082  f8c1016c          STR      r0,[r1,#0x16c]
;;;12212          _setup.selected_tool_slot SET_TO GET_EXTERNAL_TOOL_SLOT();
000086  f7fffffe          BL       GET_EXTERNAL_TOOL_SLOT
00008a  490e              LDR      r1,|L131.196|
00008c  f8c1018c          STR      r0,[r1,#0x18c]
;;;12213          _setup.speed SET_TO GET_EXTERNAL_SPEED();
000090  f7fffffe          BL       GET_EXTERNAL_SPEED
000094  4a0b              LDR      r2,|L131.196|
000096  f50272cc          ADD      r2,r2,#0x198
00009a  c203              STM      r2!,{r0,r1}
;;;12214          _setup.spindle_turning SET_TO GET_EXTERNAL_SPINDLE();
00009c  f7fffffe          BL       GET_EXTERNAL_SPINDLE
0000a0  4908              LDR      r1,|L131.196|
0000a2  f8c101a8          STR      r0,[r1,#0x1a8]
;;;12215          _setup.tool_max SET_TO GET_EXTERNAL_TOOL_MAX();
0000a6  f7fffffe          BL       GET_EXTERNAL_TOOL_MAX
0000aa  4907              LDR      r1,|L131.200|
0000ac  f8c10158          STR      r0,[r1,#0x158]
;;;12216          _setup.traverse_rate SET_TO GET_EXTERNAL_TRAVERSE_RATE();
0000b0  f7fffffe          BL       GET_EXTERNAL_TRAVERSE_RATE
0000b4  4a04              LDR      r2,|L131.200|
0000b6  f5026258          ADD      r2,r2,#0xd80
0000ba  c203              STM      r2!,{r0,r1}
;;;12217  
;;;12218  /*        rs274ngc_load_tool_table();               /*  must set  _setup.tool_max first */
;;;12219  
;;;12220          return RS274NGC_OK;
0000bc  2000              MOVS     r0,#0
;;;12221      }
0000be  bd10              POP      {r4,pc}
;;;12222  
                          ENDP

                  |L131.192|
                          DCD      _setup
                  |L131.196|
                          DCD      _setup+0xb000
                  |L131.200|
                          DCD      _setup+0xc000

                          AREA ||i.set_probe_data||, CODE, READONLY, ALIGN=1

                  set_probe_data PROC
;;;11238  
;;;11239      static int set_probe_data(                    /* ARGUMENTS                   */
000000  b510              PUSH     {r4,lr}
;;;11240      setup_pointer settings)                       /* pointer to machine settings */
;;;11241      {
000002  4604              MOV      r4,r0
;;;11242          static char name[] SET_TO "set_probe_data";
;;;11243  
;;;11244          settings->current_x SET_TO GET_EXTERNAL_POSITION_X();
000004  f7fffffe          BL       GET_EXTERNAL_POSITION_X
000008  f5047464          ADD      r4,r4,#0x390
00000c  e9c40100          STRD     r0,r1,[r4,#0]
;;;11245          settings->current_y SET_TO GET_EXTERNAL_POSITION_Y();
000010  f7fffffe          BL       GET_EXTERNAL_POSITION_Y
000014  e9c40102          STRD     r0,r1,[r4,#8]
;;;11246          settings->current_z SET_TO GET_EXTERNAL_POSITION_Z();
000018  f7fffffe          BL       GET_EXTERNAL_POSITION_Z
00001c  e9c40104          STRD     r0,r1,[r4,#0x10]
000020  f5a47464          SUB      r4,r4,#0x390
;;;11247  #ifdef AA
;;;11248     /*AA*/
;;;11249          settings->AA_current SET_TO GET_EXTERNAL_POSITION_A();
;;;11250  #endif
;;;11251  #ifdef BB
;;;11252     /*BB*/
;;;11253          settings->BB_current SET_TO GET_EXTERNAL_POSITION_B();
;;;11254  #endif
;;;11255  #ifdef CC
;;;11256     /*CC*/
;;;11257          settings->CC_current SET_TO GET_EXTERNAL_POSITION_C();
;;;11258  #endif
;;;11259          settings->parameters[5061] SET_TO GET_EXTERNAL_PROBE_POSITION_X();
000024  f7fffffe          BL       GET_EXTERNAL_PROBE_POSITION_X
000028  f50462c9          ADD      r2,r4,#0x648
00002c  f5024210          ADD      r2,r2,#0x9000
000030  f6026228          ADD      r2,r2,#0xe28
000034  c203              STM      r2!,{r0,r1}
;;;11260          settings->parameters[5062] SET_TO GET_EXTERNAL_PROBE_POSITION_Y();
000036  f7fffffe          BL       GET_EXTERNAL_PROBE_POSITION_Y
00003a  f50462c9          ADD      r2,r4,#0x648
00003e  f5024210          ADD      r2,r2,#0x9000
000042  f5026263          ADD      r2,r2,#0xe30
000046  c203              STM      r2!,{r0,r1}
;;;11261          settings->parameters[5063] SET_TO GET_EXTERNAL_PROBE_POSITION_Z();
000048  f7fffffe          BL       GET_EXTERNAL_PROBE_POSITION_Z
00004c  f50462c9          ADD      r2,r4,#0x648
000050  f5024210          ADD      r2,r2,#0x9000
000054  f6026238          ADD      r2,r2,#0xe38
000058  c203              STM      r2!,{r0,r1}
;;;11262  #ifdef AA
;;;11263     /*AA*/
;;;11264          settings->parameters[5064] SET_TO GET_EXTERNAL_PROBE_POSITION_A();
;;;11265  #endif
;;;11266  #ifdef BB
;;;11267     /*BB*/
;;;11268          settings->parameters[5065] SET_TO GET_EXTERNAL_PROBE_POSITION_B();
;;;11269  #endif
;;;11270  #ifdef CC
;;;11271     /*CC*/
;;;11272          settings->parameters[5066] SET_TO GET_EXTERNAL_PROBE_POSITION_C();
;;;11273  #endif
;;;11274          settings->parameters[5067] SET_TO GET_EXTERNAL_PROBE_VALUE();
00005a  f7fffffe          BL       GET_EXTERNAL_PROBE_VALUE
00005e  f50462c9          ADD      r2,r4,#0x648
000062  f5024210          ADD      r2,r2,#0x9000
000066  f6026258          ADD      r2,r2,#0xe58
00006a  c203              STM      r2!,{r0,r1}
;;;11275          return RS274NGC_OK;
00006c  f04f0000          MOV      r0,#0
;;;11276      }
000070  bd10              POP      {r4,pc}
;;;11277  
                          ENDP


                          AREA ||i.write_g_codes||, CODE, READONLY, ALIGN=1

                  write_g_codes PROC
;;;11321  
;;;11322      static int write_g_codes(                     /* ARGUMENTS                                    */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;11323      block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;11324      setup_pointer settings)                       /* pointer to machine settings                  */
;;;11325      {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
;;;11326          int * gez;
;;;11327  
;;;11328          gez SET_TO settings->active_g_codes;
000008  4625              MOV      r5,r4
;;;11329          gez[0] SET_TO settings->sequence_number;
00000a  f24b1090          MOV      r0,#0xb190
00000e  5900              LDR      r0,[r0,r4]
000010  6028              STR      r0,[r5,#0]
;;;11330          gez[1] SET_TO settings->motion_mode;
000012  f8d40628          LDR      r0,[r4,#0x628]
000016  6068              STR      r0,[r5,#4]
;;;11331          gez[2] SET_TO ((block IS NULL) ? -1 : block->g_modes[0]);
000018  f1b80f00          CMP      r8,#0
00001c  d102              BNE      |L133.36|
00001e  f04f30ff          MOV      r0,#0xffffffff
000022  e001              B        |L133.40|
                  |L133.36|
000024  f8d80110          LDR      r0,[r8,#0x110]
                  |L133.40|
000028  60a8              STR      r0,[r5,#8]
;;;11332          gez[3] SET_TO
00002a  f24b106c          MOV      r0,#0xb16c
00002e  5900              LDR      r0,[r0,r4]
000030  2801              CMP      r0,#1
000032  d102              BNE      |L133.58|
;;;11333              (settings->plane IS CANON_PLANE_XY) ? G_17 :
000034  f04f00aa          MOV      r0,#0xaa
000038  e009              B        |L133.78|
                  |L133.58|
;;;11334          (settings->plane IS CANON_PLANE_XZ) ? G_18 : G_19;
00003a  f24b106c          MOV      r0,#0xb16c
00003e  5900              LDR      r0,[r0,r4]
000040  2803              CMP      r0,#3
000042  d102              BNE      |L133.74|
000044  f04f00b4          MOV      r0,#0xb4
000048  e001              B        |L133.78|
                  |L133.74|
00004a  f04f00be          MOV      r0,#0xbe
                  |L133.78|
00004e  60e8              STR      r0,[r5,#0xc]
;;;11335          gez[4] SET_TO
000050  f8d403b0          LDR      r0,[r4,#0x3b0]
000054  2801              CMP      r0,#1
000056  d102              BNE      |L133.94|
;;;11336              (settings->cutter_comp_side IS RIGHT) ? G_42 :
000058  f44f70d2          MOV      r0,#0x1a4
00005c  e008              B        |L133.112|
                  |L133.94|
;;;11337          (settings->cutter_comp_side IS LEFT) ? G_41 : G_40;
00005e  f8d403b0          LDR      r0,[r4,#0x3b0]
000062  2802              CMP      r0,#2
000064  d102              BNE      |L133.108|
000066  f44f70cd          MOV      r0,#0x19a
00006a  e001              B        |L133.112|
                  |L133.108|
00006c  f44f70c8          MOV      r0,#0x190
                  |L133.112|
000070  6128              STR      r0,[r5,#0x10]
;;;11338          gez[5] SET_TO
000072  f8d4051c          LDR      r0,[r4,#0x51c]
000076  2801              CMP      r0,#1
000078  d102              BNE      |L133.128|
;;;11339              (settings->length_units IS CANON_UNITS_INCHES) ? G_20 : G_21;
00007a  f04f00c8          MOV      r0,#0xc8
00007e  e001              B        |L133.132|
                  |L133.128|
000080  f04f00d2          MOV      r0,#0xd2
                  |L133.132|
000084  6168              STR      r0,[r5,#0x14]
;;;11340          gez[6] SET_TO
000086  f89403f8          LDRB     r0,[r4,#0x3f8]
00008a  b910              CBNZ     r0,|L133.146|
;;;11341              (settings->distance_mode IS MODE_ABSOLUTE) ? G_90 : G_91;
00008c  f44f7061          MOV      r0,#0x384
000090  e001              B        |L133.150|
                  |L133.146|
000092  f240308e          MOV      r0,#0x38e
                  |L133.150|
000096  61a8              STR      r0,[r5,#0x18]
;;;11342          gez[7] SET_TO
000098  f8d403fc          LDR      r0,[r4,#0x3fc]
00009c  2801              CMP      r0,#1
00009e  d102              BNE      |L133.166|
;;;11343              (settings->feed_mode IS INVERSE_TIME) ? G_93 : G_94;
0000a0  f24030a2          MOV      r0,#0x3a2
0000a4  e001              B        |L133.170|
                  |L133.166|
0000a6  f44f706b          MOV      r0,#0x3ac
                  |L133.170|
0000aa  61e8              STR      r0,[r5,#0x1c]
;;;11344          gez[8] SET_TO
0000ac  f8d4062c          LDR      r0,[r4,#0x62c]
0000b0  2807              CMP      r0,#7
0000b2  da08              BGE      |L133.198|
;;;11345              (settings->origin_index < 7) ? (530 + (10 * settings->origin_index)) :
0000b4  f8d4062c          LDR      r0,[r4,#0x62c]
0000b8  eb000080          ADD      r0,r0,r0,LSL #2
0000bc  ea4f0040          LSL      r0,r0,#1
0000c0  f2002012          ADD      r0,r0,#0x212
0000c4  e003              B        |L133.206|
                  |L133.198|
;;;11346          (584 + settings->origin_index);
0000c6  f8d4062c          LDR      r0,[r4,#0x62c]
0000ca  f5007012          ADD      r0,r0,#0x248
                  |L133.206|
0000ce  6228              STR      r0,[r5,#0x20]
;;;11347          gez[9] SET_TO
0000d0  f5044140          ADD      r1,r4,#0xc000
0000d4  f50171a8          ADD      r1,r1,#0x150
0000d8  c903              LDM      r1,{r0,r1}
0000da  4606              MOV      r6,r0
0000dc  2200              MOVS     r2,#0
0000de  4613              MOV      r3,r2
0000e0  f7fffffe          BL       __aeabi_cdcmpeq
0000e4  d102              BNE      |L133.236|
;;;11348              (settings->tool_length_offset IS 0.0) ? G_49 : G_43;
0000e6  f44f70f5          MOV      r0,#0x1ea
0000ea  e001              B        |L133.240|
                  |L133.236|
0000ec  f44f70d7          MOV      r0,#0x1ae
                  |L133.240|
0000f0  6268              STR      r0,[r5,#0x24]
;;;11349          gez[10] SET_TO
0000f2  f24b1088          MOV      r0,#0xb188
0000f6  5d00              LDRB     r0,[r0,r4]
0000f8  2801              CMP      r0,#1
0000fa  d102              BNE      |L133.258|
;;;11350              (settings->retract_mode IS OLD_Z) ? G_98 : G_99;
0000fc  f44f7075          MOV      r0,#0x3d4
000100  e001              B        |L133.262|
                  |L133.258|
000102  f24030de          MOV      r0,#0x3de
                  |L133.262|
000106  62a8              STR      r0,[r5,#0x28]
;;;11351          gez[11] SET_TO
000108  f8d40388          LDR      r0,[r4,#0x388]
00010c  2803              CMP      r0,#3
00010e  d102              BNE      |L133.278|
;;;11352              (settings->control_mode IS CANON_CONTINUOUS) ? G_64 :
000110  f44f7020          MOV      r0,#0x280
000114  e008              B        |L133.296|
                  |L133.278|
;;;11353          (settings->control_mode IS CANON_EXACT_PATH) ? G_61 : G_61_1;
000116  f8d40388          LDR      r0,[r4,#0x388]
00011a  2802              CMP      r0,#2
00011c  d102              BNE      |L133.292|
00011e  f2402062          MOV      r0,#0x262
000122  e001              B        |L133.296|
                  |L133.292|
000124  f2402063          MOV      r0,#0x263
                  |L133.296|
000128  62e8              STR      r0,[r5,#0x2c]
;;;11354  
;;;11355          return RS274NGC_OK;
00012a  2000              MOVS     r0,#0
;;;11356      }
00012c  e8bd81f0          POP      {r4-r8,pc}
;;;11357  
                          ENDP


                          AREA ||i.write_m_codes||, CODE, READONLY, ALIGN=1

                  write_m_codes PROC
;;;11375  
;;;11376      static int write_m_codes(                     /* ARGUMENTS                                    */
000000  4603              MOV      r3,r0
;;;11377      block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;11378      setup_pointer settings)                       /* pointer to machine settings                  */
;;;11379      {
;;;11380          int * emz;
;;;11381  
;;;11382          emz SET_TO settings->active_m_codes;
000002  f1010030          ADD      r0,r1,#0x30
000006  4602              MOV      r2,r0
;;;11383          emz[0] SET_TO settings->sequence_number;  /* 0 seq number  */
000008  f24b1090          MOV      r0,#0xb190
00000c  5840              LDR      r0,[r0,r1]
00000e  6010              STR      r0,[r2,#0]
;;;11384          emz[1] SET_TO
000010  b913              CBNZ     r3,|L134.24|
;;;11385              (block IS NULL) ? -1 : block->m_modes[4];/* 1 stopping    */
000012  f04f30ff          MOV      r0,#0xffffffff
000016  e002              B        |L134.30|
                  |L134.24|
000018  f44f70cc          MOV      r0,#0x198
00001c  58c0              LDR      r0,[r0,r3]
                  |L134.30|
00001e  6050              STR      r0,[r2,#4]
;;;11386          emz[2] SET_TO
000020  f24b10a8          MOV      r0,#0xb1a8
000024  5840              LDR      r0,[r0,r1]
000026  2801              CMP      r0,#1
000028  d102              BNE      |L134.48|
;;;11387     /* 2 spindle     */
;;;11388              (settings->spindle_turning IS CANON_STOPPED) ? 5 :
00002a  f04f0005          MOV      r0,#5
00002e  e009              B        |L134.68|
                  |L134.48|
;;;11389          (settings->spindle_turning IS CANON_CLOCKWISE) ? 3 : 4;
000030  f24b10a8          MOV      r0,#0xb1a8
000034  5840              LDR      r0,[r0,r1]
000036  2802              CMP      r0,#2
000038  d102              BNE      |L134.64|
00003a  f04f0003          MOV      r0,#3
00003e  e001              B        |L134.68|
                  |L134.64|
000040  f04f0004          MOV      r0,#4
                  |L134.68|
000044  6090              STR      r0,[r2,#8]
;;;11390          emz[3] SET_TO                             /* 3 tool change */
000046  b913              CBNZ     r3,|L134.78|
;;;11391              (block IS NULL) ? -1 : block->m_modes[6];
000048  f04f30ff          MOV      r0,#0xffffffff
00004c  e002              B        |L134.84|
                  |L134.78|
00004e  f44f70d0          MOV      r0,#0x1a0
000052  58c0              LDR      r0,[r0,r3]
                  |L134.84|
000054  60d0              STR      r0,[r2,#0xc]
;;;11392          emz[4] SET_TO                             /* 4 mist        */
000056  f8d10624          LDR      r0,[r1,#0x624]
00005a  2801              CMP      r0,#1
00005c  d102              BNE      |L134.100|
;;;11393              (settings->mist IS ON) ? 7 :
00005e  f04f0007          MOV      r0,#7
000062  e008              B        |L134.118|
                  |L134.100|
;;;11394          (settings->flood IS ON) ? -1 : 9;
000064  f8d10514          LDR      r0,[r1,#0x514]
000068  2801              CMP      r0,#1
00006a  d102              BNE      |L134.114|
00006c  f04f30ff          MOV      r0,#0xffffffff
000070  e001              B        |L134.118|
                  |L134.114|
000072  f04f0009          MOV      r0,#9
                  |L134.118|
000076  6110              STR      r0,[r2,#0x10]
;;;11395          emz[5] SET_TO                             /* 5 flood       */
000078  f8d10514          LDR      r0,[r1,#0x514]
00007c  2801              CMP      r0,#1
00007e  d102              BNE      |L134.134|
;;;11396              (settings->flood IS ON) ? 8 : -1;
000080  f04f0008          MOV      r0,#8
000084  e001              B        |L134.138|
                  |L134.134|
000086  f04f30ff          MOV      r0,#0xffffffff
                  |L134.138|
00008a  6150              STR      r0,[r2,#0x14]
;;;11397          emz[6] SET_TO                             /* 6 overrides   */
00008c  f8d10400          LDR      r0,[r1,#0x400]
000090  2801              CMP      r0,#1
000092  d102              BNE      |L134.154|
;;;11398              (settings->feed_override IS ON) ? 48 : 49;
000094  f04f0030          MOV      r0,#0x30
000098  e001              B        |L134.158|
                  |L134.154|
00009a  f04f0031          MOV      r0,#0x31
                  |L134.158|
00009e  6190              STR      r0,[r2,#0x18]
;;;11399  
;;;11400          return RS274NGC_OK;
0000a0  2000              MOVS     r0,#0
;;;11401      }
0000a2  4770              BX       lr
;;;11402  
                          ENDP


                          AREA ||i.write_settings||, CODE, READONLY, ALIGN=1

                  write_settings PROC
;;;11418  
;;;11419      static int write_settings(                    /* ARGUMENTS                   */
000000  b570              PUSH     {r4-r6,lr}
;;;11420      setup_pointer settings)                       /* pointer to machine settings */
;;;11421      {
000002  4604              MOV      r4,r0
;;;11422          double * vals;
;;;11423  
;;;11424          vals SET_TO settings->active_settings;
000004  f1040050          ADD      r0,r4,#0x50
000008  4605              MOV      r5,r0
;;;11425          vals[0] SET_TO settings->sequence_number; /* 0 sequence number */
00000a  f24b1190          MOV      r1,#0xb190
00000e  5909              LDR      r1,[r1,r4]
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       __aeabi_i2d
000016  e9c50100          STRD     r0,r1,[r5,#0]
;;;11426          vals[1] SET_TO settings->feed_rate;       /* 1 feed rate       */
00001a  f5046081          ADD      r0,r4,#0x408
00001e  c803              LDM      r0,{r0,r1}
000020  e9c50102          STRD     r0,r1,[r5,#8]
;;;11427          vals[2] SET_TO settings->speed;           /* 2 spindle speed   */
000024  f5044030          ADD      r0,r4,#0xb000
000028  f50070cc          ADD      r0,r0,#0x198
00002c  c803              LDM      r0,{r0,r1}
00002e  e9c50104          STRD     r0,r1,[r5,#0x10]
;;;11428  
;;;11429          return RS274NGC_OK;
000032  f04f0000          MOV      r0,#0
;;;11430      }
000036  bd70              POP      {r4-r6,pc}
;;;11431  
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  _setup
                          %        52616

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _gees
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000002
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000002
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000002
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000006
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000006
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000007
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000007
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000007
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000008
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000008
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000c
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000c
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000c
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000c
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000c
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000c
                          DCD      0x0000000c
                          DCD      0x0000000c
                          DCD      0x0000000c
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000d
                          DCD      0x0000000d
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000d
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000003
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000003
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000005
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000005
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000a
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x0000000a
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                  _ems
                          DCD      0x00000004
                          DCD      0x00000004
                          DCD      0x00000004
                          DCD      0x00000007
                          DCD      0x00000007
                          DCD      0x00000007
                          DCD      0x00000006
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000004
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000009
                          DCD      0x00000009
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000004
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                  _required_parameters
                          DCD      0x00001429
                          DCD      0x0000142a
                          DCD      0x0000142b
                          DCD      0x0000143d
                          DCD      0x0000143e
                          DCD      0x0000143f
                          DCD      0x0000145b
                          DCD      0x0000145c
                          DCD      0x0000145d
                          DCD      0x00001464
                          DCD      0x00001465
                          DCD      0x00001466
                          DCD      0x00001467
                          DCD      0x00001479
                          DCD      0x0000147a
                          DCD      0x0000147b
                          DCD      0x0000148d
                          DCD      0x0000148e
                          DCD      0x0000148f
                          DCD      0x000014a1
                          DCD      0x000014a2
                          DCD      0x000014a3
                          DCD      0x000014b5
                          DCD      0x000014b6
                          DCD      0x000014b7
                          DCD      0x000014c9
                          DCD      0x000014ca
                          DCD      0x000014cb
                          DCD      0x000014dd
                          DCD      0x000014de
                          DCD      0x000014df
                          DCD      0x000014f1
                          DCD      0x000014f2
                          DCD      0x000014f3
                          DCD      0x00001505
                          DCD      0x00001506
                          DCD      0x00001507
                          DCD      0x00001518
                  _readers
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_parameter_setting
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_comment
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_a
                          DCD      read_b
                          DCD      read_c
                          DCD      read_d
                          DCD      0x00000000
                          DCD      read_f
                          DCD      read_g
                          DCD      read_h
                          DCD      read_i
                          DCD      read_j
                          DCD      read_k
                          DCD      read_l
                          DCD      read_m
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_p
                          DCD      read_q
                          DCD      read_r
                          DCD      read_s
                          DCD      read_t
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_x
                          DCD      read_y
                          DCD      read_z

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  4e6f2065          DCB      "No error",0
000004  72726f72
000008  00      
000009  41206669          DCB      "A file is already open",0
00000d  6c652069
000011  7320616c
000015  72656164
000019  79206f70
00001d  656e00  
000020  416c6c20          DCB      "All axes missing with g92",0
000024  61786573
000028  206d6973
00002c  73696e67
000030  20776974
000034  68206739
000038  3200    
00003a  416c6c20          DCB      "All axes missing with motion code",0
00003e  61786573
000042  206d6973
000046  73696e67
00004a  20776974
00004e  68206d6f
000052  74696f6e
000056  20636f64
00005a  6500    
00005c  41726320          DCB      "Arc radius too small to reach end point",0
000060  72616469
000064  75732074
000068  6f6f2073
00006c  6d616c6c
000070  20746f20
000074  72656163
000078  6820656e
00007c  6420706f
000080  696e7400
000084  41726775          DCB      "Argument to acos out of range",0
000088  6d656e74
00008c  20746f20
000090  61636f73
000094  206f7574
000098  206f6620
00009c  72616e67
0000a0  6500    
0000a2  41726775          DCB      "Argument to asin out of range",0
0000a6  6d656e74
0000aa  20746f20
0000ae  6173696e
0000b2  206f7574
0000b6  206f6620
0000ba  72616e67
0000be  6500    
0000c0  41747465          DCB      "Attempt to divide by zero",0
0000c4  6d707420
0000c8  746f2064
0000cc  69766964
0000d0  65206279
0000d4  207a6572
0000d8  6f00    
0000da  41747465          DCB      "Attempt to raise negative to non integer power",0
0000de  6d707420
0000e2  746f2072
0000e6  61697365
0000ea  206e6567
0000ee  61746976
0000f2  6520746f
0000f6  206e6f6e
0000fa  20696e74
0000fe  65676572
000102  20706f77
000106  657200  
000109  42616420          DCB      "Bad character used",0
00010d  63686172
000111  61637465
000115  72207573
000119  656400  
00011c  42616420          DCB      "Bad format unsigned integer",0
000120  666f726d
000124  61742075
000128  6e736967
00012c  6e656420
000130  696e7465
000134  67657200
000138  42616420          DCB      "Bad number format",0
00013c  6e756d62
000140  65722066
000144  6f726d61
000148  7400    
00014a  42756720          DCB      "Bug bad g code modal group 0",0
00014e  62616420
000152  6720636f
000156  6465206d
00015a  6f64616c
00015e  2067726f
000162  75702030
000166  00      
000167  42756720          DCB      "Bug code not g0 or g1",0
00016b  636f6465
00016f  206e6f74
000173  20673020
000177  6f722067
00017b  3100    
00017d  42756720          DCB      "Bug code not g17 g18 or g19",0
000181  636f6465
000185  206e6f74
000189  20673137
00018d  20673138
000191  206f7220
000195  67313900
000199  42756720          DCB      "Bug code not g20 or g21",0
00019d  636f6465
0001a1  206e6f74
0001a5  20673230
0001a9  206f7220
0001ad  67323100
0001b1  42756720          DCB      "Bug code not g28 or g30",0
0001b5  636f6465
0001b9  206e6f74
0001bd  20673238
0001c1  206f7220
0001c5  67333000
0001c9  42756720          DCB      "Bug code not g2 or g3",0
0001cd  636f6465
0001d1  206e6f74
0001d5  20673220
0001d9  6f722067
0001dd  3300    
0001df  42756720          DCB      "Bug code not g40 g41 or g42",0
0001e3  636f6465
0001e7  206e6f74
0001eb  20673430
0001ef  20673431
0001f3  206f7220
0001f7  67343200
0001fb  42756720          DCB      "Bug code not g43 or g49",0
0001ff  636f6465
000203  206e6f74
000207  20673433
00020b  206f7220
00020f  67343900
000213  42756720          DCB      "Bug code not g4 g10 g28 g30 g53 or g92 series",0
000217  636f6465
00021b  206e6f74
00021f  20673420
000223  67313020
000227  67323820
00022b  67333020
00022f  67353320
000233  6f722067
000237  39322073
00023b  65726965
00023f  7300    
000241  42756720          DCB      "Bug code not g61 g61 1 or g64",0
000245  636f6465
000249  206e6f74
00024d  20673631
000251  20673631
000255  2031206f
000259  72206736
00025d  3400    
00025f  42756720          DCB      "Bug code not g90 or g91",0
000263  636f6465
000267  206e6f74
00026b  20673930
00026f  206f7220
000273  67393100
000277  42756720          DCB      "Bug code not g93 or g94",0
00027b  636f6465
00027f  206e6f74
000283  20673933
000287  206f7220
00028b  67393400
00028f  42756720          DCB      "Bug code not g98 or g99",0
000293  636f6465
000297  206e6f74
00029b  20673938
00029f  206f7220
0002a3  67393900
0002a7  42756720          DCB      "Bug code not in g92 series",0
0002ab  636f6465
0002af  206e6f74
0002b3  20696e20
0002b7  67393220
0002bb  73657269
0002bf  657300  
0002c2  42756720          DCB      "Bug code not in range g54 to g593",0
0002c6  636f6465
0002ca  206e6f74
0002ce  20696e20
0002d2  72616e67
0002d6  65206735
0002da  3420746f
0002de  20673539
0002e2  3300    
0002e4  42756720          DCB      "Bug code not m0 m1 m2 m30 m60",0
0002e8  636f6465
0002ec  206e6f74
0002f0  206d3020
0002f4  6d31206d
0002f8  32206d33
0002fc  30206d36
000300  3000    
000302  42756720          DCB      "Bug distance mode not g90 or g91",0
000306  64697374
00030a  616e6365
00030e  206d6f64
000312  65206e6f
000316  74206739
00031a  30206f72
00031e  20673931
000322  00      
000323  42756720          DCB      "Bug function should not have been called",0
000327  66756e63
00032b  74696f6e
00032f  2073686f
000333  756c6420
000337  6e6f7420
00033b  68617665
00033f  20626565
000343  6e206361
000347  6c6c6564
00034b  00      
00034c  42756720          DCB      "Bug in tool radius comp",0
000350  696e2074
000354  6f6f6c20
000358  72616469
00035c  75732063
000360  6f6d7000
000364  42756720          DCB      "Bug plane not xy yz or xz",0
000368  706c616e
00036c  65206e6f
000370  74207879
000374  20797a20
000378  6f722078
00037c  7a00    
00037e  42756720          DCB      "Bug side not right or left",0
000382  73696465
000386  206e6f74
00038a  20726967
00038e  6874206f
000392  72206c65
000396  667400  
000399  42756720          DCB      "Bug unknown motion code",0
00039d  756e6b6e
0003a1  6f776e20
0003a5  6d6f7469
0003a9  6f6e2063
0003ad  6f646500
0003b1  42756720          DCB      "Bug unknown operation",0
0003b5  756e6b6e
0003b9  6f776e20
0003bd  6f706572
0003c1  6174696f
0003c5  6e00    
0003c7  43616e6e          DCB      "Cannot change axis offsets with cutter radius comp",0
0003cb  6f742063
0003cf  68616e67
0003d3  65206178
0003d7  6973206f
0003db  66667365
0003df  74732077
0003e3  69746820
0003e7  63757474
0003eb  65722072
0003ef  61646975
0003f3  7320636f
0003f7  6d7000  
0003fa  43616e6e          DCB      "Cannot change units with cutter radius comp",0
0003fe  6f742063
000402  68616e67
000406  6520756e
00040a  69747320
00040e  77697468
000412  20637574
000416  74657220
00041a  72616469
00041e  75732063
000422  6f6d7000
000426  43616e6e          DCB      "Cannot create backup file",0
00042a  6f742063
00042e  72656174
000432  65206261
000436  636b7570
00043a  2066696c
00043e  6500    
000440  43616e6e          DCB      "Cannot do g1 with zero feed rate",0
000444  6f742064
000448  6f206731
00044c  20776974
000450  68207a65
000454  726f2066
000458  65656420
00045c  72617465
000460  00      
000461  43616e6e          DCB      "Cannot do zero repeats of cycle",0
000465  6f742064
000469  6f207a65
00046d  726f2072
000471  65706561
000475  7473206f
000479  66206379
00047d  636c6500
000481  43616e6e          DCB      "Cannot make arc with zero feed rate",0
000485  6f74206d
000489  616b6520
00048d  61726320
000491  77697468
000495  207a6572
000499  6f206665
00049d  65642072
0004a1  61746500
0004a5  43616e6e          DCB      "Cannot move rotary axes during probing",0
0004a9  6f74206d
0004ad  6f766520
0004b1  726f7461
0004b5  72792061
0004b9  78657320
0004bd  64757269
0004c1  6e672070
0004c5  726f6269
0004c9  6e6700  
0004cc  43616e6e          DCB      "Cannot open backup file",0
0004d0  6f74206f
0004d4  70656e20
0004d8  6261636b
0004dc  75702066
0004e0  696c6500
0004e4  43616e6e          DCB      "Cannot open variable file",0
0004e8  6f74206f
0004ec  70656e20
0004f0  76617269
0004f4  61626c65
0004f8  2066696c
0004fc  6500    
0004fe  43616e6e          DCB      "Cannot probe in inverse time feed mode",0
000502  6f742070
000506  726f6265
00050a  20696e20
00050e  696e7665
000512  72736520
000516  74696d65
00051a  20666565
00051e  64206d6f
000522  646500  
000525  43616e6e          DCB      "Cannot probe with cutter radius comp on",0
000529  6f742070
00052d  726f6265
000531  20776974
000535  68206375
000539  74746572
00053d  20726164
000541  69757320
000545  636f6d70
000549  206f6e00
00054d  43616e6e          DCB      "Cannot probe with zero feed rate",0
000551  6f742070
000555  726f6265
000559  20776974
00055d  68207a65
000561  726f2066
000565  65656420
000569  72617465
00056d  00      
00056e  43616e6e          DCB      "Cannot put a b in canned cycle",0
000572  6f742070
000576  75742061
00057a  20622069
00057e  6e206361
000582  6e6e6564
000586  20637963
00058a  6c6500  
00058d  43616e6e          DCB      "Cannot put a c in canned cycle",0
000591  6f742070
000595  75742061
000599  20632069
00059d  6e206361
0005a1  6e6e6564
0005a5  20637963
0005a9  6c6500  
0005ac  43616e6e          DCB      "Cannot put an a in canned cycle",0
0005b0  6f742070
0005b4  75742061
0005b8  6e206120
0005bc  696e2063
0005c0  616e6e65
0005c4  64206379
0005c8  636c6500
0005cc  43616e6e          DCB      "Cannot turn cutter radius comp on out of xy plane",0
0005d0  6f742074
0005d4  75726e20
0005d8  63757474
0005dc  65722072
0005e0  61646975
0005e4  7320636f
0005e8  6d70206f
0005ec  6e206f75
0005f0  74206f66
0005f4  20787920
0005f8  706c616e
0005fc  6500    
0005fe  43616e6e          DCB      "Cannot turn cutter radius comp on when on",0
000602  6f742074
000606  75726e20
00060a  63757474
00060e  65722072
000612  61646975
000616  7320636f
00061a  6d70206f
00061e  6e207768
000622  656e206f
000626  6e00    
000628  43616e6e          DCB      "Cannot use a word",0
00062c  6f742075
000630  73652061
000634  20776f72
000638  6400    
00063a  43616e6e          DCB      "Cannot use axis values with g80",0
00063e  6f742075
000642  73652061
000646  78697320
00064a  76616c75
00064e  65732077
000652  69746820
000656  67383000
00065a  43616e6e          DCB      "Cannot use axis values without a g code that uses them",0
00065e  6f742075
000662  73652061
000666  78697320
00066a  76616c75
00066e  65732077
000672  6974686f
000676  75742061
00067a  20672063
00067e  6f646520
000682  74686174
000686  20757365
00068a  73207468
00068e  656d00  
000691  43616e6e          DCB      "Cannot use b word",0
000695  6f742075
000699  73652062
00069d  20776f72
0006a1  6400    
0006a3  43616e6e          DCB      "Cannot use c word",0
0006a7  6f742075
0006ab  73652063
0006af  20776f72
0006b3  6400    
0006b5  43616e6e          DCB      "Cannot use g28 or g30 with cutter radius comp",0
0006b9  6f742075
0006bd  73652067
0006c1  3238206f
0006c5  72206733
0006c9  30207769
0006cd  74682063
0006d1  75747465
0006d5  72207261
0006d9  64697573
0006dd  20636f6d
0006e1  7000    
0006e3  43616e6e          DCB      "Cannot use g53 incremental",0
0006e7  6f742075
0006eb  73652067
0006ef  35332069
0006f3  6e637265
0006f7  6d656e74
0006fb  616c00  
0006fe  43616e6e          DCB      "Cannot use g53 with cutter radius comp",0
000702  6f742075
000706  73652067
00070a  35332077
00070e  69746820
000712  63757474
000716  65722072
00071a  61646975
00071e  7320636f
000722  6d7000  
000725  43616e6e          DCB      "Cannot use two g codes that both use axis values",0
000729  6f742075
00072d  73652074
000731  776f2067
000735  20636f64
000739  65732074
00073d  68617420
000741  626f7468
000745  20757365
000749  20617869
00074d  73207661
000751  6c756573
000755  00      
000756  43616e6e          DCB      "Cannot use xz plane with cutter radius comp",0
00075a  6f742075
00075e  73652078
000762  7a20706c
000766  616e6520
00076a  77697468
00076e  20637574
000772  74657220
000776  72616469
00077a  75732063
00077e  6f6d7000
000782  43616e6e          DCB      "Cannot use yz plane with cutter radius comp",0
000786  6f742075
00078a  73652079
00078e  7a20706c
000792  616e6520
000796  77697468
00079a  20637574
00079e  74657220
0007a2  72616469
0007a6  75732063
0007aa  6f6d7000
0007ae  436f6d6d          DCB      "Command too long",0
0007b2  616e6420
0007b6  746f6f20
0007ba  6c6f6e67
0007be  00      
0007bf  436f6e63          DCB      "Concave corner with cutter radius comp",0
0007c3  61766520
0007c7  636f726e
0007cb  65722077
0007cf  69746820
0007d3  63757474
0007d7  65722072
0007db  61646975
0007df  7320636f
0007e3  6d7000  
0007e6  436f6f72          DCB      "Coordinate system index parameter 5220 out of range",0
0007ea  64696e61
0007ee  74652073
0007f2  79737465
0007f6  6d20696e
0007fa  64657820
0007fe  70617261
000802  6d657465
000806  72203532
00080a  3230206f
00080e  7574206f
000812  66207261
000816  6e676500
00081a  43757272          DCB      "Current point same as end point of arc",0
00081e  656e7420
000822  706f696e
000826  74207361
00082a  6d652061
00082e  7320656e
000832  6420706f
000836  696e7420
00083a  6f662061
00083e  726300  
000841  43757474          DCB      "Cutter gouging with cutter radius comp",0
000845  65722067
000849  6f756769
00084d  6e672077
000851  69746820
000855  63757474
000859  65722072
00085d  61646975
000861  7320636f
000865  6d7000  
000868  4420776f          DCB      "D word with no g41 or g42",0
00086c  72642077
000870  69746820
000874  6e6f2067
000878  3431206f
00087c  72206734
000880  3200    
000882  4477656c          DCB      "Dwell time missing with g4",0
000886  6c207469
00088a  6d65206d
00088e  69737369
000892  6e672077
000896  69746820
00089a  673400  
00089d  4477656c          DCB      "Dwell time p word missing with g82",0
0008a1  6c207469
0008a5  6d652070
0008a9  20776f72
0008ad  64206d69
0008b1  7373696e
0008b5  67207769
0008b9  74682067
0008bd  383200  
0008c0  4477656c          DCB      "Dwell time p word missing with g86",0
0008c4  6c207469
0008c8  6d652070
0008cc  20776f72
0008d0  64206d69
0008d4  7373696e
0008d8  67207769
0008dc  74682067
0008e0  383600  
0008e3  4477656c          DCB      "Dwell time p word missing with g88",0
0008e7  6c207469
0008eb  6d652070
0008ef  20776f72
0008f3  64206d69
0008f7  7373696e
0008fb  67207769
0008ff  74682067
000903  383800  
000906  4477656c          DCB      "Dwell time p word missing with g89",0
00090a  6c207469
00090e  6d652070
000912  20776f72
000916  64206d69
00091a  7373696e
00091e  67207769
000922  74682067
000926  383900  
000929  45717561          DCB      "Equal sign missing in parameter setting",0
00092d  6c207369
000931  676e206d
000935  69737369
000939  6e672069
00093d  6e207061
000941  72616d65
000945  74657220
000949  73657474
00094d  696e6700
000951  4620776f          DCB      "F word missing with inverse time arc move",0
000955  7264206d
000959  69737369
00095d  6e672077
000961  69746820
000965  696e7665
000969  72736520
00096d  74696d65
000971  20617263
000975  206d6f76
000979  6500    
00097b  4620776f          DCB      "F word missing with inverse time g1 move",0
00097f  7264206d
000983  69737369
000987  6e672077
00098b  69746820
00098f  696e7665
000993  72736520
000997  74696d65
00099b  20673120
00099f  6d6f7665
0009a3  00      
0009a4  46696c65          DCB      "File ended with no percent sign",0
0009a8  20656e64
0009ac  65642077
0009b0  69746820
0009b4  6e6f2070
0009b8  65726365
0009bc  6e742073
0009c0  69676e00
0009c4  46696c65          DCB      "File ended with no percent sign or program end",0
0009c8  20656e64
0009cc  65642077
0009d0  69746820
0009d4  6e6f2070
0009d8  65726365
0009dc  6e742073
0009e0  69676e20
0009e4  6f722070
0009e8  726f6772
0009ec  616d2065
0009f0  6e6400  
0009f3  46696c65          DCB      "File name too long",0
0009f7  206e616d
0009fb  6520746f
0009ff  6f206c6f
000a03  6e6700  
000a06  46696c65          DCB      "File not open",0
000a0a  206e6f74
000a0e  206f7065
000a12  6e00    
000a14  4720636f          DCB      "G code out of range",0
000a18  6465206f
000a1c  7574206f
000a20  66207261
000a24  6e676500
000a28  4820776f          DCB      "H word with no g43",0
000a2c  72642077
000a30  69746820
000a34  6e6f2067
000a38  343300  
000a3b  4920776f          DCB      "I word given for arc in yz plane",0
000a3f  72642067
000a43  6976656e
000a47  20666f72
000a4b  20617263
000a4f  20696e20
000a53  797a2070
000a57  6c616e65
000a5b  00      
000a5c  4920776f          DCB      "I word missing with g87",0
000a60  7264206d
000a64  69737369
000a68  6e672077
000a6c  69746820
000a70  67383700
000a74  4920776f          DCB      "I word with no g2 or g3 or g87 to use it",0
000a78  72642077
000a7c  69746820
000a80  6e6f2067
000a84  32206f72
000a88  20673320
000a8c  6f722067
000a90  38372074
000a94  6f207573
000a98  65206974
000a9c  00      
000a9d  4a20776f          DCB      "J word given for arc in xz plane",0
000aa1  72642067
000aa5  6976656e
000aa9  20666f72
000aad  20617263
000ab1  20696e20
000ab5  787a2070
000ab9  6c616e65
000abd  00      
000abe  4a20776f          DCB      "J word missing with g87",0
000ac2  7264206d
000ac6  69737369
000aca  6e672077
000ace  69746820
000ad2  67383700
000ad6  4a20776f          DCB      "J word with no g2 or g3 or g87 to use it",0
000ada  72642077
000ade  69746820
000ae2  6e6f2067
000ae6  32206f72
000aea  20673320
000aee  6f722067
000af2  38372074
000af6  6f207573
000afa  65206974
000afe  00      
000aff  4b20776f          DCB      "K word given for arc in xy plane",0
000b03  72642067
000b07  6976656e
000b0b  20666f72
000b0f  20617263
000b13  20696e20
000b17  78792070
000b1b  6c616e65
000b1f  00      
000b20  4b20776f          DCB      "K word missing with g87",0
000b24  7264206d
000b28  69737369
000b2c  6e672077
000b30  69746820
000b34  67383700
000b38  4b20776f          DCB      "K word with no g2 or g3 or g87 to use it",0
000b3c  72642077
000b40  69746820
000b44  6e6f2067
000b48  32206f72
000b4c  20673320
000b50  6f722067
000b54  38372074
000b58  6f207573
000b5c  65206974
000b60  00      
000b61  4c20776f          DCB      "L word with no canned cycle or g10",0
000b65  72642077
000b69  69746820
000b6d  6e6f2063
000b71  616e6e65
000b75  64206379
000b79  636c6520
000b7d  6f722067
000b81  313000  
000b84  4c656674          DCB      "Left bracket missing after slash with atan",0
000b88  20627261
000b8c  636b6574
000b90  206d6973
000b94  73696e67
000b98  20616674
000b9c  65722073
000ba0  6c617368
000ba4  20776974
000ba8  68206174
000bac  616e00  
000baf  4c656674          DCB      "Left bracket missing after unary operation name",0
000bb3  20627261
000bb7  636b6574
000bbb  206d6973
000bbf  73696e67
000bc3  20616674
000bc7  65722075
000bcb  6e617279
000bcf  206f7065
000bd3  72617469
000bd7  6f6e206e
000bdb  616d6500
000bdf  4c696e65          DCB      "Line number greater than 99999",0
000be3  206e756d
000be7  62657220
000beb  67726561
000bef  74657220
000bf3  7468616e
000bf7  20393939
000bfb  393900  
000bfe  4c696e65          DCB      "Line with g10 does not have l2",0
000c02  20776974
000c06  68206731
000c0a  3020646f
000c0e  6573206e
000c12  6f742068
000c16  61766520
000c1a  6c3200  
000c1d  4d20636f          DCB      "M code greater than 99",0
000c21  64652067
000c25  72656174
000c29  65722074
000c2d  68616e20
000c31  393900  
000c34  4d697865          DCB      "Mixed radius ijk format for arc",0
000c38  64207261
000c3c  64697573
000c40  20696a6b
000c44  20666f72
000c48  6d617420
000c4c  666f7220
000c50  61726300
000c54  4d756c74          DCB      "Multiple a words on one line",0
000c58  69706c65
000c5c  20612077
000c60  6f726473
000c64  206f6e20
000c68  6f6e6520
000c6c  6c696e65
000c70  00      
000c71  4d756c74          DCB      "Multiple b words on one line",0
000c75  69706c65
000c79  20622077
000c7d  6f726473
000c81  206f6e20
000c85  6f6e6520
000c89  6c696e65
000c8d  00      
000c8e  4d756c74          DCB      "Multiple c words on one line",0
000c92  69706c65
000c96  20632077
000c9a  6f726473
000c9e  206f6e20
000ca2  6f6e6520
000ca6  6c696e65
000caa  00      
000cab  4d756c74          DCB      "Multiple d words on one line",0
000caf  69706c65
000cb3  20642077
000cb7  6f726473
000cbb  206f6e20
000cbf  6f6e6520
000cc3  6c696e65
000cc7  00      
000cc8  4d756c74          DCB      "Multiple f words on one line",0
000ccc  69706c65
000cd0  20662077
000cd4  6f726473
000cd8  206f6e20
000cdc  6f6e6520
000ce0  6c696e65
000ce4  00      
000ce5  4d756c74          DCB      "Multiple h words on one line",0
000ce9  69706c65
000ced  20682077
000cf1  6f726473
000cf5  206f6e20
000cf9  6f6e6520
000cfd  6c696e65
000d01  00      
000d02  4d756c74          DCB      "Multiple i words on one line",0
000d06  69706c65
000d0a  20692077
000d0e  6f726473
000d12  206f6e20
000d16  6f6e6520
000d1a  6c696e65
000d1e  00      
000d1f  4d756c74          DCB      "Multiple j words on one line",0
000d23  69706c65
000d27  206a2077
000d2b  6f726473
000d2f  206f6e20
000d33  6f6e6520
000d37  6c696e65
000d3b  00      
000d3c  4d756c74          DCB      "Multiple k words on one line",0
000d40  69706c65
000d44  206b2077
000d48  6f726473
000d4c  206f6e20
000d50  6f6e6520
000d54  6c696e65
000d58  00      
000d59  4d756c74          DCB      "Multiple l words on one line",0
000d5d  69706c65
000d61  206c2077
000d65  6f726473
000d69  206f6e20
000d6d  6f6e6520
000d71  6c696e65
000d75  00      
000d76  4d756c74          DCB      "Multiple p words on one line",0
000d7a  69706c65
000d7e  20702077
000d82  6f726473
000d86  206f6e20
000d8a  6f6e6520
000d8e  6c696e65
000d92  00      
000d93  4d756c74          DCB      "Multiple q words on one line",0
000d97  69706c65
000d9b  20712077
000d9f  6f726473
000da3  206f6e20
000da7  6f6e6520
000dab  6c696e65
000daf  00      
000db0  4d756c74          DCB      "Multiple r words on one line",0
000db4  69706c65
000db8  20722077
000dbc  6f726473
000dc0  206f6e20
000dc4  6f6e6520
000dc8  6c696e65
000dcc  00      
000dcd  4d756c74          DCB      "Multiple s words on one line",0
000dd1  69706c65
000dd5  20732077
000dd9  6f726473
000ddd  206f6e20
000de1  6f6e6520
000de5  6c696e65
000de9  00      
000dea  4d756c74          DCB      "Multiple t words on one line",0
000dee  69706c65
000df2  20742077
000df6  6f726473
000dfa  206f6e20
000dfe  6f6e6520
000e02  6c696e65
000e06  00      
000e07  4d756c74          DCB      "Multiple x words on one line",0
000e0b  69706c65
000e0f  20782077
000e13  6f726473
000e17  206f6e20
000e1b  6f6e6520
000e1f  6c696e65
000e23  00      
000e24  4d756c74          DCB      "Multiple y words on one line",0
000e28  69706c65
000e2c  20792077
000e30  6f726473
000e34  206f6e20
000e38  6f6e6520
000e3c  6c696e65
000e40  00      
000e41  4d756c74          DCB      "Multiple z words on one line",0
000e45  69706c65
000e49  207a2077
000e4d  6f726473
000e51  206f6e20
000e55  6f6e6520
000e59  6c696e65
000e5d  00      
000e5e  4d757374          DCB      "Must use g0 or g1 with g53",0
000e62  20757365
000e66  20673020
000e6a  6f722067
000e6e  31207769
000e72  74682067
000e76  353300  
000e79  4e656761          DCB      "Negative argument to sqrt",0
000e7d  74697665
000e81  20617267
000e85  756d656e
000e89  7420746f
000e8d  20737172
000e91  7400    
000e93  4e656761          DCB      "Negative d word tool radius index used",0
000e97  74697665
000e9b  20642077
000e9f  6f726420
000ea3  746f6f6c
000ea7  20726164
000eab  69757320
000eaf  696e6465
000eb3  78207573
000eb7  656400  
000eba  4e656761          DCB      "Negative f word used",0
000ebe  74697665
000ec2  20662077
000ec6  6f726420
000eca  75736564
000ece  00      
000ecf  4e656761          DCB      "Negative g code used",0
000ed3  74697665
000ed7  20672063
000edb  6f646520
000edf  75736564
000ee3  00      
000ee4  4e656761          DCB      "Negative h word tool length offset index used",0
000ee8  74697665
000eec  20682077
000ef0  6f726420
000ef4  746f6f6c
000ef8  206c656e
000efc  67746820
000f00  6f666673
000f04  65742069
000f08  6e646578
000f0c  20757365
000f10  6400    
000f12  4e656761          DCB      "Negative l word used",0
000f16  74697665
000f1a  206c2077
000f1e  6f726420
000f22  75736564
000f26  00      
000f27  4e656761          DCB      "Negative m code used",0
000f2b  74697665
000f2f  206d2063
000f33  6f646520
000f37  75736564
000f3b  00      
000f3c  4e656761          DCB      "Negative or zero q value used",0
000f40  74697665
000f44  206f7220
000f48  7a65726f
000f4c  20712076
000f50  616c7565
000f54  20757365
000f58  6400    
000f5a  4e656761          DCB      "Negative p word used",0
000f5e  74697665
000f62  20702077
000f66  6f726420
000f6a  75736564
000f6e  00      
000f6f  4e656761          DCB      "Negative spindle speed used",0
000f73  74697665
000f77  20737069
000f7b  6e646c65
000f7f  20737065
000f83  65642075
000f87  73656400
000f8b  4e656761          DCB      "Negative tool id used",0
000f8f  74697665
000f93  20746f6f
000f97  6c206964
000f9b  20757365
000f9f  6400    
000fa1  4e657374          DCB      "Nested comment found",0
000fa5  65642063
000fa9  6f6d6d65
000fad  6e742066
000fb1  6f756e64
000fb5  00      
000fb6  4e6f2063          DCB      "No characters found in reading real value",0
000fba  68617261
000fbe  63746572
000fc2  7320666f
000fc6  756e6420
000fca  696e2072
000fce  65616469
000fd2  6e672072
000fd6  65616c20
000fda  76616c75
000fde  6500    
000fe0  4e6f2064          DCB      "No digits found where real number should be",0
000fe4  69676974
000fe8  7320666f
000fec  756e6420
000ff0  77686572
000ff4  65207265
000ff8  616c206e
000ffc  756d6265
001000  72207368
001004  6f756c64
001008  20626500
00100c  4e6f6e20          DCB      "Non integer value for integer",0
001010  696e7465
001014  67657220
001018  76616c75
00101c  6520666f
001020  7220696e
001024  74656765
001028  7200    
00102a  4e756c6c          DCB      "Null missing after newline",0
00102e  206d6973
001032  73696e67
001036  20616674
00103a  6572206e
00103e  65776c69
001042  6e6500  
001045  4f666673          DCB      "Offset index missing",0
001049  65742069
00104d  6e646578
001051  206d6973
001055  73696e67
001059  00      
00105a  50207661          DCB      "P value not an integer with g10 l2",0
00105e  6c756520
001062  6e6f7420
001066  616e2069
00106a  6e746567
00106e  65722077
001072  69746820
001076  67313020
00107a  6c3200  
00107d  50207661          DCB      "P value out of range with g10 l2",0
001081  6c756520
001085  6f757420
001089  6f662072
00108d  616e6765
001091  20776974
001095  68206731
001099  30206c32
00109d  00      
00109e  5020776f          DCB      "P word with no g4 g10 g82 g86 g88 g89",0
0010a2  72642077
0010a6  69746820
0010aa  6e6f2067
0010ae  34206731
0010b2  30206738
0010b6  32206738
0010ba  36206738
0010be  38206738
0010c2  3900    
0010c4  50617261          DCB      "Parameter file out of order",0
0010c8  6d657465
0010cc  72206669
0010d0  6c65206f
0010d4  7574206f
0010d8  66206f72
0010dc  64657200
0010e0  50617261          DCB      "Parameter number out of range",0
0010e4  6d657465
0010e8  72206e75
0010ec  6d626572
0010f0  206f7574
0010f4  206f6620
0010f8  72616e67
0010fc  6500    
0010fe  5120776f          DCB      "Q word missing with g83",0
001102  7264206d
001106  69737369
00110a  6e672077
00110e  69746820
001112  67383300
001116  5120776f          DCB      "Q word with no g83",0
00111a  72642077
00111e  69746820
001122  6e6f2067
001126  383300  
001129  51756575          DCB      "Queue is not empty after probing",0
00112d  65206973
001131  206e6f74
001135  20656d70
001139  74792061
00113d  66746572
001141  2070726f
001145  62696e67
001149  00      
00114a  5220636c          DCB      "R clearance plane unspecified in cycle",0
00114e  65617261
001152  6e636520
001156  706c616e
00115a  6520756e
00115e  73706563
001162  69666965
001166  6420696e
00116a  20637963
00116e  6c6500  
001171  52206920          DCB      "R i j k words all missing for arc",0
001175  6a206b20
001179  776f7264
00117d  7320616c
001181  6c206d69
001185  7373696e
001189  6720666f
00118d  72206172
001191  6300    
001193  52206c65          DCB      "R less than x in cycle in yz plane",0
001197  73732074
00119b  68616e20
00119f  7820696e
0011a3  20637963
0011a7  6c652069
0011ab  6e20797a
0011af  20706c61
0011b3  6e6500  
0011b6  52206c65          DCB      "R less than y in cycle in xz plane",0
0011ba  73732074
0011be  68616e20
0011c2  7920696e
0011c6  20637963
0011ca  6c652069
0011ce  6e20787a
0011d2  20706c61
0011d6  6e6500  
0011d9  52206c65          DCB      "R less than z in cycle in xy plane",0
0011dd  73732074
0011e1  68616e20
0011e5  7a20696e
0011e9  20637963
0011ed  6c652069
0011f1  6e207879
0011f5  20706c61
0011f9  6e6500  
0011fc  5220776f          DCB      "R word with no g code that uses it",0
001200  72642077
001204  69746820
001208  6e6f2067
00120c  20636f64
001210  65207468
001214  61742075
001218  73657320
00121c  697400  
00121f  52616469          DCB      "Radius to end of arc differs from radius to start",0
001223  75732074
001227  6f20656e
00122b  64206f66
00122f  20617263
001233  20646966
001237  66657273
00123b  2066726f
00123f  6d207261
001243  64697573
001247  20746f20
00124b  73746172
00124f  7400    
001251  52616469          DCB      "Radius too small to reach end point",0
001255  75732074
001259  6f6f2073
00125d  6d616c6c
001261  20746f20
001265  72656163
001269  6820656e
00126d  6420706f
001271  696e7400
001275  52657175          DCB      "Required parameter missing",0
001279  69726564
00127d  20706172
001281  616d6574
001285  6572206d
001289  69737369
00128d  6e6700  
001290  53656c65          DCB      "Selected tool slot number too large",0
001294  63746564
001298  20746f6f
00129c  6c20736c
0012a0  6f74206e
0012a4  756d6265
0012a8  7220746f
0012ac  6f206c61
0012b0  72676500
0012b4  536c6173          DCB      "Slash missing after first atan argument",0
0012b8  68206d69
0012bc  7373696e
0012c0  67206166
0012c4  74657220
0012c8  66697273
0012cc  74206174
0012d0  616e2061
0012d4  7267756d
0012d8  656e7400
0012dc  5370696e          DCB      "Spindle not turning clockwise in g84",0
0012e0  646c6520
0012e4  6e6f7420
0012e8  7475726e
0012ec  696e6720
0012f0  636c6f63
0012f4  6b776973
0012f8  6520696e
0012fc  20673834
001300  00      
001301  5370696e          DCB      "Spindle not turning in g86",0
001305  646c6520
001309  6e6f7420
00130d  7475726e
001311  696e6720
001315  696e2067
001319  383600  
00131c  5370696e          DCB      "Spindle not turning in g87",0
001320  646c6520
001324  6e6f7420
001328  7475726e
00132c  696e6720
001330  696e2067
001334  383700  
001337  5370696e          DCB      "Spindle not turning in g88",0
00133b  646c6520
00133f  6e6f7420
001343  7475726e
001347  696e6720
00134b  696e2067
00134f  383800  
001352  53736361          DCB      "Sscanf failed",0
001356  6e662066
00135a  61696c65
00135e  6400    
001360  53746172          DCB      "Start point too close to probe point",0
001364  7420706f
001368  696e7420
00136c  746f6f20
001370  636c6f73
001374  6520746f
001378  2070726f
00137c  62652070
001380  6f696e74
001384  00      
001385  546f6f20          DCB      "Too many m codes on line",0
001389  6d616e79
00138d  206d2063
001391  6f646573
001395  206f6e20
001399  6c696e65
00139d  00      
00139e  546f6f6c          DCB      "Tool length offset index too big",0
0013a2  206c656e
0013a6  67746820
0013aa  6f666673
0013ae  65742069
0013b2  6e646578
0013b6  20746f6f
0013ba  20626967
0013be  00      
0013bf  546f6f6c          DCB      "Tool max too large",0
0013c3  206d6178
0013c7  20746f6f
0013cb  206c6172
0013cf  676500  
0013d2  546f6f6c          DCB      "Tool radius index too big",0
0013d6  20726164
0013da  69757320
0013de  696e6465
0013e2  7820746f
0013e6  6f206269
0013ea  6700    
0013ec  546f6f6c          DCB      "Tool radius not less than arc radius with comp",0
0013f0  20726164
0013f4  69757320
0013f8  6e6f7420
0013fc  6c657373
001400  20746861
001404  6e206172
001408  63207261
00140c  64697573
001410  20776974
001414  6820636f
001418  6d7000  
00141b  54776f20          DCB      "Two g codes used from same modal group",0
00141f  6720636f
001423  64657320
001427  75736564
00142b  2066726f
00142f  6d207361
001433  6d65206d
001437  6f64616c
00143b  2067726f
00143f  757000  
001442  54776f20          DCB      "Two m codes used from same modal group",0
001446  6d20636f
00144a  64657320
00144e  75736564
001452  2066726f
001456  6d207361
00145a  6d65206d
00145e  6f64616c
001462  2067726f
001466  757000  
001469  556e6162          DCB      "Unable to open file",0
00146d  6c652074
001471  6f206f70
001475  656e2066
001479  696c6500
00147d  556e636c          DCB      "Unclosed comment found",0
001481  6f736564
001485  20636f6d
001489  6d656e74
00148d  20666f75
001491  6e6400  
001494  556e636c          DCB      "Unclosed expression",0
001498  6f736564
00149c  20657870
0014a0  72657373
0014a4  696f6e00
0014a8  556e6b6e          DCB      "Unknown g code used",0
0014ac  6f776e20
0014b0  6720636f
0014b4  64652075
0014b8  73656400
0014bc  556e6b6e          DCB      "Unknown m code used",0
0014c0  6f776e20
0014c4  6d20636f
0014c8  64652075
0014cc  73656400
0014d0  556e6b6e          DCB      "Unknown operation",0
0014d4  6f776e20
0014d8  6f706572
0014dc  6174696f
0014e0  6e00    
0014e2  556e6b6e          DCB      "Unknown operation name starting with a",0
0014e6  6f776e20
0014ea  6f706572
0014ee  6174696f
0014f2  6e206e61
0014f6  6d652073
0014fa  74617274
0014fe  696e6720
001502  77697468
001506  206100  
001509  556e6b6e          DCB      "Unknown operation name starting with m",0
00150d  6f776e20
001511  6f706572
001515  6174696f
001519  6e206e61
00151d  6d652073
001521  74617274
001525  696e6720
001529  77697468
00152d  206d00  
001530  556e6b6e          DCB      "Unknown operation name starting with o",0
001534  6f776e20
001538  6f706572
00153c  6174696f
001540  6e206e61
001544  6d652073
001548  74617274
00154c  696e6720
001550  77697468
001554  206f00  
001557  556e6b6e          DCB      "Unknown operation name starting with x",0
00155b  6f776e20
00155f  6f706572
001563  6174696f
001567  6e206e61
00156b  6d652073
00156f  74617274
001573  696e6720
001577  77697468
00157b  207800  
00157e  556e6b6e          DCB      "Unknown word starting with a",0
001582  6f776e20
001586  776f7264
00158a  20737461
00158e  7274696e
001592  67207769
001596  74682061
00159a  00      
00159b  556e6b6e          DCB      "Unknown word starting with c",0
00159f  6f776e20
0015a3  776f7264
0015a7  20737461
0015ab  7274696e
0015af  67207769
0015b3  74682063
0015b7  00      
0015b8  556e6b6e          DCB      "Unknown word starting with e",0
0015bc  6f776e20
0015c0  776f7264
0015c4  20737461
0015c8  7274696e
0015cc  67207769
0015d0  74682065
0015d4  00      
0015d5  556e6b6e          DCB      "Unknown word starting with f",0
0015d9  6f776e20
0015dd  776f7264
0015e1  20737461
0015e5  7274696e
0015e9  67207769
0015ed  74682066
0015f1  00      
0015f2  556e6b6e          DCB      "Unknown word starting with l",0
0015f6  6f776e20
0015fa  776f7264
0015fe  20737461
001602  7274696e
001606  67207769
00160a  7468206c
00160e  00      
00160f  556e6b6e          DCB      "Unknown word starting with r",0
001613  6f776e20
001617  776f7264
00161b  20737461
00161f  7274696e
001623  67207769
001627  74682072
00162b  00      
00162c  556e6b6e          DCB      "Unknown word starting with s",0
001630  6f776e20
001634  776f7264
001638  20737461
00163c  7274696e
001640  67207769
001644  74682073
001648  00      
001649  556e6b6e          DCB      "Unknown word starting with t",0
00164d  6f776e20
001651  776f7264
001655  20737461
001659  7274696e
00165d  67207769
001661  74682074
001665  00      
001666  556e6b6e          DCB      "Unknown word where unary operation could be",0
00166a  6f776e20
00166e  776f7264
001672  20776865
001676  72652075
00167a  6e617279
00167e  206f7065
001682  72617469
001686  6f6e2063
00168a  6f756c64
00168e  20626500
001692  5820616e          DCB      "X and y words missing for arc in xy plane",0
001696  64207920
00169a  776f7264
00169e  73206d69
0016a2  7373696e
0016a6  6720666f
0016aa  72206172
0016ae  6320696e
0016b2  20787920
0016b6  706c616e
0016ba  6500    
0016bc  5820616e          DCB      "X and z words missing for arc in xz plane",0
0016c0  64207a20
0016c4  776f7264
0016c8  73206d69
0016cc  7373696e
0016d0  6720666f
0016d4  72206172
0016d8  6320696e
0016dc  20787a20
0016e0  706c616e
0016e4  6500    
0016e6  58207661          DCB      "X value unspecified in yz plane canned cycle",0
0016ea  6c756520
0016ee  756e7370
0016f2  65636966
0016f6  69656420
0016fa  696e2079
0016fe  7a20706c
001702  616e6520
001706  63616e6e
00170a  65642063
00170e  79636c65
001712  00      
001713  58207920          DCB      "X y and z words all missing with g38 2",0
001717  616e6420
00171b  7a20776f
00171f  72647320
001723  616c6c20
001727  6d697373
00172b  696e6720
00172f  77697468
001733  20673338
001737  203200  
00173a  5920616e          DCB      "Y and z words missing for arc in yz plane",0
00173e  64207a20
001742  776f7264
001746  73206d69
00174a  7373696e
00174e  6720666f
001752  72206172
001756  6320696e
00175a  20797a20
00175e  706c616e
001762  6500    
001764  59207661          DCB      "Y value unspecified in xz plane canned cycle",0
001768  6c756520
00176c  756e7370
001770  65636966
001774  69656420
001778  696e2078
00177c  7a20706c
001780  616e6520
001784  63616e6e
001788  65642063
00178c  79636c65
001790  00      
001791  5a207661          DCB      "Z value unspecified in xy plane canned cycle",0
001795  6c756520
001799  756e7370
00179d  65636966
0017a1  69656420
0017a5  696e2078
0017a9  7920706c
0017ad  616e6520
0017b1  63616e6e
0017b5  65642063
0017b9  79636c65
0017bd  00      
0017be  5a65726f          DCB      "Zero or negative argument to ln",0
0017c2  206f7220
0017c6  6e656761
0017ca  74697665
0017ce  20617267
0017d2  756d656e
0017d6  7420746f
0017da  206c6e00
0017de  5a65726f          DCB      "Zero radius arc",0
0017e2  20726164
0017e6  69757320
0017ea  61726300
0017ee  54686520          DCB      "The End",0
0017f2  456e6400

                          AREA ||.data||, DATA, ALIGN=2

                  _rs274ngc_errors
                          DCD      ||.conststring||
                          DCD      ||.conststring||
                          DCD      ||.conststring||
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x9
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x3a
                          DCD      ||.conststring||+0x5c
                          DCD      ||.conststring||+0x84
                          DCD      ||.conststring||+0xa2
                          DCD      ||.conststring||+0xc0
                          DCD      ||.conststring||+0xda
                          DCD      ||.conststring||+0x109
                          DCD      ||.conststring||+0x11c
                          DCD      ||.conststring||+0x138
                          DCD      ||.conststring||+0x14a
                          DCD      ||.conststring||+0x167
                          DCD      ||.conststring||+0x17d
                          DCD      ||.conststring||+0x199
                          DCD      ||.conststring||+0x1b1
                          DCD      ||.conststring||+0x1c9
                          DCD      ||.conststring||+0x1df
                          DCD      ||.conststring||+0x1fb
                          DCD      ||.conststring||+0x213
                          DCD      ||.conststring||+0x241
                          DCD      ||.conststring||+0x25f
                          DCD      ||.conststring||+0x277
                          DCD      ||.conststring||+0x28f
                          DCD      ||.conststring||+0x2a7
                          DCD      ||.conststring||+0x2c2
                          DCD      ||.conststring||+0x2e4
                          DCD      ||.conststring||+0x302
                          DCD      ||.conststring||+0x323
                          DCD      ||.conststring||+0x34c
                          DCD      ||.conststring||+0x364
                          DCD      ||.conststring||+0x37e
                          DCD      ||.conststring||+0x399
                          DCD      ||.conststring||+0x3b1
                          DCD      ||.conststring||+0x3c7
                          DCD      ||.conststring||+0x3fa
                          DCD      ||.conststring||+0x426
                          DCD      ||.conststring||+0x440
                          DCD      ||.conststring||+0x461
                          DCD      ||.conststring||+0x481
                          DCD      ||.conststring||+0x4a5
                          DCD      ||.conststring||+0x4cc
                          DCD      ||.conststring||+0x4e4
                          DCD      ||.conststring||+0x4fe
                          DCD      ||.conststring||+0x525
                          DCD      ||.conststring||+0x54d
                          DCD      ||.conststring||+0x56e
                          DCD      ||.conststring||+0x58d
                          DCD      ||.conststring||+0x5ac
                          DCD      ||.conststring||+0x5cc
                          DCD      ||.conststring||+0x5fe
                          DCD      ||.conststring||+0x628
                          DCD      ||.conststring||+0x63a
                          DCD      ||.conststring||+0x65a
                          DCD      ||.conststring||+0x691
                          DCD      ||.conststring||+0x6a3
                          DCD      ||.conststring||+0x6b5
                          DCD      ||.conststring||+0x6e3
                          DCD      ||.conststring||+0x6fe
                          DCD      ||.conststring||+0x725
                          DCD      ||.conststring||+0x756
                          DCD      ||.conststring||+0x782
                          DCD      ||.conststring||+0x7ae
                          DCD      ||.conststring||+0x7bf
                          DCD      ||.conststring||+0x7e6
                          DCD      ||.conststring||+0x81a
                          DCD      ||.conststring||+0x841
                          DCD      ||.conststring||+0x868
                          DCD      ||.conststring||+0x882
                          DCD      ||.conststring||+0x89d
                          DCD      ||.conststring||+0x8c0
                          DCD      ||.conststring||+0x8e3
                          DCD      ||.conststring||+0x906
                          DCD      ||.conststring||+0x929
                          DCD      ||.conststring||+0x951
                          DCD      ||.conststring||+0x97b
                          DCD      ||.conststring||+0x9a4
                          DCD      ||.conststring||+0x9c4
                          DCD      ||.conststring||+0x9f3
                          DCD      ||.conststring||+0xa06
                          DCD      ||.conststring||+0xa14
                          DCD      ||.conststring||+0xa28
                          DCD      ||.conststring||+0xa3b
                          DCD      ||.conststring||+0xa5c
                          DCD      ||.conststring||+0xa74
                          DCD      ||.conststring||+0xa9d
                          DCD      ||.conststring||+0xabe
                          DCD      ||.conststring||+0xad6
                          DCD      ||.conststring||+0xaff
                          DCD      ||.conststring||+0xb20
                          DCD      ||.conststring||+0xb38
                          DCD      ||.conststring||+0xb61
                          DCD      ||.conststring||+0xb84
                          DCD      ||.conststring||+0xbaf
                          DCD      ||.conststring||+0xbdf
                          DCD      ||.conststring||+0xbfe
                          DCD      ||.conststring||+0xc1d
                          DCD      ||.conststring||+0xc34
                          DCD      ||.conststring||+0xc54
                          DCD      ||.conststring||+0xc71
                          DCD      ||.conststring||+0xc8e
                          DCD      ||.conststring||+0xcab
                          DCD      ||.conststring||+0xcc8
                          DCD      ||.conststring||+0xce5
                          DCD      ||.conststring||+0xd02
                          DCD      ||.conststring||+0xd1f
                          DCD      ||.conststring||+0xd3c
                          DCD      ||.conststring||+0xd59
                          DCD      ||.conststring||+0xd76
                          DCD      ||.conststring||+0xd93
                          DCD      ||.conststring||+0xdb0
                          DCD      ||.conststring||+0xdcd
                          DCD      ||.conststring||+0xdea
                          DCD      ||.conststring||+0xe07
                          DCD      ||.conststring||+0xe24
                          DCD      ||.conststring||+0xe41
                          DCD      ||.conststring||+0xe5e
                          DCD      ||.conststring||+0xe79
                          DCD      ||.conststring||+0xe93
                          DCD      ||.conststring||+0xeba
                          DCD      ||.conststring||+0xecf
                          DCD      ||.conststring||+0xee4
                          DCD      ||.conststring||+0xf12
                          DCD      ||.conststring||+0xf27
                          DCD      ||.conststring||+0xf3c
                          DCD      ||.conststring||+0xf5a
                          DCD      ||.conststring||+0xf6f
                          DCD      ||.conststring||+0xf8b
                          DCD      ||.conststring||+0xfa1
                          DCD      ||.conststring||+0xfb6
                          DCD      ||.conststring||+0xfe0
                          DCD      ||.conststring||+0x100c
                          DCD      ||.conststring||+0x102a
                          DCD      ||.conststring||+0x1045
                          DCD      ||.conststring||+0x105a
                          DCD      ||.conststring||+0x107d
                          DCD      ||.conststring||+0x109e
                          DCD      ||.conststring||+0x10c4
                          DCD      ||.conststring||+0x10e0
                          DCD      ||.conststring||+0x10fe
                          DCD      ||.conststring||+0x1116
                          DCD      ||.conststring||+0x1129
                          DCD      ||.conststring||+0x114a
                          DCD      ||.conststring||+0x1171
                          DCD      ||.conststring||+0x1193
                          DCD      ||.conststring||+0x11b6
                          DCD      ||.conststring||+0x11d9
                          DCD      ||.conststring||+0x11fc
                          DCD      ||.conststring||+0x121f
                          DCD      ||.conststring||+0x1251
                          DCD      ||.conststring||+0x1275
                          DCD      ||.conststring||+0x1290
                          DCD      ||.conststring||+0x12b4
                          DCD      ||.conststring||+0x12dc
                          DCD      ||.conststring||+0x1301
                          DCD      ||.conststring||+0x131c
                          DCD      ||.conststring||+0x1337
                          DCD      ||.conststring||+0x1352
                          DCD      ||.conststring||+0x1360
                          DCD      ||.conststring||+0x1385
                          DCD      ||.conststring||+0x139e
                          DCD      ||.conststring||+0x13bf
                          DCD      ||.conststring||+0x13d2
                          DCD      ||.conststring||+0x13ec
                          DCD      ||.conststring||+0x141b
                          DCD      ||.conststring||+0x1442
                          DCD      ||.conststring||+0x1469
                          DCD      ||.conststring||+0x147d
                          DCD      ||.conststring||+0x1494
                          DCD      ||.conststring||+0x14a8
                          DCD      ||.conststring||+0x14bc
                          DCD      ||.conststring||+0x14d0
                          DCD      ||.conststring||+0x14e2
                          DCD      ||.conststring||+0x1509
                          DCD      ||.conststring||+0x1530
                          DCD      ||.conststring||+0x1557
                          DCD      ||.conststring||+0x157e
                          DCD      ||.conststring||+0x159b
                          DCD      ||.conststring||+0x15b8
                          DCD      ||.conststring||+0x15d5
                          DCD      ||.conststring||+0x15f2
                          DCD      ||.conststring||+0x160f
                          DCD      ||.conststring||+0x162c
                          DCD      ||.conststring||+0x1649
                          DCD      ||.conststring||+0x1666
                          DCD      ||.conststring||+0x1692
                          DCD      ||.conststring||+0x16bc
                          DCD      ||.conststring||+0x16e6
                          DCD      ||.conststring||+0x1713
                          DCD      ||.conststring||+0x173a
                          DCD      ||.conststring||+0x1764
                          DCD      ||.conststring||+0x1791
                          DCD      ||.conststring||+0x17be
                          DCD      ||.conststring||+0x17de
                          DCD      ||.conststring||+0x17ee
                  name
00031c  6172635f          DCB      0x61,0x72,0x63,0x5f
000320  64617461          DCB      0x64,0x61,0x74,0x61
000324  5f636f6d          DCB      0x5f,0x63,0x6f,0x6d
000328  705f696a          DCB      0x70,0x5f,0x69,0x6a
00032c  6b00              DCB      0x6b,0x00
                  |symbol_number.441|
00032e  6172              DCB      0x61,0x72
000330  635f6461          DCB      0x63,0x5f,0x64,0x61
000334  74615f63          DCB      0x74,0x61,0x5f,0x63
000338  6f6d705f          DCB      0x6f,0x6d,0x70,0x5f
00033c  7200              DCB      0x72,0x00
                  |symbol_number.442|
00033e  6172              DCB      0x61,0x72
000340  635f6461          DCB      0x63,0x5f,0x64,0x61
000344  74615f69          DCB      0x74,0x61,0x5f,0x69
000348  6a6b00            DCB      0x6a,0x6b,0x00
                  |symbol_number.443|
00034b  61                DCB      0x61
00034c  72635f64          DCB      0x72,0x63,0x5f,0x64
000350  6174615f          DCB      0x61,0x74,0x61,0x5f
000354  7200              DCB      0x72,0x00
                  |symbol_number.444|
000356  6368              DCB      0x63,0x68
000358  65636b5f          DCB      0x65,0x63,0x6b,0x5f
00035c  675f636f          DCB      0x67,0x5f,0x63,0x6f
000360  64657300          DCB      0x64,0x65,0x73,0x00
                  |symbol_number.445|
000364  63686563          DCB      0x63,0x68,0x65,0x63
000368  6b5f6974          DCB      0x6b,0x5f,0x69,0x74
00036c  656d7300          DCB      0x65,0x6d,0x73,0x00
                  |symbol_number.446|
000370  63686563          DCB      0x63,0x68,0x65,0x63
000374  6b5f6d5f          DCB      0x6b,0x5f,0x6d,0x5f
000378  636f6465          DCB      0x63,0x6f,0x64,0x65
00037c  7300              DCB      0x73,0x00
                  |symbol_number.447|
00037e  6368              DCB      0x63,0x68
000380  65636b5f          DCB      0x65,0x63,0x6b,0x5f
000384  6f746865          DCB      0x6f,0x74,0x68,0x65
000388  725f636f          DCB      0x72,0x5f,0x63,0x6f
00038c  64657300          DCB      0x64,0x65,0x73,0x00
                  |symbol_number.448|
000390  636c6f73          DCB      0x63,0x6c,0x6f,0x73
000394  655f616e          DCB      0x65,0x5f,0x61,0x6e
000398  645f646f          DCB      0x64,0x5f,0x64,0x6f
00039c  776e6361          DCB      0x77,0x6e,0x63,0x61
0003a0  736500            DCB      0x73,0x65,0x00
                  |symbol_number.449|
0003a3  63                DCB      0x63
0003a4  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0003a8  72745f61          DCB      0x72,0x74,0x5f,0x61
0003ac  726300            DCB      0x72,0x63,0x00
                  |symbol_number.450|
0003af  63                DCB      0x63
0003b0  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0003b4  72745f61          DCB      0x72,0x74,0x5f,0x61
0003b8  72633200          DCB      0x72,0x63,0x32,0x00
                  |symbol_number.451|
0003bc  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0003c0  6572745f          DCB      0x65,0x72,0x74,0x5f
0003c4  6172635f          DCB      0x61,0x72,0x63,0x5f
0003c8  636f6d70          DCB      0x63,0x6f,0x6d,0x70
0003cc  3100              DCB      0x31,0x00
                  |symbol_number.452|
0003ce  636f              DCB      0x63,0x6f
0003d0  6e766572          DCB      0x6e,0x76,0x65,0x72
0003d4  745f6172          DCB      0x74,0x5f,0x61,0x72
0003d8  635f636f          DCB      0x63,0x5f,0x63,0x6f
0003dc  6d703200          DCB      0x6d,0x70,0x32,0x00
                  |symbol_number.453|
0003e0  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0003e4  6572745f          DCB      0x65,0x72,0x74,0x5f
0003e8  61786973          DCB      0x61,0x78,0x69,0x73
0003ec  5f6f6666          DCB      0x5f,0x6f,0x66,0x66
0003f0  73657473          DCB      0x73,0x65,0x74,0x73
0003f4  00                DCB      0x00
                  |symbol_number.454|
0003f5  636f6e            DCB      0x63,0x6f,0x6e
0003f8  76657274          DCB      0x76,0x65,0x72,0x74
0003fc  5f636f6e          DCB      0x5f,0x63,0x6f,0x6e
000400  74726f6c          DCB      0x74,0x72,0x6f,0x6c
000404  5f6d6f64          DCB      0x5f,0x6d,0x6f,0x64
000408  6500              DCB      0x65,0x00
                  |symbol_number.455|
00040a  636f              DCB      0x63,0x6f
00040c  6e766572          DCB      0x6e,0x76,0x65,0x72
000410  745f636f          DCB      0x74,0x5f,0x63,0x6f
000414  6f726469          DCB      0x6f,0x72,0x64,0x69
000418  6e617465          DCB      0x6e,0x61,0x74,0x65
00041c  5f737973          DCB      0x5f,0x73,0x79,0x73
000420  74656d00          DCB      0x74,0x65,0x6d,0x00
                  |symbol_number.456|
000424  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000428  6572745f          DCB      0x65,0x72,0x74,0x5f
00042c  63757474          DCB      0x63,0x75,0x74,0x74
000430  65725f63          DCB      0x65,0x72,0x5f,0x63
000434  6f6d7065          DCB      0x6f,0x6d,0x70,0x65
000438  6e736174          DCB      0x6e,0x73,0x61,0x74
00043c  696f6e00          DCB      0x69,0x6f,0x6e,0x00
                  |symbol_number.457|
000440  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000444  6572745f          DCB      0x65,0x72,0x74,0x5f
000448  63757474          DCB      0x63,0x75,0x74,0x74
00044c  65725f63          DCB      0x65,0x72,0x5f,0x63
000450  6f6d7065          DCB      0x6f,0x6d,0x70,0x65
000454  6e736174          DCB      0x6e,0x73,0x61,0x74
000458  696f6e5f          DCB      0x69,0x6f,0x6e,0x5f
00045c  6f6e00            DCB      0x6f,0x6e,0x00
                  |symbol_number.458|
00045f  63                DCB      0x63
000460  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000464  72745f63          DCB      0x72,0x74,0x5f,0x63
000468  79636c65          DCB      0x79,0x63,0x6c,0x65
00046c  00                DCB      0x00
                  |symbol_number.459|
00046d  636f6e            DCB      0x63,0x6f,0x6e
000470  76657274          DCB      0x76,0x65,0x72,0x74
000474  5f637963          DCB      0x5f,0x63,0x79,0x63
000478  6c655f67          DCB      0x6c,0x65,0x5f,0x67
00047c  383100            DCB      0x38,0x31,0x00
                  |symbol_number.460|
00047f  63                DCB      0x63
000480  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000484  72745f63          DCB      0x72,0x74,0x5f,0x63
000488  79636c65          DCB      0x79,0x63,0x6c,0x65
00048c  5f673832          DCB      0x5f,0x67,0x38,0x32
000490  00                DCB      0x00
                  |symbol_number.461|
000491  636f6e            DCB      0x63,0x6f,0x6e
000494  76657274          DCB      0x76,0x65,0x72,0x74
000498  5f637963          DCB      0x5f,0x63,0x79,0x63
00049c  6c655f67          DCB      0x6c,0x65,0x5f,0x67
0004a0  383300            DCB      0x38,0x33,0x00
                  |symbol_number.462|
0004a3  63                DCB      0x63
0004a4  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0004a8  72745f63          DCB      0x72,0x74,0x5f,0x63
0004ac  79636c65          DCB      0x79,0x63,0x6c,0x65
0004b0  5f673834          DCB      0x5f,0x67,0x38,0x34
0004b4  00                DCB      0x00
                  |symbol_number.463|
0004b5  636f6e            DCB      0x63,0x6f,0x6e
0004b8  76657274          DCB      0x76,0x65,0x72,0x74
0004bc  5f637963          DCB      0x5f,0x63,0x79,0x63
0004c0  6c655f67          DCB      0x6c,0x65,0x5f,0x67
0004c4  383500            DCB      0x38,0x35,0x00
                  |symbol_number.464|
0004c7  63                DCB      0x63
0004c8  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0004cc  72745f63          DCB      0x72,0x74,0x5f,0x63
0004d0  79636c65          DCB      0x79,0x63,0x6c,0x65
0004d4  5f673836          DCB      0x5f,0x67,0x38,0x36
0004d8  00                DCB      0x00
                  |symbol_number.465|
0004d9  636f6e            DCB      0x63,0x6f,0x6e
0004dc  76657274          DCB      0x76,0x65,0x72,0x74
0004e0  5f637963          DCB      0x5f,0x63,0x79,0x63
0004e4  6c655f67          DCB      0x6c,0x65,0x5f,0x67
0004e8  383700            DCB      0x38,0x37,0x00
                  |symbol_number.466|
0004eb  63                DCB      0x63
0004ec  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0004f0  72745f63          DCB      0x72,0x74,0x5f,0x63
0004f4  79636c65          DCB      0x79,0x63,0x6c,0x65
0004f8  5f673838          DCB      0x5f,0x67,0x38,0x38
0004fc  00                DCB      0x00
                  |symbol_number.467|
0004fd  636f6e            DCB      0x63,0x6f,0x6e
000500  76657274          DCB      0x76,0x65,0x72,0x74
000504  5f637963          DCB      0x5f,0x63,0x79,0x63
000508  6c655f67          DCB      0x6c,0x65,0x5f,0x67
00050c  383900            DCB      0x38,0x39,0x00
                  |symbol_number.468|
00050f  63                DCB      0x63
000510  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000514  72745f63          DCB      0x72,0x74,0x5f,0x63
000518  79636c65          DCB      0x79,0x63,0x6c,0x65
00051c  5f787900          DCB      0x5f,0x78,0x79,0x00
                  |symbol_number.469|
000520  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000524  6572745f          DCB      0x65,0x72,0x74,0x5f
000528  6379636c          DCB      0x63,0x79,0x63,0x6c
00052c  655f797a          DCB      0x65,0x5f,0x79,0x7a
000530  00                DCB      0x00
                  |symbol_number.470|
000531  636f6e            DCB      0x63,0x6f,0x6e
000534  76657274          DCB      0x76,0x65,0x72,0x74
000538  5f637963          DCB      0x5f,0x63,0x79,0x63
00053c  6c655f7a          DCB      0x6c,0x65,0x5f,0x7a
000540  7800              DCB      0x78,0x00
                  |symbol_number.471|
000542  636f              DCB      0x63,0x6f
000544  6e766572          DCB      0x6e,0x76,0x65,0x72
000548  745f6469          DCB      0x74,0x5f,0x64,0x69
00054c  7374616e          DCB      0x73,0x74,0x61,0x6e
000550  63655f6d          DCB      0x63,0x65,0x5f,0x6d
000554  6f646500          DCB      0x6f,0x64,0x65,0x00
                  |symbol_number.472|
000558  636f6e76          DCB      0x63,0x6f,0x6e,0x76
00055c  6572745f          DCB      0x65,0x72,0x74,0x5f
000560  66656564          DCB      0x66,0x65,0x65,0x64
000564  5f6d6f64          DCB      0x5f,0x6d,0x6f,0x64
000568  6500              DCB      0x65,0x00
                  |symbol_number.473|
00056a  636f              DCB      0x63,0x6f
00056c  6e766572          DCB      0x6e,0x76,0x65,0x72
000570  745f6700          DCB      0x74,0x5f,0x67,0x00
                  |symbol_number.474|
000574  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000578  6572745f          DCB      0x65,0x72,0x74,0x5f
00057c  686f6d65          DCB      0x68,0x6f,0x6d,0x65
000580  00                DCB      0x00
                  |symbol_number.475|
000581  636f6e            DCB      0x63,0x6f,0x6e
000584  76657274          DCB      0x76,0x65,0x72,0x74
000588  5f6c656e          DCB      0x5f,0x6c,0x65,0x6e
00058c  6774685f          DCB      0x67,0x74,0x68,0x5f
000590  756e6974          DCB      0x75,0x6e,0x69,0x74
000594  7300              DCB      0x73,0x00
                  |symbol_number.476|
000596  636f              DCB      0x63,0x6f
000598  6e766572          DCB      0x6e,0x76,0x65,0x72
00059c  745f6d00          DCB      0x74,0x5f,0x6d,0x00
                  |symbol_number.477|
0005a0  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0005a4  6572745f          DCB      0x65,0x72,0x74,0x5f
0005a8  6d6f6461          DCB      0x6d,0x6f,0x64,0x61
0005ac  6c5f3000          DCB      0x6c,0x5f,0x30,0x00
                  |symbol_number.478|
0005b0  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0005b4  6572745f          DCB      0x65,0x72,0x74,0x5f
0005b8  6d6f7469          DCB      0x6d,0x6f,0x74,0x69
0005bc  6f6e00            DCB      0x6f,0x6e,0x00
                  |symbol_number.479|
0005bf  63                DCB      0x63
0005c0  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0005c4  72745f70          DCB      0x72,0x74,0x5f,0x70
0005c8  726f6265          DCB      0x72,0x6f,0x62,0x65
0005cc  00                DCB      0x00
                  |symbol_number.480|
0005cd  636f6e            DCB      0x63,0x6f,0x6e
0005d0  76657274          DCB      0x76,0x65,0x72,0x74
0005d4  5f726574          DCB      0x5f,0x72,0x65,0x74
0005d8  72616374          DCB      0x72,0x61,0x63,0x74
0005dc  5f6d6f64          DCB      0x5f,0x6d,0x6f,0x64
0005e0  6500              DCB      0x65,0x00
                  |symbol_number.481|
0005e2  636f              DCB      0x63,0x6f
0005e4  6e766572          DCB      0x6e,0x76,0x65,0x72
0005e8  745f7365          DCB      0x74,0x5f,0x73,0x65
0005ec  74757000          DCB      0x74,0x75,0x70,0x00
                  |symbol_number.482|
0005f0  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0005f4  6572745f          DCB      0x65,0x72,0x74,0x5f
0005f8  7365745f          DCB      0x73,0x65,0x74,0x5f
0005fc  706c616e          DCB      0x70,0x6c,0x61,0x6e
000600  6500              DCB      0x65,0x00
                  |symbol_number.483|
000602  636f              DCB      0x63,0x6f
000604  6e766572          DCB      0x6e,0x76,0x65,0x72
000608  745f7374          DCB      0x74,0x5f,0x73,0x74
00060c  6f7000            DCB      0x6f,0x70,0x00
                  |symbol_number.484|
00060f  63                DCB      0x63
000610  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000614  72745f73          DCB      0x72,0x74,0x5f,0x73
000618  74726169          DCB      0x74,0x72,0x61,0x69
00061c  67687400          DCB      0x67,0x68,0x74,0x00
                  |symbol_number.485|
000620  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000624  6572745f          DCB      0x65,0x72,0x74,0x5f
000628  73747261          DCB      0x73,0x74,0x72,0x61
00062c  69676874          DCB      0x69,0x67,0x68,0x74
000630  5f636f6d          DCB      0x5f,0x63,0x6f,0x6d
000634  703100            DCB      0x70,0x31,0x00
                  |symbol_number.486|
000637  63                DCB      0x63
000638  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
00063c  72745f73          DCB      0x72,0x74,0x5f,0x73
000640  74726169          DCB      0x74,0x72,0x61,0x69
000644  6768745f          DCB      0x67,0x68,0x74,0x5f
000648  636f6d70          DCB      0x63,0x6f,0x6d,0x70
00064c  3200              DCB      0x32,0x00
                  |symbol_number.487|
00064e  636f              DCB      0x63,0x6f
000650  6e766572          DCB      0x6e,0x76,0x65,0x72
000654  745f746f          DCB      0x74,0x5f,0x74,0x6f
000658  6f6c5f63          DCB      0x6f,0x6c,0x5f,0x63
00065c  68616e67          DCB      0x68,0x61,0x6e,0x67
000660  6500              DCB      0x65,0x00
                  |symbol_number.488|
000662  636f              DCB      0x63,0x6f
000664  6e766572          DCB      0x6e,0x76,0x65,0x72
000668  745f746f          DCB      0x74,0x5f,0x74,0x6f
00066c  6f6c5f6c          DCB      0x6f,0x6c,0x5f,0x6c
000670  656e6774          DCB      0x65,0x6e,0x67,0x74
000674  685f6f66          DCB      0x68,0x5f,0x6f,0x66
000678  66736574          DCB      0x66,0x73,0x65,0x74
00067c  00                DCB      0x00
                  |symbol_number.489|
00067d  636f6e            DCB      0x63,0x6f,0x6e
000680  76657274          DCB      0x76,0x65,0x72,0x74
000684  5f746f6f          DCB      0x5f,0x74,0x6f,0x6f
000688  6c5f7365          DCB      0x6c,0x5f,0x73,0x65
00068c  6c656374          DCB      0x6c,0x65,0x63,0x74
000690  00                DCB      0x00
                  |symbol_number.490|
000691  637963            DCB      0x63,0x79,0x63
000694  6c655f66          DCB      0x6c,0x65,0x5f,0x66
000698  65656400          DCB      0x65,0x65,0x64,0x00
                  |symbol_number.491|
00069c  6379636c          DCB      0x63,0x79,0x63,0x6c
0006a0  655f7472          DCB      0x65,0x5f,0x74,0x72
0006a4  61766572          DCB      0x61,0x76,0x65,0x72
0006a8  736500            DCB      0x73,0x65,0x00
                  |symbol_number.492|
0006ab  65                DCB      0x65
0006ac  6e68616e          DCB      0x6e,0x68,0x61,0x6e
0006b0  63655f62          DCB      0x63,0x65,0x5f,0x62
0006b4  6c6f636b          DCB      0x6c,0x6f,0x63,0x6b
0006b8  00                DCB      0x00
                  |symbol_number.493|
0006b9  657865            DCB      0x65,0x78,0x65
0006bc  63757465          DCB      0x63,0x75,0x74,0x65
0006c0  5f62696e          DCB      0x5f,0x62,0x69,0x6e
0006c4  61727900          DCB      0x61,0x72,0x79,0x00
                  |symbol_number.494|
0006c8  65786563          DCB      0x65,0x78,0x65,0x63
0006cc  7574655f          DCB      0x75,0x74,0x65,0x5f
0006d0  62696e61          DCB      0x62,0x69,0x6e,0x61
0006d4  72793100          DCB      0x72,0x79,0x31,0x00
                  |symbol_number.495|
0006d8  65786563          DCB      0x65,0x78,0x65,0x63
0006dc  7574655f          DCB      0x75,0x74,0x65,0x5f
0006e0  62696e61          DCB      0x62,0x69,0x6e,0x61
0006e4  72793200          DCB      0x72,0x79,0x32,0x00
                  |symbol_number.496|
0006e8  65786563          DCB      0x65,0x78,0x65,0x63
0006ec  7574655f          DCB      0x75,0x74,0x65,0x5f
0006f0  626c6f63          DCB      0x62,0x6c,0x6f,0x63
0006f4  6b00              DCB      0x6b,0x00
                  |symbol_number.497|
0006f6  6578              DCB      0x65,0x78
0006f8  65637574          DCB      0x65,0x63,0x75,0x74
0006fc  655f756e          DCB      0x65,0x5f,0x75,0x6e
000700  61727900          DCB      0x61,0x72,0x79,0x00
                  |symbol_number.498|
000704  696e7665          DCB      0x69,0x6e,0x76,0x65
000708  7273655f          DCB      0x72,0x73,0x65,0x5f
00070c  74696d65          DCB      0x74,0x69,0x6d,0x65
000710  5f726174          DCB      0x5f,0x72,0x61,0x74
000714  655f7374          DCB      0x65,0x5f,0x73,0x74
000718  72616967          DCB      0x72,0x61,0x69,0x67
00071c  687400            DCB      0x68,0x74,0x00
                  |symbol_number.499|
00071f  70                DCB      0x70
000720  61727365          DCB      0x61,0x72,0x73,0x65
000724  5f6c696e          DCB      0x5f,0x6c,0x69,0x6e
000728  6500              DCB      0x65,0x00
                  |symbol_number.500|
00072a  7265              DCB      0x72,0x65
00072c  61645f61          DCB      0x61,0x64,0x5f,0x61
000730  00                DCB      0x00
                  |symbol_number.501|
000731  726561            DCB      0x72,0x65,0x61
000734  645f6174          DCB      0x64,0x5f,0x61,0x74
000738  616e00            DCB      0x61,0x6e,0x00
                  |symbol_number.502|
00073b  72                DCB      0x72
00073c  6561645f          DCB      0x65,0x61,0x64,0x5f
000740  6200              DCB      0x62,0x00
                  |symbol_number.503|
000742  7265              DCB      0x72,0x65
000744  61645f63          DCB      0x61,0x64,0x5f,0x63
000748  00                DCB      0x00
                  |symbol_number.504|
000749  726561            DCB      0x72,0x65,0x61
00074c  645f636f          DCB      0x64,0x5f,0x63,0x6f
000750  6d6d656e          DCB      0x6d,0x6d,0x65,0x6e
000754  7400              DCB      0x74,0x00
                  |symbol_number.505|
000756  7265              DCB      0x72,0x65
000758  61645f64          DCB      0x61,0x64,0x5f,0x64
00075c  00                DCB      0x00
                  |symbol_number.506|
00075d  726561            DCB      0x72,0x65,0x61
000760  645f6600          DCB      0x64,0x5f,0x66,0x00
                  |symbol_number.507|
000764  72656164          DCB      0x72,0x65,0x61,0x64
000768  5f6700            DCB      0x5f,0x67,0x00
                  |symbol_number.508|
00076b  72                DCB      0x72
00076c  6561645f          DCB      0x65,0x61,0x64,0x5f
000770  6800              DCB      0x68,0x00
                  |symbol_number.509|
000772  7265              DCB      0x72,0x65
000774  61645f69          DCB      0x61,0x64,0x5f,0x69
000778  00                DCB      0x00
                  |symbol_number.510|
000779  726561            DCB      0x72,0x65,0x61
00077c  645f696e          DCB      0x64,0x5f,0x69,0x6e
000780  74656765          DCB      0x74,0x65,0x67,0x65
000784  725f756e          DCB      0x72,0x5f,0x75,0x6e
000788  7369676e          DCB      0x73,0x69,0x67,0x6e
00078c  656400            DCB      0x65,0x64,0x00
                  |symbol_number.511|
00078f  72                DCB      0x72
000790  6561645f          DCB      0x65,0x61,0x64,0x5f
000794  696e7465          DCB      0x69,0x6e,0x74,0x65
000798  6765725f          DCB      0x67,0x65,0x72,0x5f
00079c  76616c75          DCB      0x76,0x61,0x6c,0x75
0007a0  6500              DCB      0x65,0x00
                  |symbol_number.512|
0007a2  7265              DCB      0x72,0x65
0007a4  61645f69          DCB      0x61,0x64,0x5f,0x69
0007a8  74656d73          DCB      0x74,0x65,0x6d,0x73
0007ac  00                DCB      0x00
                  |symbol_number.513|
0007ad  726561            DCB      0x72,0x65,0x61
0007b0  645f6a00          DCB      0x64,0x5f,0x6a,0x00
                  |symbol_number.514|
0007b4  72656164          DCB      0x72,0x65,0x61,0x64
0007b8  5f6b00            DCB      0x5f,0x6b,0x00
                  |symbol_number.515|
0007bb  72                DCB      0x72
0007bc  6561645f          DCB      0x65,0x61,0x64,0x5f
0007c0  6c00              DCB      0x6c,0x00
                  |symbol_number.516|
0007c2  7265              DCB      0x72,0x65
0007c4  61645f6c          DCB      0x61,0x64,0x5f,0x6c
0007c8  696e655f          DCB      0x69,0x6e,0x65,0x5f
0007cc  6e756d62          DCB      0x6e,0x75,0x6d,0x62
0007d0  657200            DCB      0x65,0x72,0x00
                  |symbol_number.517|
0007d3  72                DCB      0x72
0007d4  6561645f          DCB      0x65,0x61,0x64,0x5f
0007d8  6d00              DCB      0x6d,0x00
                  |symbol_number.518|
0007da  7265              DCB      0x72,0x65
0007dc  61645f6f          DCB      0x61,0x64,0x5f,0x6f
0007e0  6e655f69          DCB      0x6e,0x65,0x5f,0x69
0007e4  74656d00          DCB      0x74,0x65,0x6d,0x00
                  |symbol_number.519|
0007e8  72656164          DCB      0x72,0x65,0x61,0x64
0007ec  5f6f7065          DCB      0x5f,0x6f,0x70,0x65
0007f0  72617469          DCB      0x72,0x61,0x74,0x69
0007f4  6f6e00            DCB      0x6f,0x6e,0x00
                  |symbol_number.520|
0007f7  72                DCB      0x72
0007f8  6561645f          DCB      0x65,0x61,0x64,0x5f
0007fc  6f706572          DCB      0x6f,0x70,0x65,0x72
000800  6174696f          DCB      0x61,0x74,0x69,0x6f
000804  6e5f756e          DCB      0x6e,0x5f,0x75,0x6e
000808  61727900          DCB      0x61,0x72,0x79,0x00
                  |symbol_number.521|
00080c  72656164          DCB      0x72,0x65,0x61,0x64
000810  5f7000            DCB      0x5f,0x70,0x00
                  |symbol_number.522|
000813  72                DCB      0x72
000814  6561645f          DCB      0x65,0x61,0x64,0x5f
000818  70617261          DCB      0x70,0x61,0x72,0x61
00081c  6d657465          DCB      0x6d,0x65,0x74,0x65
000820  7200              DCB      0x72,0x00
                  |symbol_number.523|
000822  7265              DCB      0x72,0x65
000824  61645f70          DCB      0x61,0x64,0x5f,0x70
000828  6172616d          DCB      0x61,0x72,0x61,0x6d
00082c  65746572          DCB      0x65,0x74,0x65,0x72
000830  5f736574          DCB      0x5f,0x73,0x65,0x74
000834  74696e67          DCB      0x74,0x69,0x6e,0x67
000838  00                DCB      0x00
                  |symbol_number.524|
000839  726561            DCB      0x72,0x65,0x61
00083c  645f7100          DCB      0x64,0x5f,0x71,0x00
                  |symbol_number.525|
000840  72656164          DCB      0x72,0x65,0x61,0x64
000844  5f7200            DCB      0x5f,0x72,0x00
                  |symbol_number.526|
000847  72                DCB      0x72
000848  6561645f          DCB      0x65,0x61,0x64,0x5f
00084c  7265616c          DCB      0x72,0x65,0x61,0x6c
000850  5f657870          DCB      0x5f,0x65,0x78,0x70
000854  72657373          DCB      0x72,0x65,0x73,0x73
000858  696f6e00          DCB      0x69,0x6f,0x6e,0x00
                  |symbol_number.527|
00085c  72656164          DCB      0x72,0x65,0x61,0x64
000860  5f726561          DCB      0x5f,0x72,0x65,0x61
000864  6c5f6e75          DCB      0x6c,0x5f,0x6e,0x75
000868  6d626572          DCB      0x6d,0x62,0x65,0x72
00086c  00                DCB      0x00
                  |symbol_number.528|
00086d  726561            DCB      0x72,0x65,0x61
000870  645f7265          DCB      0x64,0x5f,0x72,0x65
000874  616c5f76          DCB      0x61,0x6c,0x5f,0x76
000878  616c7565          DCB      0x61,0x6c,0x75,0x65
00087c  00                DCB      0x00
                  |symbol_number.529|
00087d  726561            DCB      0x72,0x65,0x61
000880  645f7300          DCB      0x64,0x5f,0x73,0x00
                  |symbol_number.530|
000884  72656164          DCB      0x72,0x65,0x61,0x64
000888  5f7400            DCB      0x5f,0x74,0x00
                  |symbol_number.531|
00088b  72                DCB      0x72
00088c  6561645f          DCB      0x65,0x61,0x64,0x5f
000890  74657874          DCB      0x74,0x65,0x78,0x74
000894  00                DCB      0x00
                  |symbol_number.532|
000895  726561            DCB      0x72,0x65,0x61
000898  645f756e          DCB      0x64,0x5f,0x75,0x6e
00089c  61727900          DCB      0x61,0x72,0x79,0x00
                  |symbol_number.533|
0008a0  72656164          DCB      0x72,0x65,0x61,0x64
0008a4  5f7800            DCB      0x5f,0x78,0x00
                  |symbol_number.534|
0008a7  72                DCB      0x72
0008a8  6561645f          DCB      0x65,0x61,0x64,0x5f
0008ac  7900              DCB      0x79,0x00
                  |symbol_number.535|
0008ae  7265              DCB      0x72,0x65
0008b0  61645f7a          DCB      0x61,0x64,0x5f,0x7a
0008b4  00                DCB      0x00
                  |symbol_number.536|
0008b5  736574            DCB      0x73,0x65,0x74
0008b8  5f70726f          DCB      0x5f,0x70,0x72,0x6f
0008bc  62655f64          DCB      0x62,0x65,0x5f,0x64
0008c0  61746100          DCB      0x61,0x74,0x61,0x00
                  |symbol_number.537|
0008c4  72733237          DCB      0x72,0x73,0x32,0x37
0008c8  346e6763          DCB      0x34,0x6e,0x67,0x63
0008cc  5f657865          DCB      0x5f,0x65,0x78,0x65
0008d0  63757465          DCB      0x63,0x75,0x74,0x65
0008d4  00                DCB      0x00
                  |symbol_number.538|
0008d5  727332            DCB      0x72,0x73,0x32
0008d8  37346e67          DCB      0x37,0x34,0x6e,0x67
0008dc  635f696e          DCB      0x63,0x5f,0x69,0x6e
0008e0  697400            DCB      0x69,0x74,0x00
                  |symbol_number.539|
0008e3  72                DCB      0x72
0008e4  73323734          DCB      0x73,0x32,0x37,0x34
0008e8  6e67635f          DCB      0x6e,0x67,0x63,0x5f
0008ec  6f70656e          DCB      0x6f,0x70,0x65,0x6e
0008f0  00                DCB      0x00
                  |symbol_number.540|
0008f1  727332            DCB      0x72,0x73,0x32
0008f4  37346e67          DCB      0x37,0x34,0x6e,0x67
0008f8  635f7265          DCB      0x63,0x5f,0x72,0x65
0008fc  616400            DCB      0x61,0x64,0x00
                  |symbol_number.541|
0008ff  72                DCB      0x72
000900  73323734          DCB      0x73,0x32,0x37,0x34
000904  6e67635f          DCB      0x6e,0x67,0x63,0x5f
000908  73617665          DCB      0x73,0x61,0x76,0x65
00090c  5f706172          DCB      0x5f,0x70,0x61,0x72
000910  616d6574          DCB      0x61,0x6d,0x65,0x74
000914  65727300          DCB      0x65,0x72,0x73,0x00
