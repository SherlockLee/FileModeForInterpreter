<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\USART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\USART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 644]: Last Updated: Thu Jun 30 09:53:40 2011
<BR><P>
<H3>Maximum Stack Usage =       1736 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; interpret_from_keyboard &rArr; rs274ngc_execute &rArr; execute_block &rArr; convert_g &rArr; convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[144]">read_real_expression</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[142]">read_real_value</a><BR>
 <LI><a href="#[145]">read_integer_value</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[142]">read_real_value</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC_IRQHandler</a> from stm32f10x_it.o(i.ADC_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[9]">BusFaultException</a> from stm32f10x_it.o(i.BusFaultException) referenced from stm32f10x.o(RESET)
 <LI><a href="#[24]">CAN_RX1_IRQHandler</a> from stm32f10x_it.o(i.CAN_RX1_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[25]">CAN_SCE_IRQHandler</a> from stm32f10x_it.o(i.CAN_SCE_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[1a]">DMAChannel1_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel1_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[1b]">DMAChannel2_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel2_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[1c]">DMAChannel3_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel3_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[1d]">DMAChannel4_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel4_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[1e]">DMAChannel5_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel5_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[1f]">DMAChannel6_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel6_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[20]">DMAChannel7_IRQHandler</a> from stm32f10x_it.o(i.DMAChannel7_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[c]">DebugMonitor</a> from stm32f10x_it.o(i.DebugMonitor) referenced from stm32f10x.o(RESET)
 <LI><a href="#[15]">EXTI0_IRQHandler</a> from stm32f10x_it.o(i.EXTI0_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[37]">EXTI15_10_IRQHandler</a> from stm32f10x_it.o(i.EXTI15_10_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[16]">EXTI1_IRQHandler</a> from stm32f10x_it.o(i.EXTI1_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[17]">EXTI2_IRQHandler</a> from stm32f10x_it.o(i.EXTI2_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[18]">EXTI3_IRQHandler</a> from stm32f10x_it.o(i.EXTI3_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[19]">EXTI4_IRQHandler</a> from stm32f10x_it.o(i.EXTI4_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[26]">EXTI9_5_IRQHandler</a> from stm32f10x_it.o(i.EXTI9_5_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[13]">FLASH_IRQHandler</a> from stm32f10x_it.o(i.FLASH_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[7]">HardFaultException</a> from stm32f10x_it.o(i.HardFaultException) referenced from stm32f10x.o(RESET)
 <LI><a href="#[2f]">I2C1_ER_IRQHandler</a> from stm32f10x_it.o(i.I2C1_ER_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[2e]">I2C1_EV_IRQHandler</a> from stm32f10x_it.o(i.I2C1_EV_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[31]">I2C2_ER_IRQHandler</a> from stm32f10x_it.o(i.I2C2_ER_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[30]">I2C2_EV_IRQHandler</a> from stm32f10x_it.o(i.I2C2_EV_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[8]">MemManageException</a> from stm32f10x_it.o(i.MemManageException) referenced from stm32f10x.o(RESET)
 <LI><a href="#[6]">NMIException</a> from stm32f10x_it.o(i.NMIException) referenced from stm32f10x.o(RESET)
 <LI><a href="#[10]">PVD_IRQHandler</a> from stm32f10x_it.o(i.PVD_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[d]">PendSVC</a> from stm32f10x_it.o(i.PendSVC) referenced from stm32f10x.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from stm32f10x_it.o(i.RCC_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[38]">RTCAlarm_IRQHandler</a> from stm32f10x_it.o(i.RTCAlarm_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[12]">RTC_IRQHandler</a> from stm32f10x_it.o(i.RTC_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from stm32f10x.o(.text) referenced from stm32f10x.o(RESET)
 <LI><a href="#[32]">SPI1_IRQHandler</a> from stm32f10x_it.o(i.SPI1_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[33]">SPI2_IRQHandler</a> from stm32f10x_it.o(i.SPI2_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[b]">SVCHandler</a> from stm32f10x_it.o(i.SVCHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[e]">SysTickHandler</a> from stm32f10x_it.o(i.SysTickHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from stm32f10x_it.o(i.TAMPER_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[27]">TIM1_BRK_IRQHandler</a> from stm32f10x_it.o(i.TIM1_BRK_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[2a]">TIM1_CC_IRQHandler</a> from stm32f10x_it.o(i.TIM1_CC_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[29]">TIM1_TRG_COM_IRQHandler</a> from stm32f10x_it.o(i.TIM1_TRG_COM_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[28]">TIM1_UP_IRQHandler</a> from stm32f10x_it.o(i.TIM1_UP_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[2b]">TIM2_IRQHandler</a> from stm32f10x_it.o(i.TIM2_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[2c]">TIM3_IRQHandler</a> from stm32f10x_it.o(i.TIM3_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[2d]">TIM4_IRQHandler</a> from stm32f10x_it.o(i.TIM4_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[34]">USART1_IRQHandler</a> from stm32f10x_it.o(i.USART1_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[35]">USART2_IRQHandler</a> from stm32f10x_it.o(i.USART2_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[36]">USART3_IRQHandler</a> from stm32f10x_it.o(i.USART3_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[39]">USBWakeUp_IRQHandler</a> from stm32f10x_it.o(i.USBWakeUp_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[22]">USB_HP_CAN_TX_IRQHandler</a> from stm32f10x_it.o(i.USB_HP_CAN_TX_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[23]">USB_LP_CAN_RX0_IRQHandler</a> from stm32f10x_it.o(i.USB_LP_CAN_RX0_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[a]">UsageFaultException</a> from stm32f10x_it.o(i.UsageFaultException) referenced from stm32f10x.o(RESET)
 <LI><a href="#[f]">WWDG_IRQHandler</a> from stm32f10x_it.o(i.WWDG_IRQHandler) referenced from stm32f10x.o(RESET)
 <LI><a href="#[3b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from stm32f10x.o(.text)
 <LI><a href="#[3d]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[3e]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[3c]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[41]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[40]">fputc</a> from main.o(i.fputc) referenced from printfa.o(i.__0fprintf)
 <LI><a href="#[40]">fputc</a> from main.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[3f]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[3a]">main</a> from main.o(i.main) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[44]">read_a</a> from rs274ngc_pre.o(i.read_a) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[45]">read_b</a> from rs274ngc_pre.o(i.read_b) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[46]">read_c</a> from rs274ngc_pre.o(i.read_c) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[43]">read_comment</a> from rs274ngc_pre.o(i.read_comment) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[47]">read_d</a> from rs274ngc_pre.o(i.read_d) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[48]">read_f</a> from rs274ngc_pre.o(i.read_f) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[49]">read_g</a> from rs274ngc_pre.o(i.read_g) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[4a]">read_h</a> from rs274ngc_pre.o(i.read_h) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[4b]">read_i</a> from rs274ngc_pre.o(i.read_i) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[4c]">read_j</a> from rs274ngc_pre.o(i.read_j) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[4d]">read_k</a> from rs274ngc_pre.o(i.read_k) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[4e]">read_l</a> from rs274ngc_pre.o(i.read_l) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[4f]">read_m</a> from rs274ngc_pre.o(i.read_m) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[50]">read_p</a> from rs274ngc_pre.o(i.read_p) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[42]">read_parameter_setting</a> from rs274ngc_pre.o(i.read_parameter_setting) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[51]">read_q</a> from rs274ngc_pre.o(i.read_q) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[52]">read_r</a> from rs274ngc_pre.o(i.read_r) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[53]">read_s</a> from rs274ngc_pre.o(i.read_s) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[54]">read_t</a> from rs274ngc_pre.o(i.read_t) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[55]">read_x</a> from rs274ngc_pre.o(i.read_x) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[56]">read_y</a> from rs274ngc_pre.o(i.read_y) referenced from rs274ngc_pre.o(.constdata)
 <LI><a href="#[57]">read_z</a> from rs274ngc_pre.o(i.read_z) referenced from rs274ngc_pre.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(.text)
</UL>
<P><STRONG><a name="[170]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[58]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[76]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[171]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[117]"></a>fgetc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fgetc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gets
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgets
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[5a]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[3f]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[15e]"></a>strcat</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
</UL>

<P><STRONG><a name="[86]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_error_text
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PARAMETER_FILE_NAME
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_items
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[132]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
</UL>

<P><STRONG><a name="[87]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_read
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_execute
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_error_text
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PARAMETER_FILE_NAME
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_z
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_y
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_x
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_unary
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_t
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_s
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_number
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_r
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_q
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter_setting
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_p
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_operation_unary
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_operation
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_one_item
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_m
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_line_number
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_l
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_k
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_j
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_items
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_unsigned
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_h
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_f
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_d
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_comment
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_c
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_b
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_atan
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_line
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhance_block
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_select
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_length_offset
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_set_plane
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_retract_mode
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_modal_0
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_length_units
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_home
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_feed_mode
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_distance_mode
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_on
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_control_mode
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_axis_offsets
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc2
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_and_downcase
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_other_codes
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_m_codes
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_items
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_ijk
</UL>

<P><STRONG><a name="[14b]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_operation_unary
</UL>

<P><STRONG><a name="[5b]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_error_handling
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_number
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_unsigned
</UL>

<P><STRONG><a name="[5d]"></a>_scanf_int</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[77]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[63]"></a>_scanf_really_real</STRONG> (Thumb, 582 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_dadd</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc2
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_relative
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_length_offset
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_setup
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_axis_offsets
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_ijk
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary2
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_length_offset
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_setup
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_axis_offsets
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_ijk
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_relative
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_dmul</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_LENGTH_UNITS
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_atan
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc2
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_length_units
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_ddiv</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_LENGTH_UNITS
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_atan
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_on
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_settings
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_setup
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_g_codes
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_other_codes
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_cdcmple</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_s
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_q
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_p
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_f
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc2
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_on
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_s
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_q
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_p
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_f
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_ijk
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_uldivmod</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[173]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[174]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[175]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_chval</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[5c]"></a>__vfscanf_char</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[3c]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[176]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>__I$use$semihosting$fgetc</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusesemig.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[69]"></a>_double_epilogue</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[c2]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[178]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[73]"></a>_drem</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, drem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _drem &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[59]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[179]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__vfscanf</STRONG> (Thumb, 818 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[75]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[17a]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[17b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>__decompress2</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>ARC_FEED</STRONG> (Thumb, 154 bytes, Stack size 80 bytes, canon_pre.o(i.ARC_FEED))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ARC_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc2
</UL>

<P><STRONG><a name="[9]"></a>BusFaultException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFaultException))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.CAN_RX1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.CAN_SCE_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>CHANGE_TOOL</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, canon_pre.o(i.CHANGE_TOOL))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CHANGE_TOOL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_change
</UL>

<P><STRONG><a name="[7d]"></a>COMMENT</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, canon_pre.o(i.COMMENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_setup
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_retract_mode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_feed_mode
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_distance_mode
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_on
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_off
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_comment
</UL>

<P><STRONG><a name="[7e]"></a>DISABLE_FEED_OVERRIDE</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.DISABLE_FEED_OVERRIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = DISABLE_FEED_OVERRIDE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[7f]"></a>DISABLE_SPEED_OVERRIDE</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.DISABLE_SPEED_OVERRIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = DISABLE_SPEED_OVERRIDE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[1a]"></a>DMAChannel1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMAChannel2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMAChannel3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMAChannel4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMAChannel5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMAChannel6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMAChannel7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DMAChannel7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>DWELL</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, canon_pre.o(i.DWELL))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = DWELL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_dwell
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g89
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g82
</UL>

<P><STRONG><a name="[c]"></a>DebugMonitor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMonitor))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>ENABLE_FEED_OVERRIDE</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.ENABLE_FEED_OVERRIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ENABLE_FEED_OVERRIDE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[82]"></a>ENABLE_SPEED_OVERRIDE</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.ENABLE_SPEED_OVERRIDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ENABLE_SPEED_OVERRIDE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[15]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI15_10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.EXTI9_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FLASH_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.FLASH_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9b]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[83]"></a>FLOOD_OFF</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, canon_pre.o(i.FLOOD_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FLOOD_OFF &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[84]"></a>FLOOD_ON</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, canon_pre.o(i.FLOOD_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = FLOOD_ON &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[164]"></a>GET_EXTERNAL_FEED_RATE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_FEED_RATE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[165]"></a>GET_EXTERNAL_FLOOD</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_FLOOD))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[159]"></a>GET_EXTERNAL_LENGTH_UNIT_TYPE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_LENGTH_UNIT_TYPE))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[166]"></a>GET_EXTERNAL_MIST</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_MIST))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[100]"></a>GET_EXTERNAL_MOTION_CONTROL_MODE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_MOTION_CONTROL_MODE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[85]"></a>GET_EXTERNAL_PARAMETER_FILE_NAME</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, canon_pre.o(i.GET_EXTERNAL_PARAMETER_FILE_NAME))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GET_EXTERNAL_PARAMETER_FILE_NAME
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_exit
</UL>

<P><STRONG><a name="[167]"></a>GET_EXTERNAL_PLANE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_PLANE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[161]"></a>GET_EXTERNAL_POSITION_X</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_POSITION_X))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[162]"></a>GET_EXTERNAL_POSITION_Y</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_POSITION_Y))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[163]"></a>GET_EXTERNAL_POSITION_Z</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_POSITION_Z))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[16c]"></a>GET_EXTERNAL_PROBE_POSITION_X</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_PROBE_POSITION_X))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[16d]"></a>GET_EXTERNAL_PROBE_POSITION_Y</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_PROBE_POSITION_Y))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[16e]"></a>GET_EXTERNAL_PROBE_POSITION_Z</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_PROBE_POSITION_Z))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[16f]"></a>GET_EXTERNAL_PROBE_VALUE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_PROBE_VALUE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
</UL>

<P><STRONG><a name="[15c]"></a>GET_EXTERNAL_QUEUE_EMPTY</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_QUEUE_EMPTY))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_read
</UL>

<P><STRONG><a name="[168]"></a>GET_EXTERNAL_SPEED</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_SPEED))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[169]"></a>GET_EXTERNAL_SPINDLE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_SPINDLE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[16a]"></a>GET_EXTERNAL_TOOL_MAX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_TOOL_MAX))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[160]"></a>GET_EXTERNAL_TOOL_SLOT</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_TOOL_SLOT))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[16b]"></a>GET_EXTERNAL_TRAVERSE_RATE</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canon_pre.o(i.GET_EXTERNAL_TRAVERSE_RATE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
</UL>

<P><STRONG><a name="[88]"></a>GPIO_Configuration</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>GPIO_Init</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[7]"></a>HardFaultException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFaultException))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C1_ER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C1_EV_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C2_ER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.I2C2_EV_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[158]"></a>INIT_CANON</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, canon_pre.o(i.INIT_CANON))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
</UL>

<P><STRONG><a name="[8a]"></a>MESSAGE</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, canon_pre.o(i.MESSAGE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = MESSAGE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_comment
</UL>

<P><STRONG><a name="[8b]"></a>MIST_OFF</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, canon_pre.o(i.MIST_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = MIST_OFF &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[8c]"></a>MIST_ON</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, canon_pre.o(i.MIST_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = MIST_ON &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[8]"></a>MemManageException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManageException))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMIException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMIException))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>NVIC_Configuration</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_nvic.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[8f]"></a>OPTIONAL_PROGRAM_STOP</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.OPTIONAL_PROGRAM_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = OPTIONAL_PROGRAM_STOP &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[90]"></a>ORIENT_SPINDLE</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, canon_pre.o(i.ORIENT_SPINDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ORIENT_SPINDLE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
</UL>

<P><STRONG><a name="[91]"></a>PALLET_SHUTTLE</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.PALLET_SHUTTLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = PALLET_SHUTTLE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[92]"></a>PROGRAM_END</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.PROGRAM_END))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = PROGRAM_END &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[93]"></a>PROGRAM_STOP</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.PROGRAM_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = PROGRAM_STOP &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
</UL>

<P><STRONG><a name="[10]"></a>PVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PVD_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PendSVC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSVC))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[94]"></a>RCC_Configuration</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, main.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_Configuration &rArr; RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>RCC_DeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[ba]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[9f]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a1]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[98]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[96]"></a>RCC_HSEConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RCC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>RCC_PCLK1Config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[99]"></a>RCC_PCLK2Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9e]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[9d]"></a>RCC_PLLConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a0]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[97]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[38]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RTCAlarm_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>SELECT_PLANE</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, canon_pre.o(i.SELECT_PLANE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SELECT_PLANE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_set_plane
</UL>

<P><STRONG><a name="[a4]"></a>SELECT_TOOL</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, canon_pre.o(i.SELECT_TOOL))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SELECT_TOOL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_select
</UL>

<P><STRONG><a name="[a5]"></a>SET_FEED_RATE</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, canon_pre.o(i.SET_FEED_RATE))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = SET_FEED_RATE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc2
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_feed_rate
</UL>

<P><STRONG><a name="[a6]"></a>SET_FEED_REFERENCE</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, canon_pre.o(i.SET_FEED_REFERENCE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SET_FEED_REFERENCE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
</UL>

<P><STRONG><a name="[a7]"></a>SET_MOTION_CONTROL_MODE</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, canon_pre.o(i.SET_MOTION_CONTROL_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = SET_MOTION_CONTROL_MODE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_control_mode
</UL>

<P><STRONG><a name="[a8]"></a>SET_ORIGIN_OFFSETS</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, canon_pre.o(i.SET_ORIGIN_OFFSETS))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = SET_ORIGIN_OFFSETS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_setup
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_axis_offsets
</UL>

<P><STRONG><a name="[a9]"></a>SET_SPINDLE_SPEED</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, canon_pre.o(i.SET_SPINDLE_SPEED))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = SET_SPINDLE_SPEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_speed
</UL>

<P><STRONG><a name="[32]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SPI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SPI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>START_SPEED_FEED_SYNCH</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.START_SPEED_FEED_SYNCH))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = START_SPEED_FEED_SYNCH &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
</UL>

<P><STRONG><a name="[ab]"></a>START_SPINDLE_CLOCKWISE</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, canon_pre.o(i.START_SPINDLE_CLOCKWISE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = START_SPINDLE_CLOCKWISE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
</UL>

<P><STRONG><a name="[ad]"></a>START_SPINDLE_COUNTERCLOCKWISE</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, canon_pre.o(i.START_SPINDLE_COUNTERCLOCKWISE))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = START_SPINDLE_COUNTERCLOCKWISE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
</UL>

<P><STRONG><a name="[ae]"></a>STOP_SPEED_FEED_SYNCH</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.STOP_SPEED_FEED_SYNCH))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = STOP_SPEED_FEED_SYNCH &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
</UL>

<P><STRONG><a name="[af]"></a>STOP_SPINDLE_TURNING</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, canon_pre.o(i.STOP_SPINDLE_TURNING))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = STOP_SPINDLE_TURNING &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
</UL>

<P><STRONG><a name="[b0]"></a>STRAIGHT_FEED</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, canon_pre.o(i.STRAIGHT_FEED))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = STRAIGHT_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
</UL>

<P><STRONG><a name="[b1]"></a>STRAIGHT_PROBE</STRONG> (Thumb, 424 bytes, Stack size 112 bytes, canon_pre.o(i.STRAIGHT_PROBE))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = STRAIGHT_PROBE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
</UL>

<P><STRONG><a name="[b3]"></a>STRAIGHT_TRAVERSE</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, canon_pre.o(i.STRAIGHT_TRAVERSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_home
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[b]"></a>SVCHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVCHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SysTickHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTickHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TAMPER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_BRK_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_CC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM1_UP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.TIM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>TURN_PROBE_OFF</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.TURN_PROBE_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = TURN_PROBE_OFF &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
</UL>

<P><STRONG><a name="[b5]"></a>TURN_PROBE_ON</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, canon_pre.o(i.TURN_PROBE_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = TURN_PROBE_ON &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
</UL>

<P><STRONG><a name="[34]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>USART_ClockInit</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f10x_usart.o(i.USART_ClockInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_ClockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[b9]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[b6]"></a>USART_Configuration</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, main.o(i.USART_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[b8]"></a>USART_Init</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[131]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
</UL>

<P><STRONG><a name="[12c]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[39]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USBWakeUp_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_HP_CAN_TX_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.USB_LP_CAN_RX0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>USE_LENGTH_UNITS</STRONG> (Thumb, 402 bytes, Stack size 8 bytes, canon_pre.o(i.USE_LENGTH_UNITS))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = USE_LENGTH_UNITS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_length_units
</UL>

<P><STRONG><a name="[bc]"></a>USE_TOOL_LENGTH_OFFSET</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, canon_pre.o(i.USE_TOOL_LENGTH_OFFSET))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = USE_TOOL_LENGTH_OFFSET &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_length_offset
</UL>

<P><STRONG><a name="[a]"></a>UsageFaultException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFaultException))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.WWDG_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>__0fprintf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[17d]"></a>__1fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[7a]"></a>__2fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_error
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;designate_parameter_file
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_error_handling
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_TOOL_LENGTH_OFFSET
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_LENGTH_UNITS
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TURN_PROBE_ON
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TURN_PROBE_OFF
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_FEED
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPEED_FEED_SYNCH
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPEED_FEED_SYNCH
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_SPINDLE_SPEED
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_MOTION_CONTROL_MODE
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_REFERENCE
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_TOOL
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_PLANE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_STOP
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_END
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PALLET_SHUTTLE
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ORIENT_SPINDLE
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTIONAL_PROGRAM_STOP
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_ON
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_OFF
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGE
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_ON
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_OFF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_SPEED_OVERRIDE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_FEED_OVERRIDE
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISABLE_SPEED_OVERRIDE
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISABLE_FEED_OVERRIDE
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHANGE_TOOL
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARC_FEED
</UL>

<P><STRONG><a name="[17e]"></a>__c89fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[17f]"></a>fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[bf]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[180]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[130]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
</UL>

<P><STRONG><a name="[181]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[182]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[c0]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[183]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[15f]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
</UL>

<P><STRONG><a name="[184]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[185]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[c6]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[c1]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 826 bytes, Stack size 136 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[c3]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[c4]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[c5]"></a>__kernel_sin</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[c8]"></a>__kernel_tan</STRONG> (Thumb, 586 bytes, Stack size 88 bytes, tan_i.o(i.__kernel_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
</UL>

<P><STRONG><a name="[c7]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[186]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[187]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[188]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[cf]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[64]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[ce]"></a>acos</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, acos.o(i.acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
</UL>

<P><STRONG><a name="[d0]"></a>adjust_error_handling</STRONG> (Thumb, 250 bytes, Stack size 104 bytes, main.o(i.adjust_error_handling))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = adjust_error_handling &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gets
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[db]"></a>asin</STRONG> (Thumb, 586 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
</UL>

<P><STRONG><a name="[dc]"></a>atan</STRONG> (Thumb, 480 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[d6]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_atan
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
</UL>

<P><STRONG><a name="[dd]"></a>ceil</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, ceil.o(i.ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
</UL>

<P><STRONG><a name="[d7]"></a>cos</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
</UL>

<P><STRONG><a name="[11d]"></a>designate_parameter_file</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, main.o(i.designate_parameter_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = designate_parameter_file &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gets
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[126]"></a>exp</STRONG> (Thumb, 566 bytes, Stack size 48 bytes, exp.o(i.exp))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = exp &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
</UL>

<P><STRONG><a name="[116]"></a>fgets</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, fgets.o(i.fgets))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fgets
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
</UL>

<P><STRONG><a name="[123]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
</UL>

<P><STRONG><a name="[122]"></a>fmod</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, fmod.o(i.fmod))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fmod &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
</UL>

<P><STRONG><a name="[40]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputs
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0fprintf)
<LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[12e]"></a>fputs</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fputs.o(i.fputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputs &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
</UL>

<P><STRONG><a name="[d1]"></a>gets</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gets.o(i.gets))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gets
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;designate_parameter_file
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_error_handling
</UL>

<P><STRONG><a name="[d3]"></a>hypot</STRONG> (Thumb, 650 bytes, Stack size 56 bytes, hypot.o(i.hypot))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = hypot &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_ijk
</UL>

<P><STRONG><a name="[12f]"></a>interpret_from_keyboard</STRONG> (Thumb, 216 bytes, Stack size 536 bytes, main.o(i.interpret_from_keyboard))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = interpret_from_keyboard &rArr; rs274ngc_execute &rArr; execute_block &rArr; convert_g &rArr; convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_read
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_execute
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_error
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[127]"></a>log</STRONG> (Thumb, 818 bytes, Stack size 104 bytes, log.o(i.log))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = log &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
</UL>

<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 374 bytes, Stack size 240 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736<LI>Call Chain = main &rArr; interpret_from_keyboard &rArr; rs274ngc_execute &rArr; execute_block &rArr; convert_g &rArr; convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_sequence_number
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_line_length
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_exit
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_active_settings
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_active_m_codes
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_active_g_codes
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_error
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_tool_file
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;designate_parameter_file
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_error_handling
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[113]"></a>pow</STRONG> (Thumb, 2534 bytes, Stack size 120 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
</UL>

<P><STRONG><a name="[7b]"></a>print_nc_line_number</STRONG> (Thumb, 186 bytes, Stack size 272 bytes, canon_pre.o(i.print_nc_line_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_line_text
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_TOOL_LENGTH_OFFSET
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_LENGTH_UNITS
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TURN_PROBE_ON
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TURN_PROBE_OFF
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_FEED
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPEED_FEED_SYNCH
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPEED_FEED_SYNCH
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_SPINDLE_SPEED
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_MOTION_CONTROL_MODE
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_REFERENCE
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_TOOL
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_PLANE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_STOP
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_END
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PALLET_SHUTTLE
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ORIENT_SPINDLE
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTIONAL_PROGRAM_STOP
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_ON
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_OFF
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGE
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_ON
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_OFF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_SPEED_OVERRIDE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_FEED_OVERRIDE
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISABLE_SPEED_OVERRIDE
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISABLE_FEED_OVERRIDE
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHANGE_TOOL
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARC_FEED
</UL>

<P><STRONG><a name="[136]"></a>read_tool_file</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(i.read_tool_file))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[134]"></a>report_error</STRONG> (Thumb, 130 bytes, Stack size 272 bytes, main.o(i.report_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = report_error &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_stack_name
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_line_text
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_error_text
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
</UL>

<P><STRONG><a name="[13a]"></a>rs274ngc_active_g_codes</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.rs274ngc_active_g_codes))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13b]"></a>rs274ngc_active_m_codes</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.rs274ngc_active_m_codes))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13c]"></a>rs274ngc_active_settings</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.rs274ngc_active_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rs274ngc_active_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[151]"></a>rs274ngc_error_text</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.rs274ngc_error_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rs274ngc_error_text
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_error
</UL>

<P><STRONG><a name="[135]"></a>rs274ngc_execute</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.rs274ngc_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = rs274ngc_execute &rArr; execute_block &rArr; convert_g &rArr; convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_settings
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_m_codes
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_g_codes
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
</UL>

<P><STRONG><a name="[13d]"></a>rs274ngc_exit</STRONG> (Thumb, 42 bytes, Stack size 264 bytes, rs274ngc_pre.o(i.rs274ngc_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = rs274ngc_exit &rArr; rs274ngc_save_parameters &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PARAMETER_FILE_NAME
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_save_parameters
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[137]"></a>rs274ngc_init</STRONG> (Thumb, 724 bytes, Stack size 320 bytes, rs274ngc_pre.o(i.rs274ngc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = rs274ngc_init &rArr; SET_ORIGIN_OFFSETS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_LENGTH_UNITS
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_REFERENCE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INIT_CANON
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PARAMETER_FILE_NAME
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_LENGTH_UNIT_TYPE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_synch
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_restore_parameters
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_settings
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_m_codes
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_g_codes
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[138]"></a>rs274ngc_line_length</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.rs274ngc_line_length))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>rs274ngc_line_text</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.rs274ngc_line_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rs274ngc_line_text
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_error
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_nc_line_number
</UL>

<P><STRONG><a name="[133]"></a>rs274ngc_read</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.rs274ngc_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = rs274ngc_read &rArr; parse_line &rArr; read_items &rArr; read_line_number &rArr; read_integer_unsigned &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_QUEUE_EMPTY
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_probe_data
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_line
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interpret_from_keyboard
</UL>

<P><STRONG><a name="[157]"></a>rs274ngc_reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.rs274ngc_reset))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_exit
</UL>

<P><STRONG><a name="[15a]"></a>rs274ngc_restore_parameters</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, rs274ngc_pre.o(i.rs274ngc_restore_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rs274ngc_restore_parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
</UL>

<P><STRONG><a name="[156]"></a>rs274ngc_save_parameters</STRONG> (Thumb, 746 bytes, Stack size 312 bytes, rs274ngc_pre.o(i.rs274ngc_save_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = rs274ngc_save_parameters &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgets
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputs
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_exit
</UL>

<P><STRONG><a name="[139]"></a>rs274ngc_sequence_number</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.rs274ngc_sequence_number))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[152]"></a>rs274ngc_stack_name</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, rs274ngc_pre.o(i.rs274ngc_stack_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rs274ngc_stack_name
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_error
</UL>

<P><STRONG><a name="[15b]"></a>rs274ngc_synch</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.rs274ngc_synch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rs274ngc_synch
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_TRAVERSE_RATE
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_TOOL_SLOT
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_TOOL_MAX
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_SPINDLE
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_SPEED
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_POSITION_Z
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_POSITION_Y
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_POSITION_X
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PLANE
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_MOTION_CONTROL_MODE
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_MIST
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_LENGTH_UNIT_TYPE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_FLOOD
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_FEED_RATE
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
</UL>

<P><STRONG><a name="[d8]"></a>sin</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
</UL>

<P><STRONG><a name="[b2]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
</UL>

<P><STRONG><a name="[128]"></a>tan</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, tan.o(i.tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = tan &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d2]"></a>arc_data_comp_ijk</STRONG> (Thumb, 392 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.arc_data_comp_ijk))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = arc_data_comp_ijk &rArr; hypot &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
</UL>

<P><STRONG><a name="[d4]"></a>arc_data_comp_r</STRONG> (Thumb, 896 bytes, Stack size 160 bytes, rs274ngc_pre.o(i.arc_data_comp_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = arc_data_comp_r &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
</UL>

<P><STRONG><a name="[d9]"></a>arc_data_ijk</STRONG> (Thumb, 482 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.arc_data_ijk))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = arc_data_ijk &rArr; hypot &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc2
</UL>

<P><STRONG><a name="[da]"></a>arc_data_r</STRONG> (Thumb, 670 bytes, Stack size 120 bytes, rs274ngc_pre.o(i.arc_data_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = arc_data_r &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc2
</UL>

<P><STRONG><a name="[de]"></a>check_g_codes</STRONG> (Thumb, 804 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.check_g_codes))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = check_g_codes &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_items
</UL>

<P><STRONG><a name="[df]"></a>check_items</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.check_items))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = check_items &rArr; check_g_codes &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_other_codes
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_m_codes
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_g_codes
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_line
</UL>

<P><STRONG><a name="[e0]"></a>check_m_codes</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.check_m_codes))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check_m_codes
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_items
</UL>

<P><STRONG><a name="[e1]"></a>check_other_codes</STRONG> (Thumb, 986 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.check_other_codes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_other_codes
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_items
</UL>

<P><STRONG><a name="[e2]"></a>close_and_downcase</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.close_and_downcase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = close_and_downcase
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_text
</UL>

<P><STRONG><a name="[e3]"></a>convert_arc</STRONG> (Thumb, 2176 bytes, Stack size 112 bytes, rs274ngc_pre.o(i.convert_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc2
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
</UL>

<P><STRONG><a name="[e5]"></a>convert_arc2</STRONG> (Thumb, 462 bytes, Stack size 176 bytes, rs274ngc_pre.o(i.convert_arc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = convert_arc2 &rArr; inverse_time_rate_arc &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARC_FEED
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
</UL>

<P><STRONG><a name="[e6]"></a>convert_arc_comp1</STRONG> (Thumb, 844 bytes, Stack size 192 bytes, rs274ngc_pre.o(i.convert_arc_comp1))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = convert_arc_comp1 &rArr; inverse_time_rate_arc &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARC_FEED
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_r
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_comp_ijk
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
</UL>

<P><STRONG><a name="[e7]"></a>convert_arc_comp2</STRONG> (Thumb, 1618 bytes, Stack size 272 bytes, rs274ngc_pre.o(i.convert_arc_comp2))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARC_FEED
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc2
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_r
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_data_ijk
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
</UL>

<P><STRONG><a name="[ea]"></a>convert_axis_offsets</STRONG> (Thumb, 1184 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_axis_offsets))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = convert_axis_offsets &rArr; SET_ORIGIN_OFFSETS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_modal_0
</UL>

<P><STRONG><a name="[eb]"></a>convert_comment</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_comment))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_comment &rArr; MESSAGE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MESSAGE
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[ec]"></a>convert_control_mode</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_control_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_control_mode &rArr; SET_MOTION_CONTROL_MODE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_MOTION_CONTROL_MODE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[ed]"></a>convert_coordinate_system</STRONG> (Thumb, 588 bytes, Stack size 80 bytes, rs274ngc_pre.o(i.convert_coordinate_system))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = convert_coordinate_system &rArr; SET_ORIGIN_OFFSETS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[ee]"></a>convert_cutter_compensation</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.convert_cutter_compensation))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = convert_cutter_compensation &rArr; convert_cutter_compensation_on &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_on
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation_off
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[ef]"></a>convert_cutter_compensation_off</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.convert_cutter_compensation_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = convert_cutter_compensation_off &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation
</UL>

<P><STRONG><a name="[f0]"></a>convert_cutter_compensation_on</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.convert_cutter_compensation_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = convert_cutter_compensation_on &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation
</UL>

<P><STRONG><a name="[f1]"></a>convert_cycle</STRONG> (Thumb, 622 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.convert_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = convert_cycle &rArr; convert_cycle_zx &rArr; convert_cycle_g83 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
</UL>

<P><STRONG><a name="[f5]"></a>convert_cycle_g81</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_cycle_g81))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_cycle_g81 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[f8]"></a>convert_cycle_g82</STRONG> (Thumb, 60 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_cycle_g82))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_cycle_g82 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[f9]"></a>convert_cycle_g83</STRONG> (Thumb, 208 bytes, Stack size 88 bytes, rs274ngc_pre.o(i.convert_cycle_g83))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = convert_cycle_g83 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[fa]"></a>convert_cycle_g84</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_cycle_g84))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_cycle_g84 &rArr; cycle_feed &rArr; STRAIGHT_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPEED_FEED_SYNCH
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPEED_FEED_SYNCH
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[fb]"></a>convert_cycle_g85</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_cycle_g85))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_cycle_g85 &rArr; cycle_feed &rArr; STRAIGHT_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[fc]"></a>convert_cycle_g86</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.convert_cycle_g86))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = convert_cycle_g86 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[fd]"></a>convert_cycle_g87</STRONG> (Thumb, 322 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_cycle_g87))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_cycle_g87 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ORIENT_SPINDLE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[fe]"></a>convert_cycle_g88</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.convert_cycle_g88))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = convert_cycle_g88 &rArr; cycle_feed &rArr; STRAIGHT_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_STOP
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[ff]"></a>convert_cycle_g89</STRONG> (Thumb, 60 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.convert_cycle_g89))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_cycle_g89 &rArr; cycle_feed &rArr; STRAIGHT_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
</UL>

<P><STRONG><a name="[f2]"></a>convert_cycle_xy</STRONG> (Thumb, 4648 bytes, Stack size 208 bytes, rs274ngc_pre.o(i.convert_cycle_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = convert_cycle_xy &rArr; convert_cycle_g83 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_MOTION_CONTROL_MODE
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_MOTION_CONTROL_MODE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g89
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g85
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g82
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g81
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle
</UL>

<P><STRONG><a name="[f3]"></a>convert_cycle_yz</STRONG> (Thumb, 4642 bytes, Stack size 208 bytes, rs274ngc_pre.o(i.convert_cycle_yz))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = convert_cycle_yz &rArr; convert_cycle_g83 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_MOTION_CONTROL_MODE
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_MOTION_CONTROL_MODE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g89
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g85
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g82
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g81
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle
</UL>

<P><STRONG><a name="[f4]"></a>convert_cycle_zx</STRONG> (Thumb, 4642 bytes, Stack size 208 bytes, rs274ngc_pre.o(i.convert_cycle_zx))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = convert_cycle_zx &rArr; convert_cycle_g83 &rArr; cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_MOTION_CONTROL_MODE
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_MOTION_CONTROL_MODE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycle_traverse
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g89
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g85
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g82
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g81
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle
</UL>

<P><STRONG><a name="[101]"></a>convert_distance_mode</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_distance_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_distance_mode &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[102]"></a>convert_dwell</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_dwell))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = convert_dwell &rArr; DWELL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWELL
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[103]"></a>convert_feed_mode</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_feed_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_feed_mode &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[104]"></a>convert_feed_rate</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_feed_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = convert_feed_rate &rArr; SET_FEED_RATE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[105]"></a>convert_g</STRONG> (Thumb, 1176 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_g))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = convert_g &rArr; convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_length_offset
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_set_plane
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_retract_mode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_modal_0
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_length_units
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_dwell
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_distance_mode
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cutter_compensation
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_coordinate_system
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_control_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[10c]"></a>convert_home</STRONG> (Thumb, 414 bytes, Stack size 88 bytes, rs274ngc_pre.o(i.convert_home))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = convert_home &rArr; find_ends &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_relative
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_modal_0
</UL>

<P><STRONG><a name="[107]"></a>convert_length_units</STRONG> (Thumb, 732 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.convert_length_units))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = convert_length_units &rArr; USE_LENGTH_UNITS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_LENGTH_UNITS
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[10e]"></a>convert_m</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_m))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = convert_m &rArr; convert_tool_change &rArr; CHANGE_TOOL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_COUNTERCLOCKWISE
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_SPINDLE_CLOCKWISE
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_ON
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_OFF
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_ON
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_OFF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_SPEED_OVERRIDE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_FEED_OVERRIDE
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISABLE_SPEED_OVERRIDE
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISABLE_FEED_OVERRIDE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_change
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[10a]"></a>convert_modal_0</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.convert_modal_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = convert_modal_0 &rArr; convert_home &rArr; find_ends &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_setup
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_home
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_axis_offsets
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[10b]"></a>convert_motion</STRONG> (Thumb, 510 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.convert_motion))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[112]"></a>convert_probe</STRONG> (Thumb, 710 bytes, Stack size 104 bytes, rs274ngc_pre.o(i.convert_probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = convert_probe &rArr; STRAIGHT_PROBE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TURN_PROBE_ON
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TURN_PROBE_OFF
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_PROBE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
</UL>

<P><STRONG><a name="[109]"></a>convert_retract_mode</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_retract_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_retract_mode &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[106]"></a>convert_set_plane</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_set_plane))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_set_plane &rArr; SELECT_PLANE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_PLANE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[110]"></a>convert_setup</STRONG> (Thumb, 530 bytes, Stack size 80 bytes, rs274ngc_pre.o(i.convert_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = convert_setup &rArr; SET_ORIGIN_OFFSETS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_modal_0
</UL>

<P><STRONG><a name="[114]"></a>convert_speed</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = convert_speed &rArr; SET_SPINDLE_SPEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_SPINDLE_SPEED
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[115]"></a>convert_stop</STRONG> (Thumb, 1056 bytes, Stack size 48 bytes, rs274ngc_pre.o(i.convert_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = convert_stop &rArr; SET_ORIGIN_OFFSETS &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_SPINDLE_TURNING
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_ORIGIN_OFFSETS
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_PLANE
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_STOP
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGRAM_END
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PALLET_SHUTTLE
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPTIONAL_PROGRAM_STOP
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MIST_OFF
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLOOD_OFF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_SPEED_OVERRIDE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENABLE_FEED_OVERRIDE
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgets
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[111]"></a>convert_straight</STRONG> (Thumb, 854 bytes, Stack size 80 bytes, rs274ngc_pre.o(i.convert_straight))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = convert_straight &rArr; convert_straight_comp2 &rArr; inverse_time_rate_as &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_FEED
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ends
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_motion
</UL>

<P><STRONG><a name="[118]"></a>convert_straight_comp1</STRONG> (Thumb, 694 bytes, Stack size 112 bytes, rs274ngc_pre.o(i.convert_straight_comp1))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = convert_straight_comp1 &rArr; inverse_time_rate_straight &rArr; find_straight_length &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_FEED
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
</UL>

<P><STRONG><a name="[119]"></a>convert_straight_comp2</STRONG> (Thumb, 1298 bytes, Stack size 192 bytes, rs274ngc_pre.o(i.convert_straight_comp2))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = convert_straight_comp2 &rArr; inverse_time_rate_as &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_FEED
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARC_FEED
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
</UL>

<P><STRONG><a name="[10f]"></a>convert_tool_change</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.convert_tool_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = convert_tool_change &rArr; CHANGE_TOOL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHANGE_TOOL
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
</UL>

<P><STRONG><a name="[108]"></a>convert_tool_length_offset</STRONG> (Thumb, 356 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.convert_tool_length_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = convert_tool_length_offset &rArr; USE_TOOL_LENGTH_OFFSET &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USE_TOOL_LENGTH_OFFSET
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
</UL>

<P><STRONG><a name="[11c]"></a>convert_tool_select</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.convert_tool_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = convert_tool_select &rArr; SELECT_TOOL &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SELECT_TOOL
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_block
</UL>

<P><STRONG><a name="[f6]"></a>cycle_feed</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.cycle_feed))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = cycle_feed &rArr; STRAIGHT_FEED &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_FEED
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g89
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g88
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g85
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g84
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g82
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g81
</UL>

<P><STRONG><a name="[f7]"></a>cycle_traverse</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.cycle_traverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = cycle_traverse &rArr; STRAIGHT_TRAVERSE &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STRAIGHT_TRAVERSE
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_zx
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_yz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_xy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g87
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g86
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g83
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g82
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cycle_g81
</UL>

<P><STRONG><a name="[11e]"></a>enhance_block</STRONG> (Thumb, 656 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.enhance_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enhance_block
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_line
</UL>

<P><STRONG><a name="[11f]"></a>execute_binary</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.execute_binary))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = execute_binary &rArr; execute_binary1 &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary1
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
</UL>

<P><STRONG><a name="[120]"></a>execute_binary1</STRONG> (Thumb, 524 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.execute_binary1))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = execute_binary1 &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary
</UL>

<P><STRONG><a name="[121]"></a>execute_binary2</STRONG> (Thumb, 410 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.execute_binary2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = execute_binary2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary
</UL>

<P><STRONG><a name="[124]"></a>execute_block</STRONG> (Thumb, 830 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.execute_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = execute_block &rArr; convert_g &rArr; convert_motion &rArr; convert_arc &rArr; convert_arc_comp2 &rArr; inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_tool_select
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_stop
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_speed
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_m
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_g
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_feed_rate
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_feed_mode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_comment
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_execute
</UL>

<P><STRONG><a name="[125]"></a>execute_unary</STRONG> (Thumb, 1004 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.execute_unary))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = execute_unary &rArr; tan &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tan
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exp
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_unary
</UL>

<P><STRONG><a name="[129]"></a>find_arc_length</STRONG> (Thumb, 190 bytes, Stack size 88 bytes, rs274ngc_pre.o(i.find_arc_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hypot
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_turn
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc2
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_arc
</UL>

<P><STRONG><a name="[e4]"></a>find_ends</STRONG> (Thumb, 740 bytes, Stack size 64 bytes, rs274ngc_pre.o(i.find_ends))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = find_ends &rArr; COMMENT &rArr; print_nc_line_number &rArr; __2fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMENT
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_probe
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_home
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc
</UL>

<P><STRONG><a name="[10d]"></a>find_relative</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.find_relative))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = find_relative &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_home
</UL>

<P><STRONG><a name="[12b]"></a>find_straight_length</STRONG> (Thumb, 190 bytes, Stack size 88 bytes, rs274ngc_pre.o(i.find_straight_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = find_straight_length &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_straight
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inverse_time_rate_as
</UL>

<P><STRONG><a name="[12a]"></a>find_turn</STRONG> (Thumb, 294 bytes, Stack size 72 bytes, rs274ngc_pre.o(i.find_turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
</UL>

<P><STRONG><a name="[13f]"></a>init_block</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.init_block))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_line
</UL>

<P><STRONG><a name="[e8]"></a>inverse_time_rate_arc</STRONG> (Thumb, 170 bytes, Stack size 104 bytes, rs274ngc_pre.o(i.inverse_time_rate_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = inverse_time_rate_arc &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc2
</UL>

<P><STRONG><a name="[e9]"></a>inverse_time_rate_arc2</STRONG> (Thumb, 256 bytes, Stack size 136 bytes, rs274ngc_pre.o(i.inverse_time_rate_arc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = inverse_time_rate_arc2 &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_arc_comp2
</UL>

<P><STRONG><a name="[11b]"></a>inverse_time_rate_as</STRONG> (Thumb, 224 bytes, Stack size 152 bytes, rs274ngc_pre.o(i.inverse_time_rate_as))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = inverse_time_rate_as &rArr; find_arc_length &rArr; find_turn &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_arc_length
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
</UL>

<P><STRONG><a name="[11a]"></a>inverse_time_rate_straight</STRONG> (Thumb, 154 bytes, Stack size 80 bytes, rs274ngc_pre.o(i.inverse_time_rate_straight))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = inverse_time_rate_straight &rArr; find_straight_length &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FEED_RATE
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_straight_length
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight_comp1
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_straight
</UL>

<P><STRONG><a name="[13e]"></a>parse_line</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.parse_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = parse_line &rArr; read_items &rArr; read_line_number &rArr; read_integer_unsigned &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_items
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_block
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhance_block
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_items
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_read
</UL>

<P><STRONG><a name="[14d]"></a>precedence</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.precedence))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
</UL>

<P><STRONG><a name="[44]"></a>read_a</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_a))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_a &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>read_atan</STRONG> (Thumb, 352 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.read_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_unary
</UL>

<P><STRONG><a name="[45]"></a>read_b</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_b &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>read_c</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_c))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_c &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>read_comment</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.read_comment))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = read_comment
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>read_d</STRONG> (Thumb, 466 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_d))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = read_d &rArr; read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>read_f</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.read_f))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = read_f &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>read_g</STRONG> (Thumb, 742 bytes, Stack size 64 bytes, rs274ngc_pre.o(i.read_g))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = read_g &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>read_h</STRONG> (Thumb, 466 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = read_h &rArr; read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>read_i</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_i))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_i &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>read_integer_unsigned</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.read_integer_unsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = read_integer_unsigned &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_line_number
</UL>

<P><STRONG><a name="[145]"></a>read_integer_value</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, rs274ngc_pre.o(i.read_integer_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + In Cycle
<LI>Call Chain = read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_t
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter_setting
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_m
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_l
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_h
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_d
</UL>

<P><STRONG><a name="[140]"></a>read_items</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_items))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = read_items &rArr; read_line_number &rArr; read_integer_unsigned &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_one_item
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_line_number
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_line
</UL>

<P><STRONG><a name="[4c]"></a>read_j</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_j &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>read_k</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_k))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_k &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>read_l</STRONG> (Thumb, 378 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_l))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = read_l &rArr; read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>read_line_number</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.read_line_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = read_line_number &rArr; read_integer_unsigned &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_items
</UL>

<P><STRONG><a name="[4f]"></a>read_m</STRONG> (Thumb, 568 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_m))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = read_m &rArr; read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>read_one_item</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_one_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = read_one_item
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_items
</UL>

<P><STRONG><a name="[149]"></a>read_operation</STRONG> (Thumb, 744 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.read_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = read_operation
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
</UL>

<P><STRONG><a name="[14a]"></a>read_operation_unary</STRONG> (Thumb, 1246 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.read_operation_unary))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = read_operation_unary &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_unary
</UL>

<P><STRONG><a name="[50]"></a>read_p</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.read_p))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = read_p &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>read_parameter</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_parameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = read_parameter &rArr; read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>

<P><STRONG><a name="[42]"></a>read_parameter_setting</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.read_parameter_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = read_parameter_setting &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>read_q</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.read_q))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = read_q &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>read_r</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_r &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>read_real_expression</STRONG> (Thumb, 776 bytes, Stack size 96 bytes, rs274ngc_pre.o(i.read_real_expression))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + In Cycle
<LI>Call Chain = read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_operation
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;precedence
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_binary
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_unary
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_atan
</UL>

<P><STRONG><a name="[14e]"></a>read_real_number</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_real_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = read_real_number &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>

<P><STRONG><a name="[142]"></a>read_real_value</STRONG> (Thumb, 498 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_real_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_unary
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_number
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_z
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_y
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_x
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_s
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_r
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_q
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_parameter_setting
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_p
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_k
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_j
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_i
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_g
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_f
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_c
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_b
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_a
</UL>

<P><STRONG><a name="[53]"></a>read_s</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, rs274ngc_pre.o(i.read_s))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = read_s &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>read_t</STRONG> (Thumb, 378 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = read_t &rArr; read_integer_value &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_integer_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>read_text</STRONG> (Thumb, 730 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = read_text &rArr; fgets
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgets
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_and_downcase
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_read
</UL>

<P><STRONG><a name="[14f]"></a>read_unary</STRONG> (Thumb, 480 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_unary))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_expression
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_operation_unary
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_atan
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_unary
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>

<P><STRONG><a name="[55]"></a>read_x</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_x &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>read_y</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_y &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>read_z</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, rs274ngc_pre.o(i.read_z))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = read_z &rArr; read_real_value &rArr; read_unary &rArr; read_atan &rArr; read_real_expression &rArr;  read_real_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_real_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs274ngc_pre.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>set_probe_data</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, rs274ngc_pre.o(i.set_probe_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_probe_data
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PROBE_VALUE
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PROBE_POSITION_Z
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PROBE_POSITION_Y
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_PROBE_POSITION_X
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_POSITION_Z
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_POSITION_Y
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_EXTERNAL_POSITION_X
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_read
</UL>

<P><STRONG><a name="[153]"></a>write_g_codes</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, rs274ngc_pre.o(i.write_g_codes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_g_codes
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_execute
</UL>

<P><STRONG><a name="[154]"></a>write_m_codes</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, rs274ngc_pre.o(i.write_m_codes))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_execute
</UL>

<P><STRONG><a name="[155]"></a>write_settings</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rs274ngc_pre.o(i.write_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = write_settings &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rs274ngc_execute
</UL>

<P><STRONG><a name="[c9]"></a>_fp_digits</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[be]"></a>_printf_core</STRONG> (Thumb, 1818 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0fprintf
</UL>

<P><STRONG><a name="[cc]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cb]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[41]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[5f]"></a>_fp_value</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[3e]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
